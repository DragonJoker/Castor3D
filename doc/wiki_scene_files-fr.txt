Les fichiers CSCN sont au format texte et sont donc modifiables assez facilement (pour peu que l'on comprenne quelque chose à la syntaxe :P)


# **Types de données**

Les types de données qui apparaissent dans les fichiers de scène sont les suivants :
* _entier_ : un entier tout con.
* _réel_ : un nombre réel, le séparateur des décimales est le point ( . ).
* _2, 3, 4 entiers_ : 2, 3 ou 4 entiers, séparés par des virgules ( , ) ou des espaces (   ).
* _2, 3, 4 réels_ : 2, 3 ou 4 réels, séparés par des virgules ( , ) ou des espaces (   ).
* _taille_ : 2 entiers supérieurs ou égaux à 0.
* _matrice de 2x2, 3x3, 4x4 réels_ : 2, 3 ou 4 groupes séparés par des points virgules ( ; ) de 2, 3 ou 4 réels séparés par des virgules ( , ) ou des espaces (   ).
* _couleur_ : les 4 composantes (RGBA) d'une couleur, exprimées en réels compris entre 0.0 et 1.0.
* _valeur_ : chaîne de caractère représentant une valeur prédéfinie.
* _nom_ : chaîne de caractère, entourée de guillemets ( " ).
* _fichier_ : chaîne de caractères représentant un chemin d'accès à un fichier, entourée de guillemets ( " ).
* _dossier_ : chaîne de caractères représentant un chemin d'accès à un dossier, entourée de guillemets ( " ).


# **Sections**

## **Description**

Le fichier est décomposé en sections décrites de la manière suivante :
<pre>
[type_section] [nom_section]
{
	// informations de la section
}
</pre>
Exemple:
<pre>
light "Light0"
{
	type directional
	colour 1.0 1.0 1.0
	intensity 0.0 0.8 1.0
}
</pre>

Certaines sections peuvent avoir des sous-sections :
<pre>
material "Bronze"
{
	pass
	{
		ambient 0.2125 0.1275 0.054 1.0
		diffuse 0.714 0.4284 0.12144 1.0
		emissive 0.0 0.0 0.0 1.0
		specular 0.393548 0.271906 0.166721 1.0
		shininess 25.6
	}
}
</pre>


## **Liste des sections**

Les différentes sections possibles sont les suivantes :

1. 'sampler'

    Permet de définir un objet d'échantillonnage de texture.

2. 'material'

    Permet la définition d'un matériau.
    
3. 'font'

    Permet la définition d'une police utilisée dans les incrustations texte.
    
4. 'window'

    Permet la définition d'une fenêtre de rendu.
    
5. 'panel_overlay'

    Permet de définir une incrustation globale de type panneau simple.
    
6. 'border_panel_overlay'

    Permet de définir une incrustation globale de type panneau avec bordure.
    
7. 'text_overlay'

    Permet de définir une incrustation globale de type panneau avec texte.
    
8. 'scene'

    Permet de définir une scène.


### A - Section 'sampler'

1. 'min_filter' : _valeur_

    Valeur pour la fonction de minification.
    
2. 'mag_filter' : _valeur_

    Valeur pour la fonction de magnification.
    
3. 'min_lod' : _réel_

    Définit la valeur minimale du niveau de détail.
    
4. 'max_lod' : _réel_

    Définit la valeur maximale du niveau de détail.
    
5. 'lod_bias' : _réel_

    Définit le MIP-Level.
    
6. 'u_wrap_mode' : _valeur_

    Définit le paramètre d'enveloppement de la texture en U. Peut prendre les valeurs suivantes :
    * _repeat_ : La texture est répétée.
    * _mirrored_repeat_ : La texture est répétée, une instance sur 2 en miroir de la précédente.
    * _clamp_to_border_ : La texture est étirée, la couleur des arêtes au bord de la texture est celle du bord de la texture.
    * _clamp_to_edge_ : La texture est étirée, la couleur des arêtes au bord de la texture est un mélange de celle du bord de la texture et de celle du bord.
    
7. 'v_wrap_mode' : _valeur_

    Définit le paramètre d'enveloppement de la texture en V. Peut prendre les valeurs suivantes :
    * _repeat_ : La texture est répétée.
    * _mirrored_repeat_ : La texture est répétée, une instance sur 2 en miroir de la précédente.
    * _clamp_to_border_ : La texture est étirée, la couleur des arêtes au bord de la texture est celle du bord de la texture.
    * _clamp_to_edge_ : La texture est étirée, la couleur des arêtes au bord de la texture est un mélange de celle du bord de la texture et de celle du bord.

8. 'w_wrap_mode' : _valeur_

    Définit le paramètre d'enveloppement de la texture en W. Peut prendre les valeurs suivantes :
    * _repeat_ : La texture est répétée.
    * _mirrored_repeat_ : La texture est répétée, une instance sur 2 en miroir de la précédente.
    * _clamp_to_border_ : La texture est étirée, la couleur des arêtes au bord de la texture est celle du bord de la texture.
    * _clamp_to_edge_ : La texture est étirée, la couleur des arêtes au bord de la texture est un mélange de celle du bord de la texture et de celle du bord.
    
9. 'border_colour' : _couleur_

    Définit la couleur des bords non texturés.
    
10. 'max_anisotropy' : _réel_

    Définit le degré maximal d'anisotropie.
    


### B - Section 'material'

Les matériaux pouvant être multi-passes, il est possible de définir plusieurs sous-sections de passe.

1. 'pass' : _nouvelle section_

    Commence un nouvelle section décrivant les propriétés de la passe.


### C - Section 'pass'

1. 'ambient' : _couleur_

    Définit la couleur ambiante de cette passe.
    
2. 'diffuse' : _couleur_

    Définit la couleur diffuse de cette passe.
    
3. 'emissive' : _couleur_

    Définit la couleur émise par cette passe.
    
4. 'specular' : _couleur_

    Définit la couleur réfléchie par cette passe.
    
5. 'shininess' : _1 réel_

    Définit la façon dont la lumière est réfléchie.
    
6. 'alpha' : _1 réel_

    Définit la valeur d'alpha des couleurs du material.
    
7. 'two_sided' : _booléen_

    Définit si le material est double face (true) ou pas (false).
    
8. 'blend_func' : _nom-src, nom-dst_

    Nom des 2 fonctions (source et destination) utilisées pour l'alpha blending, au choix parmi :
    * _zero_ : la cible (src ou dst) ne sera pas considérée pour l'alpha blending.
    * _one_ : la cible (src ou dst) sera la seule visible.
    * _src_colour_ : la couleur de la cible sera la couleur de la source (dst seulement).
    * _inv_src_colour_ : la couleur de la cible sera 1 moins la couleur de la source (dst seulement).
    * _dst_colour_ : la couleur de la cible sera la couleur de la destination (src seulement).
    * _inv_dst_colour_ : la couleur de la cible sera 1 moins la couleur de la destination (src seulement).
    * _src_alpha_ : l'alpha de la cible sera l'alpha de la source (dst seulement).
    * _inv_src_alpha_ : l'alpha de la cible sera 1 moins l'alpha de la source (dst seulement).
    * _dst_alpha_ : l'alpha de la cible sera l'alpha de la destination (src seulement).
    * _inv_dst_alpha_ : l'alpha de la cible sera 1 moins l'alpha de la destination (src seulement).
    * _src_alpha_sat : met l'alpha de la source à 1.
    
9. 'texture_unit' : _nouvelle section_

    Définit une nouvelle section concernant une texture.
    
10. 'gl_shader_program' : _nouvelle section_

    Définit une nouvelle section concernant un shader GLSL.
    
11. 'alpha_blend_mode' : _valeur_

    Nom du mode de mélange alpha, au choix parmi :
    * _none_ : Pas de mélange alpha.
    * _additive_ : Les alphas de la source et de la destination s'additionnent.
    * _multiplicative_ : Les alphas de la source et de la destination se multiplient.
    
12. 'colour_blend_mode' : _valeur_

    Nom du mode de mélange couleur, au choix parmi :
    * _none_ : Pas de mélange couleur.
    * _additive_ : Les couleurs de la source et de la destination s'additionnent.
    * _multiplicative_ : Les couleurs de la source et de la destination se multiplient.


### D - Section 'texture_unit'

1. 'image' : _fichier_

    Définit le chemin où trouver l'image.
    
2. 'render_target' : _nouvelle section_

    Permet de définir la texture en cible de rendu et de configurer cette cible.
    
3. 'colour' : _couleur_

    Définit la couleur de base.
    
4. 'map_type' : _valeur_

    Définit la façon dont l'image est appliquée sur l'objet :
    * _none_ : aucun effet particulier.
    * _reflexion_ : reflexion mapping.
    * _sphere_ : sphere mapping.
    
5. 'alpha_func' : func : _valeur_ ref-val : _réel_

    Définit la fonction de gestion de l'alpha rejection pour la texture.
    Le second paramètre est la valeur de référence pour les calculs de transparence.
    Les valeurs possibles pour le premier paramètre sont :
    * _always_ : la couleur de l'échantillon est toujours appliquée.
    * _less_ : La couleur de l'échantillon est appliquée si sa transparence est inférieure au 2ème paramètre.
    * _less_or_equal_ : La couleur de l'échantillon est appliquée si sa transparence est inférieure ou égal au 2ème paramètre.
    * _equal_ : La couleur de l'échantillon est appliquée si sa transparence est égale au 2ème paramètre.
    * _not_equal_ : La couleur de l'échantillon est appliquée si sa transparence est différente du 2ème paramètre.
    * _greater_or_equal_ : La couleur de l'échantillon est appliquée si sa transparence est supérieure ou égal au 2ème paramètre.
    * _greater_ : La couleur de l'échantillon est appliquée si sa transparence est supérieure au 2ème paramètre.
    * _never_ : La couleur de l'échantillon n'est jamais appliquée.
    
6. 'rgb_blend' : func : _valeur_ Arg0 : _valeur_ Arg1 : _valeur_

    Définit le comportement de la texture lors du mélange des couleurs.
    Le premier paramètre est la fonction de mélange, les 2ème et 3ème paramètres sont les opérandes (Arg0 et Arg1) de la fonction.
    Le premier paramètre peut prendre les valeurs suivantes :
    * _none_ : Aucun des 2 opérandes n'est utilisé.
    * _first_arg_ : Retourne Arg0.
    * _add_ : Retourne Arg0 + Arg1.
    * _add_signed_ : Retourne Arg0 + Arg1 - 0.5.
    * _modulate_ : Retourne Arg0 x Arg1.
    * _subtract_ : Retourne Arg0 - Arg1.
    * _dot3_rgb_ : Retourne 4 x [((Arg0r - 0.5) x (Arg1r - 0.5)) + ((Arg0g - 0.5) x (Arg1g - 0.5)) + ((Arg0b - 0.5) x (Arg1b - 0.5))].
    * _dot3_rgba_ : Retourne 4 x [((Arg0r - 0.5) x (Arg1r - 0.5)) + ((Arg0g - 0.5) x (Arg1g - 0.5)) + ((Arg0b - 0.5) x (Arg1b - 0.5))].
    
    Les 2 autres paramètres peuvent prendre une valeur parmi les suivantes :
    
    * _texture_ : La texture courante
    * _texture0_ : La première texture
    * _texture1_ : La seconde texture
    * _texture2_ : La troisième texture
    * _texture3_ : La quatrième texture
    * _constant_ : 
    * _diffuse_ : 
    * _previous_ : 
    
7. 'alpha_blend' : func : _valeur_ Arg0 : _valeur_ Arg1 : _valeur_

    Définit le comportement de la texture lors du mélange de la transparence.
    Le premier paramètre est la fonction de mélange, les 2ème et 3ème paramètres sont les opérandes de la fonction.
    Le premier paramètre peut prendre les valeurs suivantes :
    * _none_ : Aucun des 2 opérandes n'est utilisé.
    * _first_arg_ : Retourne Arg0.
    * _add_ : Retourne Arg0 + Arg1.
    * _add_signed_ : Retourne Arg0 + Arg1 - 0.5.
    * _modulate_ : Retourne Arg0 x Arg1.
    * _subtract_ : Retourne Arg0 - Arg1.
    
    Les 2 autres paramètres peuvent prendre une valeur parmi les suivantes :
    
    * _texture_ : La texture courante
    * _texture0_ : La première texture
    * _texture1_ : La seconde texture
    * _texture2_ : La troisième texture
    * _texture3_ : La quatrième texture
    * _constant_ : 
    * _diffuse_ : 
    * _previous_ : 
    
8. 'channel' : _valeur_

    Le canal auquel est associée la texture. Peut prendre les valeurs suivantes :
    * _colour_ : Couleur de base.
    * _ambient_ : Eclairage ambiante de base.
    * _diffuse_ : Eclairage diffus de base.
    * _normal_ : Normales.
    * _specular_ : Eclairage spéculaire.
    * _opacity_ : Opacité.
    * _gloss_ : Exposant lumineux pour les calculs de spéculaire.
    
9. 'sampler' : _nom_

    Définit l'échantillonneur pour la texture.


### E - Section 'gl_shader_program'

1. 'vertex_program' : _nouvelle section_

    Définit une nouvelle section concernant le vertex program.
    
2. 'pixel_program' : _nouvelle section_

    Définit une nouvelle section concernant le pixel program.
    
3. 'geometry_program' : _nouvelle section_

    Définit une nouvelle section concernant le geometry program.
    
4. 'hull_program' : _nouvelle section_

    Définit une nouvelle section concernant le hull (tessellation control) program.
    
5. 'domain_program' : _nouvelle section_

    Définit une nouvelle section concernant le domain (tessellation evaluation) program.
    
6. 'constants_buffer' : _nouvelle section_

    Définit une nouvelle section concernant les tampons de constantes (uniform buffers).


### F - Section 'vertex/pixel/geometry/hull/domain_program'

1. 'file' : _fichier_

    Nom du fichier où se trouve le programme.
    
2. 'sampler' : _nom_

    Crée une nouvelle variable de type sampler (1D, 2D, ...) pour le pixel shader.
    
3. 'input_type' : _valeur_

    Définit le type de données de faces en entrée du geometry shader. Peut ptrendre les valeurs suivantes :
    * _points_ : Des points.
    * _lines_ : Des lignes disjointes.
    * _line_loop_ : Une boucle formée de lignes jointes.
    * _line_strip_ : Des lignes jointes.
    * _triangles_ : Des triangles disjoints.
    * _triangle_strip_ : Des triangles joints.
    * _triangle_fan_ : Des triangles joints par le premier point.
    * _quads_ : Des quadrilatères disjoints.
    * _quad_strip_ : Des quadrilatères joints.
    * _polygon_ : Des polygones.
    
4. 'output_type' : _valeur_

    Définit le type de données de faces en sortie du geometry shader. Peut ptrendre les valeurs suivantes :
    * _points_ : Des points.
    * _line_strip_ : Des lignes jointes.
    * _triangle_strip_ : Des triangles joints.
    * _quad_strip_ : Des quadrilatères joints.
    
5. 'output_vtx_count' : _entier_

    Définit le nombre de sommets en sortie du geometry shader.


### G - Section 'constants_buffer'

1. 'shaders' : _combinaison binaire de valeurs_

    Types de shaders pour lesquels ce tampon s'applique, parmi :
    * _vertex_
    * _hull_
    * _domain_
    * _geometry_
    * _pixel_
    * _compute_
    
2. 'variable' : _nom_, _nouvelle section_

    Définit une section de propriétés d'une variable à ajouter au tampon.


### H - Section 'variable'

1. 'type' : _valeur_

    Nom du type de la variable, peut être :
    * _int_ : 1 entier signé.
    * _uint_ : 1 entier non signé.
    * _float_ : 1 nombre flottant en simple précision.
    * _double_ : 1 nombre flottant en double précision.
    * _vec2i_ : 2 entiers signés.
    * _vec3i_ : 3 entiers signés.
    * _vec4i_ : 4 entiers signés.
    * _vec2f_ : 2 nombres flottants en simple précision.
    * _vec3f_ : 3 nombres flottants en simple précision.
    * _vec4f_ : 4 nombres flottants en simple précision.
    * _vec2d_ : 2 nombres flottants en double précision.
    * _vec3d_ : 3 nombres flottants en double précision.
    * _vec4d_ : 4 nombres flottants en double précision.
    * _mat2x2i_ : Matrice 2x2 d'entiers signés.
    * _mat2x3i_ : Matrice 2x3 d'entiers signés.
    * _mat2x4i_ : Matrice 2x4 d'entiers signés.
    * _mat3x2i_ : Matrice 3x2 d'entiers signés.
    * _mat3x3i_ : Matrice 3x3 d'entiers signés.
    * _mat3x4i_ : Matrice 3x4 d'entiers signés.
    * _mat4x2i_ : Matrice 4x2 d'entiers signés.
    * _mat4x3i_ : Matrice 4x3 d'entiers signés.
    * _mat4x4i_ : Matrice 4x4 d'entiers signés.
    * _mat2x2f_ : Matrice 2x2 de nombres flottants simple précision.
    * _mat2x3f_ : Matrice 2x3 de nombres flottants simple précision.
    * _mat2x4f_ : Matrice 2x4 de nombres flottants simple précision.
    * _mat3x2f_ : Matrice 3x2 de nombres flottants simple précision.
    * _mat3x3f_ : Matrice 3x3 de nombres flottants simple précision.
    * _mat3x4f_ : Matrice 3x4 de nombres flottants simple précision.
    * _mat4x2f_ : Matrice 4x2 de nombres flottants simple précision.
    * _mat4x3f_ : Matrice 4x3 de nombres flottants simple précision.
    * _mat4x4f_ : Matrice 4x4 de nombres flottants simple précision.
    * _mat2x2d_ : Matrice 2x2 de nombres flottants double précision.
    * _mat2x3d_ : Matrice 2x3 de nombres flottants double précision.
    * _mat2x4d_ : Matrice 2x4 de nombres flottants double précision.
    * _mat3x2d_ : Matrice 3x2 de nombres flottants double précision.
    * _mat3x3d_ : Matrice 3x3 de nombres flottants double précision.
    * _mat3x4d_ : Matrice 3x4 de nombres flottants double précision.
    * _mat4x2d_ : Matrice 4x2 de nombres flottants double précision.
    * _mat4x3d_ : Matrice 4x3 de nombres flottants double précision.
    * _mat4x4d_ : Matrice 4x4 de nombres flottants double précision.
    
3. 'count' : _entier_

    Nombre d'occurences de la variable (taille du tableau).
    
4. 'value' :

    Valeur de la variable, fonction du type choisi.


### I - Section 'font'

1. 'file' : _fichier_

    Définit le fichier contenant la police.
    
2. 'height' : _entier_

    Définit la hauteur des caractères (la précision).


### J - Section 'scene'

1. 'ambient_light' : _couleur_

    Définit la couleur de l'éclairage ambiant.
    
2. 'background_colour' : _couleur_

    Définit la couleur de fond de la scène.
    
3. 'background_image' : _fichier_

    Définit l'image de fond de la scène.
    
4. 'import' : _fichier_

    Permet l'import d'une scène à partir d'un fichier de scène CSCN ou autre, supporté par les plug-ins d'import Castor3D.
    
5. 'scene_node' : _nouvelle section_

    Définit un noeud de scène.
    
6. 'camera_node' : _nouvelle section_

    Définit un noeud de scène spécifique aux caméras.
    
7. 'light' : _nouvelle section_

    Définit une source lumineuse.
    
8. 'object' : _nouvelle section_

    Définit un objet.
    
9. 'billboard' : _nouvelle section_

    Définit des billboards.
    
10. 'camera' : _nouvelle section_

    Définit une caméra.
    
11. 'panel_overlay' : _nouvelle section_

    Définit une incrustation de type panneau simple.
    
12. 'border_panel_overlay' : _nouvelle section_

    Définit une incrustation de type panneau avec bordure.
    
13. 'text_overlay' : _nouvelle section_

    Définit une incrustation de type panneau avec texte.
    
14. 'animated_object_group' : _nouvelle section_

    Définit un groupe d'objets animés avec des animations communes.


### K - Sections 'scene_node' et 'camera_node'

1. 'parent' : _nom_

    Définit le Node parent de celui-ci. Par défaut le parent est le RootNode. Le fait de transformer (tranlate, rotate, scale) un node parent transforme ses enfants.
    
2. 'position' : _3 réels_

    La position du node par rapport à son parent.
    
3. 'orientation' : _4 réels_

    Quaternion représentant l'orientation du node par rapport à son parent.
    
4. 'scale' : _3 réels_

    Echelle du node par rapport à son parent.


### L - Section 'light'

1. 'type' : _valeur_

    3 types de sources lumineuses existent dans Castor3D : 
    * _directional_ : lumière directionnelle (telle le soleil).
    * _point_light_ : une source située à un endroit et émettant dans toutes les directions.
    * _spot_light_ : une source située à un endroit et émettant dans un cône orienté dans une direction.

2. 'colour' : _3 réels_

    Définit la couleur de la source lumineuse, au format RGB.
    
3. 'intensity' : _3 réels_

    Définit les intensités ambiante, diffuse et spéculaire de la source lumineuse.
    
4. 'attenuation' : _3 réels_

    Définit les 3 composantes d'atténuation de la source lumineuse en fonction de l'éloignement de la source : constante, linéaire et quadratique. spot_light et point_light uniquement.
    
5. 'cut_off' : _réel_

    Ouverture de l'angle du cône du spot. spot_light uniquement.
    
6. 'exponent' : _réel_

    Attenuation fonction de la distance entre le point éclairé et le centre du cône lumineux. spot_light uniquement.
    
7. 'parent' : _nom_

    Définit le nom du SceneNode auquel la source lumineuse est attachée.


### M - Section 'object'

1. 'parent' : _nom_

    Nom du SceneNode auquel la géométrie est attachée.
    
2. 'mesh' : _nom_, _nouvelle section_

    Définit une section décrivant un maillage, avec le nom donné.
    
3. 'material' : _nom_

    Nom d'un materiau défini dans un fichier .cmtl ou dans ce fichier. Applique le materiau à tous les sous-maillages.
    
4. 'materials' : _nouvelle section_

    Permet de définir le matériau pour chaque sous-maillage.


### N - Section 'materials'

1. 'material' : _entier_, _nom_

    Index du sous-maillage et nom du matériau à utiliser.


### O - Section 'mesh'

1. 'type' : _nom_

    Nom du type de maillage. Peut être :
    * _custom_ : maillage défini manuellement ou maillage importé.
    * _cube_ : cube, il faut définir ses 3 dimensions par la suite.
    * _cone_ : cône, il faut définir son rayon et sa hauteur par la suite.
    * _cylinder_ : cylindre, dont il faut entrer ensuite le rayon et la hauteur.
    * _sphere_ : sphère à faces "carrées", il faut définir le nombre de subdivision et le rayon.
    * _icosahedron_ : sphère à faces triangulaires, il faut définir le nombre de subdivision et le rayon.
    * _torus_ : torre, il est nécessaire de définir le nombre de subdivisions internes, externes et les rayons interne et externe.
    * _plane_ : un plan, il est nécessaire de définir le nombre de subdivisions en largeur et en profondeur ainsi que la largeur et la profondeur.

3. 'submesh' : _nouvelle section_

    Définit un sous-maillage, uniquement si le type du maillage est 'custom'.
    
4. 'import' : _fichier_ <_options_>

    Uniquement si le type du maillage est 'custom'.
    Permet l'import d'un fichier contenant les données du maillage. Ce fichier peut être au format cmsh ou tout autre format supporté par Castor3D.
    Cette directive peut de plus prendre plusieurs options parmi les suivantes :
    * _smooth_normals_ : Génère les normales par sommet lors de l'import.
    * _flat_normals_ : Génère les normales par face lors de l'import.
    * _tangent_space_ : Génère les informations d'espace tangent (tangente et bitangente) lors de l'import.
    
5. 'division' : _nom_ _entier_

    Permet la subdivision du maillage en utilisant un algorithm défini par le nom donné (support en fonction des plugins).
    Le second paramètre est le nombre de fois où la division est effectuée (récursivement).


### P - Section 'submesh'

1. 'vertex' : _3 réels_

    Ajoute le sommet défini par les coordonnées au sous-maillage.
    
2. 'uv' : _2 réels_

    Définit les uv à utiliser pour le sommet déclaré précédemment.
    
3. 'uvw' : _3 réels_

    Définit les uvw à utiliser pour le sommet déclaré précédemment.
    
4. 'normal' : _3 réels_

    Définit la normale à utiliser pour le sommet déclaré précédemment.
    
5. 'tangent' : _3 réels_

    Définit la tangente à utiliser pour le sommet déclaré précédemment.
    
6. 'face' : _3 ou 4 entiers_

    Définit une face qui utilise les 3 ou 4 indices de sommet. S'il y a plus de 3 indices, crée autant de faces triangulaires que nécessaire.
    
7. 'face_uv' : _autant d'uv que d'indices de la face_

    Définit les uv à utiliser pour la face déclarée précédemment.
    
8. 'face_uvw' : _autant d'uvw que d'indices de la face_

    Définit les uvw à utiliser pour la face déclarée précédemment.
    
9. 'face_normals' : _autant de groupes de 3 réels que d'indices de la face_

    Définit les normales à utiliser pour la face déclarée précédemment.
    
10. 'face_tangents' : _autant de groupes de 3 réels que d'indices de la face_

    Définit les tangentes à utiliser pour la face déclarée précédemment.


### Q - Section 'billboard'

Permet de définir des billboards partageant le même matériau et faisant les mêmes dimensions.

1. 'parent' : _nom_

    Définit le SceneNode auquel ces billboards seront attachés.
    
2. 'positions' : _nouvelle section_

    Permet de définir les positions relatives des différentes instances des billboards.
    
3. 'material' : _nom_

    Définit le mtatériau utilisé pour l'affichage des billboards.
    
4. 'dimensions' : _taille_

    Définit la taille des billboards.


### R - Section 'positions'

1. 'pos' : _3 réels_

    Définit la position relative d'un billboard.


### S - Section 'camera'

1. 'parent' : _nom_

    Définit le CameraNode auquel la caméra est attachée.
    
2. 'primitive' : _valeur_

    Définit le type d'affichage de la caméra, peut prendre les valeurs suivantes :
    * _points_ : Des points.
    * _lines_ : Des lignes disjointes.
    * _line_loop_ : Une boucle formée de lignes jointes.
    * _line_strip_ : Des lignes jointes.
    * _triangles_ : Des triangles disjoints.
    * _triangle_strip_ : Des triangles joints.
    * _triangle_fan_ : Des triangles joints par le premier point.
    * _quads_ : Des quadrilatères disjoints.
    * _quad_strip_ : Des quadrilatères joints.
    * _polygon_ : Des polygones.
    
3. 'viewport' : _nouvelle section_

    Définit la fenêtre d'affichage de la caméra.


### T - Section 'viewport'

1. 'type' : _valeur_

    Type d'affichage de la fenêtre, peut valoir 2d ou 3d.
    
2. 'left' : _réel_

    Définit la coordonnée X minimale affichée.
    
3. 'right' : _réel_

    Définit la coordonnée X maximale affichée.
    
4. 'top' : _réel_

    Définit la coordonnée Y minimale affichée.
    
5. 'bottom' : _réel_

    Définit la coordonnée Y maximale affichée.
    
6. 'near' : _réel_

    Définit la coordonnée Z minimale affichée.
    
7. 'far' : _réel_

    Définit la coordonnée Z maximale affichée.
    
8. 'size' : _taille_

    Définit la taille de la fenêtre d'affichage (en pixels).
    
9. 'fov_y' : _réel_

    Définit l'angle d'ouverture vertical, en radians.
    
10. 'aspect_ratio' : _réel_

    Définit l'aspect global de la fenêtre (1.33333 pour 4/3, 1.77777 pour 16/9 ... ).
    

### U - Section 'animated_object_group'

1. 'animated_object' : _nom_

    Définit le nom d'un objet à ajouter dans le groupe.
    
2. 'animation' : _nom_

    Ajoute l'animation dont le nom est donné à la liste d'animations communes.


### V - Section 'panel_overlay'

1. 'material' : _nom_

    Définit le matériau utilisé par le panneau.
    
2. 'position' : _2 réels_

    Définit la position de l'incrustation, par rapport à son parent (ou à l'écran).
    
3. 'size' : _2 réels_

    Définit la taille de l'incrustation, par rapport à son parent (ou à l'écran).
    
4. 'pxl_position' : _2 entiers_

    Définit la position absolue de l'incrustation, en pixels.
    
5. 'pxl_size' : _2 entiers_

    Définit la taille absolue de l'incrustation, en pixels.
    
6. 'uv' : _4 réels_

    Définit les UV pour l'incrustation (gauche, haut, droit, bas).
    
7. 'panel_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau simple.
    
8. 'border_panel_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau avec bordure.
    
9. 'text_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau avec texte.


### W - Section 'border_panel_overlay'

1. 'material' : _nom_

    Définit le matériau utilisé par le panneau.
    
2. 'position' : _2 réels_

    Définit la position de l'incrustation, par rapport à son parent (ou à l'écran).
    
3. 'size' : _2 réels_

    Définit la taille de l'incrustation, par rapport à son parent (ou à l'écran).
    
4. 'pxl_position' : _2 réels_

    Définit la position absolue de l'incrustation, en pixels.
    
5. 'pxl_size' : _2 réels_

    Définit la taille absolue de l'incrustation, en pixels.
    
6. 'center_uv' : _4 réels_

    Définit les UV pour le centre de l'incrustation (gauche, haut, droit, bas).
    
7. 'border_material' : _nom_

    Définit le matériau utilisé par la bordure du panneau.
    
8. 'border_position' : _valeur_

    Définit la position de la bordure de l'incrustation, parmi les valeurs suivantes :
    * _internal_ : La bordure à l'intérieur de l'inscrustation (elle ne dépasse pas de l'incrustation).
    * _middle_ : La bordure est à moitié à l'intérieur et à moitié à l'extérieur de l'incrustation (elle dépasse de l'incrustation).
    * _external_ : La bordure est à l'extérieur de l'incrustation (elle n'empiète pas sur le contenu de l'incrustation).
    
9. 'border_size' : _4 réels_

    Définit la taille des bords (gauche, droite, haut , bas), par rapport au parent (ou à l'écran).
    
10. 'pxl_border_size' : _2 entiers_

    Définit la taille absolue de l'incrustation, en pixels.
    
11. 'border_inner_uv' : _4 réels_

    Définit les UV pour la bordure de l'incrustation, côté intérieur (gauche, haut, droit, bas).
    
12. 'border_outer_uv' : _4 réels_

    Définit les UV pour la bordure de l'incrustation, côté extérieur (gauche, haut, droit, bas).
    
13. 'panel_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau simple.
    
14. 'border_panel_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau avec bordure.
    
15. 'text_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau avec texte.


### X - Section 'text_overlay'

1. 'material' : _nom_

    Définit le matériau utilisé par le panneau.
    
2. 'position' : _2 réels_

    Définit la position de l'incrustation, par rapport à son parent (ou à l'écran).
    
3. 'size' : _2 réels_

    Définit la taille de l'incrustation, par rapport à son parent (ou à l'écran).
    
4. 'pxl_position' : _2 entiers_

    Définit la position absolue de l'incrustation, en pixels.
    
5. 'pxl_size' : _2 entiers_

    Définit la taille absolue de l'incrustation, en pixels.
    
6. 'font' : _nom_

    Définit la police utilisée par l'incrustation.
    
7. 'text' : _texte_

    Définit le texte affiché.
    
8. 'text_wrapping' : _valeur_

    Définit la manière dont le texte est découpé dans le cas où une ligne dépasse les dimensions de l'incrustation :
    * _none_ : Le texte n'est pas découpé (ce qui dépasse n'est pas affiché).
    * _break_ : Le texte est découpé à la lettre (les mots sont coupés).
    * _break_words_ : Le texte est découpé au mot (les mots restent entiers).
    
9. 'vertical_align' : _valeur_

    Définit la manière dont le texte est aligné verticalement, dans son incrustation :
    * _top_ : Le texte est aligné en haut.
    * _center_ : Le texte est centré.
    * _bottom_ : Le texte est aligné en bas.
    
10. 'horizontal_align' : _valeur_

    Définit la manière dont le texte est aligné horizontalement, dans son incrustation :
    * _left_ : Le texte est aligné à gauche.
    * _center_ : Le texte est centré.
    * _right_ : Le texte est aligné à droite.
    
11. 'panel_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau simple.
    
12. 'border_panel_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau avec bordure.
    
13. 'text_overlay' : _nom_ _nouvelle section_

    Permet de définir une incrustation fille de type panneau avec texte.


### Y - Section 'window'

1. 'render_target' : _nouvelle section_

    Permet de définir une nouvelle section décrivant la cible de rendu.
    
2. 'vsync' : _booléen_

    Permet de dire si on veut activer la synchronisation verticale.
    
3. 'fullscreen' : _booléen_

    Permet d'activer ou non l'affichage plein écran.


### Z - Section 'render_target'

1. 'scene' : _nom_

    Permet de définir la scène rendue dans cette cible.
    
2. 'camera' : _nom_

    Permet de définir la caméra utilisée pour rendre la scène.
    
3. 'size' : _taille_

    Définit la taille du buffer interne de la cible de rendu.
    
4. 'format' : _valeur_

    Définit le format des pixels du buffer couleur de la cible de rendu. Peut valoir :
    * _l8_ : Luminance 8 bits, 1 nombre entier 8 bits.
    * _l16f_ : Luminance 16 bits, 1 nombre en virgule flottante 16 bits (half float).
    * _l32f_ : Luminance 32 bits, 1 nombre en virgule flottante 32 bits (float).
    * _al16_ : Transparence + Luminance, 2 nombres entiers 8 bits.
    * _al16f_ : Transparence + Luminance, 2 nombres en virgule flottante 16 bits (half float).
    * _al32f_ : Transparence + Luminance, 2 nombres en virgule flottante 32 bits (float).
    * _argb1555_ : ARGB 16 bits, 1 bit alpha et chaque composante sur un entier 5 bits.
    * _rgb565_ : RGB 16 bits, R sur un entier 5 bits, G sur un entier 6 bits et B sur un entier 5 bits.
    * _argb16_ : ARGB 16 bits, chaque composante sur un entier 4 bits.
    * _rgb24_ : RGB 24 bits, chaque composante sur un entier 8 bits.
    * _argb32_ : ARGB 32 bits, chaque composante sur un entier 8 bits.
    * _argb16f_ : ARGB 64 bits, chaque composante sur un flottant 16 bits (half float).
    * _rgb32f_ : RGB 96 bits, chaque composante sur un flottant 32 bits (float).
    * _argb32f_ : ARGB 128 bits, chaque composante sur un flottant 32 bits (float).
    
5. 'depth' : _valeur_

    Définit le format des pixels du buffer profondeur de la cible de rendu. Peut valoir :
    * _depth16_ : Profondeur sur un entier en 16 bits.
    * _depth24_ : Profondeur sur un entier en 24 bits.
    * _depth24s8_ : Profondeur sur un entier en 24 bits + Stencil sur un entier 8 bits.
    * _depth32fs8_ : Profondeur sur un nombre en virgule flottante en 32 bits + Stencil sur un entier 8 bits.
    * _depth32_ : Profondeur sur un entier en 32 bits.
    * _depth32f_ : Profondeur sur un nombre en virgule flottante en 32 bits.
    * _stencil1_ : Stencil sur un bit.
    * _stencil8_ : Stencil sur un entier en 8 bits.
    
6. 'technique' : _nom_, _parametres optionnels_

    Définit la technique de rendu utilisée. Les paramètres optionnels dépendent de la technique de rendu choisie.
    
7. 'postfx' : _nom_, _parametres optionnels_

    Définit un effet post-rendu à utiliser. Les paramètres optionnels dépendent de l'effet choisi.
    
8. 'stereo' : _booléen_

    Définit si on utilise l'affichage stéréoscopique.
