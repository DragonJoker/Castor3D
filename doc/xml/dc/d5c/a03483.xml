<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="dc/d5c/a03483" kind="class" language="C++" prot="public">
    <compoundname>castor3d::GpuBufferBase</compoundname>
    <derivedcompoundref refid="d8/df8/a03443" prot="public" virt="non-virtual">castor3d::GpuBufferT&lt; AllocatorT &gt;</derivedcompoundref>
    <includes local="no">GpuBuffer.hpp</includes>
    <innerclass refid="de/d67/a03487" prot="private">castor3d::GpuBufferBase::MemoryRange</innerclass>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="dc/d5c/a03483_1ab8c27f17ace27bf1c6789d61b1c60665" prot="private" static="no">
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; MemoryRange &gt;</type>
        <definition>using castor3d::GpuBufferBase::MemoryRangeArray =  castor::Vector&lt; MemoryRange &gt;</definition>
        <argsstring></argsstring>
        <name>MemoryRangeArray</name>
        <qualifiedname>castor3d::GpuBufferBase::MemoryRangeArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="220" column="1" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="dc/d5c/a03483_1a01ce6a31562ddfd446c446f4a24ed188" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class GpuBufferPool</definition>
        <argsstring></argsstring>
        <name>GpuBufferPool</name>
        <qualifiedname>castor3d::GpuBufferBase::GpuBufferPool</qualifiedname>
        <param>
          <type><ref refid="d9/d25/a03511" kindref="compound">GpuBufferPool</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="24" column="14" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/d5c/a03483_1a9951e34699ca072e47a0dd28f80ff31c" prot="private" static="no" mutable="no">
        <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> const  &amp;</type>
        <definition>RenderSystem const&amp; castor3d::GpuBufferBase::m_renderSystem</definition>
        <argsstring></argsstring>
        <name>m_renderSystem</name>
        <qualifiedname>castor3d::GpuBufferBase::m_renderSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="193" column="21" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d5c/a03483_1ac93213c36218f65e9a8375fc2c567fdf" prot="private" static="no" mutable="no">
        <type>VkBufferUsageFlags</type>
        <definition>VkBufferUsageFlags castor3d::GpuBufferBase::m_usage</definition>
        <argsstring></argsstring>
        <name>m_usage</name>
        <qualifiedname>castor3d::GpuBufferBase::m_usage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="194" column="20" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d5c/a03483_1a4c730337dc92891d1bd441f08e614955" prot="private" static="no" mutable="no">
        <type>VkMemoryPropertyFlags</type>
        <definition>VkMemoryPropertyFlags castor3d::GpuBufferBase::m_memoryFlags</definition>
        <argsstring></argsstring>
        <name>m_memoryFlags</name>
        <qualifiedname>castor3d::GpuBufferBase::m_memoryFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="195" column="23" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d5c/a03483_1a392feb8ee91255bfffcadec61f4ea34d" prot="private" static="no" mutable="no">
        <type>ashes::QueueShare</type>
        <definition>ashes::QueueShare castor3d::GpuBufferBase::m_sharingMode</definition>
        <argsstring></argsstring>
        <name>m_sharingMode</name>
        <qualifiedname>castor3d::GpuBufferBase::m_sharingMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="196" column="19" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d5c/a03483_1a587d96355485bef31424b29912a593a0" prot="private" static="no" mutable="no">
        <type>VkDeviceSize</type>
        <definition>VkDeviceSize castor3d::GpuBufferBase::m_allocatedSize</definition>
        <argsstring></argsstring>
        <name>m_allocatedSize</name>
        <qualifiedname>castor3d::GpuBufferBase::m_allocatedSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="197" column="14" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d5c/a03483_1a9a7538519685faae7f6428fc3eb2cc83" prot="private" static="no" mutable="no">
        <type>ashes::BufferPtr&lt; uint8_t &gt;</type>
        <definition>ashes::BufferPtr&lt; uint8_t &gt; castor3d::GpuBufferBase::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <qualifiedname>castor3d::GpuBufferBase::m_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="198" column="18" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d5c/a03483_1aff43d52ad1a0b2dbfd249584b4d50b8f" prot="private" static="no" mutable="no">
        <type>castor::ByteArray</type>
        <definition>castor::ByteArray castor3d::GpuBufferBase::m_ownData</definition>
        <argsstring></argsstring>
        <name>m_ownData</name>
        <qualifiedname>castor3d::GpuBufferBase::m_ownData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="199" column="19" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d5c/a03483_1a016632c991999990c8d2fc68ddddf2c9" prot="private" static="no" mutable="no">
        <type>castor::ByteArrayView</type>
        <definition>castor::ByteArrayView castor3d::GpuBufferBase::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <qualifiedname>castor3d::GpuBufferBase::m_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="200" column="23" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d5c/a03483_1a190c0b785cdcd21cb450abb5752d657c" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a5f667ec3534f15e07b7825ade796cd2b" kindref="member">castor::UnorderedMap</ref>&lt; size_t, MemoryRangeArray &gt;</type>
        <definition>castor::UnorderedMap&lt; size_t, MemoryRangeArray &gt; castor3d::GpuBufferBase::m_ranges</definition>
        <argsstring></argsstring>
        <name>m_ranges</name>
        <qualifiedname>castor3d::GpuBufferBase::m_ranges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="221" column="22" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d5c/a03483_1a575eac0a8b4791f20ce00fcb27abfce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::GpuBufferBase::GpuBufferBase</definition>
        <argsstring>(RenderSystem const &amp;renderSystem, VkBufferUsageFlags usage, VkMemoryPropertyFlags memoryFlags, castor::String const &amp;debugName, ashes::QueueShare sharingMode, VkDeviceSize allocatedSize)</argsstring>
        <name>GpuBufferBase</name>
        <qualifiedname>castor3d::GpuBufferBase::GpuBufferBase</qualifiedname>
        <param>
          <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> const &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>memoryFlags</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>debugName</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>allocatedSize</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>Le device sur lequel le stockage est alloué. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">usage</parametername>
</parameternamelist>
<parameterdescription>
<para>Les cibles du tampon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">memoryFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les propriétés mémoire du tampon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">debugName</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom debug. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sharingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de partage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">allocatedSize</parametername>
</parameternamelist>
<parameterdescription>
<para>La taille du buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="45" column="9"/>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1a4a2279f6801e7782b6835a78880185a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::GpuBufferBase::upload</definition>
        <argsstring>(UploadData &amp;uploader)</argsstring>
        <name>upload</name>
        <qualifiedname>castor3d::GpuBufferBase::upload</qualifiedname>
        <param>
          <type><ref refid="d7/d12/a03583" kindref="compound">UploadData</ref> &amp;</type>
          <declname>uploader</declname>
        </param>
        <briefdescription>
<para>Met à jour tous les intervalles mémoire prêts en VRAM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">uploader</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les requêtes d&apos;upload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="59" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1a1e32f315ceead064bd8103403cf6b67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::GpuBufferBase::upload</definition>
        <argsstring>(UploadData &amp;uploader, VkDeviceSize offset, VkDeviceSize size, VkAccessFlags dstAccessFlags, VkPipelineStageFlags dstPipelineFlags)</argsstring>
        <name>upload</name>
        <qualifiedname>castor3d::GpuBufferBase::upload</qualifiedname>
        <param>
          <type><ref refid="d7/d12/a03583" kindref="compound">UploadData</ref> &amp;</type>
          <declname>uploader</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkAccessFlags</type>
          <declname>dstAccessFlags</declname>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>dstPipelineFlags</declname>
        </param>
        <briefdescription>
<para>Met à jour un intervalle mémoire en VRAM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">uploader</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les requêtes d&apos;upload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;intervalle mémoire. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstAccessFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags d&apos;accès voulus après l&apos;upload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstPipelineFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags d&apos;étape de pipeline voulus après l&apos;upload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="74" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1a06f1c510406ae4dd17d134022e94a497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::GpuBufferBase::markDirty</definition>
        <argsstring>(VkDeviceSize offset, VkDeviceSize size, VkAccessFlags dstAccessFlags, VkPipelineStageFlags dstPipelineFlags)</argsstring>
        <name>markDirty</name>
        <qualifiedname>castor3d::GpuBufferBase::markDirty</qualifiedname>
        <param>
          <type>VkDeviceSize</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkAccessFlags</type>
          <declname>dstAccessFlags</declname>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>dstPipelineFlags</declname>
        </param>
        <briefdescription>
<para>Marque un intervalle mémoire comme prêt à l&apos;upload. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;intervalle mémoire. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstAccessFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags d&apos;accès voulus après l&apos;upload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstPipelineFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags d&apos;étape de pipeline voulus après l&apos;upload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="91" column="14"/>
        <referencedby refid="d7/d76/a03451_1a3330139dae1717c651bcf6693794e044" compoundref="d9/dd0/a00191" startline="176" endline="184">castor3d::GpuBufferOffsetT&lt; DataT &gt;::markDirty</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1a2819368745aa7b5b6c9d71099288e7c4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::GpuBufferBase::hasBuffer</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasBuffer</name>
        <qualifiedname>castor3d::GpuBufferBase::hasBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le tampon interne. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="103" column="6" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="103" bodyend="106"/>
        <referencedby refid="d7/d76/a03451_1a661b1a290c461596f62b66adf4502835" compoundref="d9/dd0/a00191" startline="120" endline="124">castor3d::GpuBufferOffsetT&lt; DataT &gt;::operator bool</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1a9b7138bb3a0846953e5c7c64f1bcffd8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; uint8_t &gt; const &amp;</type>
        <definition>ashes::Buffer&lt; uint8_t &gt; const  &amp; castor3d::GpuBufferBase::getBuffer</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBuffer</name>
        <qualifiedname>castor3d::GpuBufferBase::getBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le tampon interne. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="115" column="22" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="115" bodyend="118"/>
        <referencedby refid="d7/d76/a03451_1a4da4dcd4dd73b83fb0bc6b02ab0e739c" compoundref="d9/dd0/a00191" startline="141" endline="144">castor3d::GpuBufferOffsetT&lt; DataT &gt;::getBuffer</referencedby>
        <referencedby refid="d7/d76/a03451_1aaf498e1f12b8c86de5b613e41e9fb87e" compoundref="d9/dd0/a00191" startline="136" endline="139">castor3d::GpuBufferOffsetT&lt; DataT &gt;::getBuffer</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1ab363bad8ef5d7b824746d356461fcbba" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; uint8_t &gt; &amp;</type>
        <definition>ashes::Buffer&lt; uint8_t &gt; &amp; castor3d::GpuBufferBase::getBuffer</definition>
        <argsstring>() noexcept</argsstring>
        <name>getBuffer</name>
        <qualifiedname>castor3d::GpuBufferBase::getBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le tampon interne. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="127" column="16" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1aa88b9b858d0982e124a786cad1d7907d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataT</type>
          </param>
        </templateparamlist>
        <type>DataT const &amp;</type>
        <definition>DataT const  &amp; castor3d::GpuBufferBase::getData</definition>
        <argsstring>(VkDeviceSize offset) const noexcept</argsstring>
        <name>getData</name>
        <qualifiedname>castor3d::GpuBufferBase::getData</qualifiedname>
        <param>
          <type>VkDeviceSize</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>La n-ème instance des données. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;offset de la zone mémoire. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="144" column="14" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1a9d08f68786d8bc5512a573d78ac7245a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataT</type>
          </param>
        </templateparamlist>
        <type>DataT &amp;</type>
        <definition>DataT &amp; castor3d::GpuBufferBase::getData</definition>
        <argsstring>(VkDeviceSize offset) noexcept</argsstring>
        <name>getData</name>
        <qualifiedname>castor3d::GpuBufferBase::getData</qualifiedname>
        <param>
          <type>VkDeviceSize</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>La n-ème instance des données. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;offset de la zone mémoire. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="162" column="8" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1a255ca75453d5eadabb88fc5ad6441fbd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::ByteArrayView const &amp;</type>
        <definition>castor::ByteArrayView const  &amp; castor3d::GpuBufferBase::getDatas</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDatas</name>
        <qualifiedname>castor3d::GpuBufferBase::getDatas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Les données. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="175" column="30" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="175" bodyend="178"/>
        <referencedby refid="d7/d76/a03451_1aab6c41b3e6bd874a2eea4fe95d769f68" compoundref="d9/dd0/a00191" startline="161" endline="166">castor3d::GpuBufferOffsetT&lt; DataT &gt;::getData</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d5c/a03483_1a0a9e4cb310ebdd83db21a4da3df6ba6f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::ByteArrayView &amp;</type>
        <definition>castor::ByteArrayView &amp; castor3d::GpuBufferBase::getDatas</definition>
        <argsstring>() noexcept</argsstring>
        <name>getDatas</name>
        <qualifiedname>castor3d::GpuBufferBase::getDatas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Les données. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Buffer/GpuBuffer.hpp" line="187" column="24" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::GpuBufferBase</label>
        <link refid="dc/d5c/a03483"/>
      </node>
      <node id="2">
        <label>castor3d::GpuBufferT&lt; AllocatorT &gt;</label>
        <link refid="d8/df8/a03443"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="Castor3D/Buffer/GpuBuffer.hpp" line="22" column="1" bodyfile="Castor3D/Buffer/GpuBuffer.hpp" bodystart="23" bodyend="222"/>
    <listofallmembers>
      <member refid="dc/d5c/a03483_1a9b7138bb3a0846953e5c7c64f1bcffd8" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getBuffer</name></member>
      <member refid="dc/d5c/a03483_1ab363bad8ef5d7b824746d356461fcbba" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getBuffer</name></member>
      <member refid="dc/d5c/a03483_1aa88b9b858d0982e124a786cad1d7907d" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getData</name></member>
      <member refid="dc/d5c/a03483_1a9d08f68786d8bc5512a573d78ac7245a" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getData</name></member>
      <member refid="dc/d5c/a03483_1a255ca75453d5eadabb88fc5ad6441fbd" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getDatas</name></member>
      <member refid="dc/d5c/a03483_1a0a9e4cb310ebdd83db21a4da3df6ba6f" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getDatas</name></member>
      <member refid="dc/d5c/a03483_1a575eac0a8b4791f20ce00fcb27abfce4" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>GpuBufferBase</name></member>
      <member refid="dc/d5c/a03483_1a01ce6a31562ddfd446c446f4a24ed188" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>GpuBufferPool</name></member>
      <member refid="dc/d5c/a03483_1a2819368745aa7b5b6c9d71099288e7c4" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>hasBuffer</name></member>
      <member refid="dc/d5c/a03483_1a587d96355485bef31424b29912a593a0" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_allocatedSize</name></member>
      <member refid="dc/d5c/a03483_1a9a7538519685faae7f6428fc3eb2cc83" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_buffer</name></member>
      <member refid="dc/d5c/a03483_1a016632c991999990c8d2fc68ddddf2c9" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_data</name></member>
      <member refid="dc/d5c/a03483_1a4c730337dc92891d1bd441f08e614955" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_memoryFlags</name></member>
      <member refid="dc/d5c/a03483_1aff43d52ad1a0b2dbfd249584b4d50b8f" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_ownData</name></member>
      <member refid="dc/d5c/a03483_1a190c0b785cdcd21cb450abb5752d657c" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_ranges</name></member>
      <member refid="dc/d5c/a03483_1a9951e34699ca072e47a0dd28f80ff31c" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_renderSystem</name></member>
      <member refid="dc/d5c/a03483_1a392feb8ee91255bfffcadec61f4ea34d" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_sharingMode</name></member>
      <member refid="dc/d5c/a03483_1ac93213c36218f65e9a8375fc2c567fdf" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_usage</name></member>
      <member refid="dc/d5c/a03483_1a06f1c510406ae4dd17d134022e94a497" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>markDirty</name></member>
      <member refid="dc/d5c/a03483_1ab8c27f17ace27bf1c6789d61b1c60665" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>MemoryRangeArray</name></member>
      <member refid="dc/d5c/a03483_1a4a2279f6801e7782b6835a78880185a9" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>upload</name></member>
      <member refid="dc/d5c/a03483_1a1e32f315ceead064bd8103403cf6b67d" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>upload</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
