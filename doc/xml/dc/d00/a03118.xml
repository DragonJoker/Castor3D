<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="dc/d00/a03118" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::UserInputListener</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; Engine &gt;</basecompoundref>
    <derivedcompoundref refid="d9/dc1/a03194" prot="public" virt="non-virtual">castor3d::ControlsManager</derivedcompoundref>
    <derivedcompoundref refid="dc/d69/a05614" prot="public" virt="non-virtual">castor3d::RenderWindow::InputListener</derivedcompoundref>
    <includes local="no">UserInputListener.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Keyboard input events</header>
      <memberdef kind="variable" id="dc/d00/a03118_1a53ff879a2f749355cbd0cdd9ab96a351" prot="protected" static="no" mutable="yes">
        <type>std::mutex</type>
        <definition>std::mutex castor3d::UserInputListener::m_mutexHandlers</definition>
        <argsstring></argsstring>
        <name>m_mutexHandlers</name>
        <qualifiedname>castor3d::UserInputListener::m_mutexHandlers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The mutex used to protect the handlers array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="598" column="20" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="598" bodyend="-1"/>
        <referencedby refid="dc/d00/a03118_1afcc4620692918ecabebe183a086df13e" compoundref="d3/d07/a00305" startline="518" endline="530">doAddHandler</referencedby>
        <referencedby refid="dc/d00/a03118_1ada87c6487d093b70df8bcbb3ba2df93b" compoundref="d3/d07/a00305" startline="485" endline="496">doGetHandlers</referencedby>
        <referencedby refid="dc/d00/a03118_1a3b2f2515b1c768ab6c5fa88b8ff0109d" compoundref="d3/d07/a00305" startline="503" endline="507">doHasHandlers</referencedby>
        <referencedby refid="dc/d00/a03118_1aa60cd82b80e2e3ad1251efe5a4714645" compoundref="d3/d07/a00305" startline="562" endline="566">doRemoveHandler</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a710c63a9ac5b77ef8d692ae11e3dab79" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; EventHandlerUPtr &gt;</type>
        <definition>std::vector&lt; EventHandlerUPtr &gt; castor3d::UserInputListener::m_handlers</definition>
        <argsstring></argsstring>
        <name>m_handlers</name>
        <qualifiedname>castor3d::UserInputListener::m_handlers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The handlers array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="601" column="13" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="601" bodyend="-1"/>
        <referencedby refid="dc/d00/a03118_1afcc4620692918ecabebe183a086df13e" compoundref="d3/d07/a00305" startline="518" endline="530">doAddHandler</referencedby>
        <referencedby refid="dc/d00/a03118_1ada87c6487d093b70df8bcbb3ba2df93b" compoundref="d3/d07/a00305" startline="485" endline="496">doGetHandlers</referencedby>
        <referencedby refid="dc/d00/a03118_1a3b2f2515b1c768ab6c5fa88b8ff0109d" compoundref="d3/d07/a00305" startline="503" endline="507">doHasHandlers</referencedby>
        <referencedby refid="dc/d00/a03118_1a46e27a9771c43474cffca043d60b9fd9" compoundref="d3/d07/a00305" startline="539" endline="553">doRemoveHandlerNL</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a364f3a6fa9ccb20ed3a5ae2bba260ee1" prot="protected" static="no" mutable="no">
        <type>FrameListenerRPtr</type>
        <definition>FrameListenerRPtr castor3d::UserInputListener::m_frameListener</definition>
        <argsstring></argsstring>
        <name>m_frameListener</name>
        <qualifiedname>castor3d::UserInputListener::m_frameListener</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The associated frame listener. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="604" column="19" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="604" bodyend="-1"/>
        <referencedby refid="dc/d00/a03118_1a4517c0ab3bb1374636ff75229f632fe8" compoundref="d3/d07/a00305" startline="90" endline="93">getFrameListener</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a2214124379a932a9770d357cad0ac8ba" prot="private" static="no" mutable="no">
        <type><ref refid="db/dbc/a03114" kindref="compound">MouseState</ref></type>
        <definition>MouseState castor3d::UserInputListener::m_mouse</definition>
        <argsstring></argsstring>
        <name>m_mouse</name>
        <qualifiedname>castor3d::UserInputListener::m_mouse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="607" column="12" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a7ade36a32fa7227bab796782e08f9b4b" prot="private" static="no" mutable="no">
        <type><ref refid="df/d64/a03110" kindref="compound">KeyboardState</ref></type>
        <definition>KeyboardState castor3d::UserInputListener::m_keyboard</definition>
        <argsstring></argsstring>
        <name>m_keyboard</name>
        <qualifiedname>castor3d::UserInputListener::m_keyboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="608" column="15" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a8aae7fabed5b23aafd0a6ac090dab9a8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::UserInputListener::m_enabled</definition>
        <argsstring></argsstring>
        <name>m_enabled</name>
        <qualifiedname>castor3d::UserInputListener::m_enabled</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="609" column="6" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a7f5b39c982f299cb687d092e582fd340" prot="private" static="no" mutable="no">
        <type>EventHandlerRPtr</type>
        <definition>EventHandlerRPtr castor3d::UserInputListener::m_activeHandler</definition>
        <argsstring></argsstring>
        <name>m_activeHandler</name>
        <qualifiedname>castor3d::UserInputListener::m_activeHandler</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="610" column="18" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a25b03059db000b0ef8fca0c5cd3740b2" prot="private" static="no" mutable="no">
        <type>EventHandlerRPtr</type>
        <definition>EventHandlerRPtr castor3d::UserInputListener::m_lastMouseTarget</definition>
        <argsstring></argsstring>
        <name>m_lastMouseTarget</name>
        <qualifiedname>castor3d::UserInputListener::m_lastMouseTarget</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="611" column="18" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a920a8a17570f84e438384b5915f0fea0" prot="private" static="no" mutable="no">
        <type>std::map&lt; castor::String, <ref refid="dc/d00/a03118_1a52d763b318a9f016a4d88c53d83f62d0" kindref="member">OnMouseMoveActionFunction</ref> &gt;</type>
        <definition>std::map&lt; castor::String, OnMouseMoveActionFunction &gt; castor3d::UserInputListener::m_onMouseMoveActions</definition>
        <argsstring></argsstring>
        <name>m_onMouseMoveActions</name>
        <qualifiedname>castor3d::UserInputListener::m_onMouseMoveActions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="612" column="10" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a0c3894373d3934d477f9a10202879e50" prot="private" static="no" mutable="no">
        <type>std::map&lt; castor::String, <ref refid="dc/d00/a03118_1a7c733341f9ef3967065ab8feb49d8e00" kindref="member">OnClickActionFunction</ref> &gt;</type>
        <definition>std::map&lt; castor::String, OnClickActionFunction &gt; castor3d::UserInputListener::m_onClickActions</definition>
        <argsstring></argsstring>
        <name>m_onClickActions</name>
        <qualifiedname>castor3d::UserInputListener::m_onClickActions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="613" column="10" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a027699525f1b45e5512e26d6fceb8fb8" prot="private" static="no" mutable="no">
        <type>std::map&lt; castor::String, <ref refid="dc/d00/a03118_1ad5d9e022473b5d9b3d6a5927c35e5f51" kindref="member">OnSelectActionFunction</ref> &gt;</type>
        <definition>std::map&lt; castor::String, OnSelectActionFunction &gt; castor3d::UserInputListener::m_onSelectActions</definition>
        <argsstring></argsstring>
        <name>m_onSelectActions</name>
        <qualifiedname>castor3d::UserInputListener::m_onSelectActions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="614" column="10" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a13dff1a4e33066338bee09b3abcd410c" prot="private" static="no" mutable="no">
        <type>std::map&lt; castor::String, <ref refid="dc/d00/a03118_1a603a568faab9e604566b42249f8b4cb6" kindref="member">OnTextActionFunction</ref> &gt;</type>
        <definition>std::map&lt; castor::String, OnTextActionFunction &gt; castor3d::UserInputListener::m_onTextActions</definition>
        <argsstring></argsstring>
        <name>m_onTextActions</name>
        <qualifiedname>castor3d::UserInputListener::m_onTextActions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="615" column="10" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a9ba885d531332494fe791a5e0f838dbd" prot="private" static="no" mutable="no">
        <type>std::map&lt; castor::String, <ref refid="dc/d00/a03118_1a016a04d3a50f721fc47d8feee7d96d2f" kindref="member">OnExpandActionFunction</ref> &gt;</type>
        <definition>std::map&lt; castor::String, OnExpandActionFunction &gt; castor3d::UserInputListener::m_onExpandActions</definition>
        <argsstring></argsstring>
        <name>m_onExpandActions</name>
        <qualifiedname>castor3d::UserInputListener::m_onExpandActions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="616" column="10" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1ad3eb6361f00a07a2af7366973b3584a4" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d00/a03118_1aa6c5ca6b4ea3a9b877f21a5c4df4f08a" kindref="member">OnCursorActionFunction</ref></type>
        <definition>OnCursorActionFunction castor3d::UserInputListener::m_onCursorAction</definition>
        <argsstring></argsstring>
        <name>m_onCursorAction</name>
        <qualifiedname>castor3d::UserInputListener::m_onCursorAction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="617" column="24" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d00/a03118_1a2aba09ee16df1ff24eb8cd47a4d54bb7" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d00/a03118_1a1da389502c3b04aef66b2a510b97b085" kindref="member">OnClipboardTextActionFunction</ref></type>
        <definition>OnClipboardTextActionFunction castor3d::UserInputListener::m_onClipboardTextAction</definition>
        <argsstring></argsstring>
        <name>m_onClipboardTextAction</name>
        <qualifiedname>castor3d::UserInputListener::m_onClipboardTextAction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="618" column="31" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a89850c36d4d11cce55f6fda961889f65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::UserInputListener::fireKeydown</definition>
        <argsstring>(KeyboardKey key, bool ctrl, bool alt, bool shift)</argsstring>
        <name>fireKeydown</name>
        <qualifiedname>castor3d::UserInputListener::fireKeydown</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ad372dd0cc65f28ad7f558f07c78becb7" kindref="member">KeyboardKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Fires a keyboard key down event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Ctrl key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alt</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Alt key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Shift key is down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is processed by a handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="437" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a5134c0c3c4ec8f16a38f3688e51b56f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::UserInputListener::fireKeyUp</definition>
        <argsstring>(KeyboardKey key, bool ctrl, bool alt, bool shift)</argsstring>
        <name>fireKeyUp</name>
        <qualifiedname>castor3d::UserInputListener::fireKeyUp</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ad372dd0cc65f28ad7f558f07c78becb7" kindref="member">KeyboardKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Fires a keyboard key up event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Ctrl key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alt</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Alt key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Shift key is down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is processed by a control. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="457" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a679c1de2c60f8d2ecda306283a58844e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::UserInputListener::fireChar</definition>
        <argsstring>(KeyboardKey key, castor::String const &amp;c)</argsstring>
        <name>fireChar</name>
        <qualifiedname>castor3d::UserInputListener::fireChar</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ad372dd0cc65f28ad7f558f07c78becb7" kindref="member">KeyboardKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Fires a printable key event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character coorresponding to the key, displayable as is. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is processed by a control. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="473" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1ada87c6487d093b70df8bcbb3ba2df93b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; EventHandlerRPtr &gt;</type>
        <definition>std::vector&lt; EventHandlerRPtr &gt; castor3d::UserInputListener::doGetHandlers</definition>
        <argsstring>() const</argsstring>
        <name>doGetHandlers</name>
        <qualifiedname>castor3d::UserInputListener::doGetHandlers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The handlers, in a thread-safe way. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="485" column="20" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="485" bodyend="496"/>
        <references refid="dc/d00/a03118_1a710c63a9ac5b77ef8d692ae11e3dab79" compoundref="d3/d07/a00305" startline="601">m_handlers</references>
        <references refid="dc/d00/a03118_1a53ff879a2f749355cbd0cdd9ab96a351" compoundref="d3/d07/a00305" startline="598">m_mutexHandlers</references>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a3b2f2515b1c768ab6c5fa88b8ff0109d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::UserInputListener::doHasHandlers</definition>
        <argsstring>() const</argsstring>
        <name>doHasHandlers</name>
        <qualifiedname>castor3d::UserInputListener::doHasHandlers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if there are handlers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="503" column="13" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="503" bodyend="507"/>
        <references refid="dc/d00/a03118_1a710c63a9ac5b77ef8d692ae11e3dab79" compoundref="d3/d07/a00305" startline="601">m_handlers</references>
        <references refid="dc/d00/a03118_1a53ff879a2f749355cbd0cdd9ab96a351" compoundref="d3/d07/a00305" startline="598">m_mutexHandlers</references>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1afcc4620692918ecabebe183a086df13e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EventHandlerRPtr</type>
        <definition>EventHandlerRPtr castor3d::UserInputListener::doAddHandler</definition>
        <argsstring>(EventHandlerUPtr handler)</argsstring>
        <name>doAddHandler</name>
        <qualifiedname>castor3d::UserInputListener::doAddHandler</qualifiedname>
        <param>
          <type>EventHandlerUPtr</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Removes a handler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>You <emphasis>MUST</emphasis> call this function when adding a handler to your lists, if you want to have it updated. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="518" column="25" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="518" bodyend="530"/>
        <references refid="dc/d00/a03118_1a710c63a9ac5b77ef8d692ae11e3dab79" compoundref="d3/d07/a00305" startline="601">m_handlers</references>
        <references refid="dc/d00/a03118_1a53ff879a2f749355cbd0cdd9ab96a351" compoundref="d3/d07/a00305" startline="598">m_mutexHandlers</references>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a46e27a9771c43474cffca043d60b9fd9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::UserInputListener::doRemoveHandlerNL</definition>
        <argsstring>(EventHandler const &amp;handler)</argsstring>
        <name>doRemoveHandlerNL</name>
        <qualifiedname>castor3d::UserInputListener::doRemoveHandlerNL</qualifiedname>
        <param>
          <type><ref refid="d9/d74/a03082" kindref="compound">EventHandler</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Removes a handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="539" column="13" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="539" bodyend="553"/>
        <references refid="dc/d00/a03118_1a710c63a9ac5b77ef8d692ae11e3dab79" compoundref="d3/d07/a00305" startline="601">m_handlers</references>
        <referencedby refid="dc/d00/a03118_1aa60cd82b80e2e3ad1251efe5a4714645" compoundref="d3/d07/a00305" startline="562" endline="566">doRemoveHandler</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1aa60cd82b80e2e3ad1251efe5a4714645" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::UserInputListener::doRemoveHandler</definition>
        <argsstring>(EventHandler const &amp;handler)</argsstring>
        <name>doRemoveHandler</name>
        <qualifiedname>castor3d::UserInputListener::doRemoveHandler</qualifiedname>
        <param>
          <type><ref refid="d9/d74/a03082" kindref="compound">EventHandler</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Removes a handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="562" column="13" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="562" bodyend="566"/>
        <references refid="dc/d00/a03118_1a46e27a9771c43474cffca043d60b9fd9" compoundref="d3/d07/a00305" startline="539" endline="553">doRemoveHandlerNL</references>
        <references refid="dc/d00/a03118_1a53ff879a2f749355cbd0cdd9ab96a351" compoundref="d3/d07/a00305" startline="598">m_mutexHandlers</references>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a9e692a2ce162598cd0032696a3c1dea2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>EventHandlerRPtr</type>
        <definition>virtual EventHandlerRPtr castor3d::UserInputListener::doGetMouseTargetableHandler</definition>
        <argsstring>(castor::Position const &amp;position) const =0</argsstring>
        <name>doGetMouseTargetableHandler</name>
        <qualifiedname>castor3d::UserInputListener::doGetMouseTargetableHandler</qualifiedname>
        <reimplementedby refid="d9/dc1/a03194_1a178de58ab239a4c4836644b8accb586a">doGetMouseTargetableHandler</reimplementedby>
        <reimplementedby refid="dc/d69/a05614_1ab89c21bee6215a5320081449d2dfc0b0">doGetMouseTargetableHandler</reimplementedby>
        <param>
          <type>castor::Position const &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Retrieves the first handler which can be targeted by mouse. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>The mouse position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The handler, <computeroutput>nullptr</computeroutput> if none. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="579" column="26"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1ad47ff3d8f735dcf53e177e76d7cad86d" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool castor3d::UserInputListener::doInitialise</definition>
        <argsstring>()=0</argsstring>
        <name>doInitialise</name>
        <qualifiedname>castor3d::UserInputListener::doInitialise</qualifiedname>
        <reimplementedby refid="d9/dc1/a03194_1a660b2cfbae64148295542edf2004c810">doInitialise</reimplementedby>
        <reimplementedby refid="dc/d69/a05614_1abbbb75d95950160cd0440bc9ef3b7b71">doInitialise</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copydoc castor3d::UserInputListener::Initialise </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="583" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1ac28f2aef08706e57039f700830e1ecbe" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void castor3d::UserInputListener::doCleanup</definition>
        <argsstring>()=0</argsstring>
        <name>doCleanup</name>
        <qualifiedname>castor3d::UserInputListener::doCleanup</qualifiedname>
        <reimplementedby refid="d9/dc1/a03194_1ac142caee9537eff64d6c423f084b8261">doCleanup</reimplementedby>
        <reimplementedby refid="dc/d69/a05614_1a2f8b0433b4927cc103cdd9a1216fc8b7">doCleanup</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copydoc castor3d::UserInputListener::Cleanup </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="587" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1aab59e29357698ac565da93a02708df36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::UserInputListener::doUpdateCommandKeys</definition>
        <argsstring>(bool ctrl, bool alt, bool shift)</argsstring>
        <name>doUpdateCommandKeys</name>
        <qualifiedname>castor3d::UserInputListener::doUpdateCommandKeys</qualifiedname>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>brief Updates keyboard command keys </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="591" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>General</header>
      <memberdef kind="function" id="dc/d00/a03118_1a2e599855c97483e2a2bb2dfd920bcd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::UserInputListener::UserInputListener</definition>
        <argsstring>(Engine &amp;engine, castor::String const &amp;name)</argsstring>
        <name>UserInputListener</name>
        <qualifiedname>castor3d::UserInputListener::UserInputListener</qualifiedname>
        <param>
          <type><ref refid="d8/d23/a03038" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener&apos;s name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="38" column="9"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1ad3b5d5fdb26b3aa274f62e2d5265859f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>virtual C3D_API castor3d::UserInputListener::~UserInputListener</definition>
        <argsstring>()</argsstring>
        <name>~UserInputListener</name>
        <qualifiedname>castor3d::UserInputListener::~UserInputListener</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="46" column="17"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a2c91f11f8c5c099e6a1c4bff1f548dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::UserInputListener::initialise</definition>
        <argsstring>()</argsstring>
        <name>initialise</name>
        <qualifiedname>castor3d::UserInputListener::initialise</qualifiedname>
        <briefdescription>
<para>Initialises the listener. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true, hopefully :P. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="55" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1aa8ce17bc77eb834003cced1abea4e322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>castor3d::UserInputListener::cleanup</qualifiedname>
        <briefdescription>
<para>Cleans up the listener. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="62" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a379f777bd2ac75e703449c874388f46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::processEvents</definition>
        <argsstring>()</argsstring>
        <name>processEvents</name>
        <qualifiedname>castor3d::UserInputListener::processEvents</qualifiedname>
        <briefdescription>
<para>Processes all queued events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="69" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters</header>
      <memberdef kind="function" id="dc/d00/a03118_1ab0a77767ad1a4a323264c7896a80eaf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Position const &amp;</type>
        <definition>castor::Position const  &amp; castor3d::UserInputListener::getMousePosition</definition>
        <argsstring>() const</argsstring>
        <name>getMousePosition</name>
        <qualifiedname>castor3d::UserInputListener::getMousePosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="75" column="25" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="75" bodyend="78"/>
        <references refid="db/dbc/a03114_1adbdf5d0b354c06a50c13d2d4528828ef" compoundref="d0/d61/a00302" startline="326">castor3d::MouseState::position</references>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a96d690e3dec41ea6fd10e70a21b75035" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EventHandlerRPtr</type>
        <definition>EventHandlerRPtr castor3d::UserInputListener::getActiveControl</definition>
        <argsstring>() const</argsstring>
        <name>getActiveControl</name>
        <qualifiedname>castor3d::UserInputListener::getActiveControl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="80" column="25" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a15ba485c4269abb41f0be20f7e309aa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EventHandlerRPtr</type>
        <definition>EventHandlerRPtr castor3d::UserInputListener::getFocusedControl</definition>
        <argsstring>() const</argsstring>
        <name>getFocusedControl</name>
        <qualifiedname>castor3d::UserInputListener::getFocusedControl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="85" column="25" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a4517c0ab3bb1374636ff75229f632fe8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/df4/a03070" kindref="compound">FrameListener</ref> &amp;</type>
        <definition>FrameListener &amp; castor3d::UserInputListener::getFrameListener</definition>
        <argsstring>() const</argsstring>
        <name>getFrameListener</name>
        <qualifiedname>castor3d::UserInputListener::getFrameListener</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="90" column="23" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="90" bodyend="93"/>
        <references refid="dc/d00/a03118_1a364f3a6fa9ccb20ed3a5ae2bba260ee1" compoundref="d3/d07/a00305" startline="604">m_frameListener</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Output events</header>
      <memberdef kind="function" id="dc/d00/a03118_1a3d8e41ec70a24b238be398712012e036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::registerMouseMoveAction</definition>
        <argsstring>(castor::String const &amp;handler, OnMouseMoveActionFunction function)</argsstring>
        <name>registerMouseMoveAction</name>
        <qualifiedname>castor3d::UserInputListener::registerMouseMoveAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="dc/d00/a03118_1a52d763b318a9f016a4d88c53d83f62d0" kindref="member">OnMouseMoveActionFunction</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers a function to call when a mouse move event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="109" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1adbbdf0b7d4e151079b73152f007416f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::registerClickAction</definition>
        <argsstring>(castor::String const &amp;handler, OnClickActionFunction function)</argsstring>
        <name>registerClickAction</name>
        <qualifiedname>castor3d::UserInputListener::registerClickAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="dc/d00/a03118_1a7c733341f9ef3967065ab8feb49d8e00" kindref="member">OnClickActionFunction</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers a function to call when a mouse click event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The clicked handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="121" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a7eef9892848ee17099bca6e3da6c22d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::registerSelectAction</definition>
        <argsstring>(castor::String const &amp;handler, OnSelectActionFunction function)</argsstring>
        <name>registerSelectAction</name>
        <qualifiedname>castor3d::UserInputListener::registerSelectAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="dc/d00/a03118_1ad5d9e022473b5d9b3d6a5927c35e5f51" kindref="member">OnSelectActionFunction</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers a function to call when a select event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="133" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a89b3c690479c7ecfd64cbaf0a08af8f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::registerTextAction</definition>
        <argsstring>(castor::String const &amp;handler, OnTextActionFunction function)</argsstring>
        <name>registerTextAction</name>
        <qualifiedname>castor3d::UserInputListener::registerTextAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="dc/d00/a03118_1a603a568faab9e604566b42249f8b4cb6" kindref="member">OnTextActionFunction</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers a function to call when a text event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="145" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a8a3c651b8da1b7d9cd94ea3bd83e705e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::registerExpandAction</definition>
        <argsstring>(castor::String const &amp;handler, OnExpandActionFunction function)</argsstring>
        <name>registerExpandAction</name>
        <qualifiedname>castor3d::UserInputListener::registerExpandAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="dc/d00/a03118_1a016a04d3a50f721fc47d8feee7d96d2f" kindref="member">OnExpandActionFunction</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers a function to call when an expand event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="157" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a885df18c3a9be1cac219f00981953188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::registerCursorAction</definition>
        <argsstring>(OnCursorActionFunction function)</argsstring>
        <name>registerCursorAction</name>
        <qualifiedname>castor3d::UserInputListener::registerCursorAction</qualifiedname>
        <param>
          <type><ref refid="dc/d00/a03118_1aa6c5ca6b4ea3a9b877f21a5c4df4f08a" kindref="member">OnCursorActionFunction</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers a function to call when a mouse cursor event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="167" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a9264f508484cbfaed4a286550a8064d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::registerClipboardTextAction</definition>
        <argsstring>(OnClipboardTextActionFunction function)</argsstring>
        <name>registerClipboardTextAction</name>
        <qualifiedname>castor3d::UserInputListener::registerClipboardTextAction</qualifiedname>
        <param>
          <type><ref refid="dc/d00/a03118_1a1da389502c3b04aef66b2a510b97b085" kindref="member">OnClipboardTextActionFunction</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers a function to call when a clipboard event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="176" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1ae5529141ea9f1ab6c7966572a7aa3de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::unregisterMouseMoveAction</definition>
        <argsstring>(castor::String const &amp;handler)</argsstring>
        <name>unregisterMouseMoveAction</name>
        <qualifiedname>castor3d::UserInputListener::unregisterMouseMoveAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Unregisters ths function to call when a mouse move event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="185" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a99ba659903d1199e03b8e8323c1381dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::unregisterClickAction</definition>
        <argsstring>(castor::String const &amp;handler)</argsstring>
        <name>unregisterClickAction</name>
        <qualifiedname>castor3d::UserInputListener::unregisterClickAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Unregisters ths function to call when a mouse click event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The clicked handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="194" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a827e0cee29d7653f69a5e55e572f7cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::unregisterSelectAction</definition>
        <argsstring>(castor::String const &amp;handler)</argsstring>
        <name>unregisterSelectAction</name>
        <qualifiedname>castor3d::UserInputListener::unregisterSelectAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Unregisters ths function to call when a select event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="203" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a30252abfab5f2d0de99b28c030a4c029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::unregisterTextAction</definition>
        <argsstring>(castor::String const &amp;handler)</argsstring>
        <name>unregisterTextAction</name>
        <qualifiedname>castor3d::UserInputListener::unregisterTextAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Unregisters ths function to call when a text event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="212" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1ab27f78782b6b0ec5e8de3902669856fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::unregisterExpandAction</definition>
        <argsstring>(castor::String const &amp;handler)</argsstring>
        <name>unregisterExpandAction</name>
        <qualifiedname>castor3d::UserInputListener::unregisterExpandAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Unregisters ths function to call when an expand event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="221" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a6243ebf57d360f6c57ab7932b040988d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::unregisterCursorAction</definition>
        <argsstring>()</argsstring>
        <name>unregisterCursorAction</name>
        <qualifiedname>castor3d::UserInputListener::unregisterCursorAction</qualifiedname>
        <briefdescription>
<para>Unregisters the function to call when mouse cursor event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="228" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1af50b76860cfd9dacf7e24046c9c31b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::unregisterClipboardTextAction</definition>
        <argsstring>()</argsstring>
        <name>unregisterClipboardTextAction</name>
        <qualifiedname>castor3d::UserInputListener::unregisterClipboardTextAction</qualifiedname>
        <briefdescription>
<para>Unregisters the function to call when a clipboard event is raised by the given handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="235" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a4372079d1bd9816786165c66becd5ab2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::onMouseMoveAction</definition>
        <argsstring>(castor::String const &amp;handler) const</argsstring>
        <name>onMouseMoveAction</name>
        <qualifiedname>castor3d::UserInputListener::onMouseMoveAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Event raised by the handler when the mouse is moved over it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="244" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a3a7d2d9c6c8dfa4b7bfa610243e74c0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::onClickAction</definition>
        <argsstring>(castor::String const &amp;handler) const</argsstring>
        <name>onClickAction</name>
        <qualifiedname>castor3d::UserInputListener::onClickAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Event raised by the handler when it is clicked, if it supports clicking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The clicked handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="253" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a09164a9f7143e23a6a7cd580f6578516" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::onSelectAction</definition>
        <argsstring>(castor::String const &amp;handler, int index) const</argsstring>
        <name>onSelectAction</name>
        <qualifiedname>castor3d::UserInputListener::onSelectAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Event raised by the handler when one of its sub elements is selected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The selection index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="264" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a5fec21a23ecbbbb721740438a181aa62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::onTextAction</definition>
        <argsstring>(castor::String const &amp;handler, castor::U32String const &amp;text) const</argsstring>
        <name>onTextAction</name>
        <qualifiedname>castor3d::UserInputListener::onTextAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>castor::U32String const &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Event raised by the handler when its caption has changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">text</parametername>
</parameternamelist>
<parameterdescription>
<para>The new text. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="276" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1ac9bbaa8d2126f78b2679cd8630e95607" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::onExpandAction</definition>
        <argsstring>(castor::String const &amp;handler, bool expand) const</argsstring>
        <name>onExpandAction</name>
        <qualifiedname>castor3d::UserInputListener::onExpandAction</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expand</declname>
        </param>
        <briefdescription>
<para>Event raised by the handler when its expansion has changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">expand</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="288" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a35859aa494eed7ebefc2ff8e84f398d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::onCursorAction</definition>
        <argsstring>(MouseCursor cursor) const</argsstring>
        <name>onCursorAction</name>
        <qualifiedname>castor3d::UserInputListener::onCursorAction</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1a69d555baf449470c341997e225df3551" kindref="member">MouseCursor</ref></type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
<para>Event raised when mouse cursor has changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>The cursor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="298" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a3c15cb48e133d7095ec46b1a8dac4b94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::U32String</type>
        <definition>C3D_API castor::U32String castor3d::UserInputListener::onClipboardTextAction</definition>
        <argsstring>(bool set, castor::U32String text) const</argsstring>
        <name>onClipboardTextAction</name>
        <qualifiedname>castor3d::UserInputListener::onClipboardTextAction</qualifiedname>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <param>
          <type>castor::U32String</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Event raised interaction with the clipboard is needed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to define the clipboard text, <computeroutput>false</computeroutput> to retrieve it. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">text</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set the clipboard text to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The clipboard text. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="311" column="27"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a338f678848be9b6c5fc98fee4b1b3e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::enableHandler</definition>
        <argsstring>(castor::String const &amp;handler)</argsstring>
        <name>enableHandler</name>
        <qualifiedname>castor3d::UserInputListener::enableHandler</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Enables handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="321" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1aa12ab8a7cc0fbf101eec5895b35cd7ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::UserInputListener::disableHandler</definition>
        <argsstring>(castor::String const &amp;handler)</argsstring>
        <name>disableHandler</name>
        <qualifiedname>castor3d::UserInputListener::disableHandler</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Disables handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="330" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Mouse input events</header>
      <memberdef kind="function" id="dc/d00/a03118_1a0761a28f7d5bb9822aabc89de5d43497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::UserInputListener::fireMouseMove</definition>
        <argsstring>(castor::Position const &amp;position, bool ctrl, bool alt, bool shift)</argsstring>
        <name>fireMouseMove</name>
        <qualifiedname>castor3d::UserInputListener::fireMouseMove</qualifiedname>
        <param>
          <type>castor::Position const &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Fires a mouse move event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>The mouse position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Ctrl key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alt</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Alt key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Shift key is down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is processed by a handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="352" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1a7732c49b0745f38521852e237cbf4155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::UserInputListener::fireMouseButtonPushed</definition>
        <argsstring>(MouseButton button, bool ctrl, bool alt, bool shift)</argsstring>
        <name>fireMouseButtonPushed</name>
        <qualifiedname>castor3d::UserInputListener::fireMouseButtonPushed</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1a087f824502cd45431879fc5c96607682" kindref="member">MouseButton</ref></type>
          <declname>button</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Fires a mouse pushed event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">button</parametername>
</parameternamelist>
<parameterdescription>
<para>The mouse button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Ctrl key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alt</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Alt key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Shift key is down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is processed by a handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="372" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1abee1d2ddc56119a2612bf9de71eeba61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::UserInputListener::fireMouseButtonReleased</definition>
        <argsstring>(MouseButton button, bool ctrl, bool alt, bool shift)</argsstring>
        <name>fireMouseButtonReleased</name>
        <qualifiedname>castor3d::UserInputListener::fireMouseButtonReleased</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1a087f824502cd45431879fc5c96607682" kindref="member">MouseButton</ref></type>
          <declname>button</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Fires a mouse released event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">button</parametername>
</parameternamelist>
<parameterdescription>
<para>The mouse button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Ctrl key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alt</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Alt key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Shift key is down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is processed by a handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="392" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d00/a03118_1aa41f03b2578fd37f5aeb65b9d0d2708f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::UserInputListener::fireMouseWheel</definition>
        <argsstring>(castor::Position const &amp;offsets, bool ctrl, bool alt, bool shift)</argsstring>
        <name>fireMouseWheel</name>
        <qualifiedname>castor3d::UserInputListener::fireMouseWheel</qualifiedname>
        <param>
          <type>castor::Position const &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Fires a mouse wheel event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">offsets</parametername>
</parameternamelist>
<parameterdescription>
<para>The mouse wheel offsets (x and y). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Ctrl key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alt</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Alt key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Shift key is down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is processed by a handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="412" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dc/d00/a03118_1a7c733341f9ef3967065ab8feb49d8e00" prot="public" static="no">
        <type>std::function&lt; void() &gt;</type>
        <definition>using castor3d::UserInputListener::OnClickActionFunction =  std::function&lt; void() &gt;</definition>
        <argsstring></argsstring>
        <name>OnClickActionFunction</name>
        <qualifiedname>castor3d::UserInputListener::OnClickActionFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="16" column="1" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d00/a03118_1a52d763b318a9f016a4d88c53d83f62d0" prot="public" static="no">
        <type>std::function&lt; void(castor::Position const &amp;) &gt;</type>
        <definition>using castor3d::UserInputListener::OnMouseMoveActionFunction =  std::function&lt; void( castor::Position const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnMouseMoveActionFunction</name>
        <qualifiedname>castor3d::UserInputListener::OnMouseMoveActionFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="17" column="1" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d00/a03118_1ad5d9e022473b5d9b3d6a5927c35e5f51" prot="public" static="no">
        <type>std::function&lt; void(int) &gt;</type>
        <definition>using castor3d::UserInputListener::OnSelectActionFunction =  std::function&lt; void( int ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnSelectActionFunction</name>
        <qualifiedname>castor3d::UserInputListener::OnSelectActionFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="18" column="1" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d00/a03118_1a603a568faab9e604566b42249f8b4cb6" prot="public" static="no">
        <type>std::function&lt; void(castor::U32String const &amp;) &gt;</type>
        <definition>using castor3d::UserInputListener::OnTextActionFunction =  std::function&lt; void( castor::U32String const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnTextActionFunction</name>
        <qualifiedname>castor3d::UserInputListener::OnTextActionFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="19" column="1" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d00/a03118_1a016a04d3a50f721fc47d8feee7d96d2f" prot="public" static="no">
        <type>std::function&lt; void(bool) &gt;</type>
        <definition>using castor3d::UserInputListener::OnExpandActionFunction =  std::function&lt; void( bool ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnExpandActionFunction</name>
        <qualifiedname>castor3d::UserInputListener::OnExpandActionFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="20" column="1" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d00/a03118_1a1da389502c3b04aef66b2a510b97b085" prot="public" static="no">
        <type>std::function&lt; castor::U32String(bool, castor::U32String) &gt;</type>
        <definition>using castor3d::UserInputListener::OnClipboardTextActionFunction =  std::function&lt; castor::U32String( bool, castor::U32String ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnClipboardTextActionFunction</name>
        <qualifiedname>castor3d::UserInputListener::OnClipboardTextActionFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="21" column="1" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d00/a03118_1aa6c5ca6b4ea3a9b877f21a5c4df4f08a" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d5/da6/a01698_1a69d555baf449470c341997e225df3551" kindref="member">MouseCursor</ref>) &gt;</type>
        <definition>using castor3d::UserInputListener::OnCursorActionFunction =  std::function&lt; void( MouseCursor ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnCursorActionFunction</name>
        <qualifiedname>castor3d::UserInputListener::OnCursorActionFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputListener.hpp" line="22" column="1" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>castor3d::ControlsManager</label>
        <link refid="d9/dc1/a03194"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::RenderWindow::InputListener</label>
        <link refid="dc/d69/a05614"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::UserInputListener</label>
        <link refid="dc/d00/a03118"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>T</label>
      </node>
      <node id="1">
        <label>castor3d::UserInputListener</label>
        <link refid="dc/d00/a03118"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_mutexHandlers</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_handlers</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="3">
        <label>std::mutex</label>
      </node>
      <node id="5">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; EventHandlerUPtr &gt;</label>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; EventHandlerUPtr &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Event/UserInput/UserInputListener.hpp" line="12" column="1" bodyfile="Event/UserInput/UserInputListener.hpp" bodystart="14" bodyend="619"/>
    <listofallmembers>
      <member refid="dc/d00/a03118_1aa8ce17bc77eb834003cced1abea4e322" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>cleanup</name></member>
      <member refid="dc/d00/a03118_1aa12ab8a7cc0fbf101eec5895b35cd7ef" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>disableHandler</name></member>
      <member refid="dc/d00/a03118_1afcc4620692918ecabebe183a086df13e" prot="protected" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>doAddHandler</name></member>
      <member refid="dc/d00/a03118_1ac28f2aef08706e57039f700830e1ecbe" prot="private" virt="pure-virtual"><scope>castor3d::UserInputListener</scope><name>doCleanup</name></member>
      <member refid="dc/d00/a03118_1ada87c6487d093b70df8bcbb3ba2df93b" prot="protected" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>doGetHandlers</name></member>
      <member refid="dc/d00/a03118_1a9e692a2ce162598cd0032696a3c1dea2" prot="private" virt="pure-virtual"><scope>castor3d::UserInputListener</scope><name>doGetMouseTargetableHandler</name></member>
      <member refid="dc/d00/a03118_1a3b2f2515b1c768ab6c5fa88b8ff0109d" prot="protected" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>doHasHandlers</name></member>
      <member refid="dc/d00/a03118_1ad47ff3d8f735dcf53e177e76d7cad86d" prot="private" virt="pure-virtual"><scope>castor3d::UserInputListener</scope><name>doInitialise</name></member>
      <member refid="dc/d00/a03118_1aa60cd82b80e2e3ad1251efe5a4714645" prot="protected" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>doRemoveHandler</name></member>
      <member refid="dc/d00/a03118_1a46e27a9771c43474cffca043d60b9fd9" prot="protected" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>doRemoveHandlerNL</name></member>
      <member refid="dc/d00/a03118_1aab59e29357698ac565da93a02708df36" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>doUpdateCommandKeys</name></member>
      <member refid="dc/d00/a03118_1a338f678848be9b6c5fc98fee4b1b3e56" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>enableHandler</name></member>
      <member refid="dc/d00/a03118_1a679c1de2c60f8d2ecda306283a58844e" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>fireChar</name></member>
      <member refid="dc/d00/a03118_1a89850c36d4d11cce55f6fda961889f65" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>fireKeydown</name></member>
      <member refid="dc/d00/a03118_1a5134c0c3c4ec8f16a38f3688e51b56f5" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>fireKeyUp</name></member>
      <member refid="dc/d00/a03118_1a7732c49b0745f38521852e237cbf4155" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>fireMouseButtonPushed</name></member>
      <member refid="dc/d00/a03118_1abee1d2ddc56119a2612bf9de71eeba61" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>fireMouseButtonReleased</name></member>
      <member refid="dc/d00/a03118_1a0761a28f7d5bb9822aabc89de5d43497" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>fireMouseMove</name></member>
      <member refid="dc/d00/a03118_1aa41f03b2578fd37f5aeb65b9d0d2708f" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>fireMouseWheel</name></member>
      <member refid="dc/d00/a03118_1a96d690e3dec41ea6fd10e70a21b75035" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>getActiveControl</name></member>
      <member refid="dc/d00/a03118_1a15ba485c4269abb41f0be20f7e309aa9" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>getFocusedControl</name></member>
      <member refid="dc/d00/a03118_1a4517c0ab3bb1374636ff75229f632fe8" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>getFrameListener</name></member>
      <member refid="dc/d00/a03118_1ab0a77767ad1a4a323264c7896a80eaf6" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>getMousePosition</name></member>
      <member refid="dc/d00/a03118_1a2c91f11f8c5c099e6a1c4bff1f548dfa" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>initialise</name></member>
      <member refid="dc/d00/a03118_1a7f5b39c982f299cb687d092e582fd340" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_activeHandler</name></member>
      <member refid="dc/d00/a03118_1a8aae7fabed5b23aafd0a6ac090dab9a8" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_enabled</name></member>
      <member refid="dc/d00/a03118_1a364f3a6fa9ccb20ed3a5ae2bba260ee1" prot="protected" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_frameListener</name></member>
      <member refid="dc/d00/a03118_1a710c63a9ac5b77ef8d692ae11e3dab79" prot="protected" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_handlers</name></member>
      <member refid="dc/d00/a03118_1a7ade36a32fa7227bab796782e08f9b4b" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_keyboard</name></member>
      <member refid="dc/d00/a03118_1a25b03059db000b0ef8fca0c5cd3740b2" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_lastMouseTarget</name></member>
      <member refid="dc/d00/a03118_1a2214124379a932a9770d357cad0ac8ba" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_mouse</name></member>
      <member refid="dc/d00/a03118_1a53ff879a2f749355cbd0cdd9ab96a351" prot="protected" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_mutexHandlers</name></member>
      <member refid="dc/d00/a03118_1a0c3894373d3934d477f9a10202879e50" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_onClickActions</name></member>
      <member refid="dc/d00/a03118_1a2aba09ee16df1ff24eb8cd47a4d54bb7" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_onClipboardTextAction</name></member>
      <member refid="dc/d00/a03118_1ad3eb6361f00a07a2af7366973b3584a4" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_onCursorAction</name></member>
      <member refid="dc/d00/a03118_1a9ba885d531332494fe791a5e0f838dbd" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_onExpandActions</name></member>
      <member refid="dc/d00/a03118_1a920a8a17570f84e438384b5915f0fea0" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_onMouseMoveActions</name></member>
      <member refid="dc/d00/a03118_1a027699525f1b45e5512e26d6fceb8fb8" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_onSelectActions</name></member>
      <member refid="dc/d00/a03118_1a13dff1a4e33066338bee09b3abcd410c" prot="private" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>m_onTextActions</name></member>
      <member refid="dc/d00/a03118_1a3a7d2d9c6c8dfa4b7bfa610243e74c0b" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>onClickAction</name></member>
      <member refid="dc/d00/a03118_1a7c733341f9ef3967065ab8feb49d8e00" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>OnClickActionFunction</name></member>
      <member refid="dc/d00/a03118_1a3c15cb48e133d7095ec46b1a8dac4b94" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>onClipboardTextAction</name></member>
      <member refid="dc/d00/a03118_1a1da389502c3b04aef66b2a510b97b085" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>OnClipboardTextActionFunction</name></member>
      <member refid="dc/d00/a03118_1a35859aa494eed7ebefc2ff8e84f398d7" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>onCursorAction</name></member>
      <member refid="dc/d00/a03118_1aa6c5ca6b4ea3a9b877f21a5c4df4f08a" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>OnCursorActionFunction</name></member>
      <member refid="dc/d00/a03118_1ac9bbaa8d2126f78b2679cd8630e95607" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>onExpandAction</name></member>
      <member refid="dc/d00/a03118_1a016a04d3a50f721fc47d8feee7d96d2f" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>OnExpandActionFunction</name></member>
      <member refid="dc/d00/a03118_1a4372079d1bd9816786165c66becd5ab2" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>onMouseMoveAction</name></member>
      <member refid="dc/d00/a03118_1a52d763b318a9f016a4d88c53d83f62d0" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>OnMouseMoveActionFunction</name></member>
      <member refid="dc/d00/a03118_1a09164a9f7143e23a6a7cd580f6578516" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>onSelectAction</name></member>
      <member refid="dc/d00/a03118_1ad5d9e022473b5d9b3d6a5927c35e5f51" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>OnSelectActionFunction</name></member>
      <member refid="dc/d00/a03118_1a5fec21a23ecbbbb721740438a181aa62" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>onTextAction</name></member>
      <member refid="dc/d00/a03118_1a603a568faab9e604566b42249f8b4cb6" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>OnTextActionFunction</name></member>
      <member refid="dc/d00/a03118_1a379f777bd2ac75e703449c874388f46e" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>processEvents</name></member>
      <member refid="dc/d00/a03118_1adbbdf0b7d4e151079b73152f007416f2" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>registerClickAction</name></member>
      <member refid="dc/d00/a03118_1a9264f508484cbfaed4a286550a8064d1" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>registerClipboardTextAction</name></member>
      <member refid="dc/d00/a03118_1a885df18c3a9be1cac219f00981953188" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>registerCursorAction</name></member>
      <member refid="dc/d00/a03118_1a8a3c651b8da1b7d9cd94ea3bd83e705e" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>registerExpandAction</name></member>
      <member refid="dc/d00/a03118_1a3d8e41ec70a24b238be398712012e036" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>registerMouseMoveAction</name></member>
      <member refid="dc/d00/a03118_1a7eef9892848ee17099bca6e3da6c22d5" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>registerSelectAction</name></member>
      <member refid="dc/d00/a03118_1a89b3c690479c7ecfd64cbaf0a08af8f0" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>registerTextAction</name></member>
      <member refid="dc/d00/a03118_1a99ba659903d1199e03b8e8323c1381dc" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>unregisterClickAction</name></member>
      <member refid="dc/d00/a03118_1af50b76860cfd9dacf7e24046c9c31b98" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>unregisterClipboardTextAction</name></member>
      <member refid="dc/d00/a03118_1a6243ebf57d360f6c57ab7932b040988d" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>unregisterCursorAction</name></member>
      <member refid="dc/d00/a03118_1ab27f78782b6b0ec5e8de3902669856fb" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>unregisterExpandAction</name></member>
      <member refid="dc/d00/a03118_1ae5529141ea9f1ab6c7966572a7aa3de5" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>unregisterMouseMoveAction</name></member>
      <member refid="dc/d00/a03118_1a827e0cee29d7653f69a5e55e572f7cb6" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>unregisterSelectAction</name></member>
      <member refid="dc/d00/a03118_1a30252abfab5f2d0de99b28c030a4c029" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>unregisterTextAction</name></member>
      <member refid="dc/d00/a03118_1a2e599855c97483e2a2bb2dfd920bcd38" prot="public" virt="non-virtual"><scope>castor3d::UserInputListener</scope><name>UserInputListener</name></member>
      <member refid="dc/d00/a03118_1ad3b5d5fdb26b3aa274f62e2d5265859f" prot="public" virt="virtual"><scope>castor3d::UserInputListener</scope><name>~UserInputListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
