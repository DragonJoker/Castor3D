<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="dc/d66/a05014" kind="struct" language="C++" prot="public">
    <compoundname>castor3d::QueueRenderNodes</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; RenderQueue const &gt;</basecompoundref>
    <includes local="no">QueueRenderNodes.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dc/d66/a05014_1a78136fd608aa079391a5b7dd5a795051" prot="public" static="no">
        <type>std::unordered_map&lt; size_t, <ref refid="dc/df9/a05542" kindref="compound">RenderPipeline</ref> * &gt;</type>
        <definition>using castor3d::QueueRenderNodes::PipelineMap =  std::unordered_map&lt; size_t, RenderPipeline * &gt;</definition>
        <argsstring></argsstring>
        <name>PipelineMap</name>
        <qualifiedname>castor3d::QueueRenderNodes::PipelineMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="24" column="1" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="dc/d66/a05014_1a132da60410d0138b6cc3ff60850e80bd" prot="private" static="no">
        <type>ashes::BufferPtr&lt; VkDrawIndexedIndirectCommand &gt;</type>
        <definition>using castor3d::QueueRenderNodes::IndexedDrawCommandsBuffer =  ashes::BufferPtr&lt; VkDrawIndexedIndirectCommand &gt;</definition>
        <argsstring></argsstring>
        <name>IndexedDrawCommandsBuffer</name>
        <qualifiedname>castor3d::QueueRenderNodes::IndexedDrawCommandsBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="107" column="1" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d66/a05014_1a6d67b565a059bcdf15d6ad434c4036f0" prot="private" static="no">
        <type>ashes::BufferPtr&lt; VkDrawIndirectCommand &gt;</type>
        <definition>using castor3d::QueueRenderNodes::DrawCommandsBuffer =  ashes::BufferPtr&lt; VkDrawIndirectCommand &gt;</definition>
        <argsstring></argsstring>
        <name>DrawCommandsBuffer</name>
        <qualifiedname>castor3d::QueueRenderNodes::DrawCommandsBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="110" column="1" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d66/a05014_1a344c1e1a915175ccd959aabdf1475ac2" prot="private" static="no">
        <type>ashes::BufferPtr&lt; <ref refid="d5/da6/a01698_1a01e432521d318761ffe05a4ef06bd0ae" kindref="member">PipelineNodes</ref> &gt;</type>
        <definition>using castor3d::QueueRenderNodes::PipelineNodesBuffer =  ashes::BufferPtr&lt; PipelineNodes &gt;</definition>
        <argsstring></argsstring>
        <name>PipelineNodesBuffer</name>
        <qualifiedname>castor3d::QueueRenderNodes::PipelineNodesBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="114" column="1" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/d66/a05014_1a246929acc3e417ff0acf25e6cf2971d4" prot="private" static="no" mutable="no">
        <type><ref refid="d5/da6/a01698_1a63ac601b53fff3623700ae06bbe7e573" kindref="member">PipelineBufferArray</ref></type>
        <definition>PipelineBufferArray castor3d::QueueRenderNodes::m_nodesIds</definition>
        <argsstring></argsstring>
        <name>m_nodesIds</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_nodesIds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="99" column="21" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1a0aae03ac13c2d3f2fe03ad13dfc24ff6" prot="private" static="no" mutable="no">
        <type>std::map&lt; uint32_t, uint32_t &gt;</type>
        <definition>std::map&lt; uint32_t, uint32_t &gt; castor3d::QueueRenderNodes::m_nodesPipelinesIds</definition>
        <argsstring></argsstring>
        <name>m_nodesPipelinesIds</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_nodesPipelinesIds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="100" column="10" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1a2e7e7197a2bc7ad8017976323188b806" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::QueueRenderNodes::m_hasNodes</definition>
        <argsstring></argsstring>
        <name>m_hasNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_hasNodes</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="101" column="6" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1ad6ae815678a76c48839cd15eee5569e6" prot="private" static="no" mutable="no">
        <type>IndexedDrawCommandsBuffer</type>
        <definition>IndexedDrawCommandsBuffer castor3d::QueueRenderNodes::m_submeshIdxIndirectCommands</definition>
        <argsstring></argsstring>
        <name>m_submeshIdxIndirectCommands</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_submeshIdxIndirectCommands</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="108" column="27" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1a8cf27043130ec274c2b59b49bc6741c0" prot="private" static="no" mutable="no">
        <type>DrawCommandsBuffer</type>
        <definition>DrawCommandsBuffer castor3d::QueueRenderNodes::m_submeshNIdxIndirectCommands</definition>
        <argsstring></argsstring>
        <name>m_submeshNIdxIndirectCommands</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_submeshNIdxIndirectCommands</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="111" column="20" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1afb5c686af280a6fdff021538926d04dc" prot="private" static="no" mutable="no">
        <type>DrawCommandsBuffer</type>
        <definition>DrawCommandsBuffer castor3d::QueueRenderNodes::m_billboardIndirectCommands</definition>
        <argsstring></argsstring>
        <name>m_billboardIndirectCommands</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_billboardIndirectCommands</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="112" column="20" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1a37e9fccd4b01207e87d4949aa5156055" prot="private" static="no" mutable="no">
        <type>PipelineNodesBuffer</type>
        <definition>PipelineNodesBuffer castor3d::QueueRenderNodes::m_pipelinesNodes</definition>
        <argsstring></argsstring>
        <name>m_pipelinesNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_pipelinesNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="115" column="21" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1a7e0cc3f9bc310548b42112c2077e6a34" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d66/a05014_1a78136fd608aa079391a5b7dd5a795051" kindref="member">PipelineMap</ref></type>
        <definition>PipelineMap castor3d::QueueRenderNodes::m_pipelines</definition>
        <argsstring></argsstring>
        <name>m_pipelines</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_pipelines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="117" column="13" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1a39c1c417c2f0c21942b38c4668586e2d" prot="private" static="no" mutable="no">
        <type><ref refid="d5/da6/a01698_1a342501a39c6f54fa7cb17a82f799d2f3" kindref="member">NodePtrByPipelineMapT</ref>&lt; <ref refid="d5/dbd/a05038" kindref="compound">SubmeshRenderNode</ref> &gt;</type>
        <definition>NodePtrByPipelineMapT&lt; SubmeshRenderNode &gt; castor3d::QueueRenderNodes::m_submeshNodes</definition>
        <argsstring></argsstring>
        <name>m_submeshNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_submeshNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The submesh render nodes, sorted by shader program. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="121" column="23" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1a30400a2c21c71c6346c033a6b75c6bcd" prot="private" static="no" mutable="no">
        <type><ref refid="d5/da6/a01698_1ab6d9a52c94f7b4504b5d5120dd2063f6" kindref="member">ObjectNodesPtrByPipelineMapT</ref>&lt; <ref refid="d5/dbd/a05038" kindref="compound">SubmeshRenderNode</ref> &gt;</type>
        <definition>ObjectNodesPtrByPipelineMapT&lt; SubmeshRenderNode &gt; castor3d::QueueRenderNodes::m_instancedSubmeshNodes</definition>
        <argsstring></argsstring>
        <name>m_instancedSubmeshNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_instancedSubmeshNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The submesh render nodes, sorted by shader program. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="124" column="30" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d66/a05014_1a82030f1d534e2b0949662b1d2ec0150b" prot="private" static="no" mutable="no">
        <type><ref refid="d5/da6/a01698_1a342501a39c6f54fa7cb17a82f799d2f3" kindref="member">NodePtrByPipelineMapT</ref>&lt; <ref refid="d8/d79/a05010" kindref="compound">BillboardRenderNode</ref> &gt;</type>
        <definition>NodePtrByPipelineMapT&lt; BillboardRenderNode &gt; castor3d::QueueRenderNodes::m_billboardNodes</definition>
        <argsstring></argsstring>
        <name>m_billboardNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::m_billboardNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The billboards render nodes, sorted by shader program. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="127" column="23" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d66/a05014_1a8495748f04df8118dd572e25bcb8807d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::QueueRenderNodes::QueueRenderNodes</definition>
        <argsstring>(RenderQueue const &amp;queue)</argsstring>
        <name>QueueRenderNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::QueueRenderNodes</qualifiedname>
        <param>
          <type><ref refid="d1/d22/a05546" kindref="compound">RenderQueue</ref> const &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="27" column="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1aee9d702ae9297011135703d5fce604b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::QueueRenderNodes::initialise</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>initialise</name>
        <qualifiedname>castor3d::QueueRenderNodes::initialise</qualifiedname>
        <param>
          <type><ref refid="d4/de8/a05430" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="29" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a1bf6148cd7a3e254cd7cd4de69d43657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::QueueRenderNodes::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>castor3d::QueueRenderNodes::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="30" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1ac3a4be3b18b31b0ced6f7be35a928261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::QueueRenderNodes::checkEmpty</definition>
        <argsstring>()</argsstring>
        <name>checkEmpty</name>
        <qualifiedname>castor3d::QueueRenderNodes::checkEmpty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="31" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a8be87cf5ba88264d7fb8fe8956a09c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::QueueRenderNodes::sortNodes</definition>
        <argsstring>(ShadowMapLightTypeArray &amp;shadowMaps)</argsstring>
        <name>sortNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::sortNodes</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="32" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a2a04c09e69617c652fce185ddf47009f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::QueueRenderNodes::fillIndirectBuffers</definition>
        <argsstring>()</argsstring>
        <name>fillIndirectBuffers</name>
        <qualifiedname>castor3d::QueueRenderNodes::fillIndirectBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="33" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a80bfb891f6da527dea77ab2966d19489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::QueueRenderNodes::prepareCommandBuffers</definition>
        <argsstring>(ashes::Optional&lt; VkViewport &gt; const &amp;viewport, ashes::Optional&lt; VkRect2D &gt; const &amp;scissors)</argsstring>
        <name>prepareCommandBuffers</name>
        <qualifiedname>castor3d::QueueRenderNodes::prepareCommandBuffers</qualifiedname>
        <param>
          <type>ashes::Optional&lt; VkViewport &gt; const &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>ashes::Optional&lt; VkRect2D &gt; const &amp;</type>
          <declname>scissors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="34" column="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1ad219f1d0576c2f1bcc07ccce94b38140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/dbd/a05038" kindref="compound">SubmeshRenderNode</ref> &amp;</type>
        <definition>C3D_API SubmeshRenderNode &amp; castor3d::QueueRenderNodes::createNode</definition>
        <argsstring>(Pass &amp;pass, Submesh &amp;data, Geometry &amp;instance, AnimatedMesh *mesh, AnimatedSkeleton *skeleton)</argsstring>
        <name>createNode</name>
        <qualifiedname>castor3d::QueueRenderNodes::createNode</qualifiedname>
        <param>
          <type><ref refid="dd/daf/a04050" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="dd/d22/a04662" kindref="compound">Submesh</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="da/d76/a05934" kindref="compound">Geometry</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="dd/dd9/a05802" kindref="compound">AnimatedMesh</ref> *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="dc/d03/a05818" kindref="compound">AnimatedSkeleton</ref> *</type>
          <declname>skeleton</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="37" column="28"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1ac5fe67ffa7736569f6be68aa94be9e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d8/d79/a05010" kindref="compound">BillboardRenderNode</ref> &amp;</type>
        <definition>C3D_API BillboardRenderNode &amp; castor3d::QueueRenderNodes::createNode</definition>
        <argsstring>(Pass &amp;pass, BillboardBase &amp;instance)</argsstring>
        <name>createNode</name>
        <qualifiedname>castor3d::QueueRenderNodes::createNode</qualifiedname>
        <param>
          <type><ref refid="dd/daf/a04050" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d5/d90/a05918" kindref="compound">BillboardBase</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="42" column="30"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a457d7c354c8a613047644f583e90b477" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::pair&lt; uint32_t, uint32_t &gt;</type>
        <definition>C3D_API std::pair&lt; uint32_t, uint32_t &gt; castor3d::QueueRenderNodes::fillPipelinesIds</definition>
        <argsstring>(castor::ArrayView&lt; uint32_t &gt; nodesPipelinesIds) const</argsstring>
        <name>fillPipelinesIds</name>
        <qualifiedname>castor3d::QueueRenderNodes::fillPipelinesIds</qualifiedname>
        <param>
          <type>castor::ArrayView&lt; uint32_t &gt;</type>
          <declname>nodesPipelinesIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="45" column="19"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a942dea8f4fc70f8831384263810aec2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::QueueRenderNodes::registerNodePipeline</definition>
        <argsstring>(uint32_t nodeId, uint32_t pipelineId)</argsstring>
        <name>registerNodePipeline</name>
        <qualifiedname>castor3d::QueueRenderNodes::registerNodePipeline</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>nodeId</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pipelineId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="46" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a3573c0f0198837601bc2194146e5d184" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/da6/a01698_1a63ac601b53fff3623700ae06bbe7e573" kindref="member">PipelineBufferArray</ref> const &amp;</type>
        <definition>C3D_API PipelineBufferArray const  &amp; castor3d::QueueRenderNodes::getPassPipelineNodes</definition>
        <argsstring>() const</argsstring>
        <name>getPassPipelineNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::getPassPipelineNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="48" column="36"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a2eabb6c5e95d22234cc5355b95afe520" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::QueueRenderNodes::getPipelineNodesIndex</definition>
        <argsstring>(PipelineBaseHash const &amp;hash, ashes::BufferBase const &amp;buffer) const</argsstring>
        <name>getPipelineNodesIndex</name>
        <qualifiedname>castor3d::QueueRenderNodes::getPipelineNodesIndex</qualifiedname>
        <param>
          <type><ref refid="db/d62/a05358" kindref="compound">PipelineBaseHash</ref> const &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>ashes::BufferBase const &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="49" column="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a418898f9c446f5ce551e423de4a78d77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::QueueRenderNodes::getPipelineNodesIndex</definition>
        <argsstring>(Submesh const &amp;submesh, Pass const &amp;pass, ashes::BufferBase const &amp;buffer, bool isFrontCulled) const</argsstring>
        <name>getPipelineNodesIndex</name>
        <qualifiedname>castor3d::QueueRenderNodes::getPipelineNodesIndex</qualifiedname>
        <param>
          <type><ref refid="dd/d22/a04662" kindref="compound">Submesh</ref> const &amp;</type>
          <declname>submesh</declname>
        </param>
        <param>
          <type><ref refid="dd/daf/a04050" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>ashes::BufferBase const &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFrontCulled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="51" column="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1ad6d297bcb9731bcb385571be81eb451e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::QueueRenderNodes::getPipelineNodesIndex</definition>
        <argsstring>(BillboardBase const &amp;billboard, Pass const &amp;pass, ashes::BufferBase const &amp;buffer, bool isFrontCulled) const</argsstring>
        <name>getPipelineNodesIndex</name>
        <qualifiedname>castor3d::QueueRenderNodes::getPipelineNodesIndex</qualifiedname>
        <param>
          <type><ref refid="d5/d90/a05918" kindref="compound">BillboardBase</ref> const &amp;</type>
          <declname>billboard</declname>
        </param>
        <param>
          <type><ref refid="dd/daf/a04050" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>ashes::BufferBase const &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFrontCulled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="55" column="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a7f4c4b2efa071c07bbd7fb025ae0358d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; castor3d::QueueRenderNodes::getNodesIds</definition>
        <argsstring>() const</argsstring>
        <name>getNodesIds</name>
        <qualifiedname>castor3d::QueueRenderNodes::getNodesIds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="60" column="7" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1af6a3a888e55d26ead918afa6f9792479" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; castor3d::QueueRenderNodes::getSubmeshNodes</definition>
        <argsstring>() const</argsstring>
        <name>getSubmeshNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::getSubmeshNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="65" column="7" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1acd75ca18b5fcadd1ed273dcf6e250097" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; castor3d::QueueRenderNodes::getInstancedSubmeshNodes</definition>
        <argsstring>() const</argsstring>
        <name>getInstancedSubmeshNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::getInstancedSubmeshNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="70" column="7" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1ad87a8431b2cbb0ac630dc6820599f715" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; castor3d::QueueRenderNodes::getBillboardNodes</definition>
        <argsstring>() const</argsstring>
        <name>getBillboardNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::getBillboardNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="75" column="7" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a6a12094b8e08fcc47e255577928fcc78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::QueueRenderNodes::hasCulledNodes</definition>
        <argsstring>() const</argsstring>
        <name>hasCulledNodes</name>
        <qualifiedname>castor3d::QueueRenderNodes::hasCulledNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="80" column="6" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="80" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="dc/d66/a05014_1a25ef4c1cefd4e980974d67fc7afc7db9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/df9/a05542" kindref="compound">RenderPipeline</ref> &amp;</type>
        <definition>RenderPipeline &amp; castor3d::QueueRenderNodes::doGetPipeline</definition>
        <argsstring>(SubmeshRenderNode const &amp;node, bool frontCulled)</argsstring>
        <name>doGetPipeline</name>
        <qualifiedname>castor3d::QueueRenderNodes::doGetPipeline</qualifiedname>
        <param>
          <type><ref refid="d5/dbd/a05038" kindref="compound">SubmeshRenderNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>frontCulled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="86" column="17"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a771c9f928c20412691d56d1a56c8f97c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/df9/a05542" kindref="compound">RenderPipeline</ref> &amp;</type>
        <definition>RenderPipeline &amp; castor3d::QueueRenderNodes::doGetPipeline</definition>
        <argsstring>(BillboardRenderNode const &amp;node)</argsstring>
        <name>doGetPipeline</name>
        <qualifiedname>castor3d::QueueRenderNodes::doGetPipeline</qualifiedname>
        <param>
          <type><ref refid="d8/d79/a05010" kindref="compound">BillboardRenderNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="88" column="17"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1aef8768cf956885e5e3ac8ec922e7cd39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::QueueRenderNodes::doAddSubmesh</definition>
        <argsstring>(ShadowMapLightTypeArray &amp;shadowMaps, SubmeshRenderNode const &amp;node, bool frontCulled)</argsstring>
        <name>doAddSubmesh</name>
        <qualifiedname>castor3d::QueueRenderNodes::doAddSubmesh</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d5/dbd/a05038" kindref="compound">SubmeshRenderNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>frontCulled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="89" column="6"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a6bfdee8e297580cad3776efa429e2f5d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::QueueRenderNodes::doAddInstancedSubmesh</definition>
        <argsstring>(ShadowMapLightTypeArray &amp;shadowMaps, SubmeshRenderNode const &amp;node, bool frontCulled)</argsstring>
        <name>doAddInstancedSubmesh</name>
        <qualifiedname>castor3d::QueueRenderNodes::doAddInstancedSubmesh</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d5/dbd/a05038" kindref="compound">SubmeshRenderNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>frontCulled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="92" column="6"/>
      </memberdef>
      <memberdef kind="function" id="dc/d66/a05014_1a29131c2732b8e813ebe5eb8c96d685e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::QueueRenderNodes::doAddBillboard</definition>
        <argsstring>(ShadowMapLightTypeArray &amp;shadowMaps, BillboardRenderNode const &amp;node)</argsstring>
        <name>doAddBillboard</name>
        <qualifiedname>castor3d::QueueRenderNodes::doAddBillboard</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d8/d79/a05010" kindref="compound">BillboardRenderNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/QueueRenderNodes.hpp" line="95" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::QueueRenderNodes</label>
        <link refid="dc/d66/a05014"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; RenderQueue const &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>castor3d::QueueRenderNodes</label>
        <link refid="dc/d66/a05014"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; RenderQueue const &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Render/Node/QueueRenderNodes.hpp" line="20" column="1" bodyfile="Render/Node/QueueRenderNodes.hpp" bodystart="22" bodyend="128"/>
    <listofallmembers>
      <member refid="dc/d66/a05014_1ac3a4be3b18b31b0ced6f7be35a928261" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>checkEmpty</name></member>
      <member refid="dc/d66/a05014_1a1bf6148cd7a3e254cd7cd4de69d43657" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>cleanup</name></member>
      <member refid="dc/d66/a05014_1ad219f1d0576c2f1bcc07ccce94b38140" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>createNode</name></member>
      <member refid="dc/d66/a05014_1ac5fe67ffa7736569f6be68aa94be9e8b" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>createNode</name></member>
      <member refid="dc/d66/a05014_1a29131c2732b8e813ebe5eb8c96d685e2" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>doAddBillboard</name></member>
      <member refid="dc/d66/a05014_1a6bfdee8e297580cad3776efa429e2f5d" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>doAddInstancedSubmesh</name></member>
      <member refid="dc/d66/a05014_1aef8768cf956885e5e3ac8ec922e7cd39" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>doAddSubmesh</name></member>
      <member refid="dc/d66/a05014_1a25ef4c1cefd4e980974d67fc7afc7db9" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>doGetPipeline</name></member>
      <member refid="dc/d66/a05014_1a771c9f928c20412691d56d1a56c8f97c" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>doGetPipeline</name></member>
      <member refid="dc/d66/a05014_1a6d67b565a059bcdf15d6ad434c4036f0" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>DrawCommandsBuffer</name></member>
      <member refid="dc/d66/a05014_1a2a04c09e69617c652fce185ddf47009f" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>fillIndirectBuffers</name></member>
      <member refid="dc/d66/a05014_1a457d7c354c8a613047644f583e90b477" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>fillPipelinesIds</name></member>
      <member refid="dc/d66/a05014_1ad87a8431b2cbb0ac630dc6820599f715" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>getBillboardNodes</name></member>
      <member refid="dc/d66/a05014_1acd75ca18b5fcadd1ed273dcf6e250097" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>getInstancedSubmeshNodes</name></member>
      <member refid="dc/d66/a05014_1a7f4c4b2efa071c07bbd7fb025ae0358d" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>getNodesIds</name></member>
      <member refid="dc/d66/a05014_1a3573c0f0198837601bc2194146e5d184" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>getPassPipelineNodes</name></member>
      <member refid="dc/d66/a05014_1a2eabb6c5e95d22234cc5355b95afe520" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>getPipelineNodesIndex</name></member>
      <member refid="dc/d66/a05014_1a418898f9c446f5ce551e423de4a78d77" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>getPipelineNodesIndex</name></member>
      <member refid="dc/d66/a05014_1ad6d297bcb9731bcb385571be81eb451e" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>getPipelineNodesIndex</name></member>
      <member refid="dc/d66/a05014_1af6a3a888e55d26ead918afa6f9792479" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>getSubmeshNodes</name></member>
      <member refid="dc/d66/a05014_1a6a12094b8e08fcc47e255577928fcc78" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>hasCulledNodes</name></member>
      <member refid="dc/d66/a05014_1a132da60410d0138b6cc3ff60850e80bd" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>IndexedDrawCommandsBuffer</name></member>
      <member refid="dc/d66/a05014_1aee9d702ae9297011135703d5fce604b0" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>initialise</name></member>
      <member refid="dc/d66/a05014_1afb5c686af280a6fdff021538926d04dc" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_billboardIndirectCommands</name></member>
      <member refid="dc/d66/a05014_1a82030f1d534e2b0949662b1d2ec0150b" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_billboardNodes</name></member>
      <member refid="dc/d66/a05014_1a2e7e7197a2bc7ad8017976323188b806" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_hasNodes</name></member>
      <member refid="dc/d66/a05014_1a30400a2c21c71c6346c033a6b75c6bcd" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_instancedSubmeshNodes</name></member>
      <member refid="dc/d66/a05014_1a246929acc3e417ff0acf25e6cf2971d4" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_nodesIds</name></member>
      <member refid="dc/d66/a05014_1a0aae03ac13c2d3f2fe03ad13dfc24ff6" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_nodesPipelinesIds</name></member>
      <member refid="dc/d66/a05014_1a7e0cc3f9bc310548b42112c2077e6a34" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_pipelines</name></member>
      <member refid="dc/d66/a05014_1a37e9fccd4b01207e87d4949aa5156055" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_pipelinesNodes</name></member>
      <member refid="dc/d66/a05014_1ad6ae815678a76c48839cd15eee5569e6" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_submeshIdxIndirectCommands</name></member>
      <member refid="dc/d66/a05014_1a8cf27043130ec274c2b59b49bc6741c0" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_submeshNIdxIndirectCommands</name></member>
      <member refid="dc/d66/a05014_1a39c1c417c2f0c21942b38c4668586e2d" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>m_submeshNodes</name></member>
      <member refid="dc/d66/a05014_1a78136fd608aa079391a5b7dd5a795051" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>PipelineMap</name></member>
      <member refid="dc/d66/a05014_1a344c1e1a915175ccd959aabdf1475ac2" prot="private" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>PipelineNodesBuffer</name></member>
      <member refid="dc/d66/a05014_1a80bfb891f6da527dea77ab2966d19489" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>prepareCommandBuffers</name></member>
      <member refid="dc/d66/a05014_1a8495748f04df8118dd572e25bcb8807d" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>QueueRenderNodes</name></member>
      <member refid="dc/d66/a05014_1a942dea8f4fc70f8831384263810aec2d" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>registerNodePipeline</name></member>
      <member refid="dc/d66/a05014_1a8be87cf5ba88264d7fb8fe8956a09c99" prot="public" virt="non-virtual"><scope>castor3d::QueueRenderNodes</scope><name>sortNodes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
