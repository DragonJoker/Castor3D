<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d5/d96/a06531" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::RenderNodesPass</compoundname>
    <basecompoundref refid="d6/da8/a08227" prot="public" virt="non-virtual">castor::OwnedBy&lt; Engine &gt;</basecompoundref>
    <basecompoundref refid="d5/d3c/a08223" prot="public" virt="non-virtual">castor::NamedBaseT&lt; String &gt;</basecompoundref>
    <basecompoundref refid="da/d50/a08167" prot="private" virt="non-virtual">castor::DataHolderT&lt; SceneCuller * &gt;</basecompoundref>
    <basecompoundref refid="da/d50/a08167" prot="private" virt="non-virtual">castor::DataHolderT&lt; RenderQueueUPtr &gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">crg::RenderPass</basecompoundref>
    <derivedcompoundref refid="d3/d83/a06287" prot="public" virt="non-virtual">castor3d::PickingPass</derivedcompoundref>
    <derivedcompoundref refid="df/d90/a06587" prot="public" virt="non-virtual">castor3d::RenderTechniqueNodesPass</derivedcompoundref>
    <derivedcompoundref refid="d4/df1/a06639" prot="public" virt="non-virtual">castor3d::ShadowMapPass</derivedcompoundref>
    <derivedcompoundref refid="d3/df2/a06043" prot="public" virt="non-virtual">castor3d::VoxelizePass</derivedcompoundref>
    <includes local="no">RenderNodesPass.hpp</includes>
    <innerclass refid="d0/d64/a06535" prot="private">castor3d::RenderNodesPass::PassDescriptors</innerclass>
    <sectiondef kind="user-defined">
      <memberdef kind="function" id="d5/d96/a06531_1af2bce197fda484e731721797d152aa6c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderNodesPass::areValidPassFlags</definition>
        <argsstring>(PassComponentCombine const &amp;passFlags) const noexcept</argsstring>
        <name>areValidPassFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::areValidPassFlags</qualifiedname>
        <param>
          <type><ref refid="d1/dc1/a04099" kindref="compound">PassComponentCombine</ref> const &amp;</type>
          <declname>passFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Accesseurs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="731" column="14"/>
        <referencedby refid="df/d90/a06587_1acb96dc761bd7c12361bb79a02776c4a5" compoundref="d8/ddf/a01238" startline="340" endline="343">castor3d::RenderTechniqueNodesPass::areValidPassFlags</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aa42510e405f5f5ce10867c6d4c064f0a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>virtual C3D_API bool castor3d::RenderNodesPass::isPassEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isPassEnabled</name>
        <qualifiedname>castor3d::RenderNodesPass::isPassEnabled</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1aa767bedf7e117636ab90ce4894c3b433">isPassEnabled</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1abf6a5401c10771676dba9361ce352c6d">isPassEnabled</reimplementedby>
        <reimplementedby refid="d4/df1/a06639_1a8eb619dfc5e44d8b1e9b9bc6061afe09">isPassEnabled</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="732" column="22"/>
        <referencedby refid="df/d90/a06587_1abf6a5401c10771676dba9361ce352c6d" compoundref="d8/ddf/a01238" startline="347" endline="350">castor3d::RenderTechniqueNodesPass::isPassEnabled</referencedby>
        <referencedby refid="da/d97/a06539_1a715325062ec929985394f73f0df7e74e" compoundref="da/d19/a01217" startline="1076" endline="1080">castor3d::IsRenderPassEnabled::operator()</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aec5e83d0453393c6f5515d65aacf892a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1ab570f77ed4b8ad316f3ea34ae87476dd" kindref="member">ShaderFlags</ref></type>
        <definition>virtual C3D_API ShaderFlags castor3d::RenderNodesPass::getShaderFlags</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getShaderFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::getShaderFlags</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1a552c57c060541ce87806f953a4a39a2e">getShaderFlags</reimplementedby>
        <reimplementedby refid="d3/d83/a06287_1aed1a99883b73df51b45a177e514874d6">getShaderFlags</reimplementedby>
        <reimplementedby refid="d8/dcb/a06367_1a729194317bdcd83ae5d767efca72eb34">getShaderFlags</reimplementedby>
        <reimplementedby refid="dc/d1d/a06379_1afd1ebc446fc4cd027eac8943126b52b5">getShaderFlags</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1ab6319421d389ebf2f17c5c199625525d">getShaderFlags</reimplementedby>
        <reimplementedby refid="d4/df1/a06639_1a4b6a2f19b05351e6627fc6c45c6495b2">getShaderFlags</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="733" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a4b46cd261a69c9e9a06436d5d6960520" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>virtual C3D_API bool castor3d::RenderNodesPass::areDebugTargetsEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>areDebugTargetsEnabled</name>
        <qualifiedname>castor3d::RenderNodesPass::areDebugTargetsEnabled</qualifiedname>
        <reimplementedby refid="df/d90/a06587_1a2ef961d2747018a20f5d27ce02ea020d">areDebugTargetsEnabled</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="734" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aec2397ea54ec6154e12706ade0a77583" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderNodesPass::isValidPass</definition>
        <argsstring>(Pass const &amp;pass) const noexcept</argsstring>
        <name>isValidPass</name>
        <qualifiedname>castor3d::RenderNodesPass::isValidPass</qualifiedname>
        <param>
          <type><ref refid="df/d6c/a04863" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="735" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aa193e2fe28d00dfdd2452702a404899e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderNodesPass::isValidRenderable</definition>
        <argsstring>(RenderedObject const &amp;object) const noexcept</argsstring>
        <name>isValidRenderable</name>
        <qualifiedname>castor3d::RenderNodesPass::isValidRenderable</qualifiedname>
        <param>
          <type><ref refid="df/d83/a07127" kindref="compound">RenderedObject</ref> const &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="736" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a1fc6229eddc94e26ca7862a090f2500c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderNodesPass::isValidNode</definition>
        <argsstring>(SceneNode const &amp;node) const noexcept</argsstring>
        <name>isValidNode</name>
        <qualifiedname>castor3d::RenderNodesPass::isValidNode</qualifiedname>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="737" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a1d742836cc8acca4cffa4f133a59d7ea" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderNodesPass::allowClusteredLighting</definition>
        <argsstring>(ClustersConfig const &amp;config) const noexcept</argsstring>
        <name>allowClusteredLighting</name>
        <qualifiedname>castor3d::RenderNodesPass::allowClusteredLighting</qualifiedname>
        <param>
          <type><ref refid="db/da7/a05911" kindref="compound">ClustersConfig</ref> const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="738" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aaa523fa00c569df52987cea35ed62a3e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderNodesPass::hasNodes</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasNodes</name>
        <qualifiedname>castor3d::RenderNodesPass::hasNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="739" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aa27814b79313d1147062cac3dcc72129" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> &amp;</type>
        <definition>C3D_API Scene &amp; castor3d::RenderNodesPass::getScene</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getScene</name>
        <qualifiedname>castor3d::RenderNodesPass::getScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="740" column="16"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1abfe57d089df21849467f5986b55747bb" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> const *</type>
        <definition>C3D_API SceneNode const  * castor3d::RenderNodesPass::getIgnoredNode</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getIgnoredNode</name>
        <qualifiedname>castor3d::RenderNodesPass::getIgnoredNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="741" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a336767d660d1fb33ed7ea1b55e03ea9e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderNodesPass::isMeshShading</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isMeshShading</name>
        <qualifiedname>castor3d::RenderNodesPass::isMeshShading</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="742" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a0921b805792510d5db80402f6b7f211b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="db/d00/a06095" kindref="compound">PipelinesNodesT</ref>&lt; <ref refid="d4/d17/a06123" kindref="compound">SubmeshRenderNode</ref> &gt; const &amp;</type>
        <definition>C3D_API PipelinesNodesT&lt; SubmeshRenderNode &gt; const  &amp; castor3d::RenderNodesPass::getSubmeshNodes</definition>
        <argsstring>() const</argsstring>
        <name>getSubmeshNodes</name>
        <qualifiedname>castor3d::RenderNodesPass::getSubmeshNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="743" column="32"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a342f76bbd2a2d93f8767d505d1d29c1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="df/d40/a06071" kindref="compound">InstantiatedPipelinesNodesT</ref>&lt; <ref refid="d4/d17/a06123" kindref="compound">SubmeshRenderNode</ref> &gt; const &amp;</type>
        <definition>C3D_API InstantiatedPipelinesNodesT&lt; SubmeshRenderNode &gt; const  &amp; castor3d::RenderNodesPass::getInstancedSubmeshNodes</definition>
        <argsstring>() const</argsstring>
        <name>getInstancedSubmeshNodes</name>
        <qualifiedname>castor3d::RenderNodesPass::getInstancedSubmeshNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="744" column="44"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aefacacfc759f56e03f3159f5fa198e68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="db/d00/a06095" kindref="compound">PipelinesNodesT</ref>&lt; <ref refid="de/d62/a06055" kindref="compound">BillboardRenderNode</ref> &gt; const &amp;</type>
        <definition>C3D_API PipelinesNodesT&lt; BillboardRenderNode &gt; const  &amp; castor3d::RenderNodesPass::getBillboardNodes</definition>
        <argsstring>() const</argsstring>
        <name>getBillboardNodes</name>
        <qualifiedname>castor3d::RenderNodesPass::getBillboardNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="745" column="32"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a4734af0eeeaada8645b51388a9dbcf52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::RenderNodesPass::getMaxPipelineId</definition>
        <argsstring>() const</argsstring>
        <name>getMaxPipelineId</name>
        <qualifiedname>castor3d::RenderNodesPass::getMaxPipelineId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="746" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a0796814a0755654f0cc104d6662eae35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a072fb1a4b4adc0c668d5f438f0122696" kindref="member">PipelineBufferArray</ref> const &amp;</type>
        <definition>C3D_API PipelineBufferArray const  &amp; castor3d::RenderNodesPass::getPassPipelineNodes</definition>
        <argsstring>() const</argsstring>
        <name>getPassPipelineNodes</name>
        <qualifiedname>castor3d::RenderNodesPass::getPassPipelineNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="747" column="36"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a1d8bb6a81baa2e51664f9b0664ccdf16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::RenderNodesPass::getPipelineNodesIndex</definition>
        <argsstring>(PipelineBaseHash const &amp;hash, ashes::BufferBase const &amp;buffer) const</argsstring>
        <name>getPipelineNodesIndex</name>
        <qualifiedname>castor3d::RenderNodesPass::getPipelineNodesIndex</qualifiedname>
        <param>
          <type><ref refid="d0/d18/a06347" kindref="compound">PipelineBaseHash</ref> const &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>ashes::BufferBase const &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="748" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a45731387c01aff7c27e3745e409b95c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::RenderNodesPass::getDrawCallsCount</definition>
        <argsstring>() const</argsstring>
        <name>getDrawCallsCount</name>
        <qualifiedname>castor3d::RenderNodesPass::getDrawCallsCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="750" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a3623cbeff1e438d6d5d75f5efe84019d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/d53/a06479" kindref="compound">RenderCounts</ref> const &amp;</type>
        <definition>C3D_API RenderCounts const  &amp; castor3d::RenderNodesPass::getVisibleCounts</definition>
        <argsstring>() const</argsstring>
        <name>getVisibleCounts</name>
        <qualifiedname>castor3d::RenderNodesPass::getVisibleCounts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="751" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a3ebb33c26f82f60d29593b7f6906cde4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1a924293b8f4fc39410f651e98ed535eb0" kindref="member">ComponentModeFlags</ref></type>
        <definition>ComponentModeFlags castor3d::RenderNodesPass::getComponentsMask</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getComponentsMask</name>
        <qualifiedname>castor3d::RenderNodesPass::getComponentsMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="754" column="20" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="754" bodyend="757"/>
        <references refid="d5/d96/a06531_1abb50286bb743024a7ce458049fa15d4d" compoundref="da/d19/a01217" startline="1038" endline="1038">m_componentsMask</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a755dd770f27422e825b64332cd4475e1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::isOrderIndependent</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isOrderIndependent</name>
        <qualifiedname>castor3d::RenderNodesPass::isOrderIndependent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="759" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="759" bodyend="762"/>
        <references refid="d5/d96/a06531_1aacaa3131286df41ac9f40abe4de8846a" compoundref="da/d19/a01217" startline="1030" endline="1030">m_oit</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a2e2a95a6c5f4416897fddfb72f828af7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/d57/a05931" kindref="compound">SceneCuller</ref> &amp;</type>
        <definition>SceneCuller &amp; castor3d::RenderNodesPass::getCuller</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getCuller</name>
        <qualifiedname>castor3d::RenderNodesPass::getCuller</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="764" column="14" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="764" bodyend="767"/>
        <references refid="da/d50/a08167_1aa58614a2095d691f70b9ba3606422208" compoundref="d9/d9b/a01889" startline="22" endline="25">castor::DataHolderT&lt; Data, Index &gt;::getData</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a50a70e8b9cce71d14a4608816f79ecc1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d1/ddf/a07743" kindref="compound">CameraUbo</ref> const &amp;</type>
        <definition>CameraUbo const  &amp; castor3d::RenderNodesPass::getMatrixUbo</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getMatrixUbo</name>
        <qualifiedname>castor3d::RenderNodesPass::getMatrixUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="769" column="18" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="769" bodyend="772"/>
        <references refid="d5/d96/a06531_1afcdf81e5e73989734d00aa99e39d250b" compoundref="da/d19/a01217" startline="1022">m_cameraUbo</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a7f9b1b50772eaf791e55948402baca7e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::RenderNodesPass::getPipelinesCount</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPipelinesCount</name>
        <qualifiedname>castor3d::RenderNodesPass::getPipelinesCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="774" column="10" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="774" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1afaa56fab8c657f9787ca749ee0749fa0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::isDirty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isDirty</name>
        <qualifiedname>castor3d::RenderNodesPass::isDirty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="780" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="780" bodyend="783"/>
        <references refid="d5/d96/a06531_1a506d22126296803c8096b5897c506d22" compoundref="da/d19/a01217" startline="1033" endline="1033">m_isDirty</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a544c3a9960a83220c9138cfd99ed1538" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::forceTwoSided</definition>
        <argsstring>() const noexcept</argsstring>
        <name>forceTwoSided</name>
        <qualifiedname>castor3d::RenderNodesPass::forceTwoSided</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="785" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="785" bodyend="788"/>
        <references refid="d5/d96/a06531_1a00e35214ad070e24c4d6781acdafe33e" compoundref="da/d19/a01217" startline="1031" endline="1031">m_forceTwoSided</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1af1b6d51420a8619e01e78b0461a7c695" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1aaf8baf4f7c0e40a56f28725647738de2" kindref="member">RenderFilters</ref></type>
        <definition>RenderFilters castor3d::RenderNodesPass::getRenderFilters</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderFilters</name>
        <qualifiedname>castor3d::RenderNodesPass::getRenderFilters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="790" column="15" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="790" bodyend="793"/>
        <references refid="d5/d96/a06531_1a99bd721ed2680d641fa3b8a8fa97c14d" compoundref="da/d19/a01217" startline="1027" endline="1027">m_filters</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aec8320461db2e82022829685730ad3b3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
        <definition>castor::String const  &amp; castor3d::RenderNodesPass::getTypeName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTypeName</name>
        <qualifiedname>castor3d::RenderNodesPass::getTypeName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="795" column="23" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="795" bodyend="798"/>
        <references refid="d5/d96/a06531_1af1e2549069672c4b478b76e8c039e4a2" compoundref="da/d19/a01217" startline="1025">m_typeName</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a56908fd9eecc10c13f260dc8b4fbbeda" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref></type>
        <definition>RenderPassTypeID castor3d::RenderNodesPass::getTypeID</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTypeID</name>
        <qualifiedname>castor3d::RenderNodesPass::getTypeID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="800" column="18" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="800" bodyend="803"/>
        <references refid="d5/d96/a06531_1ad5b1bf0dbc1d04d7f0d78780b7aee2b6" compoundref="da/d19/a01217" startline="1026" endline="1026">m_typeID</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a814ea959eeafe107a1a3dbec20ec8be1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::filtersStatic</definition>
        <argsstring>() const noexcept</argsstring>
        <name>filtersStatic</name>
        <qualifiedname>castor3d::RenderNodesPass::filtersStatic</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="805" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="805" bodyend="809"/>
        <references refid="d5/d96/a06531_1a513d00ebae0f33d194d2850fd955df96" compoundref="da/d19/a01217" startline="817" endline="820">handleStatic</references>
        <references refid="d5/d96/a06531_1a28210092a913c861c434b78a358abb33" compoundref="da/d19/a01217" startline="1037" endline="1037">m_handleStatic</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a1765f464a9e83d13c2b2b593b039a57a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::filtersNonStatic</definition>
        <argsstring>() const noexcept</argsstring>
        <name>filtersNonStatic</name>
        <qualifiedname>castor3d::RenderNodesPass::filtersNonStatic</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="811" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="811" bodyend="815"/>
        <references refid="d5/d96/a06531_1a513d00ebae0f33d194d2850fd955df96" compoundref="da/d19/a01217" startline="817" endline="820">handleStatic</references>
        <references refid="d5/d96/a06531_1a28210092a913c861c434b78a358abb33" compoundref="da/d19/a01217" startline="1037" endline="1037">m_handleStatic</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a513d00ebae0f33d194d2850fd955df96" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::handleStatic</definition>
        <argsstring>() const noexcept</argsstring>
        <name>handleStatic</name>
        <qualifiedname>castor3d::RenderNodesPass::handleStatic</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="817" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="817" bodyend="820"/>
        <references refid="d5/d96/a06531_1a28210092a913c861c434b78a358abb33" compoundref="da/d19/a01217" startline="1037" endline="1037">m_handleStatic</references>
        <referencedby refid="d5/d96/a06531_1a1765f464a9e83d13c2b2b593b039a57a" compoundref="da/d19/a01217" startline="811" endline="815">filtersNonStatic</referencedby>
        <referencedby refid="d5/d96/a06531_1a814ea959eeafe107a1a3dbec20ec8be1" compoundref="da/d19/a01217" startline="805" endline="809">filtersStatic</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ab7b2f152311c81ba7e40e929768a323c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1aeac54b11ae520bd6c9f31956d7ecd468" kindref="member">DeferredLightingFilter</ref></type>
        <definition>DeferredLightingFilter castor3d::RenderNodesPass::getDeferredLightingFilter</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDeferredLightingFilter</name>
        <qualifiedname>castor3d::RenderNodesPass::getDeferredLightingFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="822" column="24" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="822" bodyend="825"/>
        <references refid="d5/d96/a06531_1a0e6f60c6661dd007ab6d1ea759e15391" compoundref="da/d19/a01217" startline="1040" endline="1040">m_deferredLightingFilter</references>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1acf787d1ba248a445b050059b684036a5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1a91a6789d3df127aedb89e9bf8854b39f" kindref="member">ParallaxOcclusionFilter</ref></type>
        <definition>ParallaxOcclusionFilter castor3d::RenderNodesPass::getParallaxOcclusionFilter</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getParallaxOcclusionFilter</name>
        <qualifiedname>castor3d::RenderNodesPass::getParallaxOcclusionFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="827" column="25" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="827" bodyend="830"/>
        <references refid="d5/d96/a06531_1aba7a52b88df493895c62950013b343ed" compoundref="da/d19/a01217" startline="1041" endline="1041">m_parallaxOcclusionFilter</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d5/d96/a06531_1ad867fde7933293dbaaf024b8faa5ad69" prot="private" static="no">
        <type><ref refid="d2/dd2/a02279_1a5f667ec3534f15e07b7825ade796cd2b" kindref="member">castor::UnorderedMap</ref>&lt; size_t, PassDescriptors &gt;</type>
        <definition>using castor3d::RenderNodesPass::PassDescriptorsMap =  castor::UnorderedMap&lt; size_t, PassDescriptors &gt;</definition>
        <argsstring></argsstring>
        <name>PassDescriptorsMap</name>
        <qualifiedname>castor3d::RenderNodesPass::PassDescriptorsMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1052" column="1" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1052" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d5/d96/a06531_1a3b7652edc0ab92e892fa4ceb49187718" prot="public" static="no" mutable="yes">
        <type><ref refid="d9/dba/a02278_1af042504b3f5a4b8a9751bd67230b5a41" kindref="member">RenderNodesPassChangeSignal</ref></type>
        <definition>RenderNodesPassChangeSignal castor3d::RenderNodesPass::onSortNodes</definition>
        <argsstring></argsstring>
        <name>onSortNodes</name>
        <qualifiedname>castor3d::RenderNodesPass::onSortNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="833" column="37" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="833" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d5/d96/a06531_1a7869b4d26567e9de01eb5cc2a497f8b6" prot="protected" static="no" mutable="no">
        <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const  &amp;</type>
        <definition>RenderDevice const&amp; castor3d::RenderNodesPass::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <qualifiedname>castor3d::RenderNodesPass::m_device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1020" column="21" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a1894fb32c0494abfeae9cddc6eecb402" prot="protected" static="no" mutable="no">
        <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> &amp;</type>
        <definition>RenderSystem&amp; castor3d::RenderNodesPass::m_renderSystem</definition>
        <argsstring></argsstring>
        <name>m_renderSystem</name>
        <qualifiedname>castor3d::RenderNodesPass::m_renderSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1021" column="15" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1afcdf81e5e73989734d00aa99e39d250b" prot="protected" static="no" mutable="no">
        <type><ref refid="d1/ddf/a07743" kindref="compound">CameraUbo</ref> const  &amp;</type>
        <definition>CameraUbo const&amp; castor3d::RenderNodesPass::m_cameraUbo</definition>
        <argsstring></argsstring>
        <name>m_cameraUbo</name>
        <qualifiedname>castor3d::RenderNodesPass::m_cameraUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1022" column="18" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1022" bodyend="-1"/>
        <referencedby refid="d5/d96/a06531_1a50a70e8b9cce71d14a4608816f79ecc1" compoundref="da/d19/a01217" startline="769" endline="772">getMatrixUbo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1ae14dd1b28e5921d4b57e57e3c158eb19" prot="protected" static="no" mutable="no">
        <type>crg::ImageViewIdArray</type>
        <definition>crg::ImageViewIdArray castor3d::RenderNodesPass::m_targetImage</definition>
        <argsstring></argsstring>
        <name>m_targetImage</name>
        <qualifiedname>castor3d::RenderNodesPass::m_targetImage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1023" column="23" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1023" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1ac4c97f4603740198e6692ba3969093d5" prot="protected" static="no" mutable="no">
        <type>crg::ImageViewIdArray</type>
        <definition>crg::ImageViewIdArray castor3d::RenderNodesPass::m_targetDepth</definition>
        <argsstring></argsstring>
        <name>m_targetDepth</name>
        <qualifiedname>castor3d::RenderNodesPass::m_targetDepth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1024" column="23" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1024" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1af1e2549069672c4b478b76e8c039e4a2" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
        <definition>castor::String castor3d::RenderNodesPass::m_typeName</definition>
        <argsstring></argsstring>
        <name>m_typeName</name>
        <qualifiedname>castor3d::RenderNodesPass::m_typeName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1025" column="16" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1025" bodyend="-1"/>
        <referencedby refid="d5/d96/a06531_1aec8320461db2e82022829685730ad3b3" compoundref="da/d19/a01217" startline="795" endline="798">getTypeName</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1ad5b1bf0dbc1d04d7f0d78780b7aee2b6" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref></type>
        <definition>RenderPassTypeID castor3d::RenderNodesPass::m_typeID</definition>
        <argsstring></argsstring>
        <name>m_typeID</name>
        <qualifiedname>castor3d::RenderNodesPass::m_typeID</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1026" column="18" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1026" bodyend="1026"/>
        <referencedby refid="d5/d96/a06531_1a56908fd9eecc10c13f260dc8b4fbbeda" compoundref="da/d19/a01217" startline="800" endline="803">getTypeID</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a99bd721ed2680d641fa3b8a8fa97c14d" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1aaf8baf4f7c0e40a56f28725647738de2" kindref="member">RenderFilters</ref></type>
        <definition>RenderFilters castor3d::RenderNodesPass::m_filters</definition>
        <argsstring></argsstring>
        <name>m_filters</name>
        <qualifiedname>castor3d::RenderNodesPass::m_filters</qualifiedname>
        <initializer>{ <ref refid="d9/dba/a02278_1a4a9aa6e10555508672f5ac8b53cb8ae9abe988781e4e1de1c6a36fb698afbbe1f" kindref="member">RenderFilter::eNone</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1027" column="15" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1027" bodyend="1027"/>
        <referencedby refid="d5/d96/a06531_1af1b6d51420a8619e01e78b0461a7c695" compoundref="da/d19/a01217" startline="790" endline="793">getRenderFilters</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a6d6c070855ebca54019a12e7f3490220" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
        <definition>castor::String castor3d::RenderNodesPass::m_category</definition>
        <argsstring></argsstring>
        <name>m_category</name>
        <qualifiedname>castor3d::RenderNodesPass::m_category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1028" column="16" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1028" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a916bbd8f5333ca63b34f1815753b477b" prot="protected" static="no" mutable="no">
        <type><ref refid="d4/dd6/a09023" kindref="compound">castor::Size</ref></type>
        <definition>castor::Size castor3d::RenderNodesPass::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <qualifiedname>castor3d::RenderNodesPass::m_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1029" column="14" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1029" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1aacaa3131286df41ac9f40abe4de8846a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::m_oit</definition>
        <argsstring></argsstring>
        <name>m_oit</name>
        <qualifiedname>castor3d::RenderNodesPass::m_oit</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1030" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1030" bodyend="1030"/>
        <referencedby refid="d5/d96/a06531_1a755dd770f27422e825b64332cd4475e1" compoundref="da/d19/a01217" startline="759" endline="762">isOrderIndependent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a00e35214ad070e24c4d6781acdafe33e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::m_forceTwoSided</definition>
        <argsstring></argsstring>
        <name>m_forceTwoSided</name>
        <qualifiedname>castor3d::RenderNodesPass::m_forceTwoSided</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1031" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1031" bodyend="1031"/>
        <referencedby refid="d5/d96/a06531_1a544c3a9960a83220c9138cfd99ed1538" compoundref="da/d19/a01217" startline="785" endline="788">forceTwoSided</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1abe9ae7c14c7abfe881a52f22fecbc9d0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::m_safeBand</definition>
        <argsstring></argsstring>
        <name>m_safeBand</name>
        <qualifiedname>castor3d::RenderNodesPass::m_safeBand</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1032" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1032" bodyend="1032"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a506d22126296803c8096b5897c506d22" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::m_isDirty</definition>
        <argsstring></argsstring>
        <name>m_isDirty</name>
        <qualifiedname>castor3d::RenderNodesPass::m_isDirty</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1033" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1033" bodyend="1033"/>
        <referencedby refid="d5/d96/a06531_1afaa56fab8c657f9787ca749ee0749fa0" compoundref="da/d19/a01217" startline="780" endline="783">isDirty</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a3f4ae4d22173cd2ecd9200c7a1ca4ea6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::m_meshShading</definition>
        <argsstring></argsstring>
        <name>m_meshShading</name>
        <qualifiedname>castor3d::RenderNodesPass::m_meshShading</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1034" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1034" bodyend="1034"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1ac8c58dbac580ea7726e03c4cd8f4d978" prot="protected" static="no" mutable="no">
        <type><ref refid="d5/de1/a07827" kindref="compound">SceneUbo</ref> const  *</type>
        <definition>SceneUbo const* castor3d::RenderNodesPass::m_sceneUbo</definition>
        <argsstring></argsstring>
        <name>m_sceneUbo</name>
        <qualifiedname>castor3d::RenderNodesPass::m_sceneUbo</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1035" column="17" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1035" bodyend="1035"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1aec485b6959629cdeafb0888f752837a5" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::RenderNodesPass::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <qualifiedname>castor3d::RenderNodesPass::m_index</qualifiedname>
        <initializer>{ 0u }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1036" column="10" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1036" bodyend="1036"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a28210092a913c861c434b78a358abb33" prot="protected" static="no" mutable="no">
        <type>std::optional&lt; bool &gt;</type>
        <definition>std::optional&lt; bool &gt; castor3d::RenderNodesPass::m_handleStatic</definition>
        <argsstring></argsstring>
        <name>m_handleStatic</name>
        <qualifiedname>castor3d::RenderNodesPass::m_handleStatic</qualifiedname>
        <initializer>{ std::nullopt }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1037" column="15" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1037" bodyend="1037"/>
        <referencedby refid="d5/d96/a06531_1a1765f464a9e83d13c2b2b593b039a57a" compoundref="da/d19/a01217" startline="811" endline="815">filtersNonStatic</referencedby>
        <referencedby refid="d5/d96/a06531_1a814ea959eeafe107a1a3dbec20ec8be1" compoundref="da/d19/a01217" startline="805" endline="809">filtersStatic</referencedby>
        <referencedby refid="d5/d96/a06531_1a513d00ebae0f33d194d2850fd955df96" compoundref="da/d19/a01217" startline="817" endline="820">handleStatic</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1abb50286bb743024a7ce458049fa15d4d" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1a924293b8f4fc39410f651e98ed535eb0" kindref="member">ComponentModeFlags</ref></type>
        <definition>ComponentModeFlags castor3d::RenderNodesPass::m_componentsMask</definition>
        <argsstring></argsstring>
        <name>m_componentsMask</name>
        <qualifiedname>castor3d::RenderNodesPass::m_componentsMask</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1038" column="20" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1038" bodyend="1038"/>
        <referencedby refid="d5/d96/a06531_1a3ebb33c26f82f60d29593b7f6906cde4" compoundref="da/d19/a01217" startline="754" endline="757">getComponentsMask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a513801c9cde3771b93ba7f6d23e583f7" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::RenderNodesPass::m_allowClusteredLighting</definition>
        <argsstring></argsstring>
        <name>m_allowClusteredLighting</name>
        <qualifiedname>castor3d::RenderNodesPass::m_allowClusteredLighting</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1039" column="6" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1039" bodyend="1039"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a0e6f60c6661dd007ab6d1ea759e15391" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1aeac54b11ae520bd6c9f31956d7ecd468" kindref="member">DeferredLightingFilter</ref></type>
        <definition>DeferredLightingFilter castor3d::RenderNodesPass::m_deferredLightingFilter</definition>
        <argsstring></argsstring>
        <name>m_deferredLightingFilter</name>
        <qualifiedname>castor3d::RenderNodesPass::m_deferredLightingFilter</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1040" column="24" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1040" bodyend="1040"/>
        <referencedby refid="d5/d96/a06531_1ab7b2f152311c81ba7e40e929768a323c" compoundref="da/d19/a01217" startline="822" endline="825">getDeferredLightingFilter</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1aba7a52b88df493895c62950013b343ed" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1a91a6789d3df127aedb89e9bf8854b39f" kindref="member">ParallaxOcclusionFilter</ref></type>
        <definition>ParallaxOcclusionFilter castor3d::RenderNodesPass::m_parallaxOcclusionFilter</definition>
        <argsstring></argsstring>
        <name>m_parallaxOcclusionFilter</name>
        <qualifiedname>castor3d::RenderNodesPass::m_parallaxOcclusionFilter</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1041" column="25" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1041" bodyend="1041"/>
        <referencedby refid="d5/d96/a06531_1acf787d1ba248a445b050059b684036a5" compoundref="da/d19/a01217" startline="827" endline="830">getParallaxOcclusionFilter</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d5/d96/a06531_1af1c00f585225ee0dfdd64149663021cb" prot="private" static="no" mutable="no">
        <type>PassDescriptorsMap</type>
        <definition>PassDescriptorsMap castor3d::RenderNodesPass::m_additionalDescriptors</definition>
        <argsstring></argsstring>
        <name>m_additionalDescriptors</name>
        <qualifiedname>castor3d::RenderNodesPass::m_additionalDescriptors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1054" column="20" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1054" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a867f79567b731a1678fe38be8191da5c" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; RenderPipelineUPtr &gt;</type>
        <definition>castor::Vector&lt; RenderPipelineUPtr &gt; castor3d::RenderNodesPass::m_frontPipelines</definition>
        <argsstring></argsstring>
        <name>m_frontPipelines</name>
        <qualifiedname>castor3d::RenderNodesPass::m_frontPipelines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1055" column="16" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1055" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d96/a06531_1a2e225189f21dec2e2235adf59af1d075" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; RenderPipelineUPtr &gt;</type>
        <definition>castor::Vector&lt; RenderPipelineUPtr &gt; castor3d::RenderNodesPass::m_backPipelines</definition>
        <argsstring></argsstring>
        <name>m_backPipelines</name>
        <qualifiedname>castor3d::RenderNodesPass::m_backPipelines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1056" column="16" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="1056" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="d5/d96/a06531_1a7d11ed92a0ef46d617aadaffc5ec06e1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::RenderNodesPass::RenderNodesPass</definition>
        <argsstring>(crg::FramePass const &amp;pass, crg::GraphContext &amp;context, crg::RunnableGraph &amp;graph, RenderDevice const &amp;device, castor::String const &amp;typeName, crg::ImageViewIdArray targetImage, crg::ImageViewIdArray targetDepth, RenderNodesPassDesc const &amp;desc)</argsstring>
        <name>RenderNodesPass</name>
        <qualifiedname>castor3d::RenderNodesPass::RenderNodesPass</qualifiedname>
        <param>
          <type>crg::FramePass const &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>crg::GraphContext &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>crg::RunnableGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>crg::ImageViewIdArray</type>
          <declname>targetImage</declname>
        </param>
        <param>
          <type>crg::ImageViewIdArray</type>
          <declname>targetDepth</declname>
        </param>
        <param>
          <type><ref refid="db/d35/a06527" kindref="compound">RenderNodesPassDesc</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>La frame pass parente. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Le contexte de rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">graph</parametername>
</parameternamelist>
<parameterdescription>
<para>Le runnable graph. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>Le device GPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de la passe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">targetImage</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;image dans laquelle cette passe fait son rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">targetDepth</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;image de profondeur dans laquelle cette passe fait son rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données de construction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="325" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a6fa640d927538884f1f380391f418efe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::RenderNodesPass::doUpdateUbos</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>doUpdateUbos</name>
        <qualifiedname>castor3d::RenderNodesPass::doUpdateUbos</qualifiedname>
        <reimplementedby refid="dd/d9b/a06643_1ac92101d69d81b9c4594fc3d110c67b23">doUpdateUbos</reimplementedby>
        <reimplementedby refid="d8/d17/a06647_1abc0ce1f1a55694e3db5af51c1e566909">doUpdateUbos</reimplementedby>
        <reimplementedby refid="d1/d57/a06651_1a379291ade5f7091fa766aafdf12652cf">doUpdateUbos</reimplementedby>
        <param>
          <type><ref refid="dc/d23/a06511" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Met à jour la passe de rendu, au niveau CPU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données d&apos;update. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="848" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aba7e200b7926ceddaef34bff547f7337" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::RenderNodesPass::doFillAdditionalBindings</definition>
        <argsstring>(PipelineFlags const &amp;flags, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings) const =0</argsstring>
        <name>doFillAdditionalBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::doFillAdditionalBindings</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1ae241689d0d5298c8cd5ebf81e479700b">doFillAdditionalBindings</reimplementedby>
        <reimplementedby refid="da/d78/a06259_1a5dc4bef84a93c1ca776c9820ce3c19bf">doFillAdditionalBindings</reimplementedby>
        <reimplementedby refid="d3/d83/a06287_1a9ac0b4f75017b4e95af2e254d5c94ede">doFillAdditionalBindings</reimplementedby>
        <reimplementedby refid="d8/dcb/a06367_1a80240e6d8814efcc21a368558161447d">doFillAdditionalBindings</reimplementedby>
        <reimplementedby refid="dc/d1d/a06379_1a4e5ec0f89f342f1c9d03d9959f222dc0">doFillAdditionalBindings</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1a38c83e1905fd89fa17654ebbf9b7ab86">doFillAdditionalBindings</reimplementedby>
        <reimplementedby refid="d4/df1/a06639_1ad3ce6ebe006e0843823887297d8888e6">doFillAdditionalBindings</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1ab2abd3ba498309c50ec568de3a59ee5d">doFillAdditionalBindings</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <briefdescription>
<para>Remplit les attaches de layout de descripteurs spécifiques à une passe de rendu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les attaches additionnelles. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="859" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ad57f4d26855d8750d9df582d5bd9d859" prot="protected" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>virtual C3D_API bool castor3d::RenderNodesPass::doIsValidPass</definition>
        <argsstring>(Pass const &amp;pass) const noexcept</argsstring>
        <name>doIsValidPass</name>
        <qualifiedname>castor3d::RenderNodesPass::doIsValidPass</qualifiedname>
        <reimplementedby refid="d3/d83/a06287_1a5a34a8c9b24c2fa2f692a1abe331d27e">doIsValidPass</reimplementedby>
        <param>
          <type><ref refid="df/d6c/a04863" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>La passe de matériau. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si la passe est rendue via cette passe de noeuds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="869" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a18caa441e8929a13f0858375f207d41e" prot="protected" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>virtual C3D_API bool castor3d::RenderNodesPass::doIsValidRenderable</definition>
        <argsstring>(RenderedObject const &amp;object) const noexcept</argsstring>
        <name>doIsValidRenderable</name>
        <qualifiedname>castor3d::RenderNodesPass::doIsValidRenderable</qualifiedname>
        <reimplementedby refid="d4/df1/a06639_1ae2b2756be4a47d36b51954c4474af703">doIsValidRenderable</reimplementedby>
        <param>
          <type><ref refid="df/d83/a07127" kindref="compound">RenderedObject</ref> const &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;objet rendu. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si l&apos;objet est rendu via cette passe de noeuds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="878" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a1263b6f23e8f2ad82ec140e46891099b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref></type>
        <definition>virtual C3D_API SubmeshComponentCombine castor3d::RenderNodesPass::doAdjustSubmeshComponents</definition>
        <argsstring>(SubmeshComponentCombine submeshCombine) const</argsstring>
        <name>doAdjustSubmeshComponents</name>
        <qualifiedname>castor3d::RenderNodesPass::doAdjustSubmeshComponents</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1a8a024279e3910d477a83fb550759fc4b">doAdjustSubmeshComponents</reimplementedby>
        <reimplementedby refid="d3/d83/a06287_1a7a3344a744f7f373598a7dad25cbfe1b">doAdjustSubmeshComponents</reimplementedby>
        <reimplementedby refid="d4/df1/a06639_1ae5719b8f553c684c6001cf5fb9953931">doAdjustSubmeshComponents</reimplementedby>
        <param>
          <type><ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref></type>
          <declname>submeshCombine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="879" column="41"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ad8c1a88c258efc8678041251077c101a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref></type>
        <definition>virtual C3D_API ProgramFlags castor3d::RenderNodesPass::doAdjustProgramFlags</definition>
        <argsstring>(ProgramFlags flags) const</argsstring>
        <name>doAdjustProgramFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::doAdjustProgramFlags</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1a53bc4c4cd8be34c21a8dbd7fa73afddb">doAdjustProgramFlags</reimplementedby>
        <reimplementedby refid="d3/d83/a06287_1a0dac18d538312648e09c62d7b59da82d">doAdjustProgramFlags</reimplementedby>
        <reimplementedby refid="d8/dcb/a06367_1a388f101560527c40c32067efe71b7b57">doAdjustProgramFlags</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1a70f74851f1447085b9dd9e7a2ffcc8b2">doAdjustProgramFlags</reimplementedby>
        <reimplementedby refid="dd/d9b/a06643_1a6064e0ce644f4b2b4df34f6a8b44e451">doAdjustProgramFlags</reimplementedby>
        <reimplementedby refid="d8/d17/a06647_1a18bce601f41a767fb688013f4ba490b6">doAdjustProgramFlags</reimplementedby>
        <reimplementedby refid="d1/d57/a06651_1a9f689dc5f5edca2db0ce85a0a557ff14">doAdjustProgramFlags</reimplementedby>
        <param>
          <type><ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="880" column="30"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ac1a751301d940ffa1f049b1192581f5b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
        <definition>virtual C3D_API SceneFlags castor3d::RenderNodesPass::doAdjustSceneFlags</definition>
        <argsstring>(SceneFlags flags) const</argsstring>
        <name>doAdjustSceneFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::doAdjustSceneFlags</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1ac6c4b426d2dd098cc11e490132e39b06">doAdjustSceneFlags</reimplementedby>
        <reimplementedby refid="d8/dcb/a06367_1afd350674cef9b338a86ff53fa63827e0">doAdjustSceneFlags</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1a469e206a1f08ee5f74a7f5cb28b64348">doAdjustSceneFlags</reimplementedby>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="881" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a9e7d96d2aa5d3c3cec8e97cbea443fb2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ShaderProgramRPtr</type>
        <definition>C3D_API ShaderProgramRPtr castor3d::RenderNodesPass::doGetProgram</definition>
        <argsstring>(PipelineFlags const &amp;flags)</argsstring>
        <name>doGetProgram</name>
        <qualifiedname>castor3d::RenderNodesPass::doGetProgram</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="882" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ac8fd2eb7fdeb3260710b76939dd214c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::doAccept</definition>
        <argsstring>(castor3d::RenderTechniqueVisitor &amp;visitor)</argsstring>
        <name>doAccept</name>
        <qualifiedname>castor3d::RenderNodesPass::doAccept</qualifiedname>
        <param>
          <type><ref refid="d1/d7f/a06591" kindref="compound">castor3d::RenderTechniqueVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;acceptation de visiteur.     </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>Le ... visiteur.     </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="886" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1abfb05246334007ec0cafb80ca96645b8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::doUpdateFlags</definition>
        <argsstring>(PipelineFlags &amp;flags) const</argsstring>
        <name>doUpdateFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::doUpdateFlags</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="887" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ac0a58902f8754c6e9fe2afaf7fdc4ce1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::doAddShadowBindings</definition>
        <argsstring>(Scene const &amp;scene, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, uint32_t &amp;index) const</argsstring>
        <name>doAddShadowBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::doAddShadowBindings</qualifiedname>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> const &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="888" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a95a4620da11c5d138dd318a204922df0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::doAddBackgroundBindings</definition>
        <argsstring>(Scene const &amp;scene, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, uint32_t &amp;index) const</argsstring>
        <name>doAddBackgroundBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::doAddBackgroundBindings</qualifiedname>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> const &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="891" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ab5b35cf256705a232880eaab76b05e94" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::doAddClusteredLightingBindings</definition>
        <argsstring>(RenderTarget const &amp;target, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, uint32_t &amp;index) const</argsstring>
        <name>doAddClusteredLightingBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::doAddClusteredLightingBindings</qualifiedname>
        <param>
          <type><ref refid="dd/d91/a06563" kindref="compound">RenderTarget</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="894" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aafabe87e12777941f0c888d54bcd5bde" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::doAddShadowDescriptor</definition>
        <argsstring>(Scene const &amp;scene, ashes::WriteDescriptorSetArray &amp;descriptorWrites, ShadowMapLightTypeArray const &amp;shadowMaps, ShadowBuffer const *shadowBuffer, uint32_t &amp;index) const</argsstring>
        <name>doAddShadowDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::doAddShadowDescriptor</qualifiedname>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> const &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a1e0853cf26ea6ce64763fa7f60d50b00" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d2/dab/a07363" kindref="compound">ShadowBuffer</ref> const *</type>
          <declname>shadowBuffer</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="897" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a181bf9378c81a058ba983f4c4467077c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::doAddBackgroundDescriptor</definition>
        <argsstring>(Scene const &amp;scene, ashes::WriteDescriptorSetArray &amp;descriptorWrites, crg::ImageViewIdArray const &amp;targetImage, uint32_t &amp;index) const</argsstring>
        <name>doAddBackgroundDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::doAddBackgroundDescriptor</qualifiedname>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> const &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>crg::ImageViewIdArray const &amp;</type>
          <declname>targetImage</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="902" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1afc4117b7e3bd55c3bd89f8d7e8bcbe26" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::doAddClusteredLightingDescriptor</definition>
        <argsstring>(RenderTarget const &amp;target, ashes::WriteDescriptorSetArray &amp;descriptorWrites, uint32_t &amp;index) const</argsstring>
        <name>doAddClusteredLightingDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::doAddClusteredLightingDescriptor</qualifiedname>
        <param>
          <type><ref refid="dd/d91/a06563" kindref="compound">RenderTarget</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="906" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ace7bc19e7a5bfeca3bf92be92a4e8ff9" prot="protected" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/d8b/a06547" kindref="compound">RenderQueue</ref> &amp;</type>
        <definition>RenderQueue &amp; castor3d::RenderNodesPass::getRenderQueue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderQueue</name>
        <qualifiedname>castor3d::RenderNodesPass::getRenderQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="910" column="14" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="910" bodyend="913"/>
        <references refid="da/d50/a08167_1aa58614a2095d691f70b9ba3606422208" compoundref="d9/d9b/a01889" startline="22" endline="25">castor::DataHolderT&lt; Data, Index &gt;::getData</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/d96/a06531_1ab57af373bc7f2601fd4338ccb73ccd72" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::RenderNodesPass::~RenderNodesPass</definition>
        <argsstring>() noexcept override</argsstring>
        <name>~RenderNodesPass</name>
        <qualifiedname>castor3d::RenderNodesPass::~RenderNodesPass</qualifiedname>
        <briefdescription>
<para>Destructeur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="341" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a63e0a2137b063c8eb22eb7043d4edc2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::RenderNodesPass::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::RenderNodesPass::update</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1a63e0a2137b063c8eb22eb7043d4edc2b">update</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1a63e0a2137b063c8eb22eb7043d4edc2b">update</reimplementedby>
        <reimplementedby refid="d3/df2/a06043_1a175acb68bfd8d15d2fbb81e0b489e4f5">update</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1a39bd7dead3abc23c3214264386eca235">update</reimplementedby>
        <reimplementedby refid="dd/d9b/a06643_1ac96285d99768e82d9ca1dd2ee792f6dd">update</reimplementedby>
        <reimplementedby refid="d8/d17/a06647_1aaf83614f17f8cfaf2ed63b63b452203a">update</reimplementedby>
        <reimplementedby refid="d1/d57/a06651_1ade986cadd23c2a8d952cb91aa1108b4e">update</reimplementedby>
        <param>
          <type><ref refid="dc/d23/a06511" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Met à jour la passe de rendu, au niveau CPU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données d&apos;update. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="350" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a06aecd34c3102ad274663e1a7435bb6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::getSubmeshShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags, ast::ShaderBuilder &amp;builder) const</argsstring>
        <name>getSubmeshShaderSource</name>
        <qualifiedname>castor3d::RenderNodesPass::getSubmeshShaderSource</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ast::ShaderBuilder &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Récupère le source du geometry shader qui correspond aux indicateurs donnés. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builder</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit le source. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="361" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aafa91460eb128c5ba6a3aaa22a2866b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::getPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags, ast::ShaderBuilder &amp;builder) const</argsstring>
        <name>getPixelShaderSource</name>
        <qualifiedname>castor3d::RenderNodesPass::getPixelShaderSource</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ast::ShaderBuilder &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Récupère le source du pixel shader qui correspond aux indicateurs donnés. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builder</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit le source. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="373" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a315239954b7b5cfcb48091098885aaf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::forceAdjustFlags</definition>
        <argsstring>(PipelineFlags &amp;flags) const</argsstring>
        <name>forceAdjustFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::forceAdjustFlags</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Ajuste les flags donnés pour qu&apos;ils correspondent aux pré-requis de la passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="383" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a6512b8ee2afd3fd8a42f2036bf2ae1fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref></type>
        <definition>C3D_API SubmeshComponentCombine castor3d::RenderNodesPass::adjustFlags</definition>
        <argsstring>(SubmeshComponentCombine const &amp;submeshCombine) const</argsstring>
        <name>adjustFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::adjustFlags</qualifiedname>
        <param>
          <type><ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref> const &amp;</type>
          <declname>submeshCombine</declname>
        </param>
        <briefdescription>
<para>Ajuste les flags donnés pour qu&apos;ils correspondent aux pré-requis de la passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">submeshCombine</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="392" column="33"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a4ac67e954c117995f57d4564c640f3f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/dc1/a04099" kindref="compound">PassComponentCombine</ref></type>
        <definition>C3D_API PassComponentCombine castor3d::RenderNodesPass::adjustFlags</definition>
        <argsstring>(PassComponentCombine const &amp;passCombine) const</argsstring>
        <name>adjustFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::adjustFlags</qualifiedname>
        <param>
          <type><ref refid="d1/dc1/a04099" kindref="compound">PassComponentCombine</ref> const &amp;</type>
          <declname>passCombine</declname>
        </param>
        <briefdescription>
<para>Ajuste les flags donnés pour qu&apos;ils correspondent aux pré-requis de la passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">passCombine</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="401" column="30"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ae7c0725098dbbcaf8ee541543783ef9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref></type>
        <definition>C3D_API ProgramFlags castor3d::RenderNodesPass::adjustFlags</definition>
        <argsstring>(ProgramFlags flags) const</argsstring>
        <name>adjustFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::adjustFlags</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Ajuste les flags donnés pour qu&apos;ils correspondent aux pré-requis de la passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="410" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a8ae3e04cfcf1b985f40506be53ca5df5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
        <definition>C3D_API SceneFlags castor3d::RenderNodesPass::adjustFlags</definition>
        <argsstring>(SceneFlags flags) const</argsstring>
        <name>adjustFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::adjustFlags</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Ajuste les flags donnés pour qu&apos;ils correspondent aux pré-requis de la passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="419" column="20"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a53c9a4847c006814c4df955b6f644cf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/d0d/a03995" kindref="compound">TextureCombine</ref></type>
        <definition>C3D_API TextureCombine castor3d::RenderNodesPass::adjustFlags</definition>
        <argsstring>(TextureCombine const &amp;textureCombine) const</argsstring>
        <name>adjustFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::adjustFlags</qualifiedname>
        <param>
          <type><ref refid="d9/d0d/a03995" kindref="compound">TextureCombine</ref> const &amp;</type>
          <declname>textureCombine</declname>
        </param>
        <briefdescription>
<para>Filtre les indicateurs de textures donnés en utilisant ceux voulus par cette passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">textureCombine</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de textures. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Les indicateurs filtrés. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="430" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a79cb6d7ae1f83f67d907ccccc493aa51" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref></type>
        <definition>C3D_API PipelineFlags castor3d::RenderNodesPass::createPipelineFlags</definition>
        <argsstring>(PassComponentCombine const &amp;passComponents, SubmeshComponentCombine const &amp;submeshComponents, BlendMode colourBlendMode, BlendMode alphaBlendMode, RenderPassTypeID renderPassTypeId, LightingModelID lightingModelId, BackgroundModelID backgroundModelId, VkCompareOp alphaFunc, VkCompareOp blendAlphaFunc, TextureCombine const &amp;textures, ProgramFlags const &amp;programFlags, SceneFlags const &amp;sceneFlags, VkPrimitiveTopology topology, bool isFrontCulled, uint32_t passLayerIndex, GpuBufferOffsetT&lt; castor::Point4f &gt; const &amp;morphTargets, SubmeshRenderData const *submeshData) const noexcept</argsstring>
        <name>createPipelineFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::createPipelineFlags</qualifiedname>
        <param>
          <type><ref refid="d1/dc1/a04099" kindref="compound">PassComponentCombine</ref> const &amp;</type>
          <declname>passComponents</declname>
        </param>
        <param>
          <type><ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref> const &amp;</type>
          <declname>submeshComponents</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>colourBlendMode</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>alphaBlendMode</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref></type>
          <declname>renderPassTypeId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
          <declname>lightingModelId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>alphaFunc</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>blendAlphaFunc</declname>
        </param>
        <param>
          <type><ref refid="d9/d0d/a03995" kindref="compound">TextureCombine</ref> const &amp;</type>
          <declname>textures</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>programFlags</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref> const &amp;</type>
          <declname>sceneFlags</declname>
        </param>
        <param>
          <type>VkPrimitiveTopology</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFrontCulled</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>passLayerIndex</declname>
        </param>
        <param>
          <type><ref refid="d7/d76/a03451" kindref="compound">GpuBufferOffsetT</ref>&lt; castor::Point4f &gt; const &amp;</type>
          <declname>morphTargets</declname>
        </param>
        <param>
          <type><ref refid="d6/d66/a05595" kindref="compound">SubmeshRenderData</ref> const *</type>
          <declname>submeshData</declname>
        </param>
        <briefdescription>
<para>Crée les indicateurs de pipeline pour la configuration donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">passComponents</parametername>
</parameternamelist>
<parameterdescription>
<para>La combinaison de composants de passe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submeshComponents</parametername>
</parameternamelist>
<parameterdescription>
<para>La combinaison de composants de submesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">colourBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de mélange de couleurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de mélange de l&apos;alpha </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">renderPassTypeId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du type de render pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lightingModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du modèle d&apos;éclairage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du modèle de fond. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>La fonction de comparaison de l&apos;alpha (pour les noeuds opaques). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blendAlphaFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>La fonction de comparaison de l&apos;alpha (pour les noeuds transparents). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">textures</parametername>
</parameternamelist>
<parameterdescription>
<para>La configuration des textures. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">programFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Une combinaison de ProgramFlag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sceneFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs relatifs à la scène. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">topology</parametername>
</parameternamelist>
<parameterdescription>
<para>La topologie de rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isFrontCulled</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> pour front face culling, <computeroutput>false</computeroutput> pour back face culling. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">passLayerIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;indice de la couche de la passe de matériau. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">morphTargets</parametername>
</parameternamelist>
<parameterdescription>
<para>Le buffer de morph targets. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submeshData</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données de rendu du submesh, s&apos;il en a. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="471" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a0b604614f6aad12c3390a315b7ef7893" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref></type>
        <definition>C3D_API PipelineFlags castor3d::RenderNodesPass::createPipelineFlags</definition>
        <argsstring>(Pass const &amp;pass, TextureCombine const &amp;textures, SubmeshComponentCombine const &amp;submeshComponents, ProgramFlags const &amp;programFlags, SceneFlags const &amp;sceneFlags, VkPrimitiveTopology topology, bool isFrontCulled, GpuBufferOffsetT&lt; castor::Point4f &gt; const &amp;morphTargets, SubmeshRenderData const *submeshData) const noexcept</argsstring>
        <name>createPipelineFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::createPipelineFlags</qualifiedname>
        <param>
          <type><ref refid="df/d6c/a04863" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d9/d0d/a03995" kindref="compound">TextureCombine</ref> const &amp;</type>
          <declname>textures</declname>
        </param>
        <param>
          <type><ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref> const &amp;</type>
          <declname>submeshComponents</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>programFlags</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref> const &amp;</type>
          <declname>sceneFlags</declname>
        </param>
        <param>
          <type>VkPrimitiveTopology</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFrontCulled</declname>
        </param>
        <param>
          <type><ref refid="d7/d76/a03451" kindref="compound">GpuBufferOffsetT</ref>&lt; castor::Point4f &gt; const &amp;</type>
          <declname>morphTargets</declname>
        </param>
        <param>
          <type><ref refid="d6/d66/a05595" kindref="compound">SubmeshRenderData</ref> const *</type>
          <declname>submeshData</declname>
        </param>
        <briefdescription>
<para>Crée les indicateurs de pipeline pour la configuration donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>La passe pour laquelle le pipeline est créé. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">textures</parametername>
</parameternamelist>
<parameterdescription>
<para>La configuration des textures. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submeshComponents</parametername>
</parameternamelist>
<parameterdescription>
<para>La combinaison de composants de submesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">programFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Une combinaison de ProgramFlag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sceneFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs relatifs à la scène. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">topology</parametername>
</parameternamelist>
<parameterdescription>
<para>La topologie de rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isFrontCulled</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> pour front face culling, <computeroutput>false</computeroutput> pour back face culling. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">morphTargets</parametername>
</parameternamelist>
<parameterdescription>
<para>Le buffer de morph targets. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submeshData</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données de rendu du submesh, s&apos;il en a. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="512" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a14fa4038b2be656cabe30eec2ea582fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/d1f/a06491" kindref="compound">PipelineAndID</ref></type>
        <definition>C3D_API PipelineAndID castor3d::RenderNodesPass::prepareBackPipeline</definition>
        <argsstring>(PipelineFlags const &amp;pipelineFlags, ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;vertexLayouts, ashes::DescriptorSetLayout const *meshletDescriptorLayout)</argsstring>
        <name>prepareBackPipeline</name>
        <qualifiedname>castor3d::RenderNodesPass::prepareBackPipeline</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>pipelineFlags</declname>
        </param>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>vertexLayouts</declname>
        </param>
        <param>
          <type>ashes::DescriptorSetLayout const *</type>
          <declname>meshletDescriptorLayout</declname>
        </param>
        <briefdescription>
<para>Prépare le pipeline qui correspond aux indicateurs donnés, pour les noeuds en back face culling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pipelineFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertexLayouts</parametername>
</parameternamelist>
<parameterdescription>
<para>Les layouts des tampons de sommets. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">meshletDescriptorLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>Les layouts optionnels de descripteurs de meshlets. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="533" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ad135f3236bae3b299bfb7da40a137a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/d1f/a06491" kindref="compound">PipelineAndID</ref></type>
        <definition>C3D_API PipelineAndID castor3d::RenderNodesPass::prepareFrontPipeline</definition>
        <argsstring>(PipelineFlags const &amp;pipelineFlags, ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;vertexLayouts, ashes::DescriptorSetLayout const *meshletDescriptorLayout)</argsstring>
        <name>prepareFrontPipeline</name>
        <qualifiedname>castor3d::RenderNodesPass::prepareFrontPipeline</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>pipelineFlags</declname>
        </param>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>vertexLayouts</declname>
        </param>
        <param>
          <type>ashes::DescriptorSetLayout const *</type>
          <declname>meshletDescriptorLayout</declname>
        </param>
        <briefdescription>
<para>Prépare le pipeline qui correspond aux indicateurs donnés, pour les noeuds en front face culling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pipelineFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vertexLayouts</parametername>
</parameternamelist>
<parameterdescription>
<para>Les layouts des tampons de sommets. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">meshletDescriptorLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>Les layouts optionnels de descripteurs de meshlets. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="548" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a502117a53706318de843396e33070ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::cleanupPipelines</definition>
        <argsstring>()</argsstring>
        <name>cleanupPipelines</name>
        <qualifiedname>castor3d::RenderNodesPass::cleanupPipelines</qualifiedname>
        <briefdescription>
<para>Nettoie tous les pipelines des listes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="557" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a056e3b27b2a07a99002eccae51b15b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::initialiseAdditionalDescriptor</definition>
        <argsstring>(RenderPipeline &amp;pipeline, ShadowMapLightTypeArray const &amp;shadowMaps, ShadowBuffer const *shadowBuffer)</argsstring>
        <name>initialiseAdditionalDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::initialiseAdditionalDescriptor</qualifiedname>
        <param>
          <type><ref refid="d3/deb/a06543" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a1e0853cf26ea6ce64763fa7f60d50b00" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d2/dab/a07363" kindref="compound">ShadowBuffer</ref> const *</type>
          <declname>shadowBuffer</declname>
        </param>
        <briefdescription>
<para>Initialise l&apos;ensemble de descripteurs additionnels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>Le render pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Les shadow maps. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le buffer contenant les données de configuration des ombres. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="570" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aefaeb0db8236eae2d8c2a5e1549e4cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::setIgnoredNode</definition>
        <argsstring>(SceneNode const &amp;node)</argsstring>
        <name>setIgnoredNode</name>
        <qualifiedname>castor3d::RenderNodesPass::setIgnoredNode</qualifiedname>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Définit le noeud ignoré. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Tous les objets liés à ce noued seront ignorés lors du rendu. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>Le noeud. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="583" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a5a30b41e9d2d94465c894df550a9d43c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderNodesPass::countNodes</definition>
        <argsstring>(RenderInfo &amp;info) const noexcept</argsstring>
        <name>countNodes</name>
        <qualifiedname>castor3d::RenderNodesPass::countNodes</qualifiedname>
        <param>
          <type><ref refid="d3/d9c/a06419" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Enregistre les comptes de noeuds dans le <ref refid="d3/d9c/a06419" kindref="compound">RenderInfo</ref> donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les comptes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="592" column="14"/>
        <referencedby refid="df/d90/a06587_1aed27aa874e94c2eff7254317919fe48c" compoundref="d8/ddf/a01238" startline="333" endline="336">castor3d::RenderTechniqueNodesPass::countNodes</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d5/d96/a06531_1a670b6db34472ea0bd4228c3ae86a1865" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::PipelineColorBlendStateCreateInfo</type>
        <definition>static C3D_API ashes::PipelineColorBlendStateCreateInfo castor3d::RenderNodesPass::createBlendState</definition>
        <argsstring>(BlendMode colourBlendMode, BlendMode alphaBlendMode, uint32_t attachesCount)</argsstring>
        <name>createBlendState</name>
        <qualifiedname>castor3d::RenderNodesPass::createBlendState</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>colourBlendMode</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>alphaBlendMode</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>attachesCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">colourBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de mélange couleurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de mélange alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attachesCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nombre d&apos;attaches de mélange voulues. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Un état de mélange correspondant aux modes de mélange donnés. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="605" column="57"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ae630118cbb17cf8c473ba78e1143e8a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addShadowBindings</definition>
        <argsstring>(SceneFlags const &amp;sceneFlags, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, VkShaderStageFlags shaderStages, uint32_t &amp;index)</argsstring>
        <name>addShadowBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::addShadowBindings</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref> const &amp;</type>
          <declname>sceneFlags</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>VkShaderStageFlags</type>
          <declname>shaderStages</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Ajoute les bindings de descriptor layout des shadow maps à la liste donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sceneFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de mélange couleurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les bindings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shaderStages</parametername>
</parameternamelist>
<parameterdescription>
<para>Les shader stages impactés. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;index de binding actuel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="622" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a71b985381d1383869c5b1fd6a5294c9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addShadowBindings</definition>
        <argsstring>(ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, VkShaderStageFlags shaderStages, uint32_t &amp;index)</argsstring>
        <name>addShadowBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::addShadowBindings</qualifiedname>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>VkShaderStageFlags</type>
          <declname>shaderStages</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Ajoute les bindings de descriptor layout des shadow maps à la liste donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les bindings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shaderStages</parametername>
</parameternamelist>
<parameterdescription>
<para>Les shader stages impactés. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;index de binding actuel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="638" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a414f84c6045877572abf26d3f453a25e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addBackgroundBindings</definition>
        <argsstring>(SceneBackground const &amp;background, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, VkShaderStageFlags shaderStages, uint32_t &amp;index)</argsstring>
        <name>addBackgroundBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::addBackgroundBindings</qualifiedname>
        <param>
          <type><ref refid="d4/d2c/a06895" kindref="compound">SceneBackground</ref> const &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>VkShaderStageFlags</type>
          <declname>shaderStages</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Ajoute les bindings de descriptor layout du background à la liste donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">background</parametername>
</parameternamelist>
<parameterdescription>
<para>Le fond. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les bindings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shaderStages</parametername>
</parameternamelist>
<parameterdescription>
<para>Les shader stages impactés. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;index de binding actuel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="655" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a04c87ec305b5b800088426907342d0ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addGIBindings</definition>
        <argsstring>(SceneFlags flags, IndirectLightingData const &amp;indirectLighting, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, VkShaderStageFlags shaderStages, uint32_t &amp;index)</argsstring>
        <name>addGIBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::addGIBindings</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="dd/d3d/a05967" kindref="compound">IndirectLightingData</ref> const &amp;</type>
          <declname>indirectLighting</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>VkShaderStageFlags</type>
          <declname>shaderStages</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Ajoute les bindings de descriptor layout de l&apos;éclairage indirect à la liste donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de scène. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indirectLighting</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données d&apos;indirect lighting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les bindings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shaderStages</parametername>
</parameternamelist>
<parameterdescription>
<para>Les shader stages impactés. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;index de binding actuel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="675" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a6246f2ddd55511dc65da0357a4fad267" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addClusteredLightingBindings</definition>
        <argsstring>(FrustumClusters const &amp;frustumClusters, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, VkShaderStageFlags shaderStages, uint32_t &amp;index)</argsstring>
        <name>addClusteredLightingBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::addClusteredLightingBindings</qualifiedname>
        <param>
          <type><ref refid="d1/d77/a05915" kindref="compound">FrustumClusters</ref> const &amp;</type>
          <declname>frustumClusters</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>VkShaderStageFlags</type>
          <declname>shaderStages</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Ajoute les bindings de descriptor layout des clusters à la liste donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frustumClusters</parametername>
</parameternamelist>
<parameterdescription>
<para>Les clusters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les bindings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shaderStages</parametername>
</parameternamelist>
<parameterdescription>
<para>Les shader stages impactés. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;index de binding actuel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="694" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a162892ee16c6b21392c0148cb3c503d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addShadowDescriptor</definition>
        <argsstring>(RenderSystem const &amp;renderSystem, crg::RunnableGraph &amp;graph, ashes::WriteDescriptorSetArray &amp;descriptorWrites, ShadowMapLightTypeArray const &amp;shadowMaps, ShadowBuffer const &amp;shadowBuffer, uint32_t &amp;index)</argsstring>
        <name>addShadowDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::addShadowDescriptor</qualifiedname>
        <param>
          <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> const &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>crg::RunnableGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a1e0853cf26ea6ce64763fa7f60d50b00" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d2/dab/a07363" kindref="compound">ShadowBuffer</ref> const &amp;</type>
          <declname>shadowBuffer</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="698" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a8c65d8809633914687f80a4ade0da304" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addShadowDescriptor</definition>
        <argsstring>(RenderSystem const &amp;renderSystem, crg::RunnableGraph &amp;graph, SceneFlags const &amp;sceneFlags, ashes::WriteDescriptorSetArray &amp;descriptorWrites, ShadowMapLightTypeArray const &amp;shadowMaps, ShadowBuffer const &amp;shadowBuffer, uint32_t &amp;index)</argsstring>
        <name>addShadowDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::addShadowDescriptor</qualifiedname>
        <param>
          <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> const &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>crg::RunnableGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref> const &amp;</type>
          <declname>sceneFlags</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a1e0853cf26ea6ce64763fa7f60d50b00" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d2/dab/a07363" kindref="compound">ShadowBuffer</ref> const &amp;</type>
          <declname>shadowBuffer</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="704" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a175187d3a21718b8b763004d80632081" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addBackgroundDescriptor</definition>
        <argsstring>(SceneBackground const &amp;background, ashes::WriteDescriptorSetArray &amp;descriptorWrites, crg::ImageViewIdArray const &amp;targetImage, uint32_t &amp;index)</argsstring>
        <name>addBackgroundDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::addBackgroundDescriptor</qualifiedname>
        <param>
          <type><ref refid="d4/d2c/a06895" kindref="compound">SceneBackground</ref> const &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>crg::ImageViewIdArray const &amp;</type>
          <declname>targetImage</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="711" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a07d93177bb80fb20c5a5d6b24482537f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addGIDescriptor</definition>
        <argsstring>(SceneFlags sceneFlags, IndirectLightingData const &amp;indirectLighting, ashes::WriteDescriptorSetArray &amp;descriptorWrites, uint32_t &amp;index)</argsstring>
        <name>addGIDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::addGIDescriptor</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
          <declname>sceneFlags</declname>
        </param>
        <param>
          <type><ref refid="dd/d3d/a05967" kindref="compound">IndirectLightingData</ref> const &amp;</type>
          <declname>indirectLighting</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="715" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a13dacc48c77bfd913c884ececb9ac7ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::RenderNodesPass::addClusteredLightingDescriptor</definition>
        <argsstring>(FrustumClusters const &amp;frustumClusters, ashes::WriteDescriptorSetArray &amp;descriptorWrites, uint32_t &amp;index)</argsstring>
        <name>addClusteredLightingDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::addClusteredLightingDescriptor</qualifiedname>
        <param>
          <type><ref refid="d1/d77/a05915" kindref="compound">FrustumClusters</ref> const &amp;</type>
          <declname>frustumClusters</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="719" column="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d5/d96/a06531_1aa8a39797e37cbbc231df738a9c39ac1d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderNodesPass::doSubInitialise</definition>
        <argsstring>() const</argsstring>
        <name>doSubInitialise</name>
        <qualifiedname>castor3d::RenderNodesPass::doSubInitialise</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="836" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a60799ebf416de61b0525426e91102e93" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderNodesPass::doSubRecordInto</definition>
        <argsstring>(VkCommandBuffer commandBuffer) const</argsstring>
        <name>doSubRecordInto</name>
        <qualifiedname>castor3d::RenderNodesPass::doSubRecordInto</qualifiedname>
        <param>
          <type>VkCommandBuffer</type>
          <declname>commandBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="837" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1abbc1e617148b3d5dd5534063ed721044" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::VkDescriptorSetLayoutBindingArray</type>
        <definition>ashes::VkDescriptorSetLayoutBindingArray castor3d::RenderNodesPass::doCreateAdditionalBindings</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>doCreateAdditionalBindings</name>
        <qualifiedname>castor3d::RenderNodesPass::doCreateAdditionalBindings</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="916" column="42"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a109d2a5f09ecf6742528adae0eae9217" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; RenderPipelineUPtr &gt; &amp;</type>
        <definition>castor::Vector&lt; RenderPipelineUPtr &gt; &amp; castor3d::RenderNodesPass::doGetFrontPipelines</definition>
        <argsstring>()</argsstring>
        <name>doGetFrontPipelines</name>
        <qualifiedname>castor3d::RenderNodesPass::doGetFrontPipelines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="917" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a92221170f032c51cf962fc895050a527" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; RenderPipelineUPtr &gt; &amp;</type>
        <definition>castor::Vector&lt; RenderPipelineUPtr &gt; &amp; castor3d::RenderNodesPass::doGetBackPipelines</definition>
        <argsstring>()</argsstring>
        <name>doGetBackPipelines</name>
        <qualifiedname>castor3d::RenderNodesPass::doGetBackPipelines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="918" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a1c176b15f69dbf51b127b3863d726d23" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; RenderPipelineUPtr &gt; const &amp;</type>
        <definition>castor::Vector&lt; RenderPipelineUPtr &gt; const  &amp; castor3d::RenderNodesPass::doGetFrontPipelines</definition>
        <argsstring>() const</argsstring>
        <name>doGetFrontPipelines</name>
        <qualifiedname>castor3d::RenderNodesPass::doGetFrontPipelines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="919" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a08aacbb2ec91097544adfd963a3efaae" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; RenderPipelineUPtr &gt; const &amp;</type>
        <definition>castor::Vector&lt; RenderPipelineUPtr &gt; const  &amp; castor3d::RenderNodesPass::doGetBackPipelines</definition>
        <argsstring>() const</argsstring>
        <name>doGetBackPipelines</name>
        <qualifiedname>castor3d::RenderNodesPass::doGetBackPipelines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="920" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1aeb69d33cf2e3ab0f42065e351e90f84e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d1f/a06491" kindref="compound">PipelineAndID</ref></type>
        <definition>PipelineAndID castor3d::RenderNodesPass::doPreparePipeline</definition>
        <argsstring>(ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;vertexLayouts, ashes::DescriptorSetLayout const *meshletDescriptorLayout, PipelineFlags const &amp;flags, VkCullModeFlags cullMode)</argsstring>
        <name>doPreparePipeline</name>
        <qualifiedname>castor3d::RenderNodesPass::doPreparePipeline</qualifiedname>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>vertexLayouts</declname>
        </param>
        <param>
          <type>ashes::DescriptorSetLayout const *</type>
          <declname>meshletDescriptorLayout</declname>
        </param>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>VkCullModeFlags</type>
          <declname>cullMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="921" column="15"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a98615a368ce80932796551f533354f52" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::PipelineRasterizationStateCreateInfo</type>
        <definition>virtual C3D_API ashes::PipelineRasterizationStateCreateInfo castor3d::RenderNodesPass::doCreateRasterizationState</definition>
        <argsstring>(PipelineFlags const &amp;flags, VkCullModeFlags cullMode) const</argsstring>
        <name>doCreateRasterizationState</name>
        <qualifiedname>castor3d::RenderNodesPass::doCreateRasterizationState</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>VkCullModeFlags</type>
          <declname>cullMode</declname>
        </param>
        <briefdescription>
<para>Crée l&apos;état de rastérisation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cullMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de culling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="935" column="61"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a57b12814d0acb734bd8dde18c00c8677" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::PipelineDepthStencilStateCreateInfo</type>
        <definition>virtual C3D_API ashes::PipelineDepthStencilStateCreateInfo castor3d::RenderNodesPass::doCreateDepthStencilState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doCreateDepthStencilState</name>
        <qualifiedname>castor3d::RenderNodesPass::doCreateDepthStencilState</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1a97e10f3eb8d0c74fe74453183917491a">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d3/d83/a06287_1a876fa4b7195b471e51d04384a9664cb5">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d8/dcb/a06367_1a513277558ebdc089688e29007ca9f225">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="dc/d1d/a06379_1a9933119a6c802349646cabb3d81b33dc">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1a719cc90715a348ed3a0a99fca93ca0ef">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="dd/d9b/a06643_1aed83f5cc4bc3aa96bd09a73a95ac8648">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d8/d17/a06647_1a431ad68d57f1286f2a56a3fe5ee4de3a">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d1/d57/a06651_1af7380c4af2e595111ee95ccd7bc42d08">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1a66a1193830371815c6449cac35756345">doCreateDepthStencilState</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Crée l&apos;état de profondeur et stencil. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="945" column="60"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a282a48ba3376468aa2d6145f15dc916f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::PipelineColorBlendStateCreateInfo</type>
        <definition>virtual C3D_API ashes::PipelineColorBlendStateCreateInfo castor3d::RenderNodesPass::doCreateBlendState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doCreateBlendState</name>
        <qualifiedname>castor3d::RenderNodesPass::doCreateBlendState</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1aa6e532b649e1f2a0c74c02a6d1e5b498">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d3/d83/a06287_1a7c26034c5d5b3fb2fb4bfc4f2241b40f">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d8/dcb/a06367_1a0d7cf9c74270355b7467425d9186a956">doCreateBlendState</reimplementedby>
        <reimplementedby refid="dc/d1d/a06379_1a8a11ab062d5d7c78baf65043c46bf7d5">doCreateBlendState</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1abb20a657226949e0aa95085dbc747017">doCreateBlendState</reimplementedby>
        <reimplementedby refid="dd/d9b/a06643_1aa0de0d75db51aad5918c2aa0491b5266">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d8/d17/a06647_1aa08621776475de14262f7aa035ab4ed8">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d1/d57/a06651_1a7f0ba67fabce0835b927518d7cd1f2ae">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1a1bdbac2bc43c236e3ee53f13dfc85194">doCreateBlendState</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Crée l&apos;état de mélange des couleurs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="954" column="58"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ae466f2c6b4f0460c1ac1be11dcefd111" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::PipelineMultisampleStateCreateInfo</type>
        <definition>virtual C3D_API ashes::PipelineMultisampleStateCreateInfo castor3d::RenderNodesPass::doCreateMultisampleState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>doCreateMultisampleState</name>
        <qualifiedname>castor3d::RenderNodesPass::doCreateMultisampleState</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Crée l&apos;état de multisample. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="963" column="59" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="963" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a0963f2ac554b8367cfe1dbbb54a2e6df" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::RenderNodesPass::doFillAdditionalDescriptor</definition>
        <argsstring>(PipelineFlags const &amp;flags, ashes::WriteDescriptorSetArray &amp;descriptorWrites, ShadowMapLightTypeArray const &amp;shadowMaps, ShadowBuffer const *shadowBuffer)=0</argsstring>
        <name>doFillAdditionalDescriptor</name>
        <qualifiedname>castor3d::RenderNodesPass::doFillAdditionalDescriptor</qualifiedname>
        <reimplementedby refid="da/d78/a06259_1afcc7aff75b0fe1ab5a3bfbbc3f6ae1d3">doFillAdditionalDescriptor</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1a0118a6b6da80c63742d7c8e11beabbe8">doFillAdditionalDescriptor</reimplementedby>
        <reimplementedby refid="d3/df2/a06043_1a4849f780cd372e36d8346f18dee2a41a">doFillAdditionalDescriptor</reimplementedby>
        <reimplementedby refid="d3/d83/a06287_1a1d67fd569c83a4939834c8784c5572bb">doFillAdditionalDescriptor</reimplementedby>
        <reimplementedby refid="d8/dcb/a06367_1a3c93046dec7835d077c8e8cf17822a93">doFillAdditionalDescriptor</reimplementedby>
        <reimplementedby refid="dc/d1d/a06379_1a83ee2c93e356bc9842170396e1b9486f">doFillAdditionalDescriptor</reimplementedby>
        <reimplementedby refid="df/d90/a06587_1a4739eb57e85af513a6bb3e6a33cd5fe6">doFillAdditionalDescriptor</reimplementedby>
        <reimplementedby refid="d4/df1/a06639_1a51f6bba122127b748b3d1aa5412d3e1f">doFillAdditionalDescriptor</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a1e0853cf26ea6ce64763fa7f60d50b00" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d2/dab/a07363" kindref="compound">ShadowBuffer</ref> const *</type>
          <declname>shadowBuffer</declname>
        </param>
        <briefdescription>
<para>Initialise l&apos;ensemble de descripteurs additionnels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">descriptorWrites</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les descriptor writes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Les shadow maps. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le buffer contenant les données de configuration des ombres. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="981" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a3ed69713fdc67494afbab534fb4c2b23" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::RenderNodesPass::doAdjustFlags</definition>
        <argsstring>(PipelineFlags &amp;flags) const</argsstring>
        <name>doAdjustFlags</name>
        <qualifiedname>castor3d::RenderNodesPass::doAdjustFlags</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Modifie les indicateurs donnés pour le faire correspondre au pré-requis de la passe de rendus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="993" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1ac919dc2e1f949405e50313dd0ac81f60" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::RenderNodesPass::doGetSubmeshShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags, ast::ShaderBuilder &amp;builder) const</argsstring>
        <name>doGetSubmeshShaderSource</name>
        <qualifiedname>castor3d::RenderNodesPass::doGetSubmeshShaderSource</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1acae005b8a288f2d73bf9177b9ca21ac7">doGetSubmeshShaderSource</reimplementedby>
        <reimplementedby refid="dd/d9b/a06643_1aef9468ffc55b24d972125298811e4acf">doGetSubmeshShaderSource</reimplementedby>
        <reimplementedby refid="d8/d17/a06647_1af3bb05f5b792eeeaee6acccd40b9dcae">doGetSubmeshShaderSource</reimplementedby>
        <reimplementedby refid="d1/d57/a06651_1a1769cbef988001be3cbbbb30a6006868">doGetSubmeshShaderSource</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ast::ShaderBuilder &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Récupère le source du task shader qui correspond aux indicateurs donnés. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builder</parametername>
</parameternamelist>
<parameterdescription>
<para>Enregistree le shader. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1004" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d5/d96/a06531_1a3159226f2779a01404adc302cfbad191" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::RenderNodesPass::doGetPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags, ast::ShaderBuilder &amp;builder) const =0</argsstring>
        <name>doGetPixelShaderSource</name>
        <qualifiedname>castor3d::RenderNodesPass::doGetPixelShaderSource</qualifiedname>
        <reimplementedby refid="d3/df2/a06043_1a5a617d303b5cc828a03690fee1a55343">doGetPixelShaderSource</reimplementedby>
        <reimplementedby refid="da/d78/a06259_1a3e739239f613eed3e44a58ba2b0b2f43">doGetPixelShaderSource</reimplementedby>
        <reimplementedby refid="d3/d83/a06287_1ab5c4cc8ca9e18fdfa2d8ff076ef1aa40">doGetPixelShaderSource</reimplementedby>
        <reimplementedby refid="d8/dcb/a06367_1a49bf926fecd82c5e4173f24006532cb9">doGetPixelShaderSource</reimplementedby>
        <reimplementedby refid="dc/d1d/a06379_1a2d5d350cd63cacda7a07b249f82d0700">doGetPixelShaderSource</reimplementedby>
        <reimplementedby refid="dd/d9b/a06643_1afd3d0fff5c920b9efdaab3c020b35427">doGetPixelShaderSource</reimplementedby>
        <reimplementedby refid="d8/d17/a06647_1af2064e4a101fe0aba5167adcdbd08de8">doGetPixelShaderSource</reimplementedby>
        <reimplementedby refid="d1/d57/a06651_1a46ce9c680984e4c0392f60ccb599a23e">doGetPixelShaderSource</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1a146b032fe0c0ad0fc12a39ca44f67320">doGetPixelShaderSource</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ast::ShaderBuilder &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Récupère le source du pixel shader qui correspond aux indicateurs donnés. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">builder</parametername>
</parameternamelist>
<parameterdescription>
<para>Enregistree le shader. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderNodesPass.hpp" line="1016" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>RenderQueueHolder</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="5">
        <label>SceneCullerHolder</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="10">
        <label>castor3d::DepthPass</label>
        <link refid="d8/dcb/a06367"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>castor3d::ForwardRenderTechniquePass</label>
        <link refid="da/d78/a06259"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>castor3d::PickingPass</label>
        <link refid="d3/d83/a06287"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::RenderNodesPass</label>
        <link refid="d5/d96/a06531"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="private-inheritance">
        </childnode>
        <childnode refid="6" relation="private-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>castor3d::RenderTechniqueNodesPass</label>
        <link refid="df/d90/a06587"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>castor3d::ShadowMapPass</label>
        <link refid="d4/df1/a06639"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>castor3d::ShadowMapPassDirectional</label>
        <link refid="dd/d9b/a06643"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>castor3d::ShadowMapPassPoint</label>
        <link refid="d8/d17/a06647"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>castor3d::ShadowMapPassSpot</label>
        <link refid="d1/d57/a06651"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>castor3d::TransparentPass</label>
        <link refid="d1/d96/a06787"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>castor3d::VisibilityPass</label>
        <link refid="dc/d1d/a06379"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>castor3d::VoxelizePass</label>
        <link refid="d3/df2/a06043"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="7">
        <label>crg::RenderPass</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="21">
        <label>castor::Coords&lt; uint32_t, 2 &gt;</label>
        <link refid="d9/d6a/a09103"/>
        <childnode refid="22" relation="template-instance">
          <edgelabel>&lt; uint32_t, 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>castor::DataHolderT&lt; SizeData &gt;</label>
        <link refid="da/d50/a08167"/>
        <childnode refid="20" relation="template-instance">
          <edgelabel>&lt; SizeData &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>castor::FlagCombination&lt; ComponentModeFlag &gt;</label>
        <link refid="dd/dbb/a08207"/>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; ComponentModeFlag &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>castor::FlagCombination&lt; RenderFilter &gt;</label>
        <link refid="dd/dbb/a08207"/>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; RenderFilter &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>RenderQueueHolder</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="5">
        <label>SceneCullerHolder</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="8">
        <label>castor::SignalT&lt; RenderNodesPassChangeSignalFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; RenderNodesPassChangeSignalFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::basic_string&lt; xchar &gt;</label>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; xchar &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>castor3d::CameraUbo</label>
        <link refid="d1/ddf/a07743"/>
      </node>
      <node id="11">
        <label>castor3d::RenderDevice</label>
        <link refid="dc/d32/a06415"/>
        <childnode refid="12" relation="usage">
          <edgelabel>renderSystem</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::RenderNodesPass</label>
        <link refid="d5/d96/a06531"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="private-inheritance">
        </childnode>
        <childnode refid="6" relation="private-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>onSortNodes</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_device</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_renderSystem</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_cameraUbo</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_category</edgelabel>
          <edgelabel>m_typeName</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_filters</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_size</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_sceneUbo</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_componentsMask</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>castor3d::RenderSystem</label>
        <link refid="d5/d4e/a06559"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>castor3d::SceneUbo</label>
        <link refid="d5/de1/a07827"/>
      </node>
      <node id="22">
        <label>castor::Coords&lt; T, Count &gt;</label>
        <link refid="d9/d6a/a09103"/>
      </node>
      <node id="20">
        <label>castor::DataHolderT&lt; Data, Index &gt;</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="17">
        <label>castor::FlagCombination&lt; FlagType &gt;</label>
        <link refid="dd/dbb/a08207"/>
      </node>
      <node id="4">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="9">
        <label>castor::NonCopyable</label>
        <link refid="da/d36/a08315"/>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="10">
        <label>castor::SignalT&lt; Function &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>castor::Size</label>
        <link refid="d4/dd6/a09023"/>
        <childnode refid="19" relation="private-inheritance">
        </childnode>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>crg::RenderPass</label>
      </node>
      <node id="15">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Render/RenderNodesPass.hpp" line="295" column="1" bodyfile="Castor3D/Render/RenderNodesPass.hpp" bodystart="301" bodyend="1057"/>
    <listofallmembers>
      <member refid="d5/d96/a06531_1a414f84c6045877572abf26d3f453a25e" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addBackgroundBindings</name></member>
      <member refid="d5/d96/a06531_1a175187d3a21718b8b763004d80632081" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addBackgroundDescriptor</name></member>
      <member refid="d5/d96/a06531_1a6246f2ddd55511dc65da0357a4fad267" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addClusteredLightingBindings</name></member>
      <member refid="d5/d96/a06531_1a13dacc48c77bfd913c884ececb9ac7ed" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addClusteredLightingDescriptor</name></member>
      <member refid="d5/d96/a06531_1a04c87ec305b5b800088426907342d0ab" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addGIBindings</name></member>
      <member refid="d5/d96/a06531_1a07d93177bb80fb20c5a5d6b24482537f" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addGIDescriptor</name></member>
      <member refid="d5/d96/a06531_1ae630118cbb17cf8c473ba78e1143e8a2" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addShadowBindings</name></member>
      <member refid="d5/d96/a06531_1a71b985381d1383869c5b1fd6a5294c9c" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addShadowBindings</name></member>
      <member refid="d5/d96/a06531_1a162892ee16c6b21392c0148cb3c503d4" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addShadowDescriptor</name></member>
      <member refid="d5/d96/a06531_1a8c65d8809633914687f80a4ade0da304" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>addShadowDescriptor</name></member>
      <member refid="d5/d96/a06531_1a6512b8ee2afd3fd8a42f2036bf2ae1fc" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1a4ac67e954c117995f57d4564c640f3f3" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1ae7c0725098dbbcaf8ee541543783ef9f" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1a8ae3e04cfcf1b985f40506be53ca5df5" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1a53c9a4847c006814c4df955b6f644cf0" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1a1d742836cc8acca4cffa4f133a59d7ea" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>allowClusteredLighting</name></member>
      <member refid="d5/d96/a06531_1a4b46cd261a69c9e9a06436d5d6960520" prot="public" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>areDebugTargetsEnabled</name></member>
      <member refid="d5/d96/a06531_1af2bce197fda484e731721797d152aa6c" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>areValidPassFlags</name></member>
      <member refid="d5/d96/a06531_1a502117a53706318de843396e33070ac1" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>cleanupPipelines</name></member>
      <member refid="d5/d96/a06531_1a5a30b41e9d2d94465c894df550a9d43c" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>countNodes</name></member>
      <member refid="d5/d96/a06531_1a670b6db34472ea0bd4228c3ae86a1865" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>createBlendState</name></member>
      <member refid="d5/d96/a06531_1a79cb6d7ae1f83f67d907ccccc493aa51" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>createPipelineFlags</name></member>
      <member refid="d5/d96/a06531_1a0b604614f6aad12c3390a315b7ef7893" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>createPipelineFlags</name></member>
      <member refid="da/d50/a08167_1a10e2d04d7ff8cdd35fc4a4767374a7ee" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>DataHolderT</name></member>
      <member refid="da/d50/a08167_1a8c916c15a317fb9496b0f0cd6d2e6631" prot="private" virt="non-virtual" ambiguityscope="castor::DataHolderT::"><scope>castor3d::RenderNodesPass</scope><name>DataHolderT</name></member>
      <member refid="d5/d96/a06531_1ac8fd2eb7fdeb3260710b76939dd214c9" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doAccept</name></member>
      <member refid="d5/d96/a06531_1a95a4620da11c5d138dd318a204922df0" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doAddBackgroundBindings</name></member>
      <member refid="d5/d96/a06531_1a181bf9378c81a058ba983f4c4467077c" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doAddBackgroundDescriptor</name></member>
      <member refid="d5/d96/a06531_1ab5b35cf256705a232880eaab76b05e94" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doAddClusteredLightingBindings</name></member>
      <member refid="d5/d96/a06531_1afc4117b7e3bd55c3bd89f8d7e8bcbe26" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doAddClusteredLightingDescriptor</name></member>
      <member refid="d5/d96/a06531_1ac0a58902f8754c6e9fe2afaf7fdc4ce1" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doAddShadowBindings</name></member>
      <member refid="d5/d96/a06531_1aafabe87e12777941f0c888d54bcd5bde" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doAddShadowDescriptor</name></member>
      <member refid="d5/d96/a06531_1a3ed69713fdc67494afbab534fb4c2b23" prot="private" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doAdjustFlags</name></member>
      <member refid="d5/d96/a06531_1ad8c1a88c258efc8678041251077c101a" prot="protected" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doAdjustProgramFlags</name></member>
      <member refid="d5/d96/a06531_1ac1a751301d940ffa1f049b1192581f5b" prot="protected" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doAdjustSceneFlags</name></member>
      <member refid="d5/d96/a06531_1a1263b6f23e8f2ad82ec140e46891099b" prot="protected" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doAdjustSubmeshComponents</name></member>
      <member refid="d5/d96/a06531_1abbc1e617148b3d5dd5534063ed721044" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doCreateAdditionalBindings</name></member>
      <member refid="d5/d96/a06531_1a282a48ba3376468aa2d6145f15dc916f" prot="private" virt="pure-virtual"><scope>castor3d::RenderNodesPass</scope><name>doCreateBlendState</name></member>
      <member refid="d5/d96/a06531_1a57b12814d0acb734bd8dde18c00c8677" prot="private" virt="pure-virtual"><scope>castor3d::RenderNodesPass</scope><name>doCreateDepthStencilState</name></member>
      <member refid="d5/d96/a06531_1ae466f2c6b4f0460c1ac1be11dcefd111" prot="private" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doCreateMultisampleState</name></member>
      <member refid="d5/d96/a06531_1a98615a368ce80932796551f533354f52" prot="private" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doCreateRasterizationState</name></member>
      <member refid="d5/d96/a06531_1aba7e200b7926ceddaef34bff547f7337" prot="protected" virt="pure-virtual"><scope>castor3d::RenderNodesPass</scope><name>doFillAdditionalBindings</name></member>
      <member refid="d5/d96/a06531_1a0963f2ac554b8367cfe1dbbb54a2e6df" prot="private" virt="pure-virtual"><scope>castor3d::RenderNodesPass</scope><name>doFillAdditionalDescriptor</name></member>
      <member refid="d5/d96/a06531_1a92221170f032c51cf962fc895050a527" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doGetBackPipelines</name></member>
      <member refid="d5/d96/a06531_1a08aacbb2ec91097544adfd963a3efaae" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doGetBackPipelines</name></member>
      <member refid="d5/d96/a06531_1a109d2a5f09ecf6742528adae0eae9217" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doGetFrontPipelines</name></member>
      <member refid="d5/d96/a06531_1a1c176b15f69dbf51b127b3863d726d23" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doGetFrontPipelines</name></member>
      <member refid="d5/d96/a06531_1a3159226f2779a01404adc302cfbad191" prot="private" virt="pure-virtual"><scope>castor3d::RenderNodesPass</scope><name>doGetPixelShaderSource</name></member>
      <member refid="d5/d96/a06531_1a9e7d96d2aa5d3c3cec8e97cbea443fb2" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doGetProgram</name></member>
      <member refid="d5/d96/a06531_1ac919dc2e1f949405e50313dd0ac81f60" prot="private" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doGetSubmeshShaderSource</name></member>
      <member refid="d5/d96/a06531_1ad57f4d26855d8750d9df582d5bd9d859" prot="protected" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doIsValidPass</name></member>
      <member refid="d5/d96/a06531_1a18caa441e8929a13f0858375f207d41e" prot="protected" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doIsValidRenderable</name></member>
      <member refid="d5/d96/a06531_1aeb69d33cf2e3ab0f42065e351e90f84e" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doPreparePipeline</name></member>
      <member refid="d5/d96/a06531_1aa8a39797e37cbbc231df738a9c39ac1d" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doSubInitialise</name></member>
      <member refid="d5/d96/a06531_1a60799ebf416de61b0525426e91102e93" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doSubRecordInto</name></member>
      <member refid="d5/d96/a06531_1abfb05246334007ec0cafb80ca96645b8" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>doUpdateFlags</name></member>
      <member refid="d5/d96/a06531_1a6fa640d927538884f1f380391f418efe" prot="protected" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>doUpdateUbos</name></member>
      <member refid="d5/d96/a06531_1a1765f464a9e83d13c2b2b593b039a57a" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>filtersNonStatic</name></member>
      <member refid="d5/d96/a06531_1a814ea959eeafe107a1a3dbec20ec8be1" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>filtersStatic</name></member>
      <member refid="d5/d96/a06531_1a315239954b7b5cfcb48091098885aaf1" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>forceAdjustFlags</name></member>
      <member refid="d5/d96/a06531_1a544c3a9960a83220c9138cfd99ed1538" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>forceTwoSided</name></member>
      <member refid="d5/d96/a06531_1aefacacfc759f56e03f3159f5fa198e68" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getBillboardNodes</name></member>
      <member refid="d5/d96/a06531_1a3ebb33c26f82f60d29593b7f6906cde4" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getComponentsMask</name></member>
      <member refid="d5/d96/a06531_1a2e2a95a6c5f4416897fddfb72f828af7" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getCuller</name></member>
      <member refid="da/d50/a08167_1aa58614a2095d691f70b9ba3606422208" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getData</name></member>
      <member refid="da/d50/a08167_1abfb8cb106cf96be2481ab1f88cd2c006" prot="private" virt="non-virtual" ambiguityscope="castor::DataHolderT::"><scope>castor3d::RenderNodesPass</scope><name>getData</name></member>
      <member refid="d5/d96/a06531_1ab7b2f152311c81ba7e40e929768a323c" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getDeferredLightingFilter</name></member>
      <member refid="d5/d96/a06531_1a45731387c01aff7c27e3745e409b95c3" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getDrawCallsCount</name></member>
      <member refid="d5/d96/a06531_1abfe57d089df21849467f5986b55747bb" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getIgnoredNode</name></member>
      <member refid="d5/d96/a06531_1a342f76bbd2a2d93f8767d505d1d29c1d" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getInstancedSubmeshNodes</name></member>
      <member refid="d5/d96/a06531_1a50a70e8b9cce71d14a4608816f79ecc1" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getMatrixUbo</name></member>
      <member refid="d5/d96/a06531_1a4734af0eeeaada8645b51388a9dbcf52" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getMaxPipelineId</name></member>
      <member refid="d5/d3c/a08223_1abc1fa9ec1a50d2023373baa4d4c79519" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getName</name></member>
      <member refid="d6/da8/a08227_1ae200b1c3bde17ab092b0d0b37095ff76" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getOwner</name></member>
      <member refid="d5/d96/a06531_1acf787d1ba248a445b050059b684036a5" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getParallaxOcclusionFilter</name></member>
      <member refid="d5/d96/a06531_1a0796814a0755654f0cc104d6662eae35" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getPassPipelineNodes</name></member>
      <member refid="d5/d96/a06531_1a1d8bb6a81baa2e51664f9b0664ccdf16" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getPipelineNodesIndex</name></member>
      <member refid="d5/d96/a06531_1a7f9b1b50772eaf791e55948402baca7e" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getPipelinesCount</name></member>
      <member refid="d5/d96/a06531_1aafa91460eb128c5ba6a3aaa22a2866b6" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getPixelShaderSource</name></member>
      <member refid="d5/d96/a06531_1af1b6d51420a8619e01e78b0461a7c695" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getRenderFilters</name></member>
      <member refid="d5/d96/a06531_1ace7bc19e7a5bfeca3bf92be92a4e8ff9" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getRenderQueue</name></member>
      <member refid="d5/d96/a06531_1aa27814b79313d1147062cac3dcc72129" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getScene</name></member>
      <member refid="d5/d96/a06531_1aec5e83d0453393c6f5515d65aacf892a" prot="public" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>getShaderFlags</name></member>
      <member refid="d5/d96/a06531_1a0921b805792510d5db80402f6b7f211b" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getSubmeshNodes</name></member>
      <member refid="d5/d96/a06531_1a06aecd34c3102ad274663e1a7435bb6c" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getSubmeshShaderSource</name></member>
      <member refid="d5/d96/a06531_1a56908fd9eecc10c13f260dc8b4fbbeda" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getTypeID</name></member>
      <member refid="d5/d96/a06531_1aec8320461db2e82022829685730ad3b3" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getTypeName</name></member>
      <member refid="d5/d96/a06531_1a3623cbeff1e438d6d5d75f5efe84019d" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>getVisibleCounts</name></member>
      <member refid="d5/d96/a06531_1a513d00ebae0f33d194d2850fd955df96" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>handleStatic</name></member>
      <member refid="d5/d96/a06531_1aaa523fa00c569df52987cea35ed62a3e" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>hasNodes</name></member>
      <member refid="d5/d96/a06531_1a056e3b27b2a07a99002eccae51b15b03" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>initialiseAdditionalDescriptor</name></member>
      <member refid="d5/d96/a06531_1afaa56fab8c657f9787ca749ee0749fa0" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>isDirty</name></member>
      <member refid="d5/d96/a06531_1a336767d660d1fb33ed7ea1b55e03ea9e" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>isMeshShading</name></member>
      <member refid="d5/d96/a06531_1a755dd770f27422e825b64332cd4475e1" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>isOrderIndependent</name></member>
      <member refid="d5/d96/a06531_1aa42510e405f5f5ce10867c6d4c064f0a" prot="public" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>isPassEnabled</name></member>
      <member refid="d5/d96/a06531_1a1fc6229eddc94e26ca7862a090f2500c" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>isValidNode</name></member>
      <member refid="d5/d96/a06531_1aec2397ea54ec6154e12706ade0a77583" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>isValidPass</name></member>
      <member refid="d5/d96/a06531_1aa193e2fe28d00dfdd2452702a404899e" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>isValidRenderable</name></member>
      <member refid="d5/d96/a06531_1af1c00f585225ee0dfdd64149663021cb" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_additionalDescriptors</name></member>
      <member refid="d5/d96/a06531_1a513801c9cde3771b93ba7f6d23e583f7" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_allowClusteredLighting</name></member>
      <member refid="d5/d96/a06531_1a2e225189f21dec2e2235adf59af1d075" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_backPipelines</name></member>
      <member refid="d5/d96/a06531_1afcdf81e5e73989734d00aa99e39d250b" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_cameraUbo</name></member>
      <member refid="d5/d96/a06531_1a6d6c070855ebca54019a12e7f3490220" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_category</name></member>
      <member refid="d5/d96/a06531_1abb50286bb743024a7ce458049fa15d4d" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_componentsMask</name></member>
      <member refid="d5/d96/a06531_1a0e6f60c6661dd007ab6d1ea759e15391" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_deferredLightingFilter</name></member>
      <member refid="d5/d96/a06531_1a7869b4d26567e9de01eb5cc2a497f8b6" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_device</name></member>
      <member refid="d5/d96/a06531_1a99bd721ed2680d641fa3b8a8fa97c14d" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_filters</name></member>
      <member refid="d5/d96/a06531_1a00e35214ad070e24c4d6781acdafe33e" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_forceTwoSided</name></member>
      <member refid="d5/d96/a06531_1a867f79567b731a1678fe38be8191da5c" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_frontPipelines</name></member>
      <member refid="d5/d96/a06531_1a28210092a913c861c434b78a358abb33" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_handleStatic</name></member>
      <member refid="d5/d96/a06531_1aec485b6959629cdeafb0888f752837a5" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_index</name></member>
      <member refid="d5/d96/a06531_1a506d22126296803c8096b5897c506d22" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_isDirty</name></member>
      <member refid="d5/d96/a06531_1a3f4ae4d22173cd2ecd9200c7a1ca4ea6" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_meshShading</name></member>
      <member refid="d5/d3c/a08223_1a869b429a7190ecf614d8221b270e6dca" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_name</name></member>
      <member refid="d5/d96/a06531_1aacaa3131286df41ac9f40abe4de8846a" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_oit</name></member>
      <member refid="d5/d96/a06531_1aba7a52b88df493895c62950013b343ed" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_parallaxOcclusionFilter</name></member>
      <member refid="d5/d96/a06531_1a1894fb32c0494abfeae9cddc6eecb402" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_renderSystem</name></member>
      <member refid="d5/d96/a06531_1abe9ae7c14c7abfe881a52f22fecbc9d0" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_safeBand</name></member>
      <member refid="d5/d96/a06531_1ac8c58dbac580ea7726e03c4cd8f4d978" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_sceneUbo</name></member>
      <member refid="d5/d96/a06531_1a916bbd8f5333ca63b34f1815753b477b" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_size</name></member>
      <member refid="d5/d96/a06531_1ac4c97f4603740198e6692ba3969093d5" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_targetDepth</name></member>
      <member refid="d5/d96/a06531_1ae14dd1b28e5921d4b57e57e3c158eb19" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_targetImage</name></member>
      <member refid="d5/d96/a06531_1ad5b1bf0dbc1d04d7f0d78780b7aee2b6" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_typeID</name></member>
      <member refid="d5/d96/a06531_1af1e2549069672c4b478b76e8c039e4a2" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>m_typeName</name></member>
      <member refid="d5/d3c/a08223_1a4a6e4748603541685b04f95fb91efb26" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>NamedBaseT</name></member>
      <member refid="d5/d96/a06531_1a3b7652edc0ab92e892fa4ceb49187718" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>onSortNodes</name></member>
      <member refid="d6/da8/a08227_1a5efafa99a79dd1036a6ae3f3242a366b" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>OwnedBy</name></member>
      <member refid="d5/d96/a06531_1ad867fde7933293dbaaf024b8faa5ad69" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>PassDescriptorsMap</name></member>
      <member refid="d5/d96/a06531_1a14fa4038b2be656cabe30eec2ea582fd" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>prepareBackPipeline</name></member>
      <member refid="d5/d96/a06531_1ad135f3236bae3b299bfb7da40a137a36" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>prepareFrontPipeline</name></member>
      <member refid="d5/d3c/a08223_1a2d62ce1925efead03c4e0842c06b3e11" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>rename</name></member>
      <member refid="d5/d96/a06531_1a7d11ed92a0ef46d617aadaffc5ec06e1" prot="protected" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>RenderNodesPass</name></member>
      <member refid="da/d50/a08167_1ab8599478c3a26dfcc9571c920644b562" prot="private" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>setData</name></member>
      <member refid="d5/d96/a06531_1aefaeb0db8236eae2d8c2a5e1549e4cc0" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>setIgnoredNode</name></member>
      <member refid="d5/d96/a06531_1a63e0a2137b063c8eb22eb7043d4edc2b" prot="public" virt="virtual"><scope>castor3d::RenderNodesPass</scope><name>update</name></member>
      <member refid="d5/d96/a06531_1ab57af373bc7f2601fd4338ccb73ccd72" prot="public" virt="non-virtual"><scope>castor3d::RenderNodesPass</scope><name>~RenderNodesPass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
