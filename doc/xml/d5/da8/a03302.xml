<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="d5/da8/a03302" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::MaterialImporter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; Engine &gt;</basecompoundref>
    <includes local="no">MaterialImporter.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d5/da8/a03302_1ab9aee040bb95291e4e18c0e76cb24b20" prot="protected" static="no" mutable="no">
        <type><ref refid="da/d1b/a03286" kindref="compound">ImporterFile</ref> *</type>
        <definition>ImporterFile* castor3d::MaterialImporter::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <qualifiedname>castor3d::MaterialImporter::m_file</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="218" column="15" bodyfile="Material/MaterialImporter.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da8/a03302_1a0550f49d2355aad3bbc92214b47f4315" prot="protected" static="no" mutable="no">
        <type><ref refid="d5/da6/a01698_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref></type>
        <definition>Parameters castor3d::MaterialImporter::m_parameters</definition>
        <argsstring></argsstring>
        <name>m_parameters</name>
        <qualifiedname>castor3d::MaterialImporter::m_parameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="219" column="12" bodyfile="Material/MaterialImporter.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da8/a03302_1a0fdb912b0bb2ba17a30b0a3211b839d0" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="d5/da6/a01698_1a21f6621faaf5293fd7452f7fa0cd4136" kindref="member">PassComponentTextureFlag</ref>, <ref refid="d7/d60/a04126" kindref="compound">TextureConfiguration</ref> &gt;</type>
        <definition>std::map&lt; PassComponentTextureFlag, TextureConfiguration &gt; castor3d::MaterialImporter::m_textureRemaps</definition>
        <argsstring></argsstring>
        <name>m_textureRemaps</name>
        <qualifiedname>castor3d::MaterialImporter::m_textureRemaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="220" column="10" bodyfile="Material/MaterialImporter.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/da8/a03302_1a0f6e60067791a1a7f194c4ed5f13393e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual castor3d::MaterialImporter::~MaterialImporter</definition>
        <argsstring>()=default</argsstring>
        <name>~MaterialImporter</name>
        <qualifiedname>castor3d::MaterialImporter::~MaterialImporter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="25" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1ab0b8345e55598d3ad84110039a09f01a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::MaterialImporter::MaterialImporter</definition>
        <argsstring>(Engine &amp;engine)</argsstring>
        <name>MaterialImporter</name>
        <qualifiedname>castor3d::MaterialImporter::MaterialImporter</qualifiedname>
        <param>
          <type><ref refid="d8/d23/a03038" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="34" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1aa30d009c9907c8de2016547fc4abb693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::MaterialImporter::import</definition>
        <argsstring>(Material &amp;material, ImporterFile *file, Parameters const &amp;parameters, std::map&lt; PassComponentTextureFlag, TextureConfiguration &gt; const &amp;textureRemaps)</argsstring>
        <name>import</name>
        <qualifiedname>castor3d::MaterialImporter::import</qualifiedname>
        <param>
          <type><ref refid="d6/d90/a03298" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type><ref refid="da/d1b/a03286" kindref="compound">ImporterFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="d5/da6/a01698_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref> const &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="d5/da6/a01698_1a21f6621faaf5293fd7452f7fa0cd4136" kindref="member">PassComponentTextureFlag</ref>, <ref refid="d7/d60/a04126" kindref="compound">TextureConfiguration</ref> &gt; const &amp;</type>
          <declname>textureRemaps</declname>
        </param>
        <briefdescription>
<para><ref refid="db/dd3/a06070" kindref="compound">Scene</ref> import Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">material</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the imported data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>The location of the file to import. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Import configuration parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">textureRemaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The imported textures remapping parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if any problem occured. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="51" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1a91640d1be210846aff980d09df42a75e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::ImageRPtr</type>
        <definition>C3D_API castor::ImageRPtr castor3d::MaterialImporter::loadImage</definition>
        <argsstring>(castor::String const &amp;name, castor::ImageCreateParams const &amp;params) const</argsstring>
        <name>loadImage</name>
        <qualifiedname>castor3d::MaterialImporter::loadImage</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>castor::ImageCreateParams const &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Loads an image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The image name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The image creation parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The image. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="87" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1a6742b45527a2f2c142b064a9a3d85a2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::ImageRPtr</type>
        <definition>C3D_API castor::ImageRPtr castor3d::MaterialImporter::loadImage</definition>
        <argsstring>(castor::Path const &amp;path) const</argsstring>
        <name>loadImage</name>
        <qualifiedname>castor3d::MaterialImporter::loadImage</qualifiedname>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Loads an image from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The image file path (can be relative or absolute). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The image. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="99" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1ae123ca38e9173b762614ed14e20bea51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::ImageRPtr</type>
        <definition>C3D_API castor::ImageRPtr castor3d::MaterialImporter::loadImage</definition>
        <argsstring>(castor::String name, castor::String type, castor::ByteArray data) const</argsstring>
        <name>loadImage</name>
        <qualifiedname>castor3d::MaterialImporter::loadImage</qualifiedname>
        <param>
          <type>castor::String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>castor::String</type>
          <declname>type</declname>
        </param>
        <param>
          <type>castor::ByteArray</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Loads a texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The image name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The image data type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The image data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The texture unit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="114" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1a2198b2673f63bb82f029cf7a25600ee1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dbb/a04166" kindref="compound">TextureSourceInfo</ref></type>
        <definition>C3D_API TextureSourceInfo castor3d::MaterialImporter::loadTexture</definition>
        <argsstring>(castor3d::SamplerObs sampler, castor::Path const &amp;path, TextureConfiguration const &amp;config) const</argsstring>
        <name>loadTexture</name>
        <qualifiedname>castor3d::MaterialImporter::loadTexture</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ac06fa1a6b2c8945eca9aa59aa8c1ea51" kindref="member">castor3d::SamplerObs</ref></type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="d7/d60/a04126" kindref="compound">TextureConfiguration</ref> const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Loads a texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sampler</parametername>
</parameternamelist>
<parameterdescription>
<para>The sampler used by the texture. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The image file path (can be relative or absolute). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture unit configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The texture unit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="131" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1aa009d47a20a58236312f9bf2c1294e66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dbb/a04166" kindref="compound">TextureSourceInfo</ref></type>
        <definition>C3D_API TextureSourceInfo castor3d::MaterialImporter::loadTexture</definition>
        <argsstring>(castor3d::SamplerObs sampler, castor::String name, castor::String type, castor::ByteArray data, TextureConfiguration const &amp;config) const</argsstring>
        <name>loadTexture</name>
        <qualifiedname>castor3d::MaterialImporter::loadTexture</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ac06fa1a6b2c8945eca9aa59aa8c1ea51" kindref="member">castor3d::SamplerObs</ref></type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>castor::String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>castor::String</type>
          <declname>type</declname>
        </param>
        <param>
          <type>castor::ByteArray</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="d7/d60/a04126" kindref="compound">TextureConfiguration</ref> const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Loads a texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sampler</parametername>
</parameternamelist>
<parameterdescription>
<para>The sampler used by the texture. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The image name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The image data type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The image data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture unit configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The texture unit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="152" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1a3bc136643a3c7048b0dfeb845e6b1450" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::MaterialImporter::loadTexture</definition>
        <argsstring>(castor3d::SamplerObs sampler, castor::Path const &amp;path, PassTextureConfig const &amp;config, Pass &amp;pass) const</argsstring>
        <name>loadTexture</name>
        <qualifiedname>castor3d::MaterialImporter::loadTexture</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ac06fa1a6b2c8945eca9aa59aa8c1ea51" kindref="member">castor3d::SamplerObs</ref></type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="d7/ded/a04130" kindref="compound">PassTextureConfig</ref> const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="dd/daf/a04050" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
<para>Loads a texture and adds it to the given pass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sampler</parametername>
</parameternamelist>
<parameterdescription>
<para>The sampler used by the texture. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The image file path (can be relative or absolute). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture unit configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the loaded image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="171" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1ac809246fa46db5cdf2412ecbba21a07a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::MaterialImporter::loadTexture</definition>
        <argsstring>(castor3d::SamplerObs sampler, castor::String name, castor::String type, castor::ByteArray data, PassTextureConfig const &amp;config, Pass &amp;pass) const</argsstring>
        <name>loadTexture</name>
        <qualifiedname>castor3d::MaterialImporter::loadTexture</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1ac06fa1a6b2c8945eca9aa59aa8c1ea51" kindref="member">castor3d::SamplerObs</ref></type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>castor::String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>castor::String</type>
          <declname>type</declname>
        </param>
        <param>
          <type>castor::ByteArray</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="d7/ded/a04130" kindref="compound">PassTextureConfig</ref> const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="dd/daf/a04050" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
<para>Loads a texture and adds it to the given pass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sampler</parametername>
</parameternamelist>
<parameterdescription>
<para>The sampler used by the texture. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The image name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The image data type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The image data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture unit configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the loaded image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="193" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/da8/a03302_1a9437e8764d73d3adb128c07b1916f59a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::MaterialImporter::convertToNormalMap</definition>
        <argsstring>(castor::Path &amp;path, castor3d::TextureConfiguration &amp;config) const</argsstring>
        <name>convertToNormalMap</name>
        <qualifiedname>castor3d::MaterialImporter::convertToNormalMap</qualifiedname>
        <param>
          <type>castor::Path &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="d7/d60/a04126" kindref="compound">castor3d::TextureConfiguration</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Converts given height image file to a normal+height image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The image file path (can be relative or absolute), receives the resulting normal+height image file path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">config</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture unit configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if any error occured. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="211" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d5/da8/a03302_1ab5cbb9424c975a9efb8327fdad9ed919" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>static C3D_API bool castor3d::MaterialImporter::import</definition>
        <argsstring>(Material &amp;material, castor::Path const &amp;pathFile, Parameters const &amp;parameters, std::map&lt; PassComponentTextureFlag, TextureConfiguration &gt; const &amp;textureRemaps)</argsstring>
        <name>import</name>
        <qualifiedname>castor3d::MaterialImporter::import</qualifiedname>
        <param>
          <type><ref refid="d6/d90/a03298" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>pathFile</declname>
        </param>
        <param>
          <type><ref refid="d5/da6/a01698_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref> const &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="d5/da6/a01698_1a21f6621faaf5293fd7452f7fa0cd4136" kindref="member">PassComponentTextureFlag</ref>, <ref refid="d7/d60/a04126" kindref="compound">TextureConfiguration</ref> &gt; const &amp;</type>
          <declname>textureRemaps</declname>
        </param>
        <briefdescription>
<para><ref refid="db/dd3/a06070" kindref="compound">Scene</ref> import Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">material</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the imported data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pathFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The location of the file to import. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Import configuration parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">textureRemaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The imported textures remapping parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if any problem occured. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="71" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d5/da8/a03302_1a2ee140100ca78252db4ab7bea56e553d" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool castor3d::MaterialImporter::doImportMaterial</definition>
        <argsstring>(Material &amp;material)=0</argsstring>
        <name>doImportMaterial</name>
        <qualifiedname>castor3d::MaterialImporter::doImportMaterial</qualifiedname>
        <param>
          <type><ref refid="d6/d90/a03298" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialImporter.hpp" line="215" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::MaterialImporter</label>
        <link refid="d5/da8/a03302"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14">
        <label>K</label>
      </node>
      <node id="4">
        <label>castor3d::ParametersT&lt; castor::String &gt;</label>
        <link refid="dd/d3c/a04466"/>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; castor::String &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>T</label>
      </node>
      <node id="8">
        <label>std::array&lt; TextureFlagConfiguration, 4u &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; TextureFlagConfiguration, 4u &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::ImporterFile</label>
        <link refid="da/d1b/a03286"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::MaterialImporter</label>
        <link refid="d5/da8/a03302"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_file</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_parameters</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_textureRemaps</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor3d::ParametersT&lt; KeyT &gt;</label>
        <link refid="dd/d3c/a04466"/>
      </node>
      <node id="7">
        <label>castor3d::TextureConfiguration</label>
        <link refid="d7/d60/a04126"/>
        <childnode refid="8" relation="usage">
          <edgelabel>components</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>transform</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>castor3d::TextureFlagConfiguration</label>
        <link refid="d9/db9/a04122"/>
      </node>
      <node id="12">
        <label>castor3d::TextureTransform</label>
        <link refid="d4/ddb/a04118"/>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="6">
        <label>std::map&lt; PassComponentTextureFlag, castor3d::TextureConfiguration &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; PassComponentTextureFlag, castor3d::TextureConfiguration &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Material/MaterialImporter.hpp" line="21" column="1" bodyfile="Material/MaterialImporter.hpp" bodystart="23" bodyend="221"/>
    <listofallmembers>
      <member refid="d5/da8/a03302_1a9437e8764d73d3adb128c07b1916f59a" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>convertToNormalMap</name></member>
      <member refid="d5/da8/a03302_1a2ee140100ca78252db4ab7bea56e553d" prot="private" virt="pure-virtual"><scope>castor3d::MaterialImporter</scope><name>doImportMaterial</name></member>
      <member refid="d5/da8/a03302_1aa30d009c9907c8de2016547fc4abb693" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>import</name></member>
      <member refid="d5/da8/a03302_1ab5cbb9424c975a9efb8327fdad9ed919" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>import</name></member>
      <member refid="d5/da8/a03302_1a91640d1be210846aff980d09df42a75e" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>loadImage</name></member>
      <member refid="d5/da8/a03302_1a6742b45527a2f2c142b064a9a3d85a2e" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>loadImage</name></member>
      <member refid="d5/da8/a03302_1ae123ca38e9173b762614ed14e20bea51" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>loadImage</name></member>
      <member refid="d5/da8/a03302_1a2198b2673f63bb82f029cf7a25600ee1" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>loadTexture</name></member>
      <member refid="d5/da8/a03302_1aa009d47a20a58236312f9bf2c1294e66" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>loadTexture</name></member>
      <member refid="d5/da8/a03302_1a3bc136643a3c7048b0dfeb845e6b1450" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>loadTexture</name></member>
      <member refid="d5/da8/a03302_1ac809246fa46db5cdf2412ecbba21a07a" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>loadTexture</name></member>
      <member refid="d5/da8/a03302_1ab9aee040bb95291e4e18c0e76cb24b20" prot="protected" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>m_file</name></member>
      <member refid="d5/da8/a03302_1a0550f49d2355aad3bbc92214b47f4315" prot="protected" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>m_parameters</name></member>
      <member refid="d5/da8/a03302_1a0fdb912b0bb2ba17a30b0a3211b839d0" prot="protected" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>m_textureRemaps</name></member>
      <member refid="d5/da8/a03302_1ab0b8345e55598d3ad84110039a09f01a" prot="public" virt="non-virtual"><scope>castor3d::MaterialImporter</scope><name>MaterialImporter</name></member>
      <member refid="d5/da8/a03302_1a0f6e60067791a1a7f194c4ed5f13393e" prot="public" virt="virtual"><scope>castor3d::MaterialImporter</scope><name>~MaterialImporter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
