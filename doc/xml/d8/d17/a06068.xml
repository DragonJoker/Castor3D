<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="d8/d17/a06068" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::shader::ReflectionModel</compoundname>
    <derivedcompoundref refid="df/dcb/a03768" prot="public" virt="non-virtual">castor3d::shader::PbrReflectionModel</derivedcompoundref>
    <derivedcompoundref refid="d0/db5/a03788" prot="public" virt="non-virtual">castor3d::shader::PhongReflectionModel</derivedcompoundref>
    <includes local="no">GlslReflection.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d8/d17/a06068_1ae525d4f79a6aeb9c3283ad34fa60400d" prot="protected" static="no" mutable="no">
        <type>sdw::ShaderWriter &amp;</type>
        <definition>sdw::ShaderWriter&amp; castor3d::shader::ReflectionModel::m_writer</definition>
        <argsstring></argsstring>
        <name>m_writer</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_writer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="182" column="20" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1aca7e4f987a800a07a60e70823d3c227b" prot="protected" static="no" mutable="no">
        <type><ref refid="d3/da4/a06136" kindref="compound">Utils</ref> &amp;</type>
        <definition>Utils&amp; castor3d::shader::ReflectionModel::m_utils</definition>
        <argsstring></argsstring>
        <name>m_utils</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_utils</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="183" column="8" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1a7efe38f9db325fde8d26111ac4d865ba" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::shader::ReflectionModel::m_hasIblSupport</definition>
        <argsstring></argsstring>
        <name>m_hasIblSupport</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_hasIblSupport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="184" column="6" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1aee7d77422033dfb01497ba196cdef222" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Void, InOutBlendComponents, sdw::InVec3, sdw::InVec3, sdw::InCombinedImage2DRgba32, sdw::InVec2, sdw::InUInt, sdw::InUInt, sdw::InFloat, sdw::OutVec3, sdw::OutVec3, sdw::OutVec3, sdw::OutVec3, sdw::OutVec3, sdw::OutVec3 &gt;</type>
        <definition>sdw::Function&lt; sdw::Void , InOutBlendComponents , sdw::InVec3 , sdw::InVec3 , sdw::InCombinedImage2DRgba32 , sdw::InVec2 , sdw::InUInt , sdw::InUInt , sdw::InFloat , sdw::OutVec3 , sdw::OutVec3 , sdw::OutVec3 , sdw::OutVec3 , sdw::OutVec3 , sdw::OutVec3 &gt; castor3d::shader::ReflectionModel::m_computeForward</definition>
        <argsstring></argsstring>
        <name>m_computeForward</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_computeForward</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="199" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1a45aa8674370ca23436611a8dd779d839" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Void, InOutBlendComponents, sdw::InVec3, sdw::InUInt, sdw::InUInt, sdw::InFloat, sdw::OutVec3, sdw::OutVec3, sdw::OutVec3, sdw::OutVec3, sdw::OutVec3, sdw::OutVec3 &gt;</type>
        <definition>sdw::Function&lt; sdw::Void , InOutBlendComponents , sdw::InVec3 , sdw::InUInt , sdw::InUInt , sdw::InFloat , sdw::OutVec3 , sdw::OutVec3 , sdw::OutVec3 , sdw::OutVec3 , sdw::OutVec3 , sdw::OutVec3 &gt; castor3d::shader::ReflectionModel::m_computeDeferred</definition>
        <argsstring></argsstring>
        <name>m_computeDeferred</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_computeDeferred</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="211" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1a6295894be3ea19ea49a9ce8c8ca01474" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Boolean, sdw::InVec3, sdw::InVec3, sdw::InMat4, sdw::InCombinedImage2DR32, sdw::InVec2, sdw::InFloat, sdw::InBoolean, sdw::InVec3, sdw::InFloat, sdw::InFloat, sdw::InFloat, sdw::InFloat, sdw::InFloat, sdw::OutVec2, sdw::OutVec3 &gt;</type>
        <definition>sdw::Function&lt; sdw::Boolean , sdw::InVec3 , sdw::InVec3 , sdw::InMat4 , sdw::InCombinedImage2DR32 , sdw::InVec2 , sdw::InFloat , sdw::InBoolean , sdw::InVec3 , sdw::InFloat , sdw::InFloat , sdw::InFloat , sdw::InFloat , sdw::InFloat , sdw::OutVec2 , sdw::OutVec3 &gt; castor3d::shader::ReflectionModel::m_traceScreenSpace</definition>
        <argsstring></argsstring>
        <name>m_traceScreenSpace</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_traceScreenSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="228" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1a4dacf94e9e976b47e13deed31611e60e" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Vec4, sdw::InVec3, sdw::InVec3, sdw::InVec2, sdw::InVec4, sdw::InCombinedImage2DR32, sdw::InCombinedImage2DRgba32, sdw::InCombinedImage2DRgba32 &gt;</type>
        <definition>sdw::Function&lt; sdw::Vec4 , sdw::InVec3 , sdw::InVec3 , sdw::InVec2 , sdw::InVec4 , sdw::InCombinedImage2DR32 , sdw::InCombinedImage2DRgba32 , sdw::InCombinedImage2DRgba32 &gt; castor3d::shader::ReflectionModel::m_computeScreenSpace</definition>
        <argsstring></argsstring>
        <name>m_computeScreenSpace</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_computeScreenSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="236" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1a13a8e54e825737ebff8c2ff6b084af0b" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Void, sdw::InVec3, sdw::InVec3, sdw::InCombinedImageCubeArrayRgba32, sdw::InUInt, sdw::InVec3, sdw::InFloat, sdw::OutVec3, sdw::OutVec3 &gt;</type>
        <definition>sdw::Function&lt; sdw::Void , sdw::InVec3 , sdw::InVec3 , sdw::InCombinedImageCubeArrayRgba32 , sdw::InUInt , sdw::InVec3 , sdw::InFloat , sdw::OutVec3 , sdw::OutVec3 &gt; castor3d::shader::ReflectionModel::m_computeReflEnvMaps</definition>
        <argsstring></argsstring>
        <name>m_computeReflEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_computeReflEnvMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="246" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1af32353800e48f972998b0e014e47a8ab" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Vec3, sdw::InVec3, sdw::InVec3, sdw::InCombinedImageCubeArrayRgba32, sdw::InUInt, sdw::InVec3, sdw::InFloat &gt;</type>
        <definition>sdw::Function&lt; sdw::Vec3 , sdw::InVec3 , sdw::InVec3 , sdw::InCombinedImageCubeArrayRgba32 , sdw::InUInt , sdw::InVec3 , sdw::InFloat &gt; castor3d::shader::ReflectionModel::m_computeSpecularReflEnvMaps</definition>
        <argsstring></argsstring>
        <name>m_computeSpecularReflEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_computeSpecularReflEnvMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="253" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1ae618404a9382d17fe595599e8e080327" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Vec3, sdw::InVec3, sdw::InVec3, sdw::InCombinedImageCubeArrayRgba32, sdw::InUInt, sdw::InFloat &gt;</type>
        <definition>sdw::Function&lt; sdw::Vec3 , sdw::InVec3 , sdw::InVec3 , sdw::InCombinedImageCubeArrayRgba32 , sdw::InUInt , sdw::InFloat &gt; castor3d::shader::ReflectionModel::m_computeSheenReflEnvMaps</definition>
        <argsstring></argsstring>
        <name>m_computeSheenReflEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_computeSheenReflEnvMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="259" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1a8b5f2cf6beb19134ad1827c3ad91b9ca" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Vec3, sdw::InVec3, sdw::InVec3, sdw::InCombinedImageCubeArrayRgba32, sdw::InUInt, sdw::InFloat, sdw::InVec3, sdw::InFloat &gt;</type>
        <definition>sdw::Function&lt; sdw::Vec3 , sdw::InVec3 , sdw::InVec3 , sdw::InCombinedImageCubeArrayRgba32 , sdw::InUInt , sdw::InFloat , sdw::InVec3 , sdw::InFloat &gt; castor3d::shader::ReflectionModel::m_computeRefrEnvMaps</definition>
        <argsstring></argsstring>
        <name>m_computeRefrEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_computeRefrEnvMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="267" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d17/a06068_1a3544a403387ed982732736c7148493d5" prot="protected" static="no" mutable="no">
        <type>sdw::Function&lt; sdw::Vec3, sdw::InVec3, sdw::InVec3, sdw::InVec3, sdw::InCombinedImage2DRgba32, sdw::InVec2, sdw::InFloat, sdw::InVec3, sdw::InVec3, sdw::InFloat, sdw::InFloat, sdw::InVec3, sdw::InFloat &gt;</type>
        <definition>sdw::Function&lt; sdw::Vec3 , sdw::InVec3 , sdw::InVec3 , sdw::InVec3 , sdw::InCombinedImage2DRgba32 , sdw::InVec2 , sdw::InFloat , sdw::InVec3 , sdw::InVec3 , sdw::InFloat , sdw::InFloat , sdw::InVec3 , sdw::InFloat &gt; castor3d::shader::ReflectionModel::m_computeRefrSceneMap</definition>
        <argsstring></argsstring>
        <name>m_computeRefrSceneMap</name>
        <qualifiedname>castor3d::shader::ReflectionModel::m_computeRefrSceneMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="280" column="2" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d17/a06068_1a6c8c6c2966a64329a71c5c814917fda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::shader::ReflectionModel::ReflectionModel</definition>
        <argsstring>(sdw::ShaderWriter &amp;writer, Utils &amp;utils, bool hasIblSupport)</argsstring>
        <name>ReflectionModel</name>
        <qualifiedname>castor3d::shader::ReflectionModel::ReflectionModel</qualifiedname>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="d3/da4/a06136" kindref="compound">Utils</ref> &amp;</type>
          <declname>utils</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasIblSupport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="15" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1ab741a9bc5a596e2f5684120b015bd578" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>virtual C3D_API castor3d::shader::ReflectionModel::~ReflectionModel</definition>
        <argsstring>()=default</argsstring>
        <name>~ReflectionModel</name>
        <qualifiedname>castor3d::shader::ReflectionModel::~ReflectionModel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="18" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1af8477b6bdb68264bd9efcc9a32e45cc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> sdw::RetVec3</type>
        <definition>C3D_API sdw::RetVec3 castor3d::shader::ReflectionModel::computeIncident</definition>
        <argsstring>(sdw::Vec3 const &amp;wsPosition, sdw::Vec3 const &amp;wsCamera) const</argsstring>
        <name>computeIncident</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeIncident</qualifiedname>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsPosition</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsCamera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="20" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1afdfa3fa7100de19b4cb1ce1287ba229b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::ReflectionModel::computeCombined</definition>
        <argsstring>(BlendComponents &amp;components, sdw::Vec3 const &amp;incident, sdw::Vec3 const &amp;position, BackgroundModel &amp;background, sdw::CombinedImage2DRgba32 const &amp;mippedScene, MatrixData const &amp;matrices, sdw::Vec2 const &amp;sceneUv, sdw::UInt const &amp;envMapIndex, sdw::UInt const &amp;hasReflection, sdw::Float const &amp;refractionRatio, sdw::Vec3 &amp;ambient, sdw::Vec3 &amp;reflectedDiffuse, sdw::Vec3 &amp;reflectedSpecular, sdw::Vec3 &amp;refracted, sdw::Vec3 &amp;coatReflected, sdw::Vec3 &amp;sheenReflected)</argsstring>
        <name>computeCombined</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeCombined</qualifiedname>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>incident</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="d1/d4e/a05972" kindref="compound">BackgroundModel</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type>sdw::CombinedImage2DRgba32 const &amp;</type>
          <declname>mippedScene</declname>
        </param>
        <param>
          <type><ref refid="d1/dec/a06204" kindref="compound">MatrixData</ref> const &amp;</type>
          <declname>matrices</declname>
        </param>
        <param>
          <type>sdw::Vec2 const &amp;</type>
          <declname>sceneUv</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>hasReflection</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>refractionRatio</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>ambient</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>reflectedDiffuse</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>reflectedSpecular</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>refracted</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>coatReflected</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>sheenReflected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="22" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1a1d5178593d1ce2a07e562ab00247ceae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::ReflectionModel::computeCombined</definition>
        <argsstring>(BlendComponents &amp;components, sdw::Vec3 const &amp;incident, BackgroundModel &amp;background, sdw::UInt const &amp;envMapIndex, sdw::UInt const &amp;hasReflection, sdw::Float const &amp;refractionRatio, sdw::Vec3 &amp;ambient, sdw::Vec3 &amp;reflectedDiffuse, sdw::Vec3 &amp;reflectedSpecular, sdw::Vec3 &amp;refracted, sdw::Vec3 &amp;coatReflected, sdw::Vec3 &amp;sheenReflected)</argsstring>
        <name>computeCombined</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeCombined</qualifiedname>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>incident</declname>
        </param>
        <param>
          <type><ref refid="d1/d4e/a05972" kindref="compound">BackgroundModel</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>hasReflection</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>refractionRatio</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>ambient</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>reflectedDiffuse</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>reflectedSpecular</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>refracted</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>coatReflected</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>sheenReflected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="38" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1aa34d98ba0f8786d19d41a516797e0180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::ReflectionModel::computeReflections</definition>
        <argsstring>(BlendComponents &amp;components, Surface const &amp;surface, SceneData const &amp;sceneData, BackgroundModel &amp;background, sdw::UInt envMapIndex, sdw::UInt const &amp;reflection, sdw::Vec3 &amp;reflectedDiffuse, sdw::Vec3 &amp;reflectedSpecular)</argsstring>
        <name>computeReflections</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeReflections</qualifiedname>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <param>
          <type><ref refid="da/db0/a06096" kindref="compound">Surface</ref> const &amp;</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="db/d70/a06252" kindref="compound">SceneData</ref> const &amp;</type>
          <declname>sceneData</declname>
        </param>
        <param>
          <type><ref refid="d1/d4e/a05972" kindref="compound">BackgroundModel</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type>sdw::UInt</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>reflection</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>reflectedDiffuse</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>reflectedSpecular</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="50" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1a92bb7f8a94898cf2a545ab50a9461980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> sdw::Vec3</type>
        <definition>C3D_API sdw::Vec3 castor3d::shader::ReflectionModel::computeRefractions</definition>
        <argsstring>(BlendComponents &amp;components, Surface const &amp;surface, SceneData const &amp;sceneData, BackgroundModel &amp;background, sdw::UInt envMapIndex, sdw::UInt const &amp;refraction, sdw::Float const &amp;refractionRatio, sdw::Float const &amp;transmission)</argsstring>
        <name>computeRefractions</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeRefractions</qualifiedname>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <param>
          <type><ref refid="da/db0/a06096" kindref="compound">Surface</ref> const &amp;</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="db/d70/a06252" kindref="compound">SceneData</ref> const &amp;</type>
          <declname>sceneData</declname>
        </param>
        <param>
          <type><ref refid="d1/d4e/a05972" kindref="compound">BackgroundModel</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type>sdw::UInt</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>refraction</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>refractionRatio</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>transmission</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="58" column="19"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1ab2585a5602912c735611268e28991e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> sdw::RetVec4</type>
        <definition>C3D_API sdw::RetVec4 castor3d::shader::ReflectionModel::computeScreenSpace</definition>
        <argsstring>(MatrixData const &amp;matrixData, sdw::Vec3 const &amp;viewPosition, sdw::Vec3 const &amp;worldNormal, sdw::Vec2 const &amp;texcoord, sdw::Vec4 const &amp;ssrSettings, sdw::CombinedImage2DR32 const &amp;depthMap, sdw::CombinedImage2DRgba32 const &amp;normalMap, sdw::CombinedImage2DRgba32 const &amp;colourMap)</argsstring>
        <name>computeScreenSpace</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeScreenSpace</qualifiedname>
        <param>
          <type><ref refid="d1/dec/a06204" kindref="compound">MatrixData</ref> const &amp;</type>
          <declname>matrixData</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>viewPosition</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>worldNormal</declname>
        </param>
        <param>
          <type>sdw::Vec2 const &amp;</type>
          <declname>texcoord</declname>
        </param>
        <param>
          <type>sdw::Vec4 const &amp;</type>
          <declname>ssrSettings</declname>
        </param>
        <param>
          <type>sdw::CombinedImage2DR32 const &amp;</type>
          <declname>depthMap</declname>
        </param>
        <param>
          <type>sdw::CombinedImage2DRgba32 const &amp;</type>
          <declname>normalMap</declname>
        </param>
        <param>
          <type>sdw::CombinedImage2DRgba32 const &amp;</type>
          <declname>colourMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="66" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1ab9b0bb3765e3bdf38bdacf7bef6b4b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sdw::RetBoolean</type>
        <definition>sdw::RetBoolean castor3d::shader::ReflectionModel::traceScreenSpace</definition>
        <argsstring>(sdw::Vec3 csOrigin, sdw::Vec3 csDirection, sdw::Mat4 projectToPixelMatrix, sdw::CombinedImage2DR32 csZBuffer, sdw::Vec2 csZBufferSize, sdw::Float csZThickness, sdw::Boolean csZBufferIsHyperbolic, sdw::Vec3 clipInfo, sdw::Float nearPlaneZ, sdw::Float stride, sdw::Float jitterFraction, sdw::Float maxSteps, sdw::Float maxRayTraceDistance, sdw::Vec2 &amp;hitPixel, sdw::Vec3 &amp;csHitPoint)</argsstring>
        <name>traceScreenSpace</name>
        <qualifiedname>castor3d::shader::ReflectionModel::traceScreenSpace</qualifiedname>
        <param>
          <type>sdw::Vec3</type>
          <declname>csOrigin</declname>
        </param>
        <param>
          <type>sdw::Vec3</type>
          <declname>csDirection</declname>
        </param>
        <param>
          <type>sdw::Mat4</type>
          <declname>projectToPixelMatrix</declname>
        </param>
        <param>
          <type>sdw::CombinedImage2DR32</type>
          <declname>csZBuffer</declname>
        </param>
        <param>
          <type>sdw::Vec2</type>
          <declname>csZBufferSize</declname>
        </param>
        <param>
          <type>sdw::Float</type>
          <declname>csZThickness</declname>
        </param>
        <param>
          <type>sdw::Boolean</type>
          <declname>csZBufferIsHyperbolic</declname>
        </param>
        <param>
          <type>sdw::Vec3</type>
          <declname>clipInfo</declname>
        </param>
        <param>
          <type>sdw::Float</type>
          <declname>nearPlaneZ</declname>
        </param>
        <param>
          <type>sdw::Float</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>sdw::Float</type>
          <declname>jitterFraction</declname>
        </param>
        <param>
          <type>sdw::Float</type>
          <declname>maxSteps</declname>
        </param>
        <param>
          <type>sdw::Float</type>
          <declname>maxRayTraceDistance</declname>
        </param>
        <param>
          <type>sdw::Vec2 &amp;</type>
          <declname>hitPixel</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>csHitPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csOrigin</parametername>
</parameternamelist>
<parameterdescription>
<para>Camera-space ray origin, which must be within the view volume and must have z &lt; -0.01 and project within the valid screen rectangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>csDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit length camera-space ray direction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>projectToPixelMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>A projection matrix that maps to pixel coordinates (not [-1, +1] normalized device coordinates). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>csZBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth or camera-space Z buffer, depending on the value of <emphasis>csZBufferIsHyperbolic</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>csZBufferSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimensions of csZBuffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>csZThickness</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d6/dfa/a05552" kindref="compound">Camera</ref> space thickness to ascribe to each pixel in the depth buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>csZBufferIsHyperbolic</parametername>
</parameternamelist>
<parameterdescription>
<para>True if csZBuffer is an OpenGL depth buffer, false (faster) if csZBuffer contains (negative) &quot;linear&quot; camera space z values. Const so that the compiler can evaluate the branch based on it at compile time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clipInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>See G3D::Camera documentation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nearPlaneZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Negative number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>Step in horizontal or vertical pixels between samples. This is a float because integer math is slow on GPUs, but should be set to an integer &gt;= 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jitterFraction</parametername>
</parameternamelist>
<parameterdescription>
<para>Number between 0 and 1 for how far to bump the ray in stride units to conceal banding artifacts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSteps</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of iterations. Higher gives better images but may be slow. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxRayTraceDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum camera-space distance to trace before returning a miss. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hitPixel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pixel coordinates of the first intersection with the scene. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>csHitPoint</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d6/dfa/a05552" kindref="compound">Camera</ref> space location of the ray hit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="109" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d17/a06068_1a57419c3cf4f20a97d649dc406d6f5e04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::shader::ReflectionModel::computeReflEnvMaps</definition>
        <argsstring>(sdw::Vec3 const &amp;wsIncident, sdw::Vec3 const &amp;wsNormal, sdw::Float const &amp;roughness, sdw::CombinedImageCubeArrayRgba32 const &amp;envMap, sdw::UInt const &amp;envMapIndex, BlendComponents &amp;components, sdw::Vec3 &amp;reflectedDiffuse, sdw::Vec3 &amp;reflectedSpecular)</argsstring>
        <name>computeReflEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeReflEnvMaps</qualifiedname>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsIncident</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsNormal</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>roughness</declname>
        </param>
        <param>
          <type>sdw::CombinedImageCubeArrayRgba32 const &amp;</type>
          <declname>envMap</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>reflectedDiffuse</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>reflectedSpecular</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="126" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1a9584555f1792f2f04700f7684a146454" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sdw::RetVec3</type>
        <definition>sdw::RetVec3 castor3d::shader::ReflectionModel::computeSpecularReflEnvMaps</definition>
        <argsstring>(sdw::Vec3 const &amp;wsIncident, sdw::Vec3 const &amp;wsNormal, sdw::Float const &amp;roughness, sdw::CombinedImageCubeArrayRgba32 const &amp;envMap, sdw::UInt const &amp;envMapIndex, BlendComponents &amp;components)</argsstring>
        <name>computeSpecularReflEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeSpecularReflEnvMaps</qualifiedname>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsIncident</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsNormal</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>roughness</declname>
        </param>
        <param>
          <type>sdw::CombinedImageCubeArrayRgba32 const &amp;</type>
          <declname>envMap</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="134" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1a8bb6b2f9b2ab1b191adb3e08b24f51ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sdw::RetVec3</type>
        <definition>sdw::RetVec3 castor3d::shader::ReflectionModel::computeSheenReflEnvMaps</definition>
        <argsstring>(sdw::Vec3 const &amp;wsIncident, sdw::Vec3 const &amp;wsNormal, sdw::CombinedImageCubeArrayRgba32 const &amp;envMap, sdw::UInt const &amp;envMapIndex, BlendComponents &amp;components)</argsstring>
        <name>computeSheenReflEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeSheenReflEnvMaps</qualifiedname>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsIncident</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsNormal</declname>
        </param>
        <param>
          <type>sdw::CombinedImageCubeArrayRgba32 const &amp;</type>
          <declname>envMap</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="140" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1a493fee0dab2983b063b8de4eae5cc058" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sdw::RetVec3</type>
        <definition>sdw::RetVec3 castor3d::shader::ReflectionModel::computeRefrEnvMaps</definition>
        <argsstring>(sdw::Vec3 const &amp;wsIncident, sdw::Vec3 const &amp;wsNormal, sdw::CombinedImageCubeArrayRgba32 const &amp;envMap, sdw::UInt const &amp;envMapIndex, sdw::Float const &amp;refractionRatio, BlendComponents &amp;components)</argsstring>
        <name>computeRefrEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeRefrEnvMaps</qualifiedname>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsIncident</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsNormal</declname>
        </param>
        <param>
          <type>sdw::CombinedImageCubeArrayRgba32 const &amp;</type>
          <declname>envMap</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>refractionRatio</declname>
        </param>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="145" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1ab28e1eba3e8c7cf939b8ce39c0485b95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sdw::RetVec3</type>
        <definition>sdw::RetVec3 castor3d::shader::ReflectionModel::computeRefrSceneMap</definition>
        <argsstring>(sdw::Vec3 const &amp;wsIncident, sdw::Vec3 const &amp;wsNormal, sdw::Vec3 const &amp;wsPosition, sdw::CombinedImage2DRgba32 const &amp;sceneMap, MatrixData const &amp;matrices, sdw::Vec2 sceneUv, sdw::Float const &amp;refractionRatio, BlendComponents &amp;components)</argsstring>
        <name>computeRefrSceneMap</name>
        <qualifiedname>castor3d::shader::ReflectionModel::computeRefrSceneMap</qualifiedname>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsIncident</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsNormal</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsPosition</declname>
        </param>
        <param>
          <type>sdw::CombinedImage2DRgba32 const &amp;</type>
          <declname>sceneMap</declname>
        </param>
        <param>
          <type><ref refid="d1/dec/a06204" kindref="compound">MatrixData</ref> const &amp;</type>
          <declname>matrices</declname>
        </param>
        <param>
          <type>sdw::Vec2</type>
          <declname>sceneUv</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>refractionRatio</declname>
        </param>
        <param>
          <type><ref refid="d7/d4b/a05980" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="151" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1a5f68297ccf2adcbde34f64cf8e36b0a5" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void castor3d::shader::ReflectionModel::doAdjustAmbient</definition>
        <argsstring>(sdw::Vec3 &amp;ambient) const</argsstring>
        <name>doAdjustAmbient</name>
        <qualifiedname>castor3d::shader::ReflectionModel::doAdjustAmbient</qualifiedname>
        <reimplementedby refid="d0/db5/a03788_1a019fbe4cc3a77e258d14e28a564f3b83">doAdjustAmbient</reimplementedby>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>ambient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="160" column="14" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1a8402c9d34098578beb2df3905baa1c67" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void castor3d::shader::ReflectionModel::doAdjustAlbedo</definition>
        <argsstring>(sdw::Vec3 &amp;albedo) const</argsstring>
        <name>doAdjustAlbedo</name>
        <qualifiedname>castor3d::shader::ReflectionModel::doAdjustAlbedo</qualifiedname>
        <reimplementedby refid="d0/db5/a03788_1a00e19bf73cd2b2455aed133a3c30fad9">doAdjustAlbedo</reimplementedby>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>albedo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="164" column="14" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1a0d4ff5b964eec02d0b41a75d0620428a" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void castor3d::shader::ReflectionModel::doDeclareComputeReflEnvMaps</definition>
        <argsstring>()=0</argsstring>
        <name>doDeclareComputeReflEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::doDeclareComputeReflEnvMaps</qualifiedname>
        <reimplementedby refid="df/dcb/a03768_1a8dc8badae7478d1a890cf9bbb74827d1">doDeclareComputeReflEnvMaps</reimplementedby>
        <reimplementedby refid="d0/db5/a03788_1a8dcb32a1e2e14662187232d8a826302c">doDeclareComputeReflEnvMaps</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="168" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1abe0d52e2bd2c1192ee5e8732e365f054" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void castor3d::shader::ReflectionModel::doDeclareComputeRefrEnvMaps</definition>
        <argsstring>()=0</argsstring>
        <name>doDeclareComputeRefrEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::doDeclareComputeRefrEnvMaps</qualifiedname>
        <reimplementedby refid="df/dcb/a03768_1a8cabfcaf3da2bb4fb10773bd3dfe5ab7">doDeclareComputeRefrEnvMaps</reimplementedby>
        <reimplementedby refid="d0/db5/a03788_1ad8aa81b9bc25789e62646d7ca138ef14">doDeclareComputeRefrEnvMaps</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="169" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d17/a06068_1aa0f0fae6cf9912bc72aa7655ce9898c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void castor3d::shader::ReflectionModel::doDeclareComputeSpecularReflEnvMaps</definition>
        <argsstring>()=0</argsstring>
        <name>doDeclareComputeSpecularReflEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::doDeclareComputeSpecularReflEnvMaps</qualifiedname>
        <reimplementedby refid="df/dcb/a03768_1a6063cb389e34a422aa42b5bd30db18d8">doDeclareComputeSpecularReflEnvMaps</reimplementedby>
        <reimplementedby refid="d0/db5/a03788_1a8e67f66510b47f105a70e2a1dce25f48">doDeclareComputeSpecularReflEnvMaps</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="170" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d8/d17/a06068_1acd65511b9a8ce1dd5a24a30a6477bdad" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> sdw::RetVec3</type>
        <definition>C3D_API sdw::RetVec3 castor3d::shader::ReflectionModel::doComputeRefrEnvMaps</definition>
        <argsstring>(sdw::Vec3 const &amp;wsIncident, sdw::Vec3 const &amp;wsNormal, sdw::CombinedImageCubeArrayRgba32 const &amp;envMap, sdw::UInt const &amp;envMapIndex, sdw::Float const &amp;refractionRatio, sdw::Vec3 &amp;albedo, sdw::Float const &amp;roughness)</argsstring>
        <name>doComputeRefrEnvMaps</name>
        <qualifiedname>castor3d::shader::ReflectionModel::doComputeRefrEnvMaps</qualifiedname>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsIncident</declname>
        </param>
        <param>
          <type>sdw::Vec3 const &amp;</type>
          <declname>wsNormal</declname>
        </param>
        <param>
          <type>sdw::CombinedImageCubeArrayRgba32 const &amp;</type>
          <declname>envMap</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>envMapIndex</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>refractionRatio</declname>
        </param>
        <param>
          <type>sdw::Vec3 &amp;</type>
          <declname>albedo</declname>
        </param>
        <param>
          <type>sdw::Float const &amp;</type>
          <declname>roughness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Shaders/GlslReflection.hpp" line="173" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor3d::shader::PbrReflectionModel</label>
        <link refid="df/dcb/a03768"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::shader::PhongReflectionModel</label>
        <link refid="d0/db5/a03788"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::shader::ReflectionModel</label>
        <link refid="d8/d17/a06068"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>castor3d::shader::ReflectionModel</label>
        <link refid="d8/d17/a06068"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_utils</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::shader::Utils</label>
        <link refid="d3/da4/a06136"/>
      </node>
    </collaborationgraph>
    <location file="Shader/Shaders/GlslReflection.hpp" line="12" column="1" bodyfile="Shader/Shaders/GlslReflection.hpp" bodystart="13" bodyend="281"/>
    <listofallmembers>
      <member refid="d8/d17/a06068_1afdfa3fa7100de19b4cb1ce1287ba229b" prot="public" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeCombined</name></member>
      <member refid="d8/d17/a06068_1a1d5178593d1ce2a07e562ab00247ceae" prot="public" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeCombined</name></member>
      <member refid="d8/d17/a06068_1af8477b6bdb68264bd9efcc9a32e45cc5" prot="public" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeIncident</name></member>
      <member refid="d8/d17/a06068_1aa34d98ba0f8786d19d41a516797e0180" prot="public" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeReflections</name></member>
      <member refid="d8/d17/a06068_1a57419c3cf4f20a97d649dc406d6f5e04" prot="private" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeReflEnvMaps</name></member>
      <member refid="d8/d17/a06068_1a92bb7f8a94898cf2a545ab50a9461980" prot="public" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeRefractions</name></member>
      <member refid="d8/d17/a06068_1a493fee0dab2983b063b8de4eae5cc058" prot="private" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeRefrEnvMaps</name></member>
      <member refid="d8/d17/a06068_1ab28e1eba3e8c7cf939b8ce39c0485b95" prot="private" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeRefrSceneMap</name></member>
      <member refid="d8/d17/a06068_1ab2585a5602912c735611268e28991e36" prot="public" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeScreenSpace</name></member>
      <member refid="d8/d17/a06068_1a8bb6b2f9b2ab1b191adb3e08b24f51ca" prot="private" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeSheenReflEnvMaps</name></member>
      <member refid="d8/d17/a06068_1a9584555f1792f2f04700f7684a146454" prot="private" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>computeSpecularReflEnvMaps</name></member>
      <member refid="d8/d17/a06068_1a8402c9d34098578beb2df3905baa1c67" prot="private" virt="virtual"><scope>castor3d::shader::ReflectionModel</scope><name>doAdjustAlbedo</name></member>
      <member refid="d8/d17/a06068_1a5f68297ccf2adcbde34f64cf8e36b0a5" prot="private" virt="virtual"><scope>castor3d::shader::ReflectionModel</scope><name>doAdjustAmbient</name></member>
      <member refid="d8/d17/a06068_1acd65511b9a8ce1dd5a24a30a6477bdad" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>doComputeRefrEnvMaps</name></member>
      <member refid="d8/d17/a06068_1a0d4ff5b964eec02d0b41a75d0620428a" prot="private" virt="pure-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>doDeclareComputeReflEnvMaps</name></member>
      <member refid="d8/d17/a06068_1abe0d52e2bd2c1192ee5e8732e365f054" prot="private" virt="pure-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>doDeclareComputeRefrEnvMaps</name></member>
      <member refid="d8/d17/a06068_1aa0f0fae6cf9912bc72aa7655ce9898c3" prot="private" virt="pure-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>doDeclareComputeSpecularReflEnvMaps</name></member>
      <member refid="d8/d17/a06068_1a45aa8674370ca23436611a8dd779d839" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_computeDeferred</name></member>
      <member refid="d8/d17/a06068_1aee7d77422033dfb01497ba196cdef222" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_computeForward</name></member>
      <member refid="d8/d17/a06068_1a13a8e54e825737ebff8c2ff6b084af0b" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_computeReflEnvMaps</name></member>
      <member refid="d8/d17/a06068_1a8b5f2cf6beb19134ad1827c3ad91b9ca" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_computeRefrEnvMaps</name></member>
      <member refid="d8/d17/a06068_1a3544a403387ed982732736c7148493d5" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_computeRefrSceneMap</name></member>
      <member refid="d8/d17/a06068_1a4dacf94e9e976b47e13deed31611e60e" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_computeScreenSpace</name></member>
      <member refid="d8/d17/a06068_1ae618404a9382d17fe595599e8e080327" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_computeSheenReflEnvMaps</name></member>
      <member refid="d8/d17/a06068_1af32353800e48f972998b0e014e47a8ab" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_computeSpecularReflEnvMaps</name></member>
      <member refid="d8/d17/a06068_1a7efe38f9db325fde8d26111ac4d865ba" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_hasIblSupport</name></member>
      <member refid="d8/d17/a06068_1a6295894be3ea19ea49a9ce8c8ca01474" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_traceScreenSpace</name></member>
      <member refid="d8/d17/a06068_1aca7e4f987a800a07a60e70823d3c227b" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_utils</name></member>
      <member refid="d8/d17/a06068_1ae525d4f79a6aeb9c3283ad34fa60400d" prot="protected" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>m_writer</name></member>
      <member refid="d8/d17/a06068_1a6c8c6c2966a64329a71c5c814917fda2" prot="public" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>ReflectionModel</name></member>
      <member refid="d8/d17/a06068_1ab9b0bb3765e3bdf38bdacf7bef6b4b20" prot="public" virt="non-virtual"><scope>castor3d::shader::ReflectionModel</scope><name>traceScreenSpace</name></member>
      <member refid="d8/d17/a06068_1ab741a9bc5a596e2f5684120b015bd578" prot="public" virt="virtual"><scope>castor3d::shader::ReflectionModel</scope><name>~ReflectionModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
