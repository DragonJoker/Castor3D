<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d8/d33/a05959" kind="class" language="C++" prot="public">
    <compoundname>castor3d::GBufferBase</compoundname>
    <basecompoundref refid="d5/d3c/a08223" prot="public" virt="non-virtual">castor::NamedBaseT&lt; String &gt;</basecompoundref>
    <derivedcompoundref refid="d0/d22/a05963" prot="private" virt="non-virtual">castor3d::GBufferT&lt; LpvTexture &gt;</derivedcompoundref>
    <derivedcompoundref refid="d0/d22/a05963" prot="private" virt="non-virtual">castor3d::GBufferT&lt; PpTexture &gt;</derivedcompoundref>
    <derivedcompoundref refid="d0/d22/a05963" prot="private" virt="non-virtual">castor3d::GBufferT&lt; SmTexture &gt;</derivedcompoundref>
    <derivedcompoundref refid="d0/d22/a05963" prot="private" virt="non-virtual">castor3d::GBufferT&lt; WbTexture &gt;</derivedcompoundref>
    <derivedcompoundref refid="d0/d22/a05963" prot="private" virt="non-virtual">castor3d::GBufferT&lt; TextureEnumT &gt;</derivedcompoundref>
    <includes local="no">GBuffer.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d8/d33/a05959_1ab731619028fdd98c8aa483c39e1318e0" prot="protected" static="no" mutable="no">
        <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const  &amp;</type>
        <definition>RenderDevice const&amp; castor3d::GBufferBase::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <qualifiedname>castor3d::GBufferBase::m_device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/GBuffer.hpp" line="193" column="21" bodyfile="Castor3D/Render/GBuffer.hpp" bodystart="193" bodyend="-1"/>
        <referencedby refid="d8/d33/a05959_1a1a6d1ad79947101aea2f2396789bbd93" compoundref="de/def/a01016" startline="81" endline="117">doCreateTextures</referencedby>
        <referencedby refid="d8/d33/a05959_1a013e7c1a53d63a633a5eae9c3fd150d4" compoundref="de/def/a01016" startline="155" endline="190">doCreateTextures</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d33/a05959_1ac2a0555c9c4435ec570e938862bebed4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::GBufferBase::GBufferBase</definition>
        <argsstring>(RenderDevice const &amp;device, castor::String name)</argsstring>
        <name>GBufferBase</name>
        <qualifiedname>castor3d::GBufferBase::GBufferBase</qualifiedname>
        <param>
          <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/GBuffer.hpp" line="25" column="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="d8/d33/a05959_1a78bcfdba74b7a079c20334d82904258f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> TextureUPtr</type>
        <definition>C3D_API TextureUPtr castor3d::GBufferBase::doCreateTexture</definition>
        <argsstring>(crg::ResourcesCache &amp;resources, castor::String const &amp;name, VkImageCreateFlags createFlags, VkExtent3D const &amp;size, uint32_t layerCount, VkSampleCountFlagBits sampleCount, uint32_t mipLevels, VkFormat format, VkImageUsageFlags usageFlags, VkBorderColor const &amp;borderColor, VkCompareOp compareOp) const</argsstring>
        <name>doCreateTexture</name>
        <qualifiedname>castor3d::GBufferBase::doCreateTexture</qualifiedname>
        <param>
          <type>crg::ResourcesCache &amp;</type>
          <declname>resources</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>VkImageCreateFlags</type>
          <declname>createFlags</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layerCount</declname>
        </param>
        <param>
          <type>VkSampleCountFlagBits</type>
          <declname>sampleCount</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipLevels</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type>VkImageUsageFlags</type>
          <declname>usageFlags</declname>
        </param>
        <param>
          <type>VkBorderColor const &amp;</type>
          <declname>borderColor</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>compareOp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/GBuffer.hpp" line="29" column="21"/>
        <referencedby refid="d8/d33/a05959_1a1a6d1ad79947101aea2f2396789bbd93" compoundref="de/def/a01016" startline="81" endline="117">doCreateTextures</referencedby>
        <referencedby refid="d8/d33/a05959_1a013e7c1a53d63a633a5eae9c3fd150d4" compoundref="de/def/a01016" startline="155" endline="190">doCreateTextures</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d33/a05959_1a1a6d1ad79947101aea2f2396789bbd93" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TextureEnumT</type>
          </param>
        </templateparamlist>
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; <ref refid="d1/d95/a06703" kindref="compound">Texture</ref> const * &gt;</type>
        <definition>castor::Vector&lt; Texture const * &gt; castor3d::GBufferBase::doCreateTextures</definition>
        <argsstring>(crg::ResourcesCache &amp;resources, castor::Array&lt; Texture const *, size_t(TextureEnumT::eCount) &gt; const &amp;inputs, castor::String const &amp;prefix, VkImageCreateFlags createFlags, castor::Size const &amp;size, uint32_t layerCount, VkSampleCountFlagBits sampleCount, castor::Vector&lt; TextureUPtr &gt; &amp;owned) const</argsstring>
        <name>doCreateTextures</name>
        <qualifiedname>castor3d::GBufferBase::doCreateTextures</qualifiedname>
        <param>
          <type>crg::ResourcesCache &amp;</type>
          <declname>resources</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1aeece6f8801a7db118a091f586a413edf" kindref="member">castor::Array</ref>&lt; <ref refid="d1/d95/a06703" kindref="compound">Texture</ref> const *, size_t(TextureEnumT::eCount) &gt; const &amp;</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>VkImageCreateFlags</type>
          <declname>createFlags</declname>
        </param>
        <param>
          <type><ref refid="d4/dd6/a09023" kindref="compound">castor::Size</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layerCount</declname>
        </param>
        <param>
          <type>VkSampleCountFlagBits</type>
          <declname>sampleCount</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; TextureUPtr &gt; &amp;</type>
          <declname>owned</declname>
        </param>
        <briefdescription>
<para>Initialise les textures du g-buffer 2D ou 2D array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resources</parametername>
</parameternamelist>
<parameterdescription>
<para>Le gestionnaire de ressources du graphe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>Les images déjà existantes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Le préfixe du nom des textures du g-buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">createFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags de création pour les images restant à créer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Les dimensions du g-buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layerCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nombre de layers du g-buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sampleCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nombre de samples des images. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">owned</parametername>
</parameternamelist>
<parameterdescription>
<para>Les images dont le g-buffer a la responsabilité. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/GBuffer.hpp" line="81" column="16" bodyfile="Castor3D/Render/GBuffer.hpp" bodystart="81" bodyend="117"/>
        <references refid="d8/d33/a05959_1a78bcfdba74b7a079c20334d82904258f">doCreateTexture</references>
        <references refid="d9/dba/a02278_1a310bbc9023bc8ec3b78d94ef23421445">castor3d::getBorderColor</references>
        <references refid="d9/dba/a02278_1a5b08251b03563bf22eb6972067335274" compoundref="d2/d41/a01037" startline="61" endline="64">castor3d::getCompareOp</references>
        <references refid="d9/dba/a02278_1acef9c3a303418acd66f6bda0ab1dd956">castor3d::getFormat</references>
        <references refid="d4/dd6/a09023_1ab8e3c320eefc853f8fb36db35939844c" compoundref="d9/d95/a02075" startline="137" endline="140">castor::Size::getHeight</references>
        <references refid="d9/dba/a02278_1aadc934dfad2b989fcd2d304d20cbbe56">castor3d::getMipLevels</references>
        <references refid="d9/dba/a02278_1aef790f01719106056410ba49318edb12">castor3d::getTexName</references>
        <references refid="d9/dba/a02278_1af90ca5367065ae57592a43200b7c5549">castor3d::getUsageFlags</references>
        <references refid="d4/dd6/a09023_1a3cef6d7fb9e7e9e4e373f689b2b23b0c" compoundref="d9/d95/a02075" startline="113" endline="116">castor::Size::getWidth</references>
        <references refid="d8/d33/a05959_1ab731619028fdd98c8aa483c39e1318e0" compoundref="de/def/a01016" startline="193">m_device</references>
      </memberdef>
      <memberdef kind="function" id="d8/d33/a05959_1a013e7c1a53d63a633a5eae9c3fd150d4" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TextureEnumT</type>
          </param>
        </templateparamlist>
        <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; <ref refid="d1/d95/a06703" kindref="compound">Texture</ref> const * &gt;</type>
        <definition>castor::Vector&lt; Texture const * &gt; castor3d::GBufferBase::doCreateTextures</definition>
        <argsstring>(crg::ResourcesCache &amp;resources, castor::Array&lt; Texture const *, size_t(TextureEnumT::eCount) &gt; const &amp;inputs, castor::String const &amp;prefix, VkImageCreateFlags createFlags, VkExtent3D const &amp;size, VkSampleCountFlagBits sampleCount, castor::Vector&lt; TextureUPtr &gt; &amp;owned) const</argsstring>
        <name>doCreateTextures</name>
        <qualifiedname>castor3d::GBufferBase::doCreateTextures</qualifiedname>
        <param>
          <type>crg::ResourcesCache &amp;</type>
          <declname>resources</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1aeece6f8801a7db118a091f586a413edf" kindref="member">castor::Array</ref>&lt; <ref refid="d1/d95/a06703" kindref="compound">Texture</ref> const *, size_t(TextureEnumT::eCount) &gt; const &amp;</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>VkImageCreateFlags</type>
          <declname>createFlags</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkSampleCountFlagBits</type>
          <declname>sampleCount</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; TextureUPtr &gt; &amp;</type>
          <declname>owned</declname>
        </param>
        <briefdescription>
<para>Initialise les textures du g-buffer 3D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resources</parametername>
</parameternamelist>
<parameterdescription>
<para>Le gestionnaire de ressources du graphe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>Les images déjà existantes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Le préfixe du nom des textures du g-buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">createFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les flags de création pour les images restant à créer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Les dimensions du g-buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sampleCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nombre de samples des images. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">owned</parametername>
</parameternamelist>
<parameterdescription>
<para>Les images dont le g-buffer a la responsabilité. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/GBuffer.hpp" line="155" column="16" bodyfile="Castor3D/Render/GBuffer.hpp" bodystart="155" bodyend="190"/>
        <references refid="d8/d33/a05959_1a78bcfdba74b7a079c20334d82904258f">doCreateTexture</references>
        <references refid="d9/dba/a02278_1a310bbc9023bc8ec3b78d94ef23421445">castor3d::getBorderColor</references>
        <references refid="d9/dba/a02278_1a5b08251b03563bf22eb6972067335274" compoundref="d2/d41/a01037" startline="61" endline="64">castor3d::getCompareOp</references>
        <references refid="d9/dba/a02278_1acef9c3a303418acd66f6bda0ab1dd956">castor3d::getFormat</references>
        <references refid="d9/dba/a02278_1aadc934dfad2b989fcd2d304d20cbbe56">castor3d::getMipLevels</references>
        <references refid="d9/dba/a02278_1aef790f01719106056410ba49318edb12">castor3d::getTexName</references>
        <references refid="d9/dba/a02278_1af90ca5367065ae57592a43200b7c5549">castor3d::getUsageFlags</references>
        <references refid="d8/d33/a05959_1ab731619028fdd98c8aa483c39e1318e0" compoundref="de/def/a01016" startline="193">m_device</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>castor3d::GBufferT&lt; LpvTexture &gt;</label>
        <link refid="d0/d22/a05963"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; LpvTexture &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor3d::GBufferT&lt; PpTexture &gt;</label>
        <link refid="d0/d22/a05963"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; PpTexture &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>castor3d::GBufferT&lt; SmTexture &gt;</label>
        <link refid="d0/d22/a05963"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; SmTexture &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>castor3d::GBufferT&lt; WbTexture &gt;</label>
        <link refid="d0/d22/a05963"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; WbTexture &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::GBufferBase</label>
        <link refid="d8/d33/a05959"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>castor3d::GBufferT&lt; TextureEnumT &gt;</label>
        <link refid="d0/d22/a05963"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::LightVolumePassResult</label>
        <link refid="dc/d72/a06019"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>castor3d::PrepassResult</label>
        <link refid="de/da2/a06375"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>castor3d::ShadowMapResult</label>
        <link refid="d1/d15/a06659"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>castor3d::TransparentPassResult</label>
        <link refid="df/de9/a06791"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::GBufferBase</label>
        <link refid="d8/d33/a05959"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_device</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::RenderDevice</label>
        <link refid="dc/d32/a06415"/>
        <childnode refid="4" relation="usage">
          <edgelabel>renderSystem</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::RenderSystem</label>
        <link refid="d5/d4e/a06559"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="6">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Render/GBuffer.hpp" line="21" column="1" bodyfile="Castor3D/Render/GBuffer.hpp" bodystart="23" bodyend="194"/>
    <listofallmembers>
      <member refid="d8/d33/a05959_1a78bcfdba74b7a079c20334d82904258f" prot="protected" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>doCreateTexture</name></member>
      <member refid="d8/d33/a05959_1a1a6d1ad79947101aea2f2396789bbd93" prot="protected" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>doCreateTextures</name></member>
      <member refid="d8/d33/a05959_1a013e7c1a53d63a633a5eae9c3fd150d4" prot="protected" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>doCreateTextures</name></member>
      <member refid="d8/d33/a05959_1ac2a0555c9c4435ec570e938862bebed4" prot="public" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>GBufferBase</name></member>
      <member refid="d5/d3c/a08223_1abc1fa9ec1a50d2023373baa4d4c79519" prot="public" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>getName</name></member>
      <member refid="d8/d33/a05959_1ab731619028fdd98c8aa483c39e1318e0" prot="protected" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>m_device</name></member>
      <member refid="d5/d3c/a08223_1a869b429a7190ecf614d8221b270e6dca" prot="protected" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>m_name</name></member>
      <member refid="d5/d3c/a08223_1a4a6e4748603541685b04f95fb91efb26" prot="public" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>NamedBaseT</name></member>
      <member refid="d5/d3c/a08223_1a2d62ce1925efead03c4e0842c06b3e11" prot="public" virt="non-virtual"><scope>castor3d::GBufferBase</scope><name>rename</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
