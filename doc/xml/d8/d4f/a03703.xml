<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d8/d4f/a03703" kind="class" language="C++" prot="public">
    <compoundname>castor3d::Engine</compoundname>
    <basecompoundref refid="dc/d63/a08283" prot="public" virt="non-virtual">castor::Unique&lt; Engine &gt;</basecompoundref>
    <includes local="no">Engine.hpp</includes>
    <sectiondef kind="user-defined">
      <description><para>Accesseurs. </para>
</description>
      <memberdef kind="function" id="d8/d4f/a03703_1a6ce6ffa3979329585653cc681adfeefe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
        <definition>C3D_API castor::String castor3d::Engine::getDefaultLightingModelName</definition>
        <argsstring>() const</argsstring>
        <name>getDefaultLightingModelName</name>
        <qualifiedname>castor3d::Engine::getDefaultLightingModelName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="754" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a13b3a6c70c52e44d5098d90b0dbebbb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a3654c51abf8051b52686bd7429bf29a9" kindref="member">ToneMappingFactory</ref> const &amp;</type>
        <definition>C3D_API ToneMappingFactory const  &amp; castor3d::Engine::getToneMappingFactory</definition>
        <argsstring>() const</argsstring>
        <name>getToneMappingFactory</name>
        <qualifiedname>castor3d::Engine::getToneMappingFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="755" column="35"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a10fadbd04a658acc166eb327130e1c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a3654c51abf8051b52686bd7429bf29a9" kindref="member">ToneMappingFactory</ref> &amp;</type>
        <definition>C3D_API ToneMappingFactory &amp; castor3d::Engine::getToneMappingFactory</definition>
        <argsstring>()</argsstring>
        <name>getToneMappingFactory</name>
        <qualifiedname>castor3d::Engine::getToneMappingFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="756" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a7061aeead1fde9eea7c71a78b9bffdf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1adf7529e4725d67870efaf6aef3cdcb55" kindref="member">PostEffectFactory</ref> const &amp;</type>
        <definition>C3D_API PostEffectFactory const  &amp; castor3d::Engine::getPostEffectFactory</definition>
        <argsstring>() const</argsstring>
        <name>getPostEffectFactory</name>
        <qualifiedname>castor3d::Engine::getPostEffectFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="757" column="34"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a4124814e064257ff58b07516465d115a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1adf7529e4725d67870efaf6aef3cdcb55" kindref="member">PostEffectFactory</ref> &amp;</type>
        <definition>C3D_API PostEffectFactory &amp; castor3d::Engine::getPostEffectFactory</definition>
        <argsstring>()</argsstring>
        <name>getPostEffectFactory</name>
        <qualifiedname>castor3d::Engine::getPostEffectFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="758" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a8641ffc3e359d15c0e1c7df354dd3b69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::Engine::getWantedFps</definition>
        <argsstring>() const</argsstring>
        <name>getWantedFps</name>
        <qualifiedname>castor3d::Engine::getWantedFps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="759" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aa7f130a0d0a7ae259c7b89e6c104d968" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a2d5a7b3dddf135df62427d0e6b755210" kindref="member">castor3d::MaterialObs</ref></type>
        <definition>C3D_API castor3d::MaterialObs castor3d::Engine::getDefaultMaterial</definition>
        <argsstring>() const</argsstring>
        <name>getDefaultMaterial</name>
        <qualifiedname>castor3d::Engine::getDefaultMaterial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="760" column="31"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a8b8959435cfd02c78adb026f2803878c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Engine::hasMeshShaders</definition>
        <argsstring>() const</argsstring>
        <name>hasMeshShaders</name>
        <qualifiedname>castor3d::Engine::hasMeshShaders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="761" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a6ee0628c0f085ea60b5a9c94fc9af450" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::Engine::getMaxPassTypeCount</definition>
        <argsstring>() const</argsstring>
        <name>getMaxPassTypeCount</name>
        <qualifiedname>castor3d::Engine::getMaxPassTypeCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="762" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a357a196c28d35b877ff6e9d225a09125" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> *</type>
        <definition>C3D_API RenderDevice * castor3d::Engine::getRenderDevice</definition>
        <argsstring>() const</argsstring>
        <name>getRenderDevice</name>
        <qualifiedname>castor3d::Engine::getRenderDevice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="763" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ac88f73152455002444d00d9a8fe3be33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d4/d16/a03859" kindref="compound">ControlsManager</ref> *</type>
        <definition>C3D_API ControlsManager * castor3d::Engine::getControlsManager</definition>
        <argsstring>() const</argsstring>
        <name>getControlsManager</name>
        <qualifiedname>castor3d::Engine::getControlsManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="764" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a4a2fe6c8106efb38571598eabf3f875f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d7/d12/a03583" kindref="compound">UploadData</ref> &amp;</type>
        <definition>C3D_API UploadData &amp; castor3d::Engine::getUploadData</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getUploadData</name>
        <qualifiedname>castor3d::Engine::getUploadData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="765" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1af05dfcbd77ee5c6df591534e0f7dfefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ast::ShaderAllocator &amp;</type>
        <definition>C3D_API ast::ShaderAllocator &amp; castor3d::Engine::getShaderAllocator</definition>
        <argsstring>()</argsstring>
        <name>getShaderAllocator</name>
        <qualifiedname>castor3d::Engine::getShaderAllocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="766" column="31"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a2a3070874bc9257b56735ed7090f1704" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
        <definition>castor::String const  &amp; castor3d::Engine::getAppName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getAppName</name>
        <qualifiedname>castor3d::Engine::getAppName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="768" column="23" bodyfile="Castor3D/Engine.hpp" bodystart="768" bodyend="771"/>
        <references refid="df/dcb/a03699_1a022db3aa6a3d20b242f8281a60d8cd5e" compoundref="db/dc3/a00284" startline="72">castor3d::EngineConfig::appName</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad67d083dab9477be09f1e357c5fd0809" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d5/d15/a05335" kindref="compound">Version</ref> const &amp;</type>
        <definition>Version const  &amp; castor3d::Engine::getAppVersion</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getAppVersion</name>
        <qualifiedname>castor3d::Engine::getAppVersion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="773" column="16" bodyfile="Castor3D/Engine.hpp" bodystart="773" bodyend="776"/>
        <references refid="df/dcb/a03699_1a8667ffad9a8b04ebcee891e05b1e722d" compoundref="db/dc3/a00284" startline="79">castor3d::EngineConfig::appVersion</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a837e39db6d1764e56dc2253481ed7837" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isShaderValidationEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isShaderValidationEnabled</name>
        <qualifiedname>castor3d::Engine::isShaderValidationEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="778" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="778" bodyend="781"/>
        <references refid="df/dcb/a03699_1a8b0557c8ca695d10155512918c8e6d09" compoundref="db/dc3/a00284" startline="114" endline="114">castor3d::EngineConfig::enableShaderValidation</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aac153d4798d15f1437d85b01439f90e2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isValidationEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isValidationEnabled</name>
        <qualifiedname>castor3d::Engine::isValidationEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="783" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="783" bodyend="786"/>
        <references refid="df/dcb/a03699_1abfce57b7a0de818a0bde13b8cee2dbbe" compoundref="db/dc3/a00284" startline="86" endline="86">castor3d::EngineConfig::enableValidation</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a5a265d90ebfe100b06328ca04b59f3cb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::getShaderDebugLevel</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getShaderDebugLevel</name>
        <qualifiedname>castor3d::Engine::getShaderDebugLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="788" column="10" bodyfile="Castor3D/Engine.hpp" bodystart="788" bodyend="791"/>
        <references refid="df/dcb/a03699_1a3ab8fc9dc844078f8d859a1720fdf07f" compoundref="db/dc3/a00284" startline="107" endline="107">castor3d::EngineConfig::shaderDebugLevel</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a743391e0928f95513f7ae9b6b2744fed" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::areUpdateOptimisationsEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>areUpdateOptimisationsEnabled</name>
        <qualifiedname>castor3d::Engine::areUpdateOptimisationsEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="793" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="793" bodyend="796"/>
        <references refid="df/dcb/a03699_1a415407f9da81673d4bf41f6455d8a1f3" compoundref="db/dc3/a00284" startline="100" endline="100">castor3d::EngineConfig::enableUpdateOptimisations</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a9de029a3a2bacd457aa229244931b1c2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isRandomisationEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isRandomisationEnabled</name>
        <qualifiedname>castor3d::Engine::isRandomisationEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="798" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="798" bodyend="801"/>
        <references refid="df/dcb/a03699_1a73ccf4daaf5a0048c0021cc569e137c6" compoundref="db/dc3/a00284" startline="93" endline="93">castor3d::EngineConfig::enableRandom</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a2fb8f87af4900d30db440bbf82aefefc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isApiTraceEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isApiTraceEnabled</name>
        <qualifiedname>castor3d::Engine::isApiTraceEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="803" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="803" bodyend="806"/>
        <references refid="df/dcb/a03699_1a7172386d3a765fcdccdca26bf5a8d8ef" compoundref="db/dc3/a00284" startline="121" endline="121">castor3d::EngineConfig::enableApiTrace</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a601c04722ecec84265071102ed22251b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::areTextShadersKept</definition>
        <argsstring>() const noexcept</argsstring>
        <name>areTextShadersKept</name>
        <qualifiedname>castor3d::Engine::areTextShadersKept</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="808" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="808" bodyend="811"/>
        <references refid="df/dcb/a03699_1a8c4917c95e7b4a31bdde6211fb12c77c" compoundref="db/dc3/a00284" startline="128" endline="128">castor3d::EngineConfig::keepTextShaders</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a179b404eb64c6608bc8a67767147f88e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::areDebugTargetsEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>areDebugTargetsEnabled</name>
        <qualifiedname>castor3d::Engine::areDebugTargetsEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="813" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="813" bodyend="816"/>
        <references refid="df/dcb/a03699_1af5d0e519b2a7e3f163fc5b97b8d6aa73" compoundref="db/dc3/a00284" startline="135" endline="135">castor3d::EngineConfig::enableDebugTargets</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1aa54986932aa7ed016fdb8e94c36b5f9d" kindref="member">castor::ImageCache</ref> const &amp;</type>
        <definition>castor::ImageCache const  &amp; castor3d::Engine::getImageCache</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImageCache</name>
        <qualifiedname>castor3d::Engine::getImageCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="818" column="27" bodyfile="Castor3D/Engine.hpp" bodystart="818" bodyend="821"/>
        <referencedby refid="d8/d4f/a03703_1a1f26b1f69ade47399e32ee596ed77756" compoundref="db/dc3/a00284" startline="1124" endline="1129">addImage</referencedby>
        <referencedby refid="d8/d4f/a03703_1a8e7137f1ee10104cab15245472a4dbeb" compoundref="db/dc3/a00284" startline="1117" endline="1122">addNewImage</referencedby>
        <referencedby refid="d8/d4f/a03703_1af92ce0a62bfeb2923bf0a32c1094e9d4" compoundref="db/dc3/a00284" startline="1109" endline="1114">createImage</referencedby>
        <referencedby refid="d8/d4f/a03703_1a0e3cae5eb336c27b42a7225bdbd1b38f" compoundref="db/dc3/a00284" startline="1137" endline="1140">findImage</referencedby>
        <referencedby refid="d8/d4f/a03703_1ae7e13a16cf5c75af931f9e3f3ef0968d" compoundref="db/dc3/a00284" startline="1142" endline="1145">hasImage</referencedby>
        <referencedby refid="d8/d4f/a03703_1a5df7c3836acec8a82912d16172ef0b01" compoundref="db/dc3/a00284" startline="1131" endline="1135">removeImage</referencedby>
        <referencedby refid="d8/d4f/a03703_1ab079a7d5c089864cd6eb28d8ccaf83ea" compoundref="db/dc3/a00284" startline="1153" endline="1162">tryAddImage</referencedby>
        <referencedby refid="d8/d4f/a03703_1aecd56700ba7c78ec10e419a872b1eab7" compoundref="db/dc3/a00284" startline="1147" endline="1150">tryFindImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a3a9cb1d980ba5575bae64306fb51b68a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1aa54986932aa7ed016fdb8e94c36b5f9d" kindref="member">castor::ImageCache</ref> &amp;</type>
        <definition>castor::ImageCache &amp; castor3d::Engine::getImageCache</definition>
        <argsstring>() noexcept</argsstring>
        <name>getImageCache</name>
        <qualifiedname>castor3d::Engine::getImageCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="823" column="21" bodyfile="Castor3D/Engine.hpp" bodystart="823" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a0529e1a9b017fe1ac441cf37d192d052" kindref="member">castor::FontCache</ref> const &amp;</type>
        <definition>castor::FontCache const  &amp; castor3d::Engine::getFontCache</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFontCache</name>
        <qualifiedname>castor3d::Engine::getFontCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="828" column="26" bodyfile="Castor3D/Engine.hpp" bodystart="828" bodyend="831"/>
        <referencedby refid="d8/d4f/a03703_1ac9abab737dc2b11ac9ee6f6ef31045c1" compoundref="db/dc3/a00284" startline="1075" endline="1080">addFont</referencedby>
        <referencedby refid="d8/d4f/a03703_1a52cc49e29ffe7b2da28de2c4622913a6" compoundref="db/dc3/a00284" startline="1068" endline="1073">addNewFont</referencedby>
        <referencedby refid="d8/d4f/a03703_1a0705231fef20a697973ac71b36bd0b57" compoundref="db/dc3/a00284" startline="1060" endline="1065">createFont</referencedby>
        <referencedby refid="d8/d4f/a03703_1ad1ce4f92f240c0fa3c1c4ede63942bac" compoundref="db/dc3/a00284" startline="1088" endline="1091">findFont</referencedby>
        <referencedby refid="d8/d4f/a03703_1ab139accf9826d7cb5103af76aab1ec15" compoundref="db/dc3/a00284" startline="1093" endline="1096">hasFont</referencedby>
        <referencedby refid="d8/d4f/a03703_1addc711e1060765415a0812574efb17a7" compoundref="db/dc3/a00284" startline="1082" endline="1086">removeFont</referencedby>
        <referencedby refid="d8/d4f/a03703_1ad1e115ab10d0a0a64bedd07035cbe6b2" compoundref="db/dc3/a00284" startline="1098" endline="1101">tryFindFont</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aa9163ff31a8feff9a7936a6ec250e8a2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a0529e1a9b017fe1ac441cf37d192d052" kindref="member">castor::FontCache</ref> &amp;</type>
        <definition>castor::FontCache &amp; castor3d::Engine::getFontCache</definition>
        <argsstring>() noexcept</argsstring>
        <name>getFontCache</name>
        <qualifiedname>castor3d::Engine::getFontCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="833" column="20" bodyfile="Castor3D/Engine.hpp" bodystart="833" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ab54afdc724299a29514a2eed1a3fcc52" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>UserInputListenerRPtr</type>
        <definition>UserInputListenerRPtr castor3d::Engine::getUserInputListener</definition>
        <argsstring>() noexcept</argsstring>
        <name>getUserInputListener</name>
        <qualifiedname>castor3d::Engine::getUserInputListener</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="838" column="23" bodyfile="Castor3D/Engine.hpp" bodystart="838" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a615cb64827b7fcd2ff4438c061f37adc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> *</type>
        <definition>RenderSystem * castor3d::Engine::getRenderSystem</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderSystem</name>
        <qualifiedname>castor3d::Engine::getRenderSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="843" column="15" bodyfile="Castor3D/Engine.hpp" bodystart="843" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aa40434af7c60405110529624930ab5bd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto castor3d::Engine::getDefaultSampler</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefaultSampler</name>
        <qualifiedname>castor3d::Engine::getDefaultSampler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="848" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="848" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a68a4f02a41dd92eed22cfd21c06ed901" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto castor3d::Engine::getLightsSampler</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLightsSampler</name>
        <qualifiedname>castor3d::Engine::getLightsSampler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="853" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="853" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad00d683baed322445301d67d44880005" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto const &amp;</type>
        <definition>auto const  &amp; castor3d::Engine::getAdditionalParsers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getAdditionalParsers</name>
        <qualifiedname>castor3d::Engine::getAdditionalParsers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="858" column="13" bodyfile="Castor3D/Engine.hpp" bodystart="858" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a5e2b90e04922bc497b47fb1390661e6b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d5/d15/a05335" kindref="compound">Version</ref> const &amp;</type>
        <definition>Version const  &amp; castor3d::Engine::getVersion</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getVersion</name>
        <qualifiedname>castor3d::Engine::getVersion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="863" column="16" bodyfile="Castor3D/Engine.hpp" bodystart="863" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a1d94424ff1a7658a1da6bd46556f927f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::hasRenderLoop</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasRenderLoop</name>
        <qualifiedname>castor3d::Engine::hasRenderLoop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="868" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="868" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a89f596fb8ed921fabefc5cfb3f28dc6d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/d3e/a06423" kindref="compound">RenderLoop</ref> &amp;</type>
        <definition>RenderLoop &amp; castor3d::Engine::getRenderLoop</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderLoop</name>
        <qualifiedname>castor3d::Engine::getRenderLoop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="873" column="13" bodyfile="Castor3D/Engine.hpp" bodystart="873" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a8116ed8c6de454083393aa0b34af0a0e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isThreaded</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isThreaded</name>
        <qualifiedname>castor3d::Engine::isThreaded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="878" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="878" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a90fc5a88b18924a71e6c485edef0eed9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/daf/a05399" kindref="compound">MeshFactory</ref> &amp;</type>
        <definition>MeshFactory &amp; castor3d::Engine::getMeshFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getMeshFactory</name>
        <qualifiedname>castor3d::Engine::getMeshFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="883" column="14" bodyfile="Castor3D/Engine.hpp" bodystart="883" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1adc122d978b9651f6ea977ae2382f74d7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d6/d48/a04883" kindref="compound">PassFactory</ref> &amp;</type>
        <definition>PassFactory &amp; castor3d::Engine::getPassFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPassFactory</name>
        <qualifiedname>castor3d::Engine::getPassFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="888" column="14" bodyfile="Castor3D/Engine.hpp" bodystart="888" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1abc343b079f08ff5800b2d6fe33ade917" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d4/d10/a04839" kindref="compound">PassComponentRegister</ref> &amp;</type>
        <definition>PassComponentRegister &amp; castor3d::Engine::getPassComponentsRegister</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPassComponentsRegister</name>
        <qualifiedname>castor3d::Engine::getPassComponentsRegister</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="893" column="24" bodyfile="Castor3D/Engine.hpp" bodystart="893" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aa3dd40ff6d630210693a5d61d3e18c4a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="da/d5c/a05615" kindref="compound">SubmeshComponentRegister</ref> &amp;</type>
        <definition>SubmeshComponentRegister &amp; castor3d::Engine::getSubmeshComponentsRegister</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getSubmeshComponentsRegister</name>
        <qualifiedname>castor3d::Engine::getSubmeshComponentsRegister</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="898" column="27" bodyfile="Castor3D/Engine.hpp" bodystart="898" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a1ca0c7f5a69e34b8fc64198c93775246" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="df/d2e/a03975" kindref="compound">ImporterFileFactory</ref> &amp;</type>
        <definition>ImporterFileFactory &amp; castor3d::Engine::getImporterFileFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImporterFileFactory</name>
        <qualifiedname>castor3d::Engine::getImporterFileFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="903" column="22" bodyfile="Castor3D/Engine.hpp" bodystart="903" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ac643d09d5f347b9d9edda8060fa01412" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1afd3006b43e6df0c552ac2a5c20d20ee8" kindref="member">ParticleFactory</ref> &amp;</type>
        <definition>ParticleFactory &amp; castor3d::Engine::getParticleFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getParticleFactory</name>
        <qualifiedname>castor3d::Engine::getParticleFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="908" column="18" bodyfile="Castor3D/Engine.hpp" bodystart="908" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aa74347335066184d5b74923a87cf0c1c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/d65/a09371" kindref="compound">castor::CpuInformations</ref> const &amp;</type>
        <definition>castor::CpuInformations const  &amp; castor3d::Engine::getCpuInformations</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getCpuInformations</name>
        <qualifiedname>castor3d::Engine::getCpuInformations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="913" column="32" bodyfile="Castor3D/Engine.hpp" bodystart="913" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a8c11b9e48c91e4b88b61eadc48f244fb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
        <definition>LightingModelID castor3d::Engine::getDefaultLightingModel</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefaultLightingModel</name>
        <qualifiedname>castor3d::Engine::getDefaultLightingModel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="918" column="17" bodyfile="Castor3D/Engine.hpp" bodystart="918" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a8b5e0aae55adeafea48200c6bb6a5c21" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/d26/a08963" kindref="compound">castor::ImageLoader</ref> const &amp;</type>
        <definition>castor::ImageLoader const  &amp; castor3d::Engine::getImageLoader</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImageLoader</name>
        <qualifiedname>castor3d::Engine::getImageLoader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="923" column="28" bodyfile="Castor3D/Engine.hpp" bodystart="923" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a11f7c7cf274a9ede3c4ab62d2616774a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/d26/a08963" kindref="compound">castor::ImageLoader</ref> &amp;</type>
        <definition>castor::ImageLoader &amp; castor3d::Engine::getImageLoader</definition>
        <argsstring>() noexcept</argsstring>
        <name>getImageLoader</name>
        <qualifiedname>castor3d::Engine::getImageLoader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="928" column="22" bodyfile="Castor3D/Engine.hpp" bodystart="928" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a16879a361b178e86595208ade2df8d19" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d0/daf/a08971" kindref="compound">castor::ImageWriter</ref> const &amp;</type>
        <definition>castor::ImageWriter const  &amp; castor3d::Engine::getImageWriter</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImageWriter</name>
        <qualifiedname>castor3d::Engine::getImageWriter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="933" column="28" bodyfile="Castor3D/Engine.hpp" bodystart="933" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a8669fcc5e33e514d52031d3365af50bc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ashes::RendererList const &amp;</type>
        <definition>ashes::RendererList const  &amp; castor3d::Engine::getRenderersList</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderersList</name>
        <qualifiedname>castor3d::Engine::getRenderersList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="938" column="28" bodyfile="Castor3D/Engine.hpp" bodystart="938" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a205cf2cde3639ef60bbc92e4e7933aee" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/d93/a09063" kindref="compound">castor::LoggerInstance</ref> &amp;</type>
        <definition>castor::LoggerInstance &amp; castor3d::Engine::getLogger</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLogger</name>
        <qualifiedname>castor3d::Engine::getLogger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="943" column="25" bodyfile="Castor3D/Engine.hpp" bodystart="943" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a1fe8d3ce4a0436f48c8f5bb153d30477" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::getLpvGridSize</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLpvGridSize</name>
        <qualifiedname>castor3d::Engine::getLpvGridSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="948" column="10" bodyfile="Castor3D/Engine.hpp" bodystart="948" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ac2d8afa9336ca07ea402ad14bfeb7c7f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::getMaxImageSize</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getMaxImageSize</name>
        <qualifiedname>castor3d::Engine::getMaxImageSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="953" column="10" bodyfile="Castor3D/Engine.hpp" bodystart="953" bodyend="956"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a50cbff361fd2a25d7e282f4564d0a65e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto const &amp;</type>
        <definition>auto const  &amp; castor3d::Engine::getRenderWindows</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderWindows</name>
        <qualifiedname>castor3d::Engine::getRenderWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="958" column="13" bodyfile="Castor3D/Engine.hpp" bodystart="958" bodyend="961"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a3798850798a109677f2f1c8bf00c3d5b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>crg::ResourceHandler &amp;</type>
        <definition>crg::ResourceHandler &amp; castor3d::Engine::getGraphResourceHandler</definition>
        <argsstring>() noexcept</argsstring>
        <name>getGraphResourceHandler</name>
        <qualifiedname>castor3d::Engine::getGraphResourceHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="963" column="23" bodyfile="Castor3D/Engine.hpp" bodystart="963" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a55787bb512764bfbb00f4b3cce9c37c6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dc6/a07295" kindref="compound">LightingModelFactory</ref> &amp;</type>
        <definition>LightingModelFactory &amp; castor3d::Engine::getLightingModelFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLightingModelFactory</name>
        <qualifiedname>castor3d::Engine::getLightingModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="968" column="23" bodyfile="Castor3D/Engine.hpp" bodystart="968" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ae6e7b6368605b517bfbfdcdb0158fa22" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="da/d68/a02280_1a946591f4eabbe6674e2e0734965117b2" kindref="member">shader::BackgroundModelFactory</ref> const &amp;</type>
        <definition>shader::BackgroundModelFactory const  &amp; castor3d::Engine::getBackgroundModelFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBackgroundModelFactory</name>
        <qualifiedname>castor3d::Engine::getBackgroundModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="973" column="39" bodyfile="Castor3D/Engine.hpp" bodystart="973" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a42b44de31e1bd004f5bb83e58719376a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="da/d68/a02280_1a946591f4eabbe6674e2e0734965117b2" kindref="member">shader::BackgroundModelFactory</ref> &amp;</type>
        <definition>shader::BackgroundModelFactory &amp; castor3d::Engine::getBackgroundModelFactory</definition>
        <argsstring>() noexcept</argsstring>
        <name>getBackgroundModelFactory</name>
        <qualifiedname>castor3d::Engine::getBackgroundModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="978" column="33" bodyfile="Castor3D/Engine.hpp" bodystart="978" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1acbd89114013a2d302ec3a3bc9d94d93e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>SceneRPtr</type>
        <definition>SceneRPtr castor3d::Engine::getLoadingScene</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLoadingScene</name>
        <qualifiedname>castor3d::Engine::getLoadingScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="983" column="11" bodyfile="Castor3D/Engine.hpp" bodystart="983" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aec9a939534fcd7a28c83cdd1959c219a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d1/d95/a06703" kindref="compound">Texture</ref> const &amp;</type>
        <definition>Texture const  &amp; castor3d::Engine::getPrefilteredBrdfTexture</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPrefilteredBrdfTexture</name>
        <qualifiedname>castor3d::Engine::getPrefilteredBrdfTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="988" column="16" bodyfile="Castor3D/Engine.hpp" bodystart="988" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ab709206807e368c1809b4b232ce377e0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a8cf4a835d2dbebebe00eef5217134a5f" kindref="member">castor::LengthUnit</ref></type>
        <definition>castor::LengthUnit castor3d::Engine::getLengthUnit</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLengthUnit</name>
        <qualifiedname>castor3d::Engine::getLengthUnit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="993" column="20" bodyfile="Castor3D/Engine.hpp" bodystart="993" bodyend="996"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <description><para>Mutateurs. </para>
</description>
      <memberdef kind="function" id="d8/d4f/a03703_1a418eee56faf8ecaee85aedff7f0bb004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::setLoadingScene</definition>
        <argsstring>(SceneUPtr scene)</argsstring>
        <name>setLoadingScene</name>
        <qualifiedname>castor3d::Engine::setLoadingScene</qualifiedname>
        <param>
          <type>SceneUPtr</type>
          <declname>scene</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1007" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a898d543d49adda4a3b346e5a10e047a8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setUserInputListener</definition>
        <argsstring>(UserInputListenerUPtr listener) noexcept</argsstring>
        <name>setUserInputListener</name>
        <qualifiedname>castor3d::Engine::setUserInputListener</qualifiedname>
        <param>
          <type>UserInputListenerUPtr</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1009" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1009" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a1179ac445c323ab841a6f255a81e7cad" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ListenerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void castor3d::Engine::setUserInputListenerT</definition>
        <argsstring>(castor::UniquePtr&lt; ListenerT &gt; listener) noexcept</argsstring>
        <name>setUserInputListenerT</name>
        <qualifiedname>castor3d::Engine::setUserInputListenerT</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1ac623881246e92c1d187a3a44b3e011f6" kindref="member">castor::UniquePtr</ref>&lt; ListenerT &gt;</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1015" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1015" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a63ec9f4c7c88b62a3361e2a19bd05961" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setDefaultLightingModel</definition>
        <argsstring>(LightingModelID value) noexcept</argsstring>
        <name>setDefaultLightingModel</name>
        <qualifiedname>castor3d::Engine::setDefaultLightingModel</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1020" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1020" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a5ae0e718bdc1f2dcbc6b267fb31a8db8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setMaxImageSize</definition>
        <argsstring>(uint32_t size) noexcept</argsstring>
        <name>setMaxImageSize</name>
        <qualifiedname>castor3d::Engine::setMaxImageSize</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1025" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1025" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aa69e5ab2e1776ec29536e1f5d2acefa1" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setLpvGridSize</definition>
        <argsstring>(uint32_t size) noexcept</argsstring>
        <name>setLpvGridSize</name>
        <qualifiedname>castor3d::Engine::setLpvGridSize</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1030" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1030" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a21f934ca681595cc02b4a55883eb683c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ComponentT</type>
          </param>
        </templateparamlist>
        <type><ref refid="d9/dba/a02278_1a11544af0f8079d1c8711ccf824ad3ec6" kindref="member">PassComponentID</ref></type>
        <definition>PassComponentID castor3d::Engine::registerPassComponent</definition>
        <argsstring>(CreatePassComponentPlugin const &amp;createPlugin=&amp;ComponentT::createPlugin)</argsstring>
        <name>registerPassComponent</name>
        <qualifiedname>castor3d::Engine::registerPassComponent</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1ae103c2002c62249a5f7321d49ec93845" kindref="member">CreatePassComponentPlugin</ref> const &amp;</type>
          <declname>createPlugin</declname>
          <defval>&amp;ComponentT::createPlugin</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1036" column="17" bodyfile="Castor3D/Engine.hpp" bodystart="1036" bodyend="1040"/>
        <references refid="d8/d4f/a03703_1a62fc1bf3a2ea69b68841718748fd701f">registerPassComponent</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a51f2694d69d3b7afe2fb1e04a53a4369" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ComponentT</type>
          </param>
        </templateparamlist>
        <type><ref refid="d9/dba/a02278_1a94800deec9f740cb84fd6ea6865cea69" kindref="member">SubmeshComponentID</ref></type>
        <definition>SubmeshComponentID castor3d::Engine::registerSubmeshComponent</definition>
        <argsstring>(CreateSubmeshComponentPlugin const &amp;createPlugin=&amp;ComponentT::createPlugin)</argsstring>
        <name>registerSubmeshComponent</name>
        <qualifiedname>castor3d::Engine::registerSubmeshComponent</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a7c79103bf5549fc134615d4118d2d031" kindref="member">CreateSubmeshComponentPlugin</ref> const &amp;</type>
          <declname>createPlugin</declname>
          <defval>&amp;ComponentT::createPlugin</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1043" column="20" bodyfile="Castor3D/Engine.hpp" bodystart="1043" bodyend="1047"/>
        <references refid="d8/d4f/a03703_1ac24407256274645b3bde5fe048ca6407">registerSubmeshComponent</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a6a4c6e0bcc60e9419930e5173245876c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setLengthUnit</definition>
        <argsstring>(castor::LengthUnit value) noexcept</argsstring>
        <name>setLengthUnit</name>
        <qualifiedname>castor3d::Engine::setLengthUnit</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1a8cf4a835d2dbebebe00eef5217134a5f" kindref="member">castor::LengthUnit</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1049" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1049" bodyend="1052"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <description><para>Fonts. </para>
</description>
      <memberdef kind="function" id="d8/d4f/a03703_1a0705231fef20a697973ac71b36bd0b57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="d2/d3b/a08767_1a505fa389edebbc25b215d36dfccc8d46" kindref="member">castor::FontCache::ElementPtrT</ref></type>
        <definition>castor::FontCache::ElementPtrT castor3d::Engine::createFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key, ParametersT &amp;&amp;... parameters) const</argsstring>
        <name>createFont</name>
        <qualifiedname>castor3d::Engine::createFont</qualifiedname>
        <param>
          <type><ref refid="d2/d3b/a08767_1a2954b0e7d595dbc364f92e9b2a6f1785" kindref="member">castor::FontCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d0/d45/a05315" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1060" column="32" bodyfile="Castor3D/Engine.hpp" bodystart="1060" bodyend="1065"/>
        <references refid="d8/da3/a08255_1aae5b569e26955738733ba4de036629d7" compoundref="dd/d19/a01922" startline="99" endline="105">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::create</references>
        <references refid="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" compoundref="db/dc3/a00284" startline="828" endline="831">getFontCache</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a52cc49e29ffe7b2da28de2c4622913a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="d2/d3b/a08767_1a66863edb4476c4e6e535f1e46e25aa5c" kindref="member">castor::FontCache::ElementObsT</ref></type>
        <definition>castor::FontCache::ElementObsT castor3d::Engine::addNewFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key, ParametersT &amp;&amp;... parameters)</argsstring>
        <name>addNewFont</name>
        <qualifiedname>castor3d::Engine::addNewFont</qualifiedname>
        <param>
          <type><ref refid="d2/d3b/a08767_1a2954b0e7d595dbc364f92e9b2a6f1785" kindref="member">castor::FontCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d0/d45/a05315" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1068" column="32" bodyfile="Castor3D/Engine.hpp" bodystart="1068" bodyend="1073"/>
        <references refid="d8/da3/a08255_1ae42bd6b7da6f50fdef84f04a84172313" compoundref="dd/d19/a01922" startline="165" endline="173">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::add</references>
        <references refid="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" compoundref="db/dc3/a00284" startline="828" endline="831">getFontCache</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ac9abab737dc2b11ac9ee6f6ef31045c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d3b/a08767_1a66863edb4476c4e6e535f1e46e25aa5c" kindref="member">castor::FontCache::ElementObsT</ref></type>
        <definition>castor::FontCache::ElementObsT castor3d::Engine::addFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key, castor::FontCache::ElementPtrT &amp;element, bool initialise=false)</argsstring>
        <name>addFont</name>
        <qualifiedname>castor3d::Engine::addFont</qualifiedname>
        <param>
          <type><ref refid="d2/d3b/a08767_1a2954b0e7d595dbc364f92e9b2a6f1785" kindref="member">castor::FontCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d2/d3b/a08767_1a505fa389edebbc25b215d36dfccc8d46" kindref="member">castor::FontCache::ElementPtrT</ref> &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialise</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1075" column="32" bodyfile="Castor3D/Engine.hpp" bodystart="1075" bodyend="1080"/>
        <references refid="d8/da3/a08255_1ae42bd6b7da6f50fdef84f04a84172313" compoundref="dd/d19/a01922" startline="165" endline="173">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::add</references>
        <references refid="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" compoundref="db/dc3/a00284" startline="828" endline="831">getFontCache</references>
        <references refid="d8/d4f/a03703_1af2f096aad3600390dec50bbe37e8e3b2">initialise</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1addc711e1060765415a0812574efb17a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::removeFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key, bool cleanup=false)</argsstring>
        <name>removeFont</name>
        <qualifiedname>castor3d::Engine::removeFont</qualifiedname>
        <param>
          <type><ref refid="d2/d3b/a08767_1a2954b0e7d595dbc364f92e9b2a6f1785" kindref="member">castor::FontCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cleanup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1082" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1082" bodyend="1086"/>
        <references refid="d8/d4f/a03703_1a22e67669ad2954a42ce97e3d62c7f299">cleanup</references>
        <references refid="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" compoundref="db/dc3/a00284" startline="828" endline="831">getFontCache</references>
        <references refid="d8/da3/a08255_1a21d0ef274f434e61b1d0c336a8c7253a" compoundref="dd/d19/a01922" startline="331" endline="343">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::remove</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad1ce4f92f240c0fa3c1c4ede63942bac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d3b/a08767_1a66863edb4476c4e6e535f1e46e25aa5c" kindref="member">castor::FontCache::ElementObsT</ref></type>
        <definition>castor::FontCache::ElementObsT castor3d::Engine::findFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key) const</argsstring>
        <name>findFont</name>
        <qualifiedname>castor3d::Engine::findFont</qualifiedname>
        <param>
          <type><ref refid="d2/d3b/a08767_1a2954b0e7d595dbc364f92e9b2a6f1785" kindref="member">castor::FontCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1088" column="32" bodyfile="Castor3D/Engine.hpp" bodystart="1088" bodyend="1091"/>
        <references refid="d8/da3/a08255_1ae2bc50ccc5e4f323a14a1a6f39d3ec14" compoundref="dd/d19/a01922" startline="440" endline="451">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::find</references>
        <references refid="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" compoundref="db/dc3/a00284" startline="828" endline="831">getFontCache</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ab139accf9826d7cb5103af76aab1ec15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::hasFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key) const</argsstring>
        <name>hasFont</name>
        <qualifiedname>castor3d::Engine::hasFont</qualifiedname>
        <param>
          <type><ref refid="d2/d3b/a08767_1a2954b0e7d595dbc364f92e9b2a6f1785" kindref="member">castor::FontCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1093" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1093" bodyend="1096"/>
        <references refid="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" compoundref="db/dc3/a00284" startline="828" endline="831">getFontCache</references>
        <references refid="d8/da3/a08255_1a2c7514746fa02eb850a1a274cc227732" compoundref="dd/d19/a01922" startline="546" endline="549">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::has</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad1e115ab10d0a0a64bedd07035cbe6b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d3b/a08767_1a66863edb4476c4e6e535f1e46e25aa5c" kindref="member">castor::FontCache::ElementObsT</ref></type>
        <definition>castor::FontCache::ElementObsT castor3d::Engine::tryFindFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key) const</argsstring>
        <name>tryFindFont</name>
        <qualifiedname>castor3d::Engine::tryFindFont</qualifiedname>
        <param>
          <type><ref refid="d2/d3b/a08767_1a2954b0e7d595dbc364f92e9b2a6f1785" kindref="member">castor::FontCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1098" column="32" bodyfile="Castor3D/Engine.hpp" bodystart="1098" bodyend="1101"/>
        <references refid="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" compoundref="db/dc3/a00284" startline="828" endline="831">getFontCache</references>
        <references refid="d8/da3/a08255_1a1057aebd572ac71378ea519f7c0288ab" compoundref="dd/d19/a01922" startline="411" endline="415">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::tryFind</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <description><para>Images. </para>
</description>
      <memberdef kind="function" id="d8/d4f/a03703_1af92ce0a62bfeb2923bf0a32c1094e9d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="d2/dd8/a08951_1abc39357e6adc08038c4665f81bf67280" kindref="member">castor::ImageCache::ElementPtrT</ref></type>
        <definition>castor::ImageCache::ElementPtrT castor3d::Engine::createImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key, ParametersT &amp;&amp;... parameters) const</argsstring>
        <name>createImage</name>
        <qualifiedname>castor3d::Engine::createImage</qualifiedname>
        <param>
          <type><ref refid="d2/dd8/a08951_1af27ff3a52fa556b459e2b2fcfab6ddf3" kindref="member">castor::ImageCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d0/d45/a05315" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1109" column="33" bodyfile="Castor3D/Engine.hpp" bodystart="1109" bodyend="1114"/>
        <references refid="d8/da3/a08255_1aae5b569e26955738733ba4de036629d7" compoundref="dd/d19/a01922" startline="99" endline="105">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::create</references>
        <references refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="db/dc3/a00284" startline="818" endline="821">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a8e7137f1ee10104cab15245472a4dbeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="d2/dd8/a08951_1a4731452dcd4b696e95f46583f09ef266" kindref="member">castor::ImageCache::ElementObsT</ref></type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::addNewImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key, ParametersT &amp;&amp;... parameters)</argsstring>
        <name>addNewImage</name>
        <qualifiedname>castor3d::Engine::addNewImage</qualifiedname>
        <param>
          <type><ref refid="d2/dd8/a08951_1af27ff3a52fa556b459e2b2fcfab6ddf3" kindref="member">castor::ImageCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d0/d45/a05315" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1117" column="33" bodyfile="Castor3D/Engine.hpp" bodystart="1117" bodyend="1122"/>
        <references refid="d8/da3/a08255_1ae42bd6b7da6f50fdef84f04a84172313" compoundref="dd/d19/a01922" startline="165" endline="173">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::add</references>
        <references refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="db/dc3/a00284" startline="818" endline="821">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a1f26b1f69ade47399e32ee596ed77756" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/dd8/a08951_1a4731452dcd4b696e95f46583f09ef266" kindref="member">castor::ImageCache::ElementObsT</ref></type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::addImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key, castor::ImageCache::ElementPtrT &amp;element, bool initialise=false)</argsstring>
        <name>addImage</name>
        <qualifiedname>castor3d::Engine::addImage</qualifiedname>
        <param>
          <type><ref refid="d2/dd8/a08951_1af27ff3a52fa556b459e2b2fcfab6ddf3" kindref="member">castor::ImageCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d2/dd8/a08951_1abc39357e6adc08038c4665f81bf67280" kindref="member">castor::ImageCache::ElementPtrT</ref> &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialise</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1124" column="33" bodyfile="Castor3D/Engine.hpp" bodystart="1124" bodyend="1129"/>
        <references refid="d8/da3/a08255_1ae42bd6b7da6f50fdef84f04a84172313" compoundref="dd/d19/a01922" startline="165" endline="173">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::add</references>
        <references refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="db/dc3/a00284" startline="818" endline="821">getImageCache</references>
        <references refid="d8/d4f/a03703_1af2f096aad3600390dec50bbe37e8e3b2">initialise</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a5df7c3836acec8a82912d16172ef0b01" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::removeImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key, bool cleanup=false) noexcept</argsstring>
        <name>removeImage</name>
        <qualifiedname>castor3d::Engine::removeImage</qualifiedname>
        <param>
          <type><ref refid="d2/dd8/a08951_1af27ff3a52fa556b459e2b2fcfab6ddf3" kindref="member">castor::ImageCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cleanup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1131" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1131" bodyend="1135"/>
        <references refid="d8/d4f/a03703_1a22e67669ad2954a42ce97e3d62c7f299">cleanup</references>
        <references refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="db/dc3/a00284" startline="818" endline="821">getImageCache</references>
        <references refid="d8/da3/a08255_1a21d0ef274f434e61b1d0c336a8c7253a" compoundref="dd/d19/a01922" startline="331" endline="343">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::remove</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a0e3cae5eb336c27b42a7225bdbd1b38f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/dd8/a08951_1a4731452dcd4b696e95f46583f09ef266" kindref="member">castor::ImageCache::ElementObsT</ref></type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::findImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key) const</argsstring>
        <name>findImage</name>
        <qualifiedname>castor3d::Engine::findImage</qualifiedname>
        <param>
          <type><ref refid="d2/dd8/a08951_1af27ff3a52fa556b459e2b2fcfab6ddf3" kindref="member">castor::ImageCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1137" column="33" bodyfile="Castor3D/Engine.hpp" bodystart="1137" bodyend="1140"/>
        <references refid="d8/da3/a08255_1ae2bc50ccc5e4f323a14a1a6f39d3ec14" compoundref="dd/d19/a01922" startline="440" endline="451">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::find</references>
        <references refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="db/dc3/a00284" startline="818" endline="821">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ae7e13a16cf5c75af931f9e3f3ef0968d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::hasImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key) const</argsstring>
        <name>hasImage</name>
        <qualifiedname>castor3d::Engine::hasImage</qualifiedname>
        <param>
          <type><ref refid="d2/dd8/a08951_1af27ff3a52fa556b459e2b2fcfab6ddf3" kindref="member">castor::ImageCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1142" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1142" bodyend="1145"/>
        <references refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="db/dc3/a00284" startline="818" endline="821">getImageCache</references>
        <references refid="d8/da3/a08255_1a2c7514746fa02eb850a1a274cc227732" compoundref="dd/d19/a01922" startline="546" endline="549">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::has</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aecd56700ba7c78ec10e419a872b1eab7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/dd8/a08951_1a4731452dcd4b696e95f46583f09ef266" kindref="member">castor::ImageCache::ElementObsT</ref></type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::tryFindImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key) const noexcept</argsstring>
        <name>tryFindImage</name>
        <qualifiedname>castor3d::Engine::tryFindImage</qualifiedname>
        <param>
          <type><ref refid="d2/dd8/a08951_1af27ff3a52fa556b459e2b2fcfab6ddf3" kindref="member">castor::ImageCache::ElementKeyT</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1147" column="33" bodyfile="Castor3D/Engine.hpp" bodystart="1147" bodyend="1150"/>
        <references refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="db/dc3/a00284" startline="818" endline="821">getImageCache</references>
        <references refid="d8/da3/a08255_1a1057aebd572ac71378ea519f7c0288ab" compoundref="dd/d19/a01922" startline="411" endline="415">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::tryFind</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ab079a7d5c089864cd6eb28d8ccaf83ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="d2/dd8/a08951_1a4731452dcd4b696e95f46583f09ef266" kindref="member">castor::ImageCache::ElementObsT</ref></type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::tryAddImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;name, bool initialise, castor::ImageCache::ElementObsT &amp;created, ParametersT &amp;&amp;... parameters)</argsstring>
        <name>tryAddImage</name>
        <qualifiedname>castor3d::Engine::tryAddImage</qualifiedname>
        <param>
          <type><ref refid="d2/dd8/a08951_1af27ff3a52fa556b459e2b2fcfab6ddf3" kindref="member">castor::ImageCache::ElementKeyT</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialise</declname>
        </param>
        <param>
          <type><ref refid="d2/dd8/a08951_1a4731452dcd4b696e95f46583f09ef266" kindref="member">castor::ImageCache::ElementObsT</ref> &amp;</type>
          <declname>created</declname>
        </param>
        <param>
          <type><ref refid="d0/d45/a05315" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1153" column="33" bodyfile="Castor3D/Engine.hpp" bodystart="1153" bodyend="1162"/>
        <references refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="db/dc3/a00284" startline="818" endline="821">getImageCache</references>
        <references refid="d8/d4f/a03703_1af2f096aad3600390dec50bbe37e8e3b2">initialise</references>
        <references refid="d8/da3/a08255_1adfe23feed932e13cb6d29207a1ccc51a" compoundref="dd/d19/a01922" startline="120" endline="128">castor::ResourceCacheBaseT&lt; ResT, KeyT, TraitsT &gt;::tryAdd</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d4f/a03703_1adca6ae1cedbb991c4a056260eac32c8a" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a7ad33750488d04aeaaeff625c01195ec" kindref="member">castor::LoggerInstancePtr</ref></type>
        <definition>castor::LoggerInstancePtr castor3d::Engine::m_ownedLogger</definition>
        <argsstring></argsstring>
        <name>m_ownedLogger</name>
        <qualifiedname>castor3d::Engine::m_ownedLogger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1169" column="27" bodyfile="Castor3D/Engine.hpp" bodystart="1169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1ae5b070260e89ea19d18a87703869c931" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d93/a09063" kindref="compound">castor::LoggerInstance</ref> *</type>
        <definition>castor::LoggerInstance* castor3d::Engine::m_logger</definition>
        <argsstring></argsstring>
        <name>m_logger</name>
        <qualifiedname>castor3d::Engine::m_logger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1170" column="25" bodyfile="Castor3D/Engine.hpp" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a9a631744f143b8c30198b8a161128db3" prot="private" static="no" mutable="no">
        <type><ref refid="df/dcb/a03699" kindref="compound">EngineConfig</ref></type>
        <definition>EngineConfig castor3d::Engine::m_config</definition>
        <argsstring></argsstring>
        <name>m_config</name>
        <qualifiedname>castor3d::Engine::m_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1171" column="14" bodyfile="Castor3D/Engine.hpp" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a2480647f1b1863ca8a7a2ddd710de6c3" prot="private" static="no" mutable="no">
        <type>RenderLoopUPtr</type>
        <definition>RenderLoopUPtr castor3d::Engine::m_renderLoop</definition>
        <argsstring></argsstring>
        <name>m_renderLoop</name>
        <qualifiedname>castor3d::Engine::m_renderLoop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1172" column="16" bodyfile="Castor3D/Engine.hpp" bodystart="1172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a44f73c181073f518a1c1fa2aa542c93e" prot="private" static="no" mutable="no">
        <type><ref refid="d5/d15/a05335" kindref="compound">Version</ref></type>
        <definition>Version castor3d::Engine::m_version</definition>
        <argsstring></argsstring>
        <name>m_version</name>
        <qualifiedname>castor3d::Engine::m_version</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1173" column="9" bodyfile="Castor3D/Engine.hpp" bodystart="1173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a6586a471d2ad424749c11199bc7129a4" prot="private" static="no" mutable="no">
        <type>ashes::RendererList</type>
        <definition>ashes::RendererList castor3d::Engine::m_rendererList</definition>
        <argsstring></argsstring>
        <name>m_rendererList</name>
        <qualifiedname>castor3d::Engine::m_rendererList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1174" column="21" bodyfile="Castor3D/Engine.hpp" bodystart="1174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1ab82a4fcaca8adcd2c6aa9ec9e38fac39" prot="private" static="no" mutable="no">
        <type>RenderSystemUPtr</type>
        <definition>RenderSystemUPtr castor3d::Engine::m_renderSystem</definition>
        <argsstring></argsstring>
        <name>m_renderSystem</name>
        <qualifiedname>castor3d::Engine::m_renderSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1175" column="18" bodyfile="Castor3D/Engine.hpp" bodystart="1175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a27851fde9153f557b64e6c094ddf50d6" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d95/a06703" kindref="compound">Texture</ref></type>
        <definition>Texture castor3d::Engine::m_brdf</definition>
        <argsstring></argsstring>
        <name>m_brdf</name>
        <qualifiedname>castor3d::Engine::m_brdf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1176" column="9" bodyfile="Castor3D/Engine.hpp" bodystart="1176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1ab14f3f24ed0245f73c7fbc95fd48fabc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Engine::m_cleaned</definition>
        <argsstring></argsstring>
        <name>m_cleaned</name>
        <qualifiedname>castor3d::Engine::m_cleaned</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1177" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1177" bodyend="1177"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a68a7366c2794c4be7751c3df17052605" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Engine::m_threaded</definition>
        <argsstring></argsstring>
        <name>m_threaded</name>
        <qualifiedname>castor3d::Engine::m_threaded</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1178" column="6" bodyfile="Castor3D/Engine.hpp" bodystart="1178" bodyend="1178"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a2fb0fd0f29860410c52ea92029ea0b86" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1abe0b15c7ba5724eff47db8e94150b201" kindref="member">SamplerObs</ref></type>
        <definition>SamplerObs castor3d::Engine::m_defaultSampler</definition>
        <argsstring></argsstring>
        <name>m_defaultSampler</name>
        <qualifiedname>castor3d::Engine::m_defaultSampler</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1179" column="12" bodyfile="Castor3D/Engine.hpp" bodystart="1179" bodyend="1179"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a07f5d3d107bc93b922d2530c60296cb1" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1abe0b15c7ba5724eff47db8e94150b201" kindref="member">SamplerObs</ref></type>
        <definition>SamplerObs castor3d::Engine::m_lightsSampler</definition>
        <argsstring></argsstring>
        <name>m_lightsSampler</name>
        <qualifiedname>castor3d::Engine::m_lightsSampler</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1180" column="12" bodyfile="Castor3D/Engine.hpp" bodystart="1180" bodyend="1180"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1acada1e0302fab81df0117ff7c9dd5d18" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d26/a08963" kindref="compound">castor::ImageLoader</ref></type>
        <definition>castor::ImageLoader castor3d::Engine::m_imageLoader</definition>
        <argsstring></argsstring>
        <name>m_imageLoader</name>
        <qualifiedname>castor3d::Engine::m_imageLoader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1181" column="21" bodyfile="Castor3D/Engine.hpp" bodystart="1181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1af7e2b42a01565863bebd7c0b6b4317f8" prot="private" static="no" mutable="no">
        <type><ref refid="d0/daf/a08971" kindref="compound">castor::ImageWriter</ref></type>
        <definition>castor::ImageWriter castor3d::Engine::m_imageWriter</definition>
        <argsstring></argsstring>
        <name>m_imageWriter</name>
        <qualifiedname>castor3d::Engine::m_imageWriter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1182" column="21" bodyfile="Castor3D/Engine.hpp" bodystart="1182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1ac6c656b473c4872a0e986ca4c34f3dd1" prot="private" static="no" mutable="no">
        <type>FrameListenerRPtr</type>
        <definition>FrameListenerRPtr castor3d::Engine::m_defaultListener</definition>
        <argsstring></argsstring>
        <name>m_defaultListener</name>
        <qualifiedname>castor3d::Engine::m_defaultListener</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1190" column="19" bodyfile="Castor3D/Engine.hpp" bodystart="1190" bodyend="1190"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1aeb1f7a383e78c4a4be3c0cf67741d9bf" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1af776079ca1d2ee2d1b993f2d34011159" kindref="member">castor::StringMap</ref>&lt; <ref refid="d0/dd4/a06595" kindref="compound">RenderWindow</ref> * &gt;</type>
        <definition>castor::StringMap&lt; RenderWindow * &gt; castor3d::Engine::m_renderWindows</definition>
        <argsstring></argsstring>
        <name>m_renderWindows</name>
        <qualifiedname>castor3d::Engine::m_renderWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1191" column="19" bodyfile="Castor3D/Engine.hpp" bodystart="1191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a85672eb4854300af5b55b4a120350bc8" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a93b53452a3c421817a14b649ccec1fb7" kindref="member">castor::Map</ref>&lt; <ref refid="d0/dd4/a06595" kindref="compound">RenderWindow</ref> const *, UserInputListenerUPtr &gt;</type>
        <definition>castor::Map&lt; RenderWindow const *, UserInputListenerUPtr &gt; castor3d::Engine::m_windowInputListeners</definition>
        <argsstring></argsstring>
        <name>m_windowInputListeners</name>
        <qualifiedname>castor3d::Engine::m_windowInputListeners</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1192" column="13" bodyfile="Castor3D/Engine.hpp" bodystart="1192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1ae62c1dad2af66916c55904af755dc342" prot="private" static="no" mutable="no">
        <type>UserInputListenerUPtr</type>
        <definition>UserInputListenerUPtr castor3d::Engine::m_userInputListener</definition>
        <argsstring></argsstring>
        <name>m_userInputListener</name>
        <qualifiedname>castor3d::Engine::m_userInputListener</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1193" column="23" bodyfile="Castor3D/Engine.hpp" bodystart="1193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1ad06e6693779fea49a547c249c5ddc4d5" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a0529e1a9b017fe1ac441cf37d192d052" kindref="member">castor::FontCache</ref></type>
        <definition>castor::FontCache castor3d::Engine::m_fontCache</definition>
        <argsstring></argsstring>
        <name>m_fontCache</name>
        <qualifiedname>castor3d::Engine::m_fontCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1196" column="19" bodyfile="Castor3D/Engine.hpp" bodystart="1196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1aea4645095cf0e48ddbcc0670bc902925" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1aa54986932aa7ed016fdb8e94c36b5f9d" kindref="member">castor::ImageCache</ref></type>
        <definition>castor::ImageCache castor3d::Engine::m_imageCache</definition>
        <argsstring></argsstring>
        <name>m_imageCache</name>
        <qualifiedname>castor3d::Engine::m_imageCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1197" column="20" bodyfile="Castor3D/Engine.hpp" bodystart="1197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a3481a91fbe8798b00611bb8204e9a96b" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1af776079ca1d2ee2d1b993f2d34011159" kindref="member">castor::StringMap</ref>&lt; <ref refid="d2/dc5/a08419" kindref="compound">castor::AdditionalParsers</ref> &gt;</type>
        <definition>castor::StringMap&lt; castor::AdditionalParsers &gt; castor3d::Engine::m_additionalParsers</definition>
        <argsstring></argsstring>
        <name>m_additionalParsers</name>
        <qualifiedname>castor3d::Engine::m_additionalParsers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1198" column="19" bodyfile="Castor3D/Engine.hpp" bodystart="1198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1accbd13b635d98a9f2ee8c1edbefeb502" prot="private" static="no" mutable="no">
        <type>MeshFactoryUPtr</type>
        <definition>MeshFactoryUPtr castor3d::Engine::m_meshFactory</definition>
        <argsstring></argsstring>
        <name>m_meshFactory</name>
        <qualifiedname>castor3d::Engine::m_meshFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1199" column="17" bodyfile="Castor3D/Engine.hpp" bodystart="1199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a28e60fb73fd323e55d6f3aefd8202431" prot="private" static="no" mutable="no">
        <type>ImporterFileFactoryUPtr</type>
        <definition>ImporterFileFactoryUPtr castor3d::Engine::m_importerFileFactory</definition>
        <argsstring></argsstring>
        <name>m_importerFileFactory</name>
        <qualifiedname>castor3d::Engine::m_importerFileFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1200" column="25" bodyfile="Castor3D/Engine.hpp" bodystart="1200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a291a3e44f575ae144eba32fa085fb381" prot="private" static="no" mutable="no">
        <type>ParticleFactoryUPtr</type>
        <definition>ParticleFactoryUPtr castor3d::Engine::m_particleFactory</definition>
        <argsstring></argsstring>
        <name>m_particleFactory</name>
        <qualifiedname>castor3d::Engine::m_particleFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1201" column="21" bodyfile="Castor3D/Engine.hpp" bodystart="1201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a740d8635671e84da06912ee94d34cfd5" prot="private" static="no" mutable="no">
        <type>PassFactoryUPtr</type>
        <definition>PassFactoryUPtr castor3d::Engine::m_passFactory</definition>
        <argsstring></argsstring>
        <name>m_passFactory</name>
        <qualifiedname>castor3d::Engine::m_passFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1202" column="17" bodyfile="Castor3D/Engine.hpp" bodystart="1202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a6e536751738ebf5795dfa6ef83471298" prot="private" static="no" mutable="no">
        <type>PassComponentRegisterUPtr</type>
        <definition>PassComponentRegisterUPtr castor3d::Engine::m_passComponents</definition>
        <argsstring></argsstring>
        <name>m_passComponents</name>
        <qualifiedname>castor3d::Engine::m_passComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1203" column="27" bodyfile="Castor3D/Engine.hpp" bodystart="1203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a4e16e5a7409ba21493d92d8c53033343" prot="private" static="no" mutable="no">
        <type>SubmeshComponentRegisterUPtr</type>
        <definition>SubmeshComponentRegisterUPtr castor3d::Engine::m_submeshComponents</definition>
        <argsstring></argsstring>
        <name>m_submeshComponents</name>
        <qualifiedname>castor3d::Engine::m_submeshComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1204" column="30" bodyfile="Castor3D/Engine.hpp" bodystart="1204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1afadb61514f5ec62166ba88d39e9fb65f" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d65/a09371" kindref="compound">castor::CpuInformations</ref></type>
        <definition>castor::CpuInformations castor3d::Engine::m_cpuInformations</definition>
        <argsstring></argsstring>
        <name>m_cpuInformations</name>
        <qualifiedname>castor3d::Engine::m_cpuInformations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1205" column="25" bodyfile="Castor3D/Engine.hpp" bodystart="1205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1ab4dd08a318d7af3b80d45ea576a960f8" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
        <definition>LightingModelID castor3d::Engine::m_lightingModelId</definition>
        <argsstring></argsstring>
        <name>m_lightingModelId</name>
        <qualifiedname>castor3d::Engine::m_lightingModelId</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1206" column="17" bodyfile="Castor3D/Engine.hpp" bodystart="1206" bodyend="1206"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1abacccda43e98535e6c797850abb622f0" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::m_lpvGridSize</definition>
        <argsstring></argsstring>
        <name>m_lpvGridSize</name>
        <qualifiedname>castor3d::Engine::m_lpvGridSize</qualifiedname>
        <initializer>{ 32u }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1207" column="10" bodyfile="Castor3D/Engine.hpp" bodystart="1207" bodyend="1207"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a173c3212b8140a8f3cf54be640631496" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::m_maxImageSize</definition>
        <argsstring></argsstring>
        <name>m_maxImageSize</name>
        <qualifiedname>castor3d::Engine::m_maxImageSize</qualifiedname>
        <initializer>{ 0xFFFFFFFF }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1208" column="10" bodyfile="Castor3D/Engine.hpp" bodystart="1208" bodyend="1208"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a10f19e9ef04cd24c2ef0a1a4a8026815" prot="private" static="no" mutable="no">
        <type><ref refid="da/d96/a09447" kindref="compound">castor::AsyncJobQueue</ref></type>
        <definition>castor::AsyncJobQueue castor3d::Engine::m_cpuJobs</definition>
        <argsstring></argsstring>
        <name>m_cpuJobs</name>
        <qualifiedname>castor3d::Engine::m_cpuJobs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1209" column="23" bodyfile="Castor3D/Engine.hpp" bodystart="1209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a6834af8c0937c9582f78cdc7bff7f0b3" prot="private" static="no" mutable="no">
        <type>crg::ResourceHandler</type>
        <definition>crg::ResourceHandler castor3d::Engine::m_resourceHandler</definition>
        <argsstring></argsstring>
        <name>m_resourceHandler</name>
        <qualifiedname>castor3d::Engine::m_resourceHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1210" column="22" bodyfile="Castor3D/Engine.hpp" bodystart="1210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a798aedb79fb481bd0c46ddf869c6aa70" prot="private" static="no" mutable="no">
        <type>crg::ResourcesCache</type>
        <definition>crg::ResourcesCache castor3d::Engine::m_resources</definition>
        <argsstring></argsstring>
        <name>m_resources</name>
        <qualifiedname>castor3d::Engine::m_resources</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1211" column="21" bodyfile="Castor3D/Engine.hpp" bodystart="1211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a39bfeab9b11c45a4ebf504d301a2cb48" prot="private" static="no" mutable="no">
        <type>LightingModelFactoryUPtr</type>
        <definition>LightingModelFactoryUPtr castor3d::Engine::m_lightingModelFactory</definition>
        <argsstring></argsstring>
        <name>m_lightingModelFactory</name>
        <qualifiedname>castor3d::Engine::m_lightingModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1212" column="26" bodyfile="Castor3D/Engine.hpp" bodystart="1212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1af38554b5e3b64830fde6207e837aec97" prot="private" static="no" mutable="no">
        <type><ref refid="da/d68/a02280_1a946591f4eabbe6674e2e0734965117b2" kindref="member">shader::BackgroundModelFactory</ref></type>
        <definition>shader::BackgroundModelFactory castor3d::Engine::m_backgroundModelFactory</definition>
        <argsstring></argsstring>
        <name>m_backgroundModelFactory</name>
        <qualifiedname>castor3d::Engine::m_backgroundModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1213" column="32" bodyfile="Castor3D/Engine.hpp" bodystart="1213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1af9ea4d371aacdc4cadef5e9a3bbd34cb" prot="private" static="no" mutable="no">
        <type>SceneUPtr</type>
        <definition>SceneUPtr castor3d::Engine::m_loadingScene</definition>
        <argsstring></argsstring>
        <name>m_loadingScene</name>
        <qualifiedname>castor3d::Engine::m_loadingScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1214" column="11" bodyfile="Castor3D/Engine.hpp" bodystart="1214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1ad7b9c952abe93d7780d56a8f680c0696" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1afaceb665bb135b35bf24ad03bccf63b9" kindref="member">castor::UnorderedStringMap</ref>&lt; <ref refid="d2/dd2/a02279_1ac623881246e92c1d187a3a44b3e011f6" kindref="member">castor::UniquePtr</ref>&lt; <ref refid="d0/d94/a06507" kindref="compound">RenderPassRegisterInfo</ref> &gt; &gt;</type>
        <definition>castor::UnorderedStringMap&lt; castor::UniquePtr&lt; RenderPassRegisterInfo &gt; &gt; castor3d::Engine::m_passRenderPassTypes</definition>
        <argsstring></argsstring>
        <name>m_passRenderPassTypes</name>
        <qualifiedname>castor3d::Engine::m_passRenderPassTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1215" column="28" bodyfile="Castor3D/Engine.hpp" bodystart="1215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1aebf614e2456d6ab2534e06efb086877f" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1afaceb665bb135b35bf24ad03bccf63b9" kindref="member">castor::UnorderedStringMap</ref>&lt; <ref refid="d2/dd2/a02279_1a2d339222ffb89e8324291fb135b12496" kindref="member">castor::Pair</ref>&lt; <ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref>, <ref refid="d9/dba/a02278_1aa3fa62c45d6d39bf1209299592992b5f" kindref="member">Parameters</ref> &gt; &gt;</type>
        <definition>castor::UnorderedStringMap&lt; castor::Pair&lt; RenderPassTypeID, Parameters &gt; &gt; castor3d::Engine::m_renderPassTypes</definition>
        <argsstring></argsstring>
        <name>m_renderPassTypes</name>
        <qualifiedname>castor3d::Engine::m_renderPassTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1216" column="28" bodyfile="Castor3D/Engine.hpp" bodystart="1216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1adc1b4f3ec2eb40b89608201c5062ab61" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a8cf4a835d2dbebebe00eef5217134a5f" kindref="member">castor::LengthUnit</ref></type>
        <definition>castor::LengthUnit castor3d::Engine::m_unit</definition>
        <argsstring></argsstring>
        <name>m_unit</name>
        <qualifiedname>castor3d::Engine::m_unit</qualifiedname>
        <initializer>{ <ref refid="d2/dd2/a02279_1a8cf4a835d2dbebebe00eef5217134a5fa72c4b60024431dfaacbf85e7d4531215" kindref="member">castor::LengthUnit::eMetre</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1217" column="20" bodyfile="Castor3D/Engine.hpp" bodystart="1217" bodyend="1217"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a5f8626c9aba4ec456e5306e3918742a2" prot="private" static="no" mutable="yes">
        <type><ref refid="d2/dd2/a02279_1aac3763b795438810958473f0b84908fb" kindref="member">castor::Mutex</ref></type>
        <definition>castor::Mutex castor3d::Engine::m_allocMutex</definition>
        <argsstring></argsstring>
        <name>m_allocMutex</name>
        <qualifiedname>castor3d::Engine::m_allocMutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1218" column="23" bodyfile="Castor3D/Engine.hpp" bodystart="1218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4f/a03703_1a0091faf90302a3fed6d6a504faf4950b" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a5f667ec3534f15e07b7825ade796cd2b" kindref="member">castor::UnorderedMap</ref>&lt; std::thread::id, <ref refid="d2/dd2/a02279_1a1703e7c907eb1f09166a4dfb4d39985b" kindref="member">castor::RawUniquePtr</ref>&lt; ast::ShaderAllocator &gt; &gt;</type>
        <definition>castor::UnorderedMap&lt; std::thread::id, castor::RawUniquePtr&lt; ast::ShaderAllocator &gt; &gt; castor3d::Engine::m_shaderAllocators</definition>
        <argsstring></argsstring>
        <name>m_shaderAllocators</name>
        <qualifiedname>castor3d::Engine::m_shaderAllocators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1219" column="22" bodyfile="Castor3D/Engine.hpp" bodystart="1219" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d4f/a03703_1a1c7ef21a14ec79f22b51a8f5eab14608" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::Engine</definition>
        <argsstring>(EngineConfig config, castor::LoggerInstancePtr ownedLogger, castor::LoggerInstance *logger)</argsstring>
        <name>Engine</name>
        <qualifiedname>castor3d::Engine::Engine</qualifiedname>
        <param>
          <type><ref refid="df/dcb/a03699" kindref="compound">EngineConfig</ref></type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1a7ad33750488d04aeaaeff625c01195ec" kindref="member">castor::LoggerInstancePtr</ref></type>
          <declname>ownedLogger</declname>
        </param>
        <param>
          <type><ref refid="d9/d93/a09063" kindref="compound">castor::LoggerInstance</ref> *</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a1f1d132c75ad69c5a382c8ae567d1045" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::doLoadCoreData</definition>
        <argsstring>()</argsstring>
        <name>doLoadCoreData</name>
        <qualifiedname>castor3d::Engine::doLoadCoreData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1166" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a6b4c4b02017e01f9ced45f2b455999cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</definition>
        <argsstring>(shader, ShaderProgram)</argsstring>
        <name>DECLARE_CACHE_MEMBER_MIN</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</qualifiedname>
        <param>
          <type>shader</type>
        </param>
        <param>
          <type><ref refid="d3/dcd/a07303" kindref="compound">ShaderProgram</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a686aa285e6018bb1ff79849590864641" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(sampler, Sampler)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>sampler</type>
        </param>
        <param>
          <type><ref refid="de/d42/a04927" kindref="compound">Sampler</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a9a7e0db0784fb2ed8d59a0cc48161e63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(material, Material)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>material</type>
        </param>
        <param>
          <type><ref refid="d1/d42/a03979" kindref="compound">Material</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a941ef9c8073dcebf9c22c1f94119b444" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(plugin, Plugin)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>plugin</type>
        </param>
        <param>
          <type><ref refid="db/d5e/a05891" kindref="compound">Plugin</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a637d1479515a10d4f672e929694f7397" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(overlay, Overlay)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>overlay</type>
        </param>
        <param>
          <type><ref refid="d6/d37/a05783" kindref="compound">Overlay</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a060dad0acd301c2fcc68fd10c3bc2701" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(scene, Scene)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>scene</type>
        </param>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aabb4bd1dc0e9e0ffdeee598842a16985" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(listener, FrameListener)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>listener</type>
        </param>
        <param>
          <type><ref refid="dd/d3c/a03735" kindref="compound">FrameListener</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ac2ad141a52a6a8e2f759aaf864522aa9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</definition>
        <argsstring>(target, RenderTarget)</argsstring>
        <name>DECLARE_CACHE_MEMBER_MIN</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</qualifiedname>
        <param>
          <type>target</type>
        </param>
        <param>
          <type><ref refid="dd/d91/a06563" kindref="compound">RenderTarget</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1afc8d4b137cb381e2d1a13b51db1b6b5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</definition>
        <argsstring>(texture, TextureUnit)</argsstring>
        <name>DECLARE_CACHE_MEMBER_MIN</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</qualifiedname>
        <param>
          <type>texture</type>
        </param>
        <param>
          <type><ref refid="d9/d7c/a04999" kindref="compound">TextureUnit</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="1195" column="1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d4f/a03703_1a307120dfa6332410c126687778c63876" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Engine::Engine</definition>
        <argsstring>(EngineConfig config)</argsstring>
        <name>Engine</name>
        <qualifiedname>castor3d::Engine::Engine</qualifiedname>
        <param>
          <type><ref refid="df/dcb/a03699" kindref="compound">EngineConfig</ref></type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>La configuration du moteur. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="155" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a7c94fd1b5112e8791bb3e9f9805698a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Engine::Engine</definition>
        <argsstring>(EngineConfig config, castor::LoggerInstance &amp;logger)</argsstring>
        <name>Engine</name>
        <qualifiedname>castor3d::Engine::Engine</qualifiedname>
        <param>
          <type><ref refid="df/dcb/a03699" kindref="compound">EngineConfig</ref></type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="d9/d93/a09063" kindref="compound">castor::LoggerInstance</ref> &amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>La configuration du moteur. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">logger</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;instance de logger. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="166" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aa7a0c565e2ef5b0316fbf3bbd538c916" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Engine::~Engine</definition>
        <argsstring>() noexcept</argsstring>
        <name>~Engine</name>
        <qualifiedname>castor3d::Engine::~Engine</qualifiedname>
        <briefdescription>
<para>Destructeur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="174" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1af2f096aad3600390dec50bbe37e8e3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::initialise</definition>
        <argsstring>(uint32_t wantedFPS=100, bool threaded=false)</argsstring>
        <name>initialise</name>
        <qualifiedname>castor3d::Engine::initialise</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>wantedFPS</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>threaded</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Fonction d&apos;initialisation, définit le frame rate voulu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wantedFPS</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nombre voulu de FPS </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>Si <computeroutput>false</computeroutput>, le rendu ne peut pas être threadé </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="185" column="14"/>
        <referencedby refid="d8/d4f/a03703_1ac9abab737dc2b11ac9ee6f6ef31045c1" compoundref="db/dc3/a00284" startline="1075" endline="1080">addFont</referencedby>
        <referencedby refid="d8/d4f/a03703_1a1f26b1f69ade47399e32ee596ed77756" compoundref="db/dc3/a00284" startline="1124" endline="1129">addImage</referencedby>
        <referencedby refid="d8/d4f/a03703_1ab079a7d5c089864cd6eb28d8ccaf83ea" compoundref="db/dc3/a00284" startline="1153" endline="1162">tryAddImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a22e67669ad2954a42ce97e3d62c7f299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>castor3d::Engine::cleanup</qualifiedname>
        <briefdescription>
<para>Fonction de nettoyage, détruit tout ce qui a été créé depuis le début. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Détruit aussi les RenderWindows, les seules choses restantes après ça sont le <ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> et les plug-ins chargés </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="194" column="14"/>
        <referencedby refid="d8/d4f/a03703_1addc711e1060765415a0812574efb17a7" compoundref="db/dc3/a00284" startline="1082" endline="1086">removeFont</referencedby>
        <referencedby refid="d8/d4f/a03703_1a5df7c3836acec8a82912d16172ef0b01" compoundref="db/dc3/a00284" startline="1131" endline="1135">removeImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a726499108a0a5ced1d24055774e56e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Engine::loadRenderer</definition>
        <argsstring>(castor::String const &amp;type)</argsstring>
        <name>loadRenderer</name>
        <qualifiedname>castor3d::Engine::loadRenderer</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Charge un plug-in de rendu, selon le type de rendu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type de renderer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si tout s&apos;est bien passé </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="205" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1abbf9a42e489446b4b5c16382e983446a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::loadRenderer</definition>
        <argsstring>(Renderer renderer)</argsstring>
        <name>loadRenderer</name>
        <qualifiedname>castor3d::Engine::loadRenderer</qualifiedname>
        <param>
          <type><ref refid="dc/de9/a06555" kindref="compound">Renderer</ref></type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
<para>Charge un plug-in de rendu, selon le type de rendu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le rendere. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="214" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a4e782f5ed6e26ecd8adae80c8b09ea32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/d00/a03707" kindref="compound">CpuFrameEvent</ref> *</type>
        <definition>C3D_API CpuFrameEvent * castor3d::Engine::postEvent</definition>
        <argsstring>(CpuFrameEventUPtr event) const</argsstring>
        <name>postEvent</name>
        <qualifiedname>castor3d::Engine::postEvent</qualifiedname>
        <param>
          <type>CpuFrameEventUPtr</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Ajoute un évènement de frame au frame listener par défaut. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;évènement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="223" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1abb708866f284c6b7a2b7bb2101c302ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::sendEvent</definition>
        <argsstring>(GpuFrameEventUPtr event) const</argsstring>
        <name>sendEvent</name>
        <qualifiedname>castor3d::Engine::sendEvent</qualifiedname>
        <param>
          <type>GpuFrameEventUPtr</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Si un device est actif, exécute l&apos;évènement donné, sinon il est ajouté au frame listener par défaut. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;évènement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="232" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ace02ed45cf9e03b8cd3a826f7a96f810" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/d8b/a03739" kindref="compound">GpuFrameEvent</ref> *</type>
        <definition>C3D_API GpuFrameEvent * castor3d::Engine::postEvent</definition>
        <argsstring>(GpuFrameEventUPtr event) const</argsstring>
        <name>postEvent</name>
        <qualifiedname>castor3d::Engine::postEvent</qualifiedname>
        <param>
          <type>GpuFrameEventUPtr</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Ajoute un évènement de frame au frame listener par défaut. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;évènement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="241" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ae51a988c9e823933e18e7a0addf7cd55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Engine::fireMouseMove</definition>
        <argsstring>(castor::Position const &amp;position, bool ctrl, bool alt, bool shift)</argsstring>
        <name>fireMouseMove</name>
        <qualifiedname>castor3d::Engine::fireMouseMove</qualifiedname>
        <param>
          <type><ref refid="df/dba/a08999" kindref="compound">castor::Position</ref> const &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Lance un évènement de déplacement de souris. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>La position de la souris. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Dit si la touche Ctrl est enfoncée. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alt</parametername>
</parameternamelist>
<parameterdescription>
<para>Dit si la touche Alt est enfoncée. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Dit si la touche Shift est enfoncée. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si l&apos;évènement est traité par un gestionnaire. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="258" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1afcb9bb7a80246fa509954782c1d637a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::Engine::update</qualifiedname>
        <param>
          <type><ref refid="dc/d23/a06511" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Met à jour le moteur, au niveau CPU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données d&apos;update. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="270" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a31d9d09b962ca618773b12398765a95a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::update</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::Engine::update</qualifiedname>
        <param>
          <type><ref refid="d9/d4b/a06519" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Met à jour le moteur, au niveau GPU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données d&apos;update. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="279" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad2fbabdc6be5f6a4655727cea141d4dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::upload</definition>
        <argsstring>(UploadData &amp;uploader)</argsstring>
        <name>upload</name>
        <qualifiedname>castor3d::Engine::upload</qualifiedname>
        <param>
          <type><ref refid="d7/d12/a03583" kindref="compound">UploadData</ref> &amp;</type>
          <declname>uploader</declname>
        </param>
        <briefdescription>
<para>Met à jour les buffers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">uploader</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les requêtes d&apos;upload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="288" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a6b682ddec8f414185a497e1ad5ba189a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Engine::isCleaned</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isCleaned</name>
        <qualifiedname>castor3d::Engine::isCleaned</qualifiedname>
        <briefdescription>
<para>Récupère le statut de nettoyage. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Thread-safe </para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si nettoyé </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="299" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1af599f6ed9be2aa940ac464ff0a3e7349" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::setCleaned</definition>
        <argsstring>() noexcept</argsstring>
        <name>setCleaned</name>
        <qualifiedname>castor3d::Engine::setCleaned</qualifiedname>
        <briefdescription>
<para>Dit que le moteur est nettoyé </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Thread-safe </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="308" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1af1c22fb087f974e3b20b7d40893a0943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::pushCpuJob</definition>
        <argsstring>(castor::AsyncJobQueue::Job job)</argsstring>
        <name>pushCpuJob</name>
        <qualifiedname>castor3d::Engine::pushCpuJob</qualifiedname>
        <param>
          <type><ref refid="da/d96/a09447_1a692ee44c351ca744119e88a8b5596c71" kindref="member">castor::AsyncJobQueue::Job</ref></type>
          <declname>job</declname>
        </param>
        <briefdescription>
<para>Met dans la file la tâche CPU donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">job</parametername>
</parameternamelist>
<parameterdescription>
<para>Le job à exécuter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="317" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a7c789b05f01100939d7e6ef5cf65140a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dd2/a02279_1a0248f41072abe76e8ae264325ea85a18" kindref="member">castor::RgbaColour</ref></type>
        <definition>C3D_API castor::RgbaColour castor3d::Engine::getNextRainbowColour</definition>
        <argsstring>() const</argsstring>
        <name>getNextRainbowColour</name>
        <qualifiedname>castor3d::Engine::getNextRainbowColour</qualifiedname>
        <briefdescription>
<para>Récupère une couleur issue d&apos;un itérateur de couleurs d&apos;arc-en-ciel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="324" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ac28328d51d84410eea9caeeec5614521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerWindow</definition>
        <argsstring>(RenderWindow &amp;window)</argsstring>
        <name>registerWindow</name>
        <qualifiedname>castor3d::Engine::registerWindow</qualifiedname>
        <param>
          <type><ref refid="d0/dd4/a06595" kindref="compound">RenderWindow</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Enregistre une <ref refid="d0/dd4/a06595" kindref="compound">RenderWindow</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>La <ref refid="d0/dd4/a06595" kindref="compound">RenderWindow</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="333" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a42feb3bee212879e63f7fab5a56baf87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterWindow</definition>
        <argsstring>(RenderWindow const &amp;window)</argsstring>
        <name>unregisterWindow</name>
        <qualifiedname>castor3d::Engine::unregisterWindow</qualifiedname>
        <param>
          <type><ref refid="d0/dd4/a06595" kindref="compound">RenderWindow</ref> const &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Désenregistre une <ref refid="d0/dd4/a06595" kindref="compound">RenderWindow</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>La <ref refid="d0/dd4/a06595" kindref="compound">RenderWindow</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="342" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ace0ff96ac175cea776be38228bd3cd1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerParsers</definition>
        <argsstring>(castor::String name, castor::AttributeParsers parsers, castor::StrUInt32Map sections, castor::UserContextCreator contextCreator)</argsstring>
        <name>registerParsers</name>
        <qualifiedname>castor3d::Engine::registerParsers</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1a7138ba41c2c2c4ced36cacefe5eb2c33" kindref="member">castor::AttributeParsers</ref></type>
          <declname>parsers</declname>
        </param>
        <param>
          <type>castor::StrUInt32Map</type>
          <declname>sections</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1a60b7ae265f5b3f1c88303e2abbbc80ed" kindref="member">castor::UserContextCreator</ref></type>
          <declname>contextCreator</declname>
        </param>
        <briefdescription>
<para>Enregistre des analyseurs supplémentaires pour <ref refid="df/d78/a07147" kindref="compound">SceneFileParser</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom d&apos;enregistrement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parsers</parametername>
</parameternamelist>
<parameterdescription>
<para>Les analyseurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sections</parametername>
</parameternamelist>
<parameterdescription>
<para>Les sections. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">contextCreator</parametername>
</parameternamelist>
<parameterdescription>
<para>La fonction de création de contexte de parser. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="357" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aeb400395f07c375c7a3439ab2bd4cc17" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterParsers</definition>
        <argsstring>(castor::String const &amp;name) noexcept</argsstring>
        <name>unregisterParsers</name>
        <qualifiedname>castor3d::Engine::unregisterParsers</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Désenregistre des analyseurs pour <ref refid="df/d78/a07147" kindref="compound">SceneFileParser</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom d&apos;enregistrement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="369" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ab5ffd2ed2eb94f3679bd98cc80d3d6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerTimer</definition>
        <argsstring>(castor::String const &amp;category, FramePassTimer &amp;timer)</argsstring>
        <name>registerTimer</name>
        <qualifiedname>castor3d::Engine::registerTimer</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>FramePassTimer &amp;</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Enregistre un timer de passe de rendu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom de la catégorie du timer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le timer à enregistrer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="380" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a57e28c657fd056cd140455288c33af98" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterTimer</definition>
        <argsstring>(castor::String const &amp;category, FramePassTimer &amp;timer) noexcept</argsstring>
        <name>unregisterTimer</name>
        <qualifiedname>castor3d::Engine::unregisterTimer</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>FramePassTimer &amp;</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Désenregistre un timer de passe de rendu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom de la catégorie du timer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le timer à désenregistrer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="392" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1aac75a2a725448167c9dc264f41376674" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
        <definition>C3D_API LightingModelID castor3d::Engine::registerLightingModel</definition>
        <argsstring>(castor::String const &amp;name, shader::LightingModelCreator creator, BackgroundModelID backgroundModelId) const</argsstring>
        <name>registerLightingModel</name>
        <qualifiedname>castor3d::Engine::registerLightingModel</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="da/d68/a02280_1a8b1442b0b77eec2e718ffc5db6741ab1" kindref="member">shader::LightingModelCreator</ref></type>
          <declname>creator</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <briefdescription>
<para>Enregistre un Lighting Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du modèle de fond. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">creator</parametername>
</parameternamelist>
<parameterdescription>
<para>La fonction de création du modèle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>L&apos;ID du modèle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="408" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ae5cc3c3e211da4cd10b313c9964f0162" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterLightingModel</definition>
        <argsstring>(LightingModelID lightingModelId, BackgroundModelID backgroundModelId) const</argsstring>
        <name>unregisterLightingModel</name>
        <qualifiedname>castor3d::Engine::unregisterLightingModel</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
          <declname>lightingModelId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <briefdescription>
<para>Désenregistre une combinaison de Lighting Model et de Background Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lightingModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du modèle d&apos;éclairage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du modèle de fond. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="421" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a5d37a19b2cbcf6da4493327e35b4d99d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterLightingModel</definition>
        <argsstring>(castor::String const &amp;name, BackgroundModelID backgroundModelId) const</argsstring>
        <name>unregisterLightingModel</name>
        <qualifiedname>castor3d::Engine::unregisterLightingModel</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <briefdescription>
<para>Désenregistre un Lighting Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du modèle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du modèle de fond. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="433" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a86d9ad059bf65ac455923d646025ecfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
        <definition>C3D_API BackgroundModelID castor3d::Engine::registerBackgroundModel</definition>
        <argsstring>(castor::String const &amp;name, shader::BackgroundModelCreator creator)</argsstring>
        <name>registerBackgroundModel</name>
        <qualifiedname>castor3d::Engine::registerBackgroundModel</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="da/d68/a02280_1a661e30488736ed6fe185466ce8e7ec4a" kindref="member">shader::BackgroundModelCreator</ref></type>
          <declname>creator</declname>
        </param>
        <briefdescription>
<para>Enregistre un Background Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">creator</parametername>
</parameternamelist>
<parameterdescription>
<para>La fonction dde création du modèle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>L&apos;ID du modèle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="447" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a364eba80785f1a986af517bf6c3142ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
        <definition>C3D_API BackgroundModelID castor3d::Engine::unregisterBackgroundModel</definition>
        <argsstring>(castor::String const &amp;name)</argsstring>
        <name>unregisterBackgroundModel</name>
        <qualifiedname>castor3d::Engine::unregisterBackgroundModel</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Désenregistre un Background Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du modèle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="457" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a9e1c727f3a173627afa68e6caa68db15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerBuffer</definition>
        <argsstring>(ShaderBuffer const &amp;buffer)</argsstring>
        <name>registerBuffer</name>
        <qualifiedname>castor3d::Engine::registerBuffer</qualifiedname>
        <param>
          <type><ref refid="d3/de5/a07315" kindref="compound">ShaderBuffer</ref> const &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Enregistre un <ref refid="d3/de5/a07315" kindref="compound">ShaderBuffer</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le <ref refid="d3/de5/a07315" kindref="compound">ShaderBuffer</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="466" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad9af55c3cbd118c52206bd791f14192c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterBuffer</definition>
        <argsstring>(ShaderBuffer const &amp;buffer)</argsstring>
        <name>unregisterBuffer</name>
        <qualifiedname>castor3d::Engine::unregisterBuffer</qualifiedname>
        <param>
          <type><ref refid="d3/de5/a07315" kindref="compound">ShaderBuffer</ref> const &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Désenregistre un <ref refid="d3/de5/a07315" kindref="compound">ShaderBuffer</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le <ref refid="d3/de5/a07315" kindref="compound">ShaderBuffer</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="475" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a3dc9cd1ee61bcee44316f75e4e3c36a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerPassModel</definition>
        <argsstring>(BackgroundModelID backgroundModelId, PassRegisterInfo const &amp;info) const</argsstring>
        <name>registerPassModel</name>
        <qualifiedname>castor3d::Engine::registerPassModel</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <param>
          <type><ref refid="d1/d8e/a04879" kindref="compound">PassRegisterInfo</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Enregistre les informations de passe avec le modèle de fond donnés. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>Le modèle de fond. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Les informations d&apos;enregistrement de la passe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="486" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad0c7d29fce46aca96d7e450ff2509794" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerPassModels</definition>
        <argsstring>(PassRegisterInfo const &amp;info) const</argsstring>
        <name>registerPassModels</name>
        <qualifiedname>castor3d::Engine::registerPassModels</qualifiedname>
        <param>
          <type><ref refid="d1/d8e/a04879" kindref="compound">PassRegisterInfo</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Enregistre les informations de passe avec tous les modèles de fond. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Les informations d&apos;enregistrement de la passe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="496" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1af5bdcef29a2b3b6db1acdacaf1a5ac15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterPassModel</definition>
        <argsstring>(BackgroundModelID backgroundModelId, LightingModelID lightingModelId) const</argsstring>
        <name>unregisterPassModel</name>
        <qualifiedname>castor3d::Engine::unregisterPassModel</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
          <declname>lightingModelId</declname>
        </param>
        <briefdescription>
<para>Désenregistre une combinaison de modèle d&apos;éclairage et de modèle de fond. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>Le modèle de fond. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lightingModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>Le modèle d&apos;éclairage. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="507" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a56bb3c5f428ba3032335f971ed213084" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterPassModels</definition>
        <argsstring>(castor::String const &amp;type) const</argsstring>
        <name>unregisterPassModels</name>
        <qualifiedname>castor3d::Engine::unregisterPassModels</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Désenregistre toutes les combinaisons du modèle d&apos;éclairage et des modèles de fond. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du modèle d&apos;éclairage. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="517" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad1a4e9c4ec4b34a86d89194d8b92e049" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerSpecificsBuffer</definition>
        <argsstring>(castor::String const &amp;name, castor3d::SpecificsBuffer buffer) const</argsstring>
        <name>registerSpecificsBuffer</name>
        <qualifiedname>castor3d::Engine::registerSpecificsBuffer</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="de/d63/a04887" kindref="compound">castor3d::SpecificsBuffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Enregistre un shader buffer de données spécifiques. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du shader buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le shader buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="528" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a1e5ece70747e97c7bbcfba5d23ab2723" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterSpecificsBuffer</definition>
        <argsstring>(castor::String const &amp;name) const</argsstring>
        <name>unregisterSpecificsBuffer</name>
        <qualifiedname>castor3d::Engine::unregisterSpecificsBuffer</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Désenregistre un shader buffer de données spécifiques. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du shader buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="538" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a0fbd9991c3d7e9d49fce5c02eca52c7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::addSpecificsBuffersBindings</definition>
        <argsstring>(ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, VkShaderStageFlags shaderStages, uint32_t &amp;index) const</argsstring>
        <name>addSpecificsBuffersBindings</name>
        <qualifiedname>castor3d::Engine::addSpecificsBuffersBindings</qualifiedname>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>VkShaderStageFlags</type>
          <declname>shaderStages</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Ecrit les shader buffers de données spécifiques dans le tableau de descriptor layout bindings donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les descriptor layout bindings des buffers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shaderStages</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de shader stage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;indice de binding. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="551" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a75eb585a6d15055f764bf6faa1a13814" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::addSpecificsBuffersDescriptors</definition>
        <argsstring>(ashes::WriteDescriptorSetArray &amp;descriptorWrites, uint32_t &amp;index) const</argsstring>
        <name>addSpecificsBuffersDescriptors</name>
        <qualifiedname>castor3d::Engine::addSpecificsBuffersDescriptors</qualifiedname>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Ecrit les shader buffers de données spécifiques dans le tableau de descriptor writes donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">descriptorWrites</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les descriptor writes des buffers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;indice de binding. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="564" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a41023f71513999b33d43d7aae01586c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::createSpecificsBuffersPassBindings</definition>
        <argsstring>(crg::FramePass &amp;pass, uint32_t &amp;index) const</argsstring>
        <name>createSpecificsBuffersPassBindings</name>
        <qualifiedname>castor3d::Engine::createSpecificsBuffersPassBindings</qualifiedname>
        <param>
          <type>crg::FramePass &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Ecrit les bindings des shader buffers de données spécifiques dans la frame pass donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>La frame pass ciblée. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;indice de binding. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="576" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a99f2ddbd1aa1f316bc6d15010f64959b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::declareSpecificsShaderBuffers</definition>
        <argsstring>(sdw::ShaderWriter &amp;writer, castor::StringMap&lt; castor3d::shader::BufferBaseUPtr &gt; &amp;buffers, uint32_t &amp;binding, uint32_t set) const</argsstring>
        <name>declareSpecificsShaderBuffers</name>
        <qualifiedname>castor3d::Engine::declareSpecificsShaderBuffers</qualifiedname>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af776079ca1d2ee2d1b993f2d34011159" kindref="member">castor::StringMap</ref>&lt; castor3d::shader::BufferBaseUPtr &gt; &amp;</type>
          <declname>buffers</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>binding</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Déclare dans les shaders les buffers spécifiques enregistrés. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">writer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le writer de shader. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffers</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les shader buffers enregistrés. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">binding</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;indice de descripteur. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;indice de descriptor set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="592" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a62fc1bf3a2ea69b68841718748fd701f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a11544af0f8079d1c8711ccf824ad3ec6" kindref="member">PassComponentID</ref></type>
        <definition>C3D_API PassComponentID castor3d::Engine::registerPassComponent</definition>
        <argsstring>(castor::String const &amp;type, PassComponentPluginUPtr componentPlugin) const</argsstring>
        <name>registerPassComponent</name>
        <qualifiedname>castor3d::Engine::registerPassComponent</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>PassComponentPluginUPtr</type>
          <declname>componentPlugin</declname>
        </param>
        <briefdescription>
<para>Enregistre un composant de passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de composant. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">componentPlugin</parametername>
</parameternamelist>
<parameterdescription>
<para>Les fonctions spécifiques du composant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="606" column="25"/>
        <referencedby refid="d8/d4f/a03703_1a21f934ca681595cc02b4a55883eb683c" compoundref="db/dc3/a00284" startline="1036" endline="1040">registerPassComponent</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ad54b18787a1593b5540ba6e9af2ecebb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterPassComponent</definition>
        <argsstring>(castor::String const &amp;type) const</argsstring>
        <name>unregisterPassComponent</name>
        <qualifiedname>castor3d::Engine::unregisterPassComponent</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Désenregistre un composant de passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de composant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="616" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ac24407256274645b3bde5fe048ca6407" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a94800deec9f740cb84fd6ea6865cea69" kindref="member">SubmeshComponentID</ref></type>
        <definition>C3D_API SubmeshComponentID castor3d::Engine::registerSubmeshComponent</definition>
        <argsstring>(castor::String const &amp;type, SubmeshComponentPluginUPtr componentPlugin) const</argsstring>
        <name>registerSubmeshComponent</name>
        <qualifiedname>castor3d::Engine::registerSubmeshComponent</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>SubmeshComponentPluginUPtr</type>
          <declname>componentPlugin</declname>
        </param>
        <briefdescription>
<para>Enregistre un composant de passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de composant. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">componentPlugin</parametername>
</parameternamelist>
<parameterdescription>
<para>Les fonctions spécifiques du composant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="627" column="28"/>
        <referencedby refid="d8/d4f/a03703_1a51f2694d69d3b7afe2fb1e04a53a4369" compoundref="db/dc3/a00284" startline="1043" endline="1047">registerSubmeshComponent</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a9b94ceb144250e53b4ce693a8f54d4f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterSubmeshComponent</definition>
        <argsstring>(castor::String const &amp;type) const</argsstring>
        <name>unregisterSubmeshComponent</name>
        <qualifiedname>castor3d::Engine::unregisterSubmeshComponent</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Désenregistre un composant de passe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de composant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="637" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a1660abbb7de131d2c4268e32ecccb013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerRenderPassType</definition>
        <argsstring>(castor::String const &amp;renderPassType, castor::UniquePtr&lt; RenderPassRegisterInfo &gt; info)</argsstring>
        <name>registerRenderPassType</name>
        <qualifiedname>castor3d::Engine::registerRenderPassType</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1ac623881246e92c1d187a3a44b3e011f6" kindref="member">castor::UniquePtr</ref>&lt; <ref refid="d0/d94/a06507" kindref="compound">RenderPassRegisterInfo</ref> &gt;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Enregistre un type de passe de rendu de scène, pour le type de passe de matériau donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de la passe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Les informations de création de la passe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="648" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1ada4f71385eb54b14e1b53a88bf908bc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::setRenderPassTypeConfiguration</definition>
        <argsstring>(castor::String const &amp;renderPassType, Parameters parameters)</argsstring>
        <name>setRenderPassTypeConfiguration</name>
        <qualifiedname>castor3d::Engine::setRenderPassTypeConfiguration</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1aa3fa62c45d6d39bf1209299592992b5f" kindref="member">Parameters</ref></type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Enregistre les paramètres de configuration d&apos;un type de passe de rendu de scène. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de la passe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Les paramètres de configuration de la passe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="660" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a676cf78c131cd7e409a648149408f953" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1aa3fa62c45d6d39bf1209299592992b5f" kindref="member">Parameters</ref></type>
        <definition>C3D_API Parameters castor3d::Engine::getRenderPassTypeConfiguration</definition>
        <argsstring>(castor::String const &amp;renderPassType) const</argsstring>
        <name>getRenderPassTypeConfiguration</name>
        <qualifiedname>castor3d::Engine::getRenderPassTypeConfiguration</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <briefdescription>
<para>Récupère les paramètres de configuration d&apos;un type de passe de rendu de scène. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de la passe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Les paramètres de configuration de la passe. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="672" column="20"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a08c42ed7f3bdb24149e9a631e4af56e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref></type>
        <definition>C3D_API RenderPassTypeID castor3d::Engine::getRenderPassTypeID</definition>
        <argsstring>(castor::String const &amp;renderPassType) const</argsstring>
        <name>getRenderPassTypeID</name>
        <qualifiedname>castor3d::Engine::getRenderPassTypeID</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <briefdescription>
<para>Récupère l&apos;ID correspondant au nom de type de passe de rendu de scène donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de la passe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="681" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a68d0d2a2cd727a59b89542c78e7ad0ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d0/d94/a06507" kindref="compound">RenderPassRegisterInfo</ref> *</type>
        <definition>C3D_API RenderPassRegisterInfo * castor3d::Engine::getRenderPassInfo</definition>
        <argsstring>(castor::String const &amp;renderPassType) const</argsstring>
        <name>getRenderPassInfo</name>
        <qualifiedname>castor3d::Engine::getRenderPassInfo</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <briefdescription>
<para>Récupère les informations de création d&apos;un type de passe de rendu de scène. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de la passe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="690" column="33"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a0b320852da1ea6ab085af58f1caf5fcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; <ref refid="d0/d94/a06507" kindref="compound">RenderPassRegisterInfo</ref> * &gt;</type>
        <definition>C3D_API castor::Vector&lt; RenderPassRegisterInfo * &gt; castor3d::Engine::getRenderPassInfos</definition>
        <argsstring>(TechniquePassEvent event) const</argsstring>
        <name>getRenderPassInfos</name>
        <qualifiedname>castor3d::Engine::getRenderPassInfos</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1aa022298cb8b50ea099829baffdfee684" kindref="member">TechniquePassEvent</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Récupère les informations de création des types de passes de rendu de scène. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type d&apos;évènement des passes considérées. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="699" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a4f2120a7bd506dc9a1543228283abaed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterRenderPassType</definition>
        <argsstring>(castor::String const &amp;renderPassType)</argsstring>
        <name>unregisterRenderPassType</name>
        <qualifiedname>castor3d::Engine::unregisterRenderPassType</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <briefdescription>
<para>Désenregistre un type de passe de rendu de scène. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de la passe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="708" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d8/d4f/a03703_1a8595a13c9e108814708ba911a1409196" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/de1/a08011" kindref="compound">castor::Path</ref></type>
        <definition>static C3D_API castor::Path castor3d::Engine::getPluginsDirectory</definition>
        <argsstring>()</argsstring>
        <name>getPluginsDirectory</name>
        <qualifiedname>castor3d::Engine::getPluginsDirectory</qualifiedname>
        <briefdescription>
<para>Récupère le chemin des plug-ins. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le chemin des plug-ins </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="717" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a4ec45b641127c8582854dc58161cf32a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/de1/a08011" kindref="compound">castor::Path</ref></type>
        <definition>static C3D_API castor::Path castor3d::Engine::getEngineDirectory</definition>
        <argsstring>()</argsstring>
        <name>getEngineDirectory</name>
        <qualifiedname>castor3d::Engine::getEngineDirectory</qualifiedname>
        <briefdescription>
<para>donne le répertoire du Castor </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le répertoire </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="726" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1adf873786fbeb9e26015ac6c34b64bb65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/de1/a08011" kindref="compound">castor::Path</ref></type>
        <definition>static C3D_API castor::Path castor3d::Engine::getDataDirectory</definition>
        <argsstring>()</argsstring>
        <name>getDataDirectory</name>
        <qualifiedname>castor3d::Engine::getDataDirectory</qualifiedname>
        <briefdescription>
<para>Récupère le chemin des données. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le chemin des données </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="735" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4f/a03703_1a7af085fa1b00e28e39f1440f38684531" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::locale const &amp;</type>
        <definition>static C3D_API std::locale const  &amp; castor3d::Engine::getLocale</definition>
        <argsstring>()</argsstring>
        <name>getLocale</name>
        <qualifiedname>castor3d::Engine::getLocale</qualifiedname>
        <briefdescription>
<para>Récupère le chemin des données. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le chemin des données </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Engine.hpp" line="744" column="35"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor::Unique&lt; Engine &gt;</label>
        <link refid="dc/d63/a08283"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::Engine</label>
        <link refid="d8/d4f/a03703"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor::NonMovable</label>
        <link refid="da/d87/a08319"/>
      </node>
      <node id="4">
        <label>castor::Unique&lt; T &gt;</label>
        <link refid="dc/d63/a08283"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>castor::Unique&lt; Engine &gt;</label>
        <link refid="dc/d63/a08283"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::Engine</label>
        <link refid="d8/d4f/a03703"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor::NonMovable</label>
        <link refid="da/d87/a08319"/>
      </node>
      <node id="4">
        <label>castor::Unique&lt; T &gt;</label>
        <link refid="dc/d63/a08283"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Engine.hpp" line="138" column="1" bodyfile="Castor3D/Engine.hpp" bodystart="140" bodyend="1220"/>
    <listofallmembers>
      <member refid="d8/d4f/a03703_1ac9abab737dc2b11ac9ee6f6ef31045c1" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addFont</name></member>
      <member refid="d8/d4f/a03703_1a1f26b1f69ade47399e32ee596ed77756" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addImage</name></member>
      <member refid="d8/d4f/a03703_1a52cc49e29ffe7b2da28de2c4622913a6" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addNewFont</name></member>
      <member refid="d8/d4f/a03703_1a8e7137f1ee10104cab15245472a4dbeb" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addNewImage</name></member>
      <member refid="d8/d4f/a03703_1a0fbd9991c3d7e9d49fce5c02eca52c7c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addSpecificsBuffersBindings</name></member>
      <member refid="d8/d4f/a03703_1a75eb585a6d15055f764bf6faa1a13814" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addSpecificsBuffersDescriptors</name></member>
      <member refid="d8/d4f/a03703_1a179b404eb64c6608bc8a67767147f88e" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>areDebugTargetsEnabled</name></member>
      <member refid="d8/d4f/a03703_1a601c04722ecec84265071102ed22251b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>areTextShadersKept</name></member>
      <member refid="d8/d4f/a03703_1a743391e0928f95513f7ae9b6b2744fed" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>areUpdateOptimisationsEnabled</name></member>
      <member refid="d8/d4f/a03703_1a22e67669ad2954a42ce97e3d62c7f299" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>cleanup</name></member>
      <member refid="d8/d4f/a03703_1a0705231fef20a697973ac71b36bd0b57" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>createFont</name></member>
      <member refid="d8/d4f/a03703_1af92ce0a62bfeb2923bf0a32c1094e9d4" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>createImage</name></member>
      <member refid="d8/d4f/a03703_1a41023f71513999b33d43d7aae01586c4" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>createSpecificsBuffersPassBindings</name></member>
      <member refid="d8/d4f/a03703_1a686aa285e6018bb1ff79849590864641" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d8/d4f/a03703_1a9a7e0db0784fb2ed8d59a0cc48161e63" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d8/d4f/a03703_1a941ef9c8073dcebf9c22c1f94119b444" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d8/d4f/a03703_1a637d1479515a10d4f672e929694f7397" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d8/d4f/a03703_1a060dad0acd301c2fcc68fd10c3bc2701" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d8/d4f/a03703_1aabb4bd1dc0e9e0ffdeee598842a16985" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d8/d4f/a03703_1a6b4c4b02017e01f9ced45f2b455999cd" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER_MIN</name></member>
      <member refid="d8/d4f/a03703_1ac2ad141a52a6a8e2f759aaf864522aa9" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER_MIN</name></member>
      <member refid="d8/d4f/a03703_1afc8d4b137cb381e2d1a13b51db1b6b5f" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER_MIN</name></member>
      <member refid="d8/d4f/a03703_1a99f2ddbd1aa1f316bc6d15010f64959b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>declareSpecificsShaderBuffers</name></member>
      <member refid="d8/d4f/a03703_1a1f1d132c75ad69c5a382c8ae567d1045" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>doLoadCoreData</name></member>
      <member refid="d8/d4f/a03703_1a1c7ef21a14ec79f22b51a8f5eab14608" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>Engine</name></member>
      <member refid="d8/d4f/a03703_1a307120dfa6332410c126687778c63876" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>Engine</name></member>
      <member refid="d8/d4f/a03703_1a7c94fd1b5112e8791bb3e9f9805698a2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>Engine</name></member>
      <member refid="d8/d4f/a03703_1ad1ce4f92f240c0fa3c1c4ede63942bac" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>findFont</name></member>
      <member refid="d8/d4f/a03703_1a0e3cae5eb336c27b42a7225bdbd1b38f" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>findImage</name></member>
      <member refid="d8/d4f/a03703_1ae51a988c9e823933e18e7a0addf7cd55" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>fireMouseMove</name></member>
      <member refid="d8/d4f/a03703_1ad00d683baed322445301d67d44880005" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getAdditionalParsers</name></member>
      <member refid="d8/d4f/a03703_1a2a3070874bc9257b56735ed7090f1704" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getAppName</name></member>
      <member refid="d8/d4f/a03703_1ad67d083dab9477be09f1e357c5fd0809" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getAppVersion</name></member>
      <member refid="d8/d4f/a03703_1ae6e7b6368605b517bfbfdcdb0158fa22" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getBackgroundModelFactory</name></member>
      <member refid="d8/d4f/a03703_1a42b44de31e1bd004f5bb83e58719376a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getBackgroundModelFactory</name></member>
      <member refid="d8/d4f/a03703_1ac88f73152455002444d00d9a8fe3be33" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getControlsManager</name></member>
      <member refid="d8/d4f/a03703_1aa74347335066184d5b74923a87cf0c1c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getCpuInformations</name></member>
      <member refid="d8/d4f/a03703_1adf873786fbeb9e26015ac6c34b64bb65" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDataDirectory</name></member>
      <member refid="d8/d4f/a03703_1a8c11b9e48c91e4b88b61eadc48f244fb" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDefaultLightingModel</name></member>
      <member refid="d8/d4f/a03703_1a6ce6ffa3979329585653cc681adfeefe" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDefaultLightingModelName</name></member>
      <member refid="d8/d4f/a03703_1aa7f130a0d0a7ae259c7b89e6c104d968" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDefaultMaterial</name></member>
      <member refid="d8/d4f/a03703_1aa40434af7c60405110529624930ab5bd" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDefaultSampler</name></member>
      <member refid="d8/d4f/a03703_1a4ec45b641127c8582854dc58161cf32a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getEngineDirectory</name></member>
      <member refid="d8/d4f/a03703_1a3e8c055c4faafee3fea08412919f39a9" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getFontCache</name></member>
      <member refid="d8/d4f/a03703_1aa9163ff31a8feff9a7936a6ec250e8a2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getFontCache</name></member>
      <member refid="d8/d4f/a03703_1a3798850798a109677f2f1c8bf00c3d5b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getGraphResourceHandler</name></member>
      <member refid="d8/d4f/a03703_1a8c9229e35e7c50a5f2d1eecb3954ee58" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageCache</name></member>
      <member refid="d8/d4f/a03703_1a3a9cb1d980ba5575bae64306fb51b68a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageCache</name></member>
      <member refid="d8/d4f/a03703_1a8b5e0aae55adeafea48200c6bb6a5c21" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageLoader</name></member>
      <member refid="d8/d4f/a03703_1a11f7c7cf274a9ede3c4ab62d2616774a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageLoader</name></member>
      <member refid="d8/d4f/a03703_1a16879a361b178e86595208ade2df8d19" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageWriter</name></member>
      <member refid="d8/d4f/a03703_1a1ca0c7f5a69e34b8fc64198c93775246" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImporterFileFactory</name></member>
      <member refid="d8/d4f/a03703_1ab709206807e368c1809b4b232ce377e0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLengthUnit</name></member>
      <member refid="d8/d4f/a03703_1a55787bb512764bfbb00f4b3cce9c37c6" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLightingModelFactory</name></member>
      <member refid="d8/d4f/a03703_1a68a4f02a41dd92eed22cfd21c06ed901" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLightsSampler</name></member>
      <member refid="d8/d4f/a03703_1acbd89114013a2d302ec3a3bc9d94d93e" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLoadingScene</name></member>
      <member refid="d8/d4f/a03703_1a7af085fa1b00e28e39f1440f38684531" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLocale</name></member>
      <member refid="d8/d4f/a03703_1a205cf2cde3639ef60bbc92e4e7933aee" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLogger</name></member>
      <member refid="d8/d4f/a03703_1a1fe8d3ce4a0436f48c8f5bb153d30477" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLpvGridSize</name></member>
      <member refid="d8/d4f/a03703_1ac2d8afa9336ca07ea402ad14bfeb7c7f" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getMaxImageSize</name></member>
      <member refid="d8/d4f/a03703_1a6ee0628c0f085ea60b5a9c94fc9af450" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getMaxPassTypeCount</name></member>
      <member refid="d8/d4f/a03703_1a90fc5a88b18924a71e6c485edef0eed9" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getMeshFactory</name></member>
      <member refid="d8/d4f/a03703_1a7c789b05f01100939d7e6ef5cf65140a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getNextRainbowColour</name></member>
      <member refid="d8/d4f/a03703_1ac643d09d5f347b9d9edda8060fa01412" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getParticleFactory</name></member>
      <member refid="d8/d4f/a03703_1abc343b079f08ff5800b2d6fe33ade917" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPassComponentsRegister</name></member>
      <member refid="d8/d4f/a03703_1adc122d978b9651f6ea977ae2382f74d7" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPassFactory</name></member>
      <member refid="d8/d4f/a03703_1a8595a13c9e108814708ba911a1409196" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPluginsDirectory</name></member>
      <member refid="d8/d4f/a03703_1a7061aeead1fde9eea7c71a78b9bffdf0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPostEffectFactory</name></member>
      <member refid="d8/d4f/a03703_1a4124814e064257ff58b07516465d115a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPostEffectFactory</name></member>
      <member refid="d8/d4f/a03703_1aec9a939534fcd7a28c83cdd1959c219a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPrefilteredBrdfTexture</name></member>
      <member refid="d8/d4f/a03703_1a357a196c28d35b877ff6e9d225a09125" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderDevice</name></member>
      <member refid="d8/d4f/a03703_1a8669fcc5e33e514d52031d3365af50bc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderersList</name></member>
      <member refid="d8/d4f/a03703_1a89f596fb8ed921fabefc5cfb3f28dc6d" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderLoop</name></member>
      <member refid="d8/d4f/a03703_1a68d0d2a2cd727a59b89542c78e7ad0ee" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderPassInfo</name></member>
      <member refid="d8/d4f/a03703_1a0b320852da1ea6ab085af58f1caf5fcc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderPassInfos</name></member>
      <member refid="d8/d4f/a03703_1a676cf78c131cd7e409a648149408f953" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderPassTypeConfiguration</name></member>
      <member refid="d8/d4f/a03703_1a08c42ed7f3bdb24149e9a631e4af56e7" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderPassTypeID</name></member>
      <member refid="d8/d4f/a03703_1a615cb64827b7fcd2ff4438c061f37adc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderSystem</name></member>
      <member refid="d8/d4f/a03703_1a50cbff361fd2a25d7e282f4564d0a65e" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderWindows</name></member>
      <member refid="d8/d4f/a03703_1af05dfcbd77ee5c6df591534e0f7dfefc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getShaderAllocator</name></member>
      <member refid="d8/d4f/a03703_1a5a265d90ebfe100b06328ca04b59f3cb" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getShaderDebugLevel</name></member>
      <member refid="d8/d4f/a03703_1aa3dd40ff6d630210693a5d61d3e18c4a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getSubmeshComponentsRegister</name></member>
      <member refid="d8/d4f/a03703_1a13b3a6c70c52e44d5098d90b0dbebbb1" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getToneMappingFactory</name></member>
      <member refid="d8/d4f/a03703_1a10fadbd04a658acc166eb327130e1c65" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getToneMappingFactory</name></member>
      <member refid="d8/d4f/a03703_1a4a2fe6c8106efb38571598eabf3f875f" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getUploadData</name></member>
      <member refid="d8/d4f/a03703_1ab54afdc724299a29514a2eed1a3fcc52" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getUserInputListener</name></member>
      <member refid="d8/d4f/a03703_1a5e2b90e04922bc497b47fb1390661e6b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getVersion</name></member>
      <member refid="d8/d4f/a03703_1a8641ffc3e359d15c0e1c7df354dd3b69" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getWantedFps</name></member>
      <member refid="d8/d4f/a03703_1ab139accf9826d7cb5103af76aab1ec15" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>hasFont</name></member>
      <member refid="d8/d4f/a03703_1ae7e13a16cf5c75af931f9e3f3ef0968d" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>hasImage</name></member>
      <member refid="d8/d4f/a03703_1a8b8959435cfd02c78adb026f2803878c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>hasMeshShaders</name></member>
      <member refid="d8/d4f/a03703_1a1d94424ff1a7658a1da6bd46556f927f" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>hasRenderLoop</name></member>
      <member refid="d8/d4f/a03703_1af2f096aad3600390dec50bbe37e8e3b2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>initialise</name></member>
      <member refid="d8/d4f/a03703_1a2fb8f87af4900d30db440bbf82aefefc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isApiTraceEnabled</name></member>
      <member refid="d8/d4f/a03703_1a6b682ddec8f414185a497e1ad5ba189a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isCleaned</name></member>
      <member refid="d8/d4f/a03703_1a9de029a3a2bacd457aa229244931b1c2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isRandomisationEnabled</name></member>
      <member refid="d8/d4f/a03703_1a837e39db6d1764e56dc2253481ed7837" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isShaderValidationEnabled</name></member>
      <member refid="d8/d4f/a03703_1a8116ed8c6de454083393aa0b34af0a0e" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isThreaded</name></member>
      <member refid="d8/d4f/a03703_1aac153d4798d15f1437d85b01439f90e2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isValidationEnabled</name></member>
      <member refid="d8/d4f/a03703_1a726499108a0a5ced1d24055774e56e87" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>loadRenderer</name></member>
      <member refid="d8/d4f/a03703_1abbf9a42e489446b4b5c16382e983446a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>loadRenderer</name></member>
      <member refid="d8/d4f/a03703_1a3481a91fbe8798b00611bb8204e9a96b" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_additionalParsers</name></member>
      <member refid="d8/d4f/a03703_1a5f8626c9aba4ec456e5306e3918742a2" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_allocMutex</name></member>
      <member refid="d8/d4f/a03703_1af38554b5e3b64830fde6207e837aec97" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_backgroundModelFactory</name></member>
      <member refid="d8/d4f/a03703_1a27851fde9153f557b64e6c094ddf50d6" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_brdf</name></member>
      <member refid="d8/d4f/a03703_1ab14f3f24ed0245f73c7fbc95fd48fabc" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_cleaned</name></member>
      <member refid="d8/d4f/a03703_1a9a631744f143b8c30198b8a161128db3" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_config</name></member>
      <member refid="d8/d4f/a03703_1afadb61514f5ec62166ba88d39e9fb65f" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_cpuInformations</name></member>
      <member refid="d8/d4f/a03703_1a10f19e9ef04cd24c2ef0a1a4a8026815" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_cpuJobs</name></member>
      <member refid="d8/d4f/a03703_1ac6c656b473c4872a0e986ca4c34f3dd1" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_defaultListener</name></member>
      <member refid="d8/d4f/a03703_1a2fb0fd0f29860410c52ea92029ea0b86" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_defaultSampler</name></member>
      <member refid="d8/d4f/a03703_1ad06e6693779fea49a547c249c5ddc4d5" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_fontCache</name></member>
      <member refid="d8/d4f/a03703_1aea4645095cf0e48ddbcc0670bc902925" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_imageCache</name></member>
      <member refid="d8/d4f/a03703_1acada1e0302fab81df0117ff7c9dd5d18" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_imageLoader</name></member>
      <member refid="d8/d4f/a03703_1af7e2b42a01565863bebd7c0b6b4317f8" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_imageWriter</name></member>
      <member refid="d8/d4f/a03703_1a28e60fb73fd323e55d6f3aefd8202431" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_importerFileFactory</name></member>
      <member refid="d8/d4f/a03703_1a39bfeab9b11c45a4ebf504d301a2cb48" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_lightingModelFactory</name></member>
      <member refid="d8/d4f/a03703_1ab4dd08a318d7af3b80d45ea576a960f8" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_lightingModelId</name></member>
      <member refid="d8/d4f/a03703_1a07f5d3d107bc93b922d2530c60296cb1" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_lightsSampler</name></member>
      <member refid="d8/d4f/a03703_1af9ea4d371aacdc4cadef5e9a3bbd34cb" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_loadingScene</name></member>
      <member refid="d8/d4f/a03703_1ae5b070260e89ea19d18a87703869c931" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_logger</name></member>
      <member refid="d8/d4f/a03703_1abacccda43e98535e6c797850abb622f0" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_lpvGridSize</name></member>
      <member refid="d8/d4f/a03703_1a173c3212b8140a8f3cf54be640631496" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_maxImageSize</name></member>
      <member refid="d8/d4f/a03703_1accbd13b635d98a9f2ee8c1edbefeb502" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_meshFactory</name></member>
      <member refid="d8/d4f/a03703_1adca6ae1cedbb991c4a056260eac32c8a" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_ownedLogger</name></member>
      <member refid="d8/d4f/a03703_1a291a3e44f575ae144eba32fa085fb381" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_particleFactory</name></member>
      <member refid="d8/d4f/a03703_1a6e536751738ebf5795dfa6ef83471298" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_passComponents</name></member>
      <member refid="d8/d4f/a03703_1a740d8635671e84da06912ee94d34cfd5" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_passFactory</name></member>
      <member refid="d8/d4f/a03703_1ad7b9c952abe93d7780d56a8f680c0696" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_passRenderPassTypes</name></member>
      <member refid="d8/d4f/a03703_1a6586a471d2ad424749c11199bc7129a4" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_rendererList</name></member>
      <member refid="d8/d4f/a03703_1a2480647f1b1863ca8a7a2ddd710de6c3" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_renderLoop</name></member>
      <member refid="d8/d4f/a03703_1aebf614e2456d6ab2534e06efb086877f" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_renderPassTypes</name></member>
      <member refid="d8/d4f/a03703_1ab82a4fcaca8adcd2c6aa9ec9e38fac39" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_renderSystem</name></member>
      <member refid="d8/d4f/a03703_1aeb1f7a383e78c4a4be3c0cf67741d9bf" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_renderWindows</name></member>
      <member refid="d8/d4f/a03703_1a6834af8c0937c9582f78cdc7bff7f0b3" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_resourceHandler</name></member>
      <member refid="d8/d4f/a03703_1a798aedb79fb481bd0c46ddf869c6aa70" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_resources</name></member>
      <member refid="d8/d4f/a03703_1a0091faf90302a3fed6d6a504faf4950b" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_shaderAllocators</name></member>
      <member refid="d8/d4f/a03703_1a4e16e5a7409ba21493d92d8c53033343" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_submeshComponents</name></member>
      <member refid="d8/d4f/a03703_1a68a7366c2794c4be7751c3df17052605" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_threaded</name></member>
      <member refid="d8/d4f/a03703_1adc1b4f3ec2eb40b89608201c5062ab61" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_unit</name></member>
      <member refid="d8/d4f/a03703_1ae62c1dad2af66916c55904af755dc342" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_userInputListener</name></member>
      <member refid="d8/d4f/a03703_1a44f73c181073f518a1c1fa2aa542c93e" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_version</name></member>
      <member refid="d8/d4f/a03703_1a85672eb4854300af5b55b4a120350bc8" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_windowInputListeners</name></member>
      <member refid="d8/d4f/a03703_1a4e782f5ed6e26ecd8adae80c8b09ea32" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>postEvent</name></member>
      <member refid="d8/d4f/a03703_1ace02ed45cf9e03b8cd3a826f7a96f810" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>postEvent</name></member>
      <member refid="d8/d4f/a03703_1af1c22fb087f974e3b20b7d40893a0943" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>pushCpuJob</name></member>
      <member refid="d8/d4f/a03703_1a86d9ad059bf65ac455923d646025ecfa" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerBackgroundModel</name></member>
      <member refid="d8/d4f/a03703_1a9e1c727f3a173627afa68e6caa68db15" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerBuffer</name></member>
      <member refid="d8/d4f/a03703_1aac75a2a725448167c9dc264f41376674" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerLightingModel</name></member>
      <member refid="d8/d4f/a03703_1ace0ff96ac175cea776be38228bd3cd1e" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerParsers</name></member>
      <member refid="d8/d4f/a03703_1a62fc1bf3a2ea69b68841718748fd701f" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerPassComponent</name></member>
      <member refid="d8/d4f/a03703_1a21f934ca681595cc02b4a55883eb683c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerPassComponent</name></member>
      <member refid="d8/d4f/a03703_1a3dc9cd1ee61bcee44316f75e4e3c36a6" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerPassModel</name></member>
      <member refid="d8/d4f/a03703_1ad0c7d29fce46aca96d7e450ff2509794" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerPassModels</name></member>
      <member refid="d8/d4f/a03703_1a1660abbb7de131d2c4268e32ecccb013" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerRenderPassType</name></member>
      <member refid="d8/d4f/a03703_1ad1a4e9c4ec4b34a86d89194d8b92e049" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerSpecificsBuffer</name></member>
      <member refid="d8/d4f/a03703_1ac24407256274645b3bde5fe048ca6407" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerSubmeshComponent</name></member>
      <member refid="d8/d4f/a03703_1a51f2694d69d3b7afe2fb1e04a53a4369" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerSubmeshComponent</name></member>
      <member refid="d8/d4f/a03703_1ab5ffd2ed2eb94f3679bd98cc80d3d6b8" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerTimer</name></member>
      <member refid="d8/d4f/a03703_1ac28328d51d84410eea9caeeec5614521" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerWindow</name></member>
      <member refid="d8/d4f/a03703_1addc711e1060765415a0812574efb17a7" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>removeFont</name></member>
      <member refid="d8/d4f/a03703_1a5df7c3836acec8a82912d16172ef0b01" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>removeImage</name></member>
      <member refid="d8/d4f/a03703_1abb708866f284c6b7a2b7bb2101c302ce" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>sendEvent</name></member>
      <member refid="d8/d4f/a03703_1af599f6ed9be2aa940ac464ff0a3e7349" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setCleaned</name></member>
      <member refid="d8/d4f/a03703_1a63ec9f4c7c88b62a3361e2a19bd05961" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setDefaultLightingModel</name></member>
      <member refid="d8/d4f/a03703_1a6a4c6e0bcc60e9419930e5173245876c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setLengthUnit</name></member>
      <member refid="d8/d4f/a03703_1a418eee56faf8ecaee85aedff7f0bb004" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setLoadingScene</name></member>
      <member refid="d8/d4f/a03703_1aa69e5ab2e1776ec29536e1f5d2acefa1" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setLpvGridSize</name></member>
      <member refid="d8/d4f/a03703_1a5ae0e718bdc1f2dcbc6b267fb31a8db8" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setMaxImageSize</name></member>
      <member refid="d8/d4f/a03703_1ada4f71385eb54b14e1b53a88bf908bc0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setRenderPassTypeConfiguration</name></member>
      <member refid="d8/d4f/a03703_1a898d543d49adda4a3b346e5a10e047a8" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setUserInputListener</name></member>
      <member refid="d8/d4f/a03703_1a1179ac445c323ab841a6f255a81e7cad" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setUserInputListenerT</name></member>
      <member refid="d8/d4f/a03703_1ab079a7d5c089864cd6eb28d8ccaf83ea" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>tryAddImage</name></member>
      <member refid="d8/d4f/a03703_1ad1e115ab10d0a0a64bedd07035cbe6b2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>tryFindFont</name></member>
      <member refid="d8/d4f/a03703_1aecd56700ba7c78ec10e419a872b1eab7" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>tryFindImage</name></member>
      <member refid="dc/d63/a08283_1a900b292d0ea4c8f7f244b65909eace9e" prot="protected" virt="non-virtual"><scope>castor3d::Engine</scope><name>Unique</name></member>
      <member refid="d8/d4f/a03703_1a364eba80785f1a986af517bf6c3142ee" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterBackgroundModel</name></member>
      <member refid="d8/d4f/a03703_1ad9af55c3cbd118c52206bd791f14192c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterBuffer</name></member>
      <member refid="d8/d4f/a03703_1ae5cc3c3e211da4cd10b313c9964f0162" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterLightingModel</name></member>
      <member refid="d8/d4f/a03703_1a5d37a19b2cbcf6da4493327e35b4d99d" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterLightingModel</name></member>
      <member refid="d8/d4f/a03703_1aeb400395f07c375c7a3439ab2bd4cc17" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterParsers</name></member>
      <member refid="d8/d4f/a03703_1ad54b18787a1593b5540ba6e9af2ecebb" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterPassComponent</name></member>
      <member refid="d8/d4f/a03703_1af5bdcef29a2b3b6db1acdacaf1a5ac15" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterPassModel</name></member>
      <member refid="d8/d4f/a03703_1a56bb3c5f428ba3032335f971ed213084" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterPassModels</name></member>
      <member refid="d8/d4f/a03703_1a4f2120a7bd506dc9a1543228283abaed" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterRenderPassType</name></member>
      <member refid="d8/d4f/a03703_1a1e5ece70747e97c7bbcfba5d23ab2723" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterSpecificsBuffer</name></member>
      <member refid="d8/d4f/a03703_1a9b94ceb144250e53b4ce693a8f54d4f6" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterSubmeshComponent</name></member>
      <member refid="d8/d4f/a03703_1a57e28c657fd056cd140455288c33af98" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterTimer</name></member>
      <member refid="d8/d4f/a03703_1a42feb3bee212879e63f7fab5a56baf87" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterWindow</name></member>
      <member refid="d8/d4f/a03703_1afcb9bb7a80246fa509954782c1d637a0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>update</name></member>
      <member refid="d8/d4f/a03703_1a31d9d09b962ca618773b12398765a95a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>update</name></member>
      <member refid="d8/d4f/a03703_1ad2fbabdc6be5f6a4655727cea141d4dd" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>upload</name></member>
      <member refid="d8/d4f/a03703_1aa7a0c565e2ef5b0316fbf3bbd538c916" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>~Engine</name></member>
      <member refid="dc/d63/a08283_1a7b5f078babcc15d806aa8d3fd453e078" prot="protected" virt="non-virtual"><scope>castor3d::Engine</scope><name>~Unique</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
