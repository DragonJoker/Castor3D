<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d2/dc3/a06951" kind="class" language="C++" prot="public">
    <compoundname>castor3d::Camera</compoundname>
    <basecompoundref refid="da/d09/a07047" prot="public" virt="non-virtual">castor3d::MovableObject</basecompoundref>
    <includes local="no">Camera.hpp</includes>
    <sectiondef kind="user-defined">
      <memberdef kind="function" id="d2/dc3/a06951_1a7a76454710865d81e4cc79ab181f442b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Matrix4x4f</type>
        <definition>C3D_API castor::Matrix4x4f castor3d::Camera::getRescaledProjection</definition>
        <argsstring>(float scale, bool safeBanded) const</argsstring>
        <name>getRescaledProjection</name>
        <qualifiedname>castor3d::Camera::getRescaledProjection</qualifiedname>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>safeBanded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Accesseurs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="112" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a261595527005dee3c9f8c801d668af89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d5b/a06803" kindref="compound">Viewport</ref> const &amp;</type>
        <definition>Viewport const  &amp; castor3d::Camera::getViewport</definition>
        <argsstring>() const</argsstring>
        <name>getViewport</name>
        <qualifiedname>castor3d::Camera::getViewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="115" column="17" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a77372d487a24e7a82d90166c37b8e68d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d5b/a06803" kindref="compound">Viewport</ref> &amp;</type>
        <definition>Viewport &amp; castor3d::Camera::getViewport</definition>
        <argsstring>()</argsstring>
        <name>getViewport</name>
        <qualifiedname>castor3d::Camera::getViewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="120" column="11" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a77869b12fb2ec344c03fd5b3a7c6e8f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Matrix4x4f const &amp;</type>
        <definition>castor::Matrix4x4f const  &amp; castor3d::Camera::getView</definition>
        <argsstring>() const</argsstring>
        <name>getView</name>
        <qualifiedname>castor3d::Camera::getView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="125" column="27" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a45a52185945081d1018bc43f33ccf1db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Matrix4x4f const &amp;</type>
        <definition>castor::Matrix4x4f const  &amp; castor3d::Camera::getProjection</definition>
        <argsstring>(bool safeBanded) const</argsstring>
        <name>getProjection</name>
        <qualifiedname>castor3d::Camera::getProjection</qualifiedname>
        <param>
          <type>bool</type>
          <declname>safeBanded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="130" column="27" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="130" bodyend="137"/>
        <references refid="db/d5b/a06803_1a5c6b5a0d859972086d3ee7463388f940" compoundref="d2/d1f/a01361" startline="239" endline="242">castor3d::Viewport::getProjection</references>
        <references refid="db/d5b/a06803_1a164bb216e83e345a63b5fddb2c2c64aa" compoundref="d2/d1f/a01361" startline="244" endline="247">castor3d::Viewport::getSafeBandedProjection</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1aae63db3ab522039fe77511b7978f6960" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1a4141612e14f3113f10b3872630c29b3d" kindref="member">ViewportType</ref></type>
        <definition>ViewportType castor3d::Camera::getViewportType</definition>
        <argsstring>() const</argsstring>
        <name>getViewportType</name>
        <qualifiedname>castor3d::Camera::getViewportType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="139" column="14" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="139" bodyend="142"/>
        <references refid="db/d5b/a06803_1a9a1dfbac35074095a584d7094fc35288" compoundref="d2/d1f/a01361" startline="179" endline="182">castor3d::Viewport::getType</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1adc5d4295e939f5d05b3b10594a326686" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/dd6/a09023" kindref="compound">castor::Size</ref> const &amp;</type>
        <definition>castor::Size const  &amp; castor3d::Camera::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <qualifiedname>castor3d::Camera::getSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="144" column="21" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="144" bodyend="147"/>
        <references refid="db/d5b/a06803_1ac055dfe84a8ca8a36e9b163ea4f730f9" compoundref="d2/d1f/a01361" startline="169" endline="172">castor3d::Viewport::getSize</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a88448f9caa3d89b98746bc56c9accb12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Camera::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <qualifiedname>castor3d::Camera::getWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="149" column="10" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="149" bodyend="152"/>
        <references refid="db/d5b/a06803_1ab151e7057d4e896ef7cf39b8a2876607" compoundref="d2/d1f/a01361" startline="224" endline="227">castor3d::Viewport::getWidth</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a373035b448a6bef453a5a4232cfdfa14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Camera::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <qualifiedname>castor3d::Camera::getHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="154" column="10" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="154" bodyend="157"/>
        <references refid="db/d5b/a06803_1aa5a3f606ff89db391d1122f0d09b1613" compoundref="d2/d1f/a01361" startline="229" endline="232">castor3d::Viewport::getHeight</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1acc1ad416e4f51169cd16661c049801f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getNear</definition>
        <argsstring>() const</argsstring>
        <name>getNear</name>
        <qualifiedname>castor3d::Camera::getNear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="159" column="7" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="159" bodyend="162"/>
        <references refid="db/d5b/a06803_1a09ceb5787b4e55deb773d8d168e270a2" compoundref="d2/d1f/a01361" startline="189" endline="192">castor3d::Viewport::getNear</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a348da0fb22ffb751d5741d897c33da27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getFar</definition>
        <argsstring>() const</argsstring>
        <name>getFar</name>
        <qualifiedname>castor3d::Camera::getFar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="164" column="7" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="164" bodyend="167"/>
        <references refid="db/d5b/a06803_1a0dc699fcb4f1cf6393e6fb24127c29b6" compoundref="d2/d1f/a01361" startline="194" endline="197">castor3d::Viewport::getFar</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a198f38c9471f61b49d93b6ee20964e55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getRatio</definition>
        <argsstring>() const</argsstring>
        <name>getRatio</name>
        <qualifiedname>castor3d::Camera::getRatio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="169" column="7" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="169" bodyend="172"/>
        <references refid="db/d5b/a06803_1a741f98f78fc374c2ce72d9dbf83b0821" compoundref="d2/d1f/a01361" startline="184" endline="187">castor3d::Viewport::getRatio</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1af35919dd822add0906c03904cc2506ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1ae8e874b0f16e0aed39b2128f83554e8b" kindref="member">castor::Angle</ref> const &amp;</type>
        <definition>castor::Angle const  &amp; castor3d::Camera::getFovY</definition>
        <argsstring>() const</argsstring>
        <name>getFovY</name>
        <qualifiedname>castor3d::Camera::getFovY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="174" column="22" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="174" bodyend="177"/>
        <references refid="db/d5b/a06803_1a740f33d5f9d620c509fcbba3807faaf8" compoundref="d2/d1f/a01361" startline="199" endline="202">castor3d::Viewport::getFovY</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a83cfb19ac57357fb76621be586d9fa0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getProjectionScale</definition>
        <argsstring>() const</argsstring>
        <name>getProjectionScale</name>
        <qualifiedname>castor3d::Camera::getProjectionScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="179" column="7" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="179" bodyend="182"/>
        <references refid="db/d5b/a06803_1ac3b37a37a142d60a0880741f94887bac">castor3d::Viewport::getProjectionScale</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a4b024cf5dd96bcf933c8b90a70d2c183" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::BoundingBox const &amp;box, castor::Matrix4x4f const &amp;transformations) const</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::Camera::isVisible</qualifiedname>
        <param>
          <type><ref refid="d6/d51/a08727" kindref="compound">castor::BoundingBox</ref> const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>transformations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="184" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="184" bodyend="189"/>
        <references refid="d0/d5d/a05955_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a280f2138072e46efb3985c004be52bcc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::BoundingSphere const &amp;sphere, castor::Matrix4x4f const &amp;transformations, castor::Point3f const &amp;scale) const</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::Camera::isVisible</qualifiedname>
        <param>
          <type><ref refid="dd/d6f/a08735" kindref="compound">castor::BoundingSphere</ref> const &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>transformations</declname>
        </param>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="191" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="191" bodyend="198"/>
        <references refid="d0/d5d/a05955_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a14d86d5d44e0415b042e80f52d4a015e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::Point3f const &amp;point) const</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::Camera::isVisible</qualifiedname>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="200" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="200" bodyend="203"/>
        <references refid="d0/d5d/a05955_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1aadde674211c53f95317aa8426fed12d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d5d/a05955" kindref="compound">Frustum</ref> const &amp;</type>
        <definition>Frustum const  &amp; castor3d::Camera::getFrustum</definition>
        <argsstring>() const</argsstring>
        <name>getFrustum</name>
        <qualifiedname>castor3d::Camera::getFrustum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="205" column="16" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a49be9614edeee5d6d2ed30d88c18c714" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d2f/a06715" kindref="compound">HdrConfig</ref> const &amp;</type>
        <definition>HdrConfig const  &amp; castor3d::Camera::getHdrConfig</definition>
        <argsstring>() const</argsstring>
        <name>getHdrConfig</name>
        <qualifiedname>castor3d::Camera::getHdrConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="210" column="18" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a571eacb15857d7f24e1e0191edcf1592" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d2f/a06715" kindref="compound">HdrConfig</ref> &amp;</type>
        <definition>HdrConfig &amp; castor3d::Camera::getHdrConfig</definition>
        <argsstring>()</argsstring>
        <name>getHdrConfig</name>
        <qualifiedname>castor3d::Camera::getHdrConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="215" column="12" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1afecb15b73d2fe546e09ba880208d50f1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/d65/a06711" kindref="compound">ColourGradingConfig</ref> const &amp;</type>
        <definition>ColourGradingConfig const  &amp; castor3d::Camera::getColourGradingConfig</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getColourGradingConfig</name>
        <qualifiedname>castor3d::Camera::getColourGradingConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="220" column="28" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a5bd181926fc6c66ae7bc87ce598e4265" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/d65/a06711" kindref="compound">ColourGradingConfig</ref> &amp;</type>
        <definition>ColourGradingConfig &amp; castor3d::Camera::getColourGradingConfig</definition>
        <argsstring>() noexcept</argsstring>
        <name>getColourGradingConfig</name>
        <qualifiedname>castor3d::Camera::getColourGradingConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="225" column="22" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <memberdef kind="function" id="d2/dc3/a06951_1ae8bb96f14872d17f9c01d458e5058ed5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setView</definition>
        <argsstring>(castor::Matrix4x4f const &amp;view)</argsstring>
        <name>setView</name>
        <qualifiedname>castor3d::Camera::setView</qualifiedname>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Mutateurs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="239" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="239" bodyend="243"/>
        <references refid="da/d09/a07047_1a3308ef0055a0be80c34d6aefeff2044a">castor3d::MovableObject::markDirty</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1aba6e8288a09d2614b0f25a7e8a8ab043" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::resize</definition>
        <argsstring>(uint32_t width, uint32_t height)</argsstring>
        <name>resize</name>
        <qualifiedname>castor3d::Camera::resize</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="245" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="245" bodyend="248"/>
        <references refid="d2/dc3/a06951_1aba6e8288a09d2614b0f25a7e8a8ab043" compoundref="d3/dbc/a01451" startline="245" endline="248">resize</references>
        <referencedby refid="d2/dc3/a06951_1aba6e8288a09d2614b0f25a7e8a8ab043" compoundref="d3/dbc/a01451" startline="245" endline="248">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a38dae7d74ec72af0fa347c0eefb8872b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::resize</definition>
        <argsstring>(castor::Size const &amp;size)</argsstring>
        <name>resize</name>
        <qualifiedname>castor3d::Camera::resize</qualifiedname>
        <param>
          <type><ref refid="d4/dd6/a09023" kindref="compound">castor::Size</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="250" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="250" bodyend="257"/>
        <references refid="db/d5b/a06803_1ac055dfe84a8ca8a36e9b163ea4f730f9" compoundref="d2/d1f/a01361" startline="169" endline="172">castor3d::Viewport::getSize</references>
        <references refid="da/d09/a07047_1a3308ef0055a0be80c34d6aefeff2044a">castor3d::MovableObject::markDirty</references>
        <references refid="db/d5b/a06803_1a6bf22fe2482397222b93c41f6a0464ed">castor3d::Viewport::resize</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1abfa6db9cee09d6cc4f1ca671b5968d5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setViewportType</definition>
        <argsstring>(ViewportType value)</argsstring>
        <name>setViewportType</name>
        <qualifiedname>castor3d::Camera::setViewportType</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a4141612e14f3113f10b3872630c29b3d" kindref="member">ViewportType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="259" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="259" bodyend="263"/>
        <references refid="da/d09/a07047_1a3308ef0055a0be80c34d6aefeff2044a">castor3d::MovableObject::markDirty</references>
        <references refid="db/d5b/a06803_1a6026443211d53a493fc8924e205f4267" compoundref="d2/d1f/a01361" startline="278" endline="281">castor3d::Viewport::updateType</references>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a86dffd20ecb85c6f36f9d009e26b6995" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setHdrConfig</definition>
        <argsstring>(HdrConfig value)</argsstring>
        <name>setHdrConfig</name>
        <qualifiedname>castor3d::Camera::setHdrConfig</qualifiedname>
        <param>
          <type><ref refid="d1/d2f/a06715" kindref="compound">HdrConfig</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="265" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a6963994a745abd5424b647dd7d4eb8e1" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setColourGradingConfig</definition>
        <argsstring>(ColourGradingConfig config) noexcept</argsstring>
        <name>setColourGradingConfig</name>
        <qualifiedname>castor3d::Camera::setColourGradingConfig</qualifiedname>
        <param>
          <type><ref refid="d9/d65/a06711" kindref="compound">ColourGradingConfig</ref></type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="270" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="270" bodyend="273"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d2/dc3/a06951_1ac2f8a86af94f58fd6256412b0cbe0c15" prot="public" static="no" mutable="yes">
        <type><ref refid="d9/dba/a02278_1a507727413164597c95f2be09f47c80fc" kindref="member">OnCameraChanged</ref></type>
        <definition>OnCameraChanged castor3d::Camera::onGpuChanged</definition>
        <argsstring></argsstring>
        <name>onGpuChanged</name>
        <qualifiedname>castor3d::Camera::onGpuChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Le signal levé lorsque la caméra a changé. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="279" column="25" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="d2/dc3/a06951_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Scene</definition>
        <argsstring></argsstring>
        <name>Scene</name>
        <qualifiedname>castor3d::Camera::Scene</qualifiedname>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="282" column="14" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/dc3/a06951_1a748e34ededfa429fe2a814fceb82aadc" prot="private" static="no" mutable="no">
        <type><ref refid="db/d5b/a06803" kindref="compound">Viewport</ref></type>
        <definition>Viewport castor3d::Camera::m_viewport</definition>
        <argsstring></argsstring>
        <name>m_viewport</name>
        <qualifiedname>castor3d::Camera::m_viewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="283" column="10" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc3/a06951_1ad4b4db2e4c8bad122de676b528aa1678" prot="private" static="no" mutable="no">
        <type><ref refid="d0/d5d/a05955" kindref="compound">Frustum</ref></type>
        <definition>Frustum castor3d::Camera::m_frustum</definition>
        <argsstring></argsstring>
        <name>m_frustum</name>
        <qualifiedname>castor3d::Camera::m_frustum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="284" column="9" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc3/a06951_1aae19d878cd49f84a6b7345ab4efaf4fc" prot="private" static="no" mutable="no">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::Camera::m_view</definition>
        <argsstring></argsstring>
        <name>m_view</name>
        <qualifiedname>castor3d::Camera::m_view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="285" column="20" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc3/a06951_1a95d8e9b76a35949cb779725b1703d922" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d2f/a06715" kindref="compound">HdrConfig</ref></type>
        <definition>HdrConfig castor3d::Camera::m_hdrConfig</definition>
        <argsstring></argsstring>
        <name>m_hdrConfig</name>
        <qualifiedname>castor3d::Camera::m_hdrConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="286" column="11" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc3/a06951_1ab0457c03a2df6e1d958d7d7faab6f4ad" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d65/a06711" kindref="compound">ColourGradingConfig</ref></type>
        <definition>ColourGradingConfig castor3d::Camera::m_colourGradingConfig</definition>
        <argsstring></argsstring>
        <name>m_colourGradingConfig</name>
        <qualifiedname>castor3d::Camera::m_colourGradingConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="287" column="21" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc3/a06951_1aa956cef384f2757c82e20f7c3a4b97a0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Camera::m_ownProjection</definition>
        <argsstring></argsstring>
        <name>m_ownProjection</name>
        <qualifiedname>castor3d::Camera::m_ownProjection</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="288" column="6" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc3/a06951_1a03d3edece27ba6cf2f59ac4254cf9d45" prot="private" static="no" mutable="no">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::Camera::m_projection</definition>
        <argsstring></argsstring>
        <name>m_projection</name>
        <qualifiedname>castor3d::Camera::m_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="289" column="20" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/dc3/a06951_1a7b76d7d3f8dca9678a029d9a8e615203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Camera::Camera</definition>
        <argsstring>(castor::String const &amp;name, Scene &amp;scene, SceneNode &amp;node, Viewport viewport, bool ownProjMtx=false)</argsstring>
        <name>Camera</name>
        <qualifiedname>castor3d::Camera::Camera</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="db/d5b/a06803" kindref="compound">Viewport</ref></type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ownProjMtx</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom de la caméra. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>La scène parente. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>Le noeud de scène parent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">viewport</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="db/d5b/a06803" kindref="compound">Viewport</ref> à copier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ownProjMtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Dit si la matrice de projection est définie par le viewport <computeroutput>false</computeroutput>, ou pas <computeroutput>true</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a87e6d3e814064e377c961b449064010c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Camera::Camera</definition>
        <argsstring>(castor::String const &amp;name, Scene &amp;scene, SceneNode &amp;node, bool ownProjMtx=false)</argsstring>
        <name>Camera</name>
        <qualifiedname>castor3d::Camera::Camera</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ownProjMtx</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom de la caméra. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>La scène parente. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> parent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ownProjMtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Dit si la matrice de projection est définie par le viewport <computeroutput>false</computeroutput>, ou pas <computeroutput>true</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="62" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1aed868197191aca547df5624ad61f37c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::updateFrustum</definition>
        <argsstring>()</argsstring>
        <name>updateFrustum</name>
        <qualifiedname>castor3d::Camera::updateFrustum</qualifiedname>
        <briefdescription>
<para>Met à jour le frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="72" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a8c92fa71ede63c925d81b9fe41be3e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::Camera::update</qualifiedname>
        <briefdescription>
<para>Met à jour le viewport, la matrice de vue et le frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="79" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a979e2f2c2bc6e3e61ea8651f2493ebb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::setProjection</definition>
        <argsstring>(castor::Matrix4x4f const &amp;projection)</argsstring>
        <name>setProjection</name>
        <qualifiedname>castor3d::Camera::setProjection</qualifiedname>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>projection</declname>
        </param>
        <briefdescription>
<para>Définit la matrice de projection, met à jour le viewport et le frustum. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">projection</parametername>
</parameternamelist>
<parameterdescription>
<para>La matrice de projection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="88" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc3/a06951_1a6da0f58f9fb8f8cbb815ca084f4d18ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Camera::isVisible</definition>
        <argsstring>(Geometry const &amp;geometry, Submesh const &amp;submesh) const</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::Camera::isVisible</qualifiedname>
        <param>
          <type><ref refid="d8/d46/a06971" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type><ref refid="dd/df1/a05635" kindref="compound">Submesh</ref> const &amp;</type>
          <declname>submesh</declname>
        </param>
        <briefdescription>
<para>Vérifie si un sous-maillage est visible, via une géométrie. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>La géométrie. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submesh</parametername>
</parameternamelist>
<parameterdescription>
<para>Le sous-maillage. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si le sous-maillage n&apos;est pas visible. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Camera.hpp" line="102" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>castor::OwnedBy&lt; Scene &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Scene &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::Camera</label>
        <link refid="d2/dc3/a06951"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::MovableObject</label>
        <link refid="da/d09/a07047"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>Animable</label>
        <link refid="d2/d7a/a03115"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>castor::OwnedBy&lt; AnimableHandlerT &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; AnimableHandlerT &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Scene &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Scene &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>castor::SignalT&lt; OnCameraChangedFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; OnCameraChangedFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>castor::SignalT&lt; OnSceneNodeReparentFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; OnSceneNodeReparentFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>castor3d::AnimableT&lt; AnimableHandlerT &gt;</label>
        <link refid="d2/d7a/a03115"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::Camera</label>
        <link refid="d2/dc3/a06951"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>onGpuChanged</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::MovableObject</label>
        <link refid="da/d09/a07047"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_sceneNode</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_notifyIndex</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>castor3d::SceneNode</label>
        <link refid="d4/dc4/a07255"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>onParentChanged</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>castor::ConnectionT&lt; MySignalT &gt;</label>
        <link refid="d4/ddb/a08183"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="12">
        <label>castor::NonCopyable</label>
        <link refid="da/d36/a08315"/>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="8">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="13">
        <label>castor::SignalT&lt; Function &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Scene/Camera.hpp" line="23" column="1" bodyfile="Castor3D/Scene/Camera.hpp" bodystart="25" bodyend="290"/>
    <listofallmembers>
      <member refid="da/d09/a07047_1ab2169299d3e08b4e50066e400d1d86dc" prot="public" virt="virtual"><scope>castor3d::Camera</scope><name>attachTo</name></member>
      <member refid="d2/dc3/a06951_1a7b76d7d3f8dca9678a029d9a8e615203" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>Camera</name></member>
      <member refid="d2/dc3/a06951_1a87e6d3e814064e377c961b449064010c" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>Camera</name></member>
      <member refid="da/d09/a07047_1afbef8194f2a0b9e15c9cc483221a08ee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>detach</name></member>
      <member refid="d2/dc3/a06951_1afecb15b73d2fe546e09ba880208d50f1" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getColourGradingConfig</name></member>
      <member refid="d2/dc3/a06951_1a5bd181926fc6c66ae7bc87ce598e4265" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getColourGradingConfig</name></member>
      <member refid="da/d09/a07047_1a27eca0f5f8dc03517598e5046593f60b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getEngine</name></member>
      <member refid="d2/dc3/a06951_1a348da0fb22ffb751d5741d897c33da27" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFar</name></member>
      <member refid="d2/dc3/a06951_1af35919dd822add0906c03904cc2506ec" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFovY</name></member>
      <member refid="d2/dc3/a06951_1aadde674211c53f95317aa8426fed12d0" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFrustum</name></member>
      <member refid="d2/dc3/a06951_1a49be9614edeee5d6d2ed30d88c18c714" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHdrConfig</name></member>
      <member refid="d2/dc3/a06951_1a571eacb15857d7f24e1e0191edcf1592" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHdrConfig</name></member>
      <member refid="d2/dc3/a06951_1a373035b448a6bef453a5a4232cfdfa14" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHeight</name></member>
      <member refid="da/d09/a07047_1a1333acdd70effe47adb0c01106e3b30e" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getMovableType</name></member>
      <member refid="d5/d3c/a08223_1abc1fa9ec1a50d2023373baa4d4c79519" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getName</name></member>
      <member refid="d2/dc3/a06951_1acc1ad416e4f51169cd16661c049801f2" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getNear</name></member>
      <member refid="d6/da8/a08227_1ae200b1c3bde17ab092b0d0b37095ff76" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getOwner</name></member>
      <member refid="da/d09/a07047_1afc3403e6c40a4e1679eccd9b380ce9c3" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getParent</name></member>
      <member refid="d2/dc3/a06951_1a45a52185945081d1018bc43f33ccf1db" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getProjection</name></member>
      <member refid="d2/dc3/a06951_1a83cfb19ac57357fb76621be586d9fa0b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getProjectionScale</name></member>
      <member refid="d2/dc3/a06951_1a198f38c9471f61b49d93b6ee20964e55" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getRatio</name></member>
      <member refid="d2/dc3/a06951_1a7a76454710865d81e4cc79ab181f442b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getRescaledProjection</name></member>
      <member refid="d2/dc3/a06951_1adc5d4295e939f5d05b3b10594a326686" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getSize</name></member>
      <member refid="d2/dc3/a06951_1a77869b12fb2ec344c03fd5b3a7c6e8f7" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getView</name></member>
      <member refid="d2/dc3/a06951_1a261595527005dee3c9f8c801d668af89" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewport</name></member>
      <member refid="d2/dc3/a06951_1a77372d487a24e7a82d90166c37b8e68d" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewport</name></member>
      <member refid="d2/dc3/a06951_1aae63db3ab522039fe77511b7978f6960" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewportType</name></member>
      <member refid="d2/dc3/a06951_1a88448f9caa3d89b98746bc56c9accb12" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getWidth</name></member>
      <member refid="d2/dc3/a06951_1a6da0f58f9fb8f8cbb815ca084f4d18ee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="d2/dc3/a06951_1a4b024cf5dd96bcf933c8b90a70d2c183" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="d2/dc3/a06951_1a280f2138072e46efb3985c004be52bcc" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="d2/dc3/a06951_1a14d86d5d44e0415b042e80f52d4a015e" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="d2/dc3/a06951_1ab0457c03a2df6e1d958d7d7faab6f4ad" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_colourGradingConfig</name></member>
      <member refid="d2/dc3/a06951_1ad4b4db2e4c8bad122de676b528aa1678" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_frustum</name></member>
      <member refid="d2/dc3/a06951_1a95d8e9b76a35949cb779725b1703d922" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_hdrConfig</name></member>
      <member refid="d5/d3c/a08223_1a869b429a7190ecf614d8221b270e6dca" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_name</name></member>
      <member refid="da/d09/a07047_1a8385c7c8fd9aee20a3c6de804cb09514" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_notifyIndex</name></member>
      <member refid="d2/dc3/a06951_1aa956cef384f2757c82e20f7c3a4b97a0" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_ownProjection</name></member>
      <member refid="d2/dc3/a06951_1a03d3edece27ba6cf2f59ac4254cf9d45" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_projection</name></member>
      <member refid="da/d09/a07047_1aa058c86365c45c7d4b85a04ce56a9d22" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_sceneNode</name></member>
      <member refid="da/d09/a07047_1acf6726e80bb3098468fe1fcd5a1f720e" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_type</name></member>
      <member refid="d2/dc3/a06951_1aae19d878cd49f84a6b7345ab4efaf4fc" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_view</name></member>
      <member refid="d2/dc3/a06951_1a748e34ededfa429fe2a814fceb82aadc" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_viewport</name></member>
      <member refid="da/d09/a07047_1a3308ef0055a0be80c34d6aefeff2044a" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>markDirty</name></member>
      <member refid="da/d09/a07047_1a40b0fe7602fb945cb5b89de71a8cf4d8" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>MovableObject</name></member>
      <member refid="da/d09/a07047_1acf7517058566afbb2290a7856fc9dfee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>MovableObject</name></member>
      <member refid="d5/d3c/a08223_1a4a6e4748603541685b04f95fb91efb26" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>NamedBaseT</name></member>
      <member refid="d2/dc3/a06951_1ac2f8a86af94f58fd6256412b0cbe0c15" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>onGpuChanged</name></member>
      <member refid="d6/da8/a08227_1a5efafa99a79dd1036a6ae3f3242a366b" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>OwnedBy</name></member>
      <member refid="d5/d3c/a08223_1a2d62ce1925efead03c4e0842c06b3e11" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>rename</name></member>
      <member refid="d2/dc3/a06951_1aba6e8288a09d2614b0f25a7e8a8ab043" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>resize</name></member>
      <member refid="d2/dc3/a06951_1a38dae7d74ec72af0fa347c0eefb8872b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>resize</name></member>
      <member refid="d2/dc3/a06951_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>Scene</name></member>
      <member refid="d2/dc3/a06951_1a6963994a745abd5424b647dd7d4eb8e1" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setColourGradingConfig</name></member>
      <member refid="d2/dc3/a06951_1a86dffd20ecb85c6f36f9d009e26b6995" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setHdrConfig</name></member>
      <member refid="d2/dc3/a06951_1a979e2f2c2bc6e3e61ea8651f2493ebb6" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setProjection</name></member>
      <member refid="d2/dc3/a06951_1ae8bb96f14872d17f9c01d458e5058ed5" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setView</name></member>
      <member refid="d2/dc3/a06951_1abfa6db9cee09d6cc4f1ca671b5968d5d" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setViewportType</name></member>
      <member refid="d2/dc3/a06951_1a8c92fa71ede63c925d81b9fe41be3e33" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>update</name></member>
      <member refid="d2/dc3/a06951_1aed868197191aca547df5624ad61f37c0" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>updateFrustum</name></member>
      <member refid="da/d09/a07047_1a1bf609d5ffbdc5a0d38c0d071991f37f" prot="public" virt="virtual"><scope>castor3d::Camera</scope><name>~MovableObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
