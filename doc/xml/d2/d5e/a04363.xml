<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d2/d5e/a04363" kind="class" language="C++" prot="public">
    <compoundname>castor3d::DepthPass</compoundname>
    <basecompoundref refid="df/d7b/a04903" prot="public" virt="non-virtual">castor3d::RenderTechniquePass</basecompoundref>
    <includes local="no">DepthPass.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d5e/a04363_1aa8ac4040ab1449a9582ca3a3dd3233e5" prot="private" static="no" mutable="no">
        <type>ashes::FrameBufferPtr</type>
        <definition>ashes::FrameBufferPtr castor3d::DepthPass::m_frameBuffer</definition>
        <argsstring></argsstring>
        <name>m_frameBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="94" column="1" bodyfile="Render/Passes/DepthPass.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d5e/a04363_1ad4093ebdbb917984e05f0cab891bab94" prot="private" static="no" mutable="no">
        <type>ashes::CommandBufferPtr</type>
        <definition>ashes::CommandBufferPtr castor3d::DepthPass::m_nodesCommands</definition>
        <argsstring></argsstring>
        <name>m_nodesCommands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="95" column="1" bodyfile="Render/Passes/DepthPass.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d5e/a04363_1a67328b933fc991486b9a6686a07a38ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::DepthPass::DepthPass</definition>
        <argsstring>(castor::String const &amp;prefix, RenderDevice const &amp;device, MatrixUbo &amp;matrixUbo, SceneCuller &amp;culler, SsaoConfig const &amp;ssaoConfig, TextureLayoutSPtr depthBuffer)</argsstring>
        <name>DepthPass</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="de/ddb/a04491" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d9/dae/a05475" kindref="compound">MatrixUbo</ref> &amp;</type>
          <declname>matrixUbo</declname>
        </param>
        <param>
          <type><ref refid="dc/d2d/a04211" kindref="compound">SceneCuller</ref> &amp;</type>
          <declname>culler</declname>
        </param>
        <param>
          <type><ref refid="d6/d12/a04691" kindref="compound">SsaoConfig</ref> const &amp;</type>
          <declname>ssaoConfig</declname>
        </param>
        <param>
          <type>TextureLayoutSPtr</type>
          <declname>depthBuffer</declname>
        </param>
        <briefdescription>
<para>Constructor for opaque nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>This pass name&apos;s prefix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixUbo</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene matrix UBO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">culler</parametername>
</parameternamelist>
<parameterdescription>
<para>The render pass culler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssaoConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSAO configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">depthBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The target depth buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a7404961904a0ac06b897f6f016fc3c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::DepthPass::~DepthPass</definition>
        <argsstring>()</argsstring>
        <name>~DepthPass</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a15846a58b1705ef1244776091d40f094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::Semaphore const  &amp;</type>
        <definition>C3D_API ashes::Semaphore const&amp; castor3d::DepthPass::render</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::SemaphoreCRefArray const &amp;semaphores)</argsstring>
        <name>render</name>
        <param>
          <type><ref refid="de/ddb/a04491" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::SemaphoreCRefArray const &amp;</type>
          <declname>semaphores</declname>
        </param>
        <briefdescription>
<para>Renders nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">semaphores</parametername>
</parameternamelist>
<parameterdescription>
<para>The semaphores to wait for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1aa2c92873b5dc657476e3a5950ebc55cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d7/dd1/a01458_1a3b9e457486b668463148ebc06850f3ac" kindref="member">TextureFlags</ref></type>
        <definition>C3D_API TextureFlags castor3d::DepthPass::getTexturesMask</definition>
        <argsstring>() const override</argsstring>
        <name>getTexturesMask</name>
        <reimplements refid="d1/d48/a04575_1abe50f4442fa70138e392be9d1bfba637">getTexturesMask</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a34b80c98549ada2496387ba4db944fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniquePass::update</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <briefdescription>
<para>Updates the render pass, GPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="64" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d2/d5e/a04363_1a999abac907c115eed3d3a7ecf028f247" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::DepthPass::doCleanup</definition>
        <argsstring>(RenderDevice const &amp;device) override</argsstring>
        <name>doCleanup</name>
        <reimplements refid="df/d7b/a04903_1a281c6db6df63bc04b4656377b453a571">doCleanup</reimplements>
        <param>
          <type><ref refid="de/ddb/a04491" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Cleans up the pass. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="70" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/d5e/a04363_1a0837a3375a7aa4aed87b01c4539367e7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::DepthPass::doUpdateFlags</definition>
        <argsstring>(PipelineFlags &amp;flags) const override</argsstring>
        <name>doUpdateFlags</name>
        <reimplements refid="d1/d48/a04575_1a5d3dc93485a69008afb0170312d11e11">doUpdateFlags</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Modifies the given flags to make them match the render pass requirements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1aa51740bafb4b696c60f80d0a42351c40" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::DepthPass::doFillTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetLayout const &amp;layout, uint32_t &amp;index, BillboardListRenderNode &amp;nodes, ShadowMapLightTypeArray const &amp;shadowMaps) override</argsstring>
        <name>doFillTextureDescriptor</name>
        <reimplements refid="d1/d48/a04575_1a2ff8b6ee2139a5f6dd562c74d94a913a">doFillTextureDescriptor</reimplements>
        <param>
          <type>ashes::DescriptorSetLayout const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a384f6fd61b75ba3fbac28239a79872cd" kindref="member">BillboardListRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the descriptor set of a billboard node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptors layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture index, updated to the next available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a428195fec76d0ec5532ff4824bb24724" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::DepthPass::doFillTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetLayout const &amp;layout, uint32_t &amp;index, SubmeshRenderNode &amp;nodes, ShadowMapLightTypeArray const &amp;shadowMaps) override</argsstring>
        <name>doFillTextureDescriptor</name>
        <reimplements refid="d1/d48/a04575_1a15b8a481485c2184f315c4ba4131ec3b">doFillTextureDescriptor</reimplements>
        <param>
          <type>ashes::DescriptorSetLayout const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1ae05cd0daba83f842b870aa2eb08b1b91" kindref="member">SubmeshRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the descriptor set of a morphing node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptors layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture index, updated to the next available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a61622e28cc6d91dd34f7f947602b8501" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ashes::VkDescriptorSetLayoutBindingArray</type>
        <definition>ashes::VkDescriptorSetLayoutBindingArray castor3d::DepthPass::doCreateTextureBindings</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doCreateTextureBindings</name>
        <reimplements refid="d1/d48/a04575_1add71461e455e60430c682a664e5ff163">doCreateTextureBindings</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates the common textures descriptor layout bindings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a10125d57aeeb01c400959dbf826326fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::DepthPass::doUpdatePipeline</definition>
        <argsstring>(RenderPipeline &amp;pipeline) override</argsstring>
        <name>doUpdatePipeline</name>
        <reimplements refid="d1/d48/a04575_1a698e64428c216acae1ca725373359689">doUpdatePipeline</reimplements>
        <param>
          <type><ref refid="dd/dec/a04595" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <briefdescription>
<para>Updates the pipeline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The render pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a513277558ebdc089688e29007ca9f225" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ashes::PipelineDepthStencilStateCreateInfo</type>
        <definition>ashes::PipelineDepthStencilStateCreateInfo castor3d::DepthPass::doCreateDepthStencilState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doCreateDepthStencilState</name>
        <reimplements refid="d1/d48/a04575_1a966911ad6ae24a856db42dc265df1c23">doCreateDepthStencilState</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates the depth stencil state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a0d7cf9c74270355b7467425d9186a956" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ashes::PipelineColorBlendStateCreateInfo</type>
        <definition>ashes::PipelineColorBlendStateCreateInfo castor3d::DepthPass::doCreateBlendState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doCreateBlendState</name>
        <reimplements refid="d1/d48/a04575_1aee56eed63ba3932ab498d5b7a10a5d41">doCreateBlendState</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates the colour blend state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a07dff404727af3edf2acfbb5cf961c59" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d7/dd1/a01458_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>ShaderPtr castor3d::DepthPass::doGetVertexShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doGetVertexShaderSource</name>
        <reimplements refid="d1/d48/a04575_1a81135a22e0eb402b74c05a66abb4b7a9">doGetVertexShaderSource</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the vertex shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1afa4bb01983c2174c9cda1c7e6d4831f2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d7/dd1/a01458_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>ShaderPtr castor3d::DepthPass::doGetGeometryShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doGetGeometryShaderSource</name>
        <reimplements refid="d1/d48/a04575_1a29139e48d35633ad218f6ecc9e52c435">doGetGeometryShaderSource</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the geometry shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a4ea17c25e37c31909d4fecda5e701772" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d7/dd1/a01458_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>ShaderPtr castor3d::DepthPass::doGetPhongPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doGetPhongPixelShaderSource</name>
        <reimplements refid="d1/d48/a04575_1a64c67405e2954877ce96d89c3bd6b0ad">doGetPhongPixelShaderSource</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pixel shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1add326e905b9773d946acd60d6948180b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d7/dd1/a01458_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>ShaderPtr castor3d::DepthPass::doGetPbrMRPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doGetPbrMRPixelShaderSource</name>
        <reimplements refid="d1/d48/a04575_1a840611696fdbf0542000710c0191781f">doGetPbrMRPixelShaderSource</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pixel shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a6483028f3fbb597d1e832410319a512b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d7/dd1/a01458_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>ShaderPtr castor3d::DepthPass::doGetPbrSGPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doGetPbrSGPixelShaderSource</name>
        <reimplements refid="d1/d48/a04575_1a26b38ac7476d3a153faa4b18573f3744">doGetPbrSGPixelShaderSource</reimplements>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pixel shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d5e/a04363_1a28c85d122cdbfdd6fd375092e0f5f725" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dd1/a01458_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>ShaderPtr castor3d::DepthPass::doGetPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>doGetPixelShaderSource</name>
        <param>
          <type><ref refid="d1/dce/a04559" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/DepthPass.hpp" line="91" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="924">
        <label>castor3d::RenderTechniquePass</label>
        <link refid="df/d7b/a04903"/>
        <childnode refid="925" relation="public-inheritance">
        </childnode>
      </node>
      <node id="927">
        <label>Named</label>
      </node>
      <node id="925">
        <label>castor3d::SceneRenderPass</label>
        <link refid="d1/d48/a04575"/>
        <childnode refid="926" relation="public-inheritance">
        </childnode>
        <childnode refid="927" relation="public-inheritance">
        </childnode>
      </node>
      <node id="926">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="923">
        <label>castor3d::DepthPass</label>
        <link refid="d2/d5e/a04363"/>
        <childnode refid="924" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="944">
        <label>castor3d::RenderQueue</label>
        <link refid="d2/de5/a04599"/>
        <childnode refid="945" relation="public-inheritance">
        </childnode>
      </node>
      <node id="941">
        <label>castor3d::SceneCuller</label>
        <link refid="dc/d2d/a04211"/>
      </node>
      <node id="940">
        <label>castor3d::RenderSystem</label>
        <link refid="d6/d55/a04603"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="957">
        <label>castor3d::TextureUnit</label>
        <link refid="d8/dd7/a02643"/>
        <childnode refid="958" relation="public-inheritance">
        </childnode>
      </node>
      <node id="960">
        <label>std::map&lt; castor::String, AnimationPtr &gt;</label>
        <childnode refid="936" relation="template-instance">
          <edgelabel>&lt; castor::String, AnimationPtr &gt;</edgelabel>
        </childnode>
      </node>
      <node id="937">
        <label>K</label>
      </node>
      <node id="938">
        <label>T</label>
      </node>
      <node id="966">
        <label>castor3d::Camera</label>
        <link refid="d0/dcf/a05131"/>
        <childnode refid="967" relation="public-inheritance">
        </childnode>
      </node>
      <node id="969">
        <label>castor3d::SceneNode</label>
        <link refid="d8/dd0/a05235"/>
        <childnode refid="970" relation="public-inheritance">
        </childnode>
        <childnode refid="971" relation="public-inheritance">
        </childnode>
        <childnode refid="932" relation="public-inheritance">
        </childnode>
      </node>
      <node id="963">
        <label>castor3d::SsaoConfig</label>
        <link refid="d6/d12/a04691"/>
      </node>
      <node id="956">
        <label>castor3d::VoxelizerUbo</label>
        <link refid="d6/df6/a05611"/>
      </node>
      <node id="951">
        <label>castor3d::GBufferT&lt; LpvTexture &gt;</label>
        <link refid="de/d93/a04235"/>
        <childnode refid="952" relation="private-inheritance">
        </childnode>
        <childnode refid="953" relation="usage">
          <edgelabel>m_engine</edgelabel>
        </childnode>
        <childnode refid="955" relation="template-instance">
          <edgelabel>&lt; LpvTexture &gt;</edgelabel>
        </childnode>
      </node>
      <node id="971">
        <label>castor::OwnedBy&lt; Scene &gt;</label>
      </node>
      <node id="945">
        <label>castor::OwnedBy&lt; SceneRenderPass &gt;</label>
      </node>
      <node id="936">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="937" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="938" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="935">
        <label>castor3d::UniformBufferOffsetT&lt; DataT &gt;</label>
        <link refid="d2/dd2/a02279"/>
      </node>
      <node id="970">
        <label>std::enable_shared_from_this&lt; SceneNode &gt;</label>
      </node>
      <node id="972">
        <label>castor3d::LayeredLpvGridConfigUbo</label>
        <link refid="d3/dd4/a05455"/>
        <childnode refid="947" relation="usage">
          <edgelabel>LayeredLpvGridData</edgelabel>
          <edgelabel>LayeredLpvConfig</edgelabel>
        </childnode>
      </node>
      <node id="929">
        <label>castor3d::RenderTechniquePass</label>
        <link refid="df/d7b/a04903"/>
        <childnode refid="930" relation="public-inheritance">
        </childnode>
        <childnode refid="946" relation="usage">
          <edgelabel>m_lpvConfigUbo</edgelabel>
        </childnode>
        <childnode refid="949" relation="usage">
          <edgelabel>m_sceneNode</edgelabel>
        </childnode>
        <childnode refid="950" relation="usage">
          <edgelabel>m_lpvResult</edgelabel>
        </childnode>
        <childnode refid="956" relation="usage">
          <edgelabel>m_vctConfigUbo</edgelabel>
        </childnode>
        <childnode refid="957" relation="usage">
          <edgelabel>m_vctFirstBounce</edgelabel>
          <edgelabel>m_vctSecondaryBounce</edgelabel>
        </childnode>
        <childnode refid="963" relation="usage">
          <edgelabel>m_ssaoConfig</edgelabel>
        </childnode>
        <childnode refid="964" relation="usage">
          <edgelabel>m_scene</edgelabel>
        </childnode>
        <childnode refid="966" relation="usage">
          <edgelabel>m_camera</edgelabel>
        </childnode>
        <childnode refid="972" relation="usage">
          <edgelabel>m_llpvConfigUbo</edgelabel>
        </childnode>
      </node>
      <node id="967">
        <label>castor3d::MovableObject</label>
        <link refid="dc/d66/a05171"/>
        <childnode refid="968" relation="public-inheritance">
        </childnode>
        <childnode refid="932" relation="public-inheritance">
        </childnode>
        <childnode refid="969" relation="usage">
          <edgelabel>m_sceneNode</edgelabel>
        </childnode>
        <childnode refid="964" relation="usage">
          <edgelabel>m_scene</edgelabel>
        </childnode>
      </node>
      <node id="932">
        <label>Named</label>
      </node>
      <node id="934">
        <label>castor3d::UniformBufferOffsetT&lt; castor3d::ModelInstancesUboConfiguration &gt;</label>
        <link refid="d2/dd2/a02279"/>
        <childnode refid="935" relation="template-instance">
          <edgelabel>&lt; castor3d::ModelInstancesUboConfiguration &gt;</edgelabel>
        </childnode>
      </node>
      <node id="958">
        <label>castor3d::AnimableT&lt; Engine &gt;</label>
        <link refid="de/d0a/a02015"/>
        <childnode refid="959" relation="public-inheritance">
        </childnode>
        <childnode refid="960" relation="usage">
          <edgelabel>m_animations</edgelabel>
        </childnode>
        <childnode refid="961" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="959">
        <label>castor::OwnedBy&lt; Engine  &gt;</label>
      </node>
      <node id="954">
        <label>castor::Unique&lt; Engine &gt;</label>
      </node>
      <node id="946">
        <label>castor3d::LpvGridConfigUbo</label>
        <link refid="da/d34/a05463"/>
        <childnode refid="947" relation="usage">
          <edgelabel>LpvGridConfig</edgelabel>
          <edgelabel>LpvGridData</edgelabel>
        </childnode>
      </node>
      <node id="930">
        <label>castor3d::SceneRenderPass</label>
        <link refid="d1/d48/a04575"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
        <childnode refid="932" relation="public-inheritance">
        </childnode>
        <childnode refid="933" relation="usage">
          <edgelabel>m_modelsInstances</edgelabel>
        </childnode>
        <childnode refid="939" relation="usage">
          <edgelabel>m_sceneUbo</edgelabel>
        </childnode>
        <childnode refid="940" relation="usage">
          <edgelabel>m_renderSystem</edgelabel>
        </childnode>
        <childnode refid="941" relation="usage">
          <edgelabel>m_culler</edgelabel>
        </childnode>
        <childnode refid="942" relation="usage">
          <edgelabel>m_timer</edgelabel>
        </childnode>
        <childnode refid="943" relation="usage">
          <edgelabel>m_matrixUbo</edgelabel>
        </childnode>
        <childnode refid="944" relation="usage">
          <edgelabel>m_renderQueue</edgelabel>
        </childnode>
      </node>
      <node id="948">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="939">
        <label>castor3d::SceneUbo</label>
        <link refid="d0/d2f/a05507"/>
      </node>
      <node id="961">
        <label>castor3d::AnimableT&lt; AnimableHanlerT &gt;</label>
        <link refid="de/d0a/a02015"/>
        <childnode refid="962" relation="public-inheritance">
        </childnode>
        <childnode refid="960" relation="usage">
          <edgelabel>m_animations</edgelabel>
        </childnode>
      </node>
      <node id="965">
        <label>std::enable_shared_from_this&lt; Scene &gt;</label>
      </node>
      <node id="968">
        <label>Animable</label>
        <link refid="de/d0a/a02015"/>
        <childnode refid="962" relation="public-inheritance">
        </childnode>
        <childnode refid="960" relation="usage">
          <edgelabel>m_animations</edgelabel>
        </childnode>
      </node>
      <node id="942">
        <label>castor3d::RenderPassTimer</label>
        <link refid="d7/db9/a04591"/>
        <childnode refid="932" relation="public-inheritance">
        </childnode>
      </node>
      <node id="962">
        <label>castor::OwnedBy&lt; AnimableHanlerT &gt;</label>
      </node>
      <node id="931">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="950">
        <label>castor3d::LightVolumePassResult</label>
        <link refid="dc/d23/a04275"/>
        <childnode refid="951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="953">
        <label>castor3d::Engine</label>
        <link refid="d0/d7c/a02499"/>
        <childnode refid="954" relation="public-inheritance">
        </childnode>
      </node>
      <node id="955">
        <label>castor3d::GBufferT&lt; TextureEnumT &gt;</label>
        <link refid="de/d93/a04235"/>
        <childnode refid="952" relation="private-inheritance">
        </childnode>
        <childnode refid="953" relation="usage">
          <edgelabel>m_engine</edgelabel>
        </childnode>
      </node>
      <node id="952">
        <label>castor3d::GBufferBase</label>
        <link refid="d7/da1/a04231"/>
        <childnode refid="932" relation="public-inheritance">
        </childnode>
      </node>
      <node id="928">
        <label>castor3d::DepthPass</label>
        <link refid="d2/d5e/a04363"/>
        <childnode refid="929" relation="public-inheritance">
        </childnode>
      </node>
      <node id="964">
        <label>castor3d::Scene</label>
        <link refid="d7/d00/a05223"/>
        <childnode refid="965" relation="public-inheritance">
        </childnode>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
        <childnode refid="932" relation="public-inheritance">
        </childnode>
      </node>
      <node id="943">
        <label>castor3d::MatrixUbo</label>
        <link refid="d9/dae/a05475"/>
      </node>
      <node id="933">
        <label>std::map&lt; size_t, castor3d::UniformBufferOffsetT&lt; castor3d::ModelInstancesUboConfiguration &gt; &gt;</label>
        <childnode refid="934" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="936" relation="template-instance">
          <edgelabel>&lt; size_t, castor3d::UniformBufferOffsetT&lt; castor3d::ModelInstancesUboConfiguration &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="947">
        <label>std::string</label>
        <childnode refid="948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="949">
        <label>castor3d::SceneRenderNode</label>
        <link refid="de/dc3/a04319"/>
      </node>
    </collaborationgraph>
    <location file="Render/Passes/DepthPass.hpp" line="15" column="1" bodyfile="Render/Passes/DepthPass.hpp" bodystart="13" bodyend="96"/>
    <listofallmembers>
      <member refid="df/d7b/a04903_1a4c9d269118ce29a21fdb17eabd6e9070" prot="public" virt="virtual"><scope>castor3d::DepthPass</scope><name>accept</name></member>
      <member refid="d1/d48/a04575_1ac5627bf8072801b914f5a7a8fde7c4ef" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>cleanup</name></member>
      <member refid="d1/d48/a04575_1a7534bc2c8e7a5e8812685d23cf92da18" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>createBillboardNode</name></member>
      <member refid="d1/d48/a04575_1a85a295a43ea151d07bbb59a983fc0a9b" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>createBlendState</name></member>
      <member refid="d1/d48/a04575_1aef15f688cd35f6b8b50970e7b5f57d1b" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>createMorphingNode</name></member>
      <member refid="d1/d48/a04575_1a1f6309ff1990fcf752d1b1fc4162707e" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>createSkinningNode</name></member>
      <member refid="d1/d48/a04575_1ad06a7b233133bd72a5f40a6309bbb636" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>createStaticNode</name></member>
      <member refid="d2/d5e/a04363_1a67328b933fc991486b9a6686a07a38ff" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>DepthPass</name></member>
      <member refid="d1/d48/a04575_1acfc7eaded98ff40bb227979eb6f56274" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>DistanceSortedNodeMap</name></member>
      <member refid="d2/d5e/a04363_1a999abac907c115eed3d3a7ecf028f247" prot="protected" virt="virtual"><scope>castor3d::DepthPass</scope><name>doCleanup</name></member>
      <member refid="d1/d48/a04575_1a5ad44dd6ff6eff2ff3ef28ffce50790d" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doCopyNodesBones</name></member>
      <member refid="d1/d48/a04575_1af6a1dcd4de30a16371ff2801ae10c23a" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doCopyNodesBones</name></member>
      <member refid="d1/d48/a04575_1ac7e8cea34069461a25c5dce78ad4133d" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doCopyNodesMatrices</name></member>
      <member refid="d1/d48/a04575_1abedc9556fe34264878d1175e4c5dd76d" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doCopyNodesMatrices</name></member>
      <member refid="d1/d48/a04575_1a8ea69998caa9d7ccc3c86d5fd5b4f0f0" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doCopyNodesMatrices</name></member>
      <member refid="d1/d48/a04575_1a6bce0687b325c3413c94465655611170" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doCopyNodesMatrices</name></member>
      <member refid="d2/d5e/a04363_1a0d7cf9c74270355b7467425d9186a956" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doCreateBlendState</name></member>
      <member refid="d2/d5e/a04363_1a513277558ebdc089688e29007ca9f225" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doCreateDepthStencilState</name></member>
      <member refid="d1/d48/a04575_1ab989a2da21f70c26e1fed17823e39af6" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doCreatePassRenderNode</name></member>
      <member refid="d1/d48/a04575_1a9bf6b45209c8b79cccfa152d51b3b144" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doCreateSceneRenderNode</name></member>
      <member refid="d2/d5e/a04363_1a61622e28cc6d91dd34f7f947602b8501" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doCreateTextureBindings</name></member>
      <member refid="df/d7b/a04903_1aaf8bc2adc1ec263f60686e8cbd6705c8" prot="protected" virt="virtual"><scope>castor3d::DepthPass</scope><name>doCreateUboBindings</name></member>
      <member refid="d2/d5e/a04363_1aa51740bafb4b696c60f80d0a42351c40" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doFillTextureDescriptor</name></member>
      <member refid="d2/d5e/a04363_1a428195fec76d0ec5532ff4824bb24724" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doFillTextureDescriptor</name></member>
      <member refid="d1/d48/a04575_1adc154d1a476245fee3c7a997e51018ae" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doGetBackPipelines</name></member>
      <member refid="d1/d48/a04575_1a31fa7bcde80cfbdcb6acce0810df198e" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doGetBackPipelines</name></member>
      <member refid="d1/d48/a04575_1a1f4d8c2e2d67d3686c1059e189ab2d95" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doGetFrontPipelines</name></member>
      <member refid="d1/d48/a04575_1ab11482c4f9eb0c4a7d91af6681bc558d" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doGetFrontPipelines</name></member>
      <member refid="d2/d5e/a04363_1afa4bb01983c2174c9cda1c7e6d4831f2" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doGetGeometryShaderSource</name></member>
      <member refid="d2/d5e/a04363_1add326e905b9773d946acd60d6948180b" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doGetPbrMRPixelShaderSource</name></member>
      <member refid="d2/d5e/a04363_1a6483028f3fbb597d1e832410319a512b" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doGetPbrSGPixelShaderSource</name></member>
      <member refid="d2/d5e/a04363_1a4ea17c25e37c31909d4fecda5e701772" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doGetPhongPixelShaderSource</name></member>
      <member refid="d2/d5e/a04363_1a28c85d122cdbfdd6fd375092e0f5f725" prot="private" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doGetPixelShaderSource</name></member>
      <member refid="d1/d48/a04575_1a4b807ea9d74d5f1ccaba4b29e78c8085" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doGetProgram</name></member>
      <member refid="d2/d5e/a04363_1a07dff404727af3edf2acfbb5cf961c59" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doGetVertexShaderSource</name></member>
      <member refid="d1/d48/a04575_1a01dba0c138042186e5976fd73e716fc5" prot="protected" virt="virtual"><scope>castor3d::DepthPass</scope><name>doPrepareBackPipeline</name></member>
      <member refid="d1/d48/a04575_1ab5eabfab3b395ee4a59d0302b0e245d1" prot="protected" virt="virtual"><scope>castor3d::DepthPass</scope><name>doPrepareFrontPipeline</name></member>
      <member refid="d1/d48/a04575_1a1f6449a6facd708b63468e0cf2395133" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1a8daee9fd51dd6295fcfde8f29d9b0215" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1accb2dd43ffa84bee0d475a1f39135d2a" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1a42af41141686d6979c7f14d427b2b978" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1a8130e8bcfe91063cf2589979d4381e73" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1ab524ba33c1aaec1b9f95ab64b8efaab5" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1a8e02e08b5f5e4065d583926ae5a2b313" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1ae907440fd9c2237ba4bb5a4dec97a898" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1ab0c1a3251b5af55708ad6b6a13307fa6" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1acc81b152f8a75a0006f933aa9ad1c35b" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1ad95120cc3a5f5ae2566518fbfd1e96b1" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1abcc866dd44044031e30ed73d47357ed0" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d1/d48/a04575_1a7b644b338ea6bbbffec7ed1cf4936a38" prot="protected" virt="virtual"><scope>castor3d::DepthPass</scope><name>doUpdate</name></member>
      <member refid="d2/d5e/a04363_1a0837a3375a7aa4aed87b01c4539367e7" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doUpdateFlags</name></member>
      <member refid="d2/d5e/a04363_1a10125d57aeeb01c400959dbf826326fa" prot="private" virt="virtual"><scope>castor3d::DepthPass</scope><name>doUpdatePipeline</name></member>
      <member refid="d1/d48/a04575_1a8dd34d9bcfcbf1cc93c73d633e26b375" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>forceTwoSided</name></member>
      <member refid="d1/d48/a04575_1abcf02ee3b5e0f4dbfb0c9b5cf22a3245" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getCommandBuffer</name></member>
      <member refid="d1/d48/a04575_1a9ec598bacebe135008057204f4b7e498" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getCuller</name></member>
      <member refid="d1/d48/a04575_1ab06deeaf325f047f97f0fdd046b1db9a" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getCuller</name></member>
      <member refid="d1/d48/a04575_1ad17ff2b38eb4b3323973a04816eca7a9" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getGeometryShaderSource</name></member>
      <member refid="d1/d48/a04575_1ae964287f47d4145776448a31cb9a6ccd" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getInstanceMult</name></member>
      <member refid="d1/d48/a04575_1a283dc741d44f730b657f153ee8c0b21d" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getMatrixUbo</name></member>
      <member refid="d1/d48/a04575_1a3f2e595dabdcea8b9668d591a5e26879" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getPipelineBack</name></member>
      <member refid="d1/d48/a04575_1a9ee5e22f4b636f7d1eb3dc7993cc23a4" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getPipelineFront</name></member>
      <member refid="d1/d48/a04575_1a6f6289ae6913449d6cb3cb7a1ae64976" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getPipelinesCount</name></member>
      <member refid="d1/d48/a04575_1a32ad22d6a16a83d89a3a888599bf19ed" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getPixelShaderSource</name></member>
      <member refid="d1/d48/a04575_1af9a616bf4b5e1bf848d4a7783cff5dcf" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getRenderPass</name></member>
      <member refid="d1/d48/a04575_1a9ce55bbe9de899304219df9a29869ac2" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getSceneUbo</name></member>
      <member refid="d1/d48/a04575_1ad5bf1e846317bf671e0cac4118922226" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getSceneUbo</name></member>
      <member refid="df/d7b/a04903_1a7fa2f3526158ff47ac18cf2fa563edb8" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getSemaphore</name></member>
      <member refid="d2/d5e/a04363_1aa2c92873b5dc657476e3a5950ebc55cc" prot="public" virt="virtual"><scope>castor3d::DepthPass</scope><name>getTexturesMask</name></member>
      <member refid="d1/d48/a04575_1ab21b006fe9daf0ae6172c17f076c5f85" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getTimer</name></member>
      <member refid="d1/d48/a04575_1a70c70fcde770cfa3efeaba683a11cbe4" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getTimer</name></member>
      <member refid="d1/d48/a04575_1a2d99705d33fb3391c2556e0c484d6ab8" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>getVertexShaderSource</name></member>
      <member refid="d1/d48/a04575_1afaa168a458700f72a3365a1f4c550c55" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>hasNodes</name></member>
      <member refid="df/d7b/a04903_1a7087dd96e88ccce71594bda01521d49d" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialise</name></member>
      <member refid="df/d7b/a04903_1a5d25691aefc33b304bc4a10b7fe5d474" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialise</name></member>
      <member refid="d1/d48/a04575_1a659c1c103b9db5a461c77a6c0417be1b" prot="public" virt="non-virtual" ambiguityscope="castor3d::SceneRenderPass::"><scope>castor3d::DepthPass</scope><name>initialise</name></member>
      <member refid="d1/d48/a04575_1aa19a90dd2842009db8b987e205272135" prot="public" virt="non-virtual" ambiguityscope="castor3d::SceneRenderPass::"><scope>castor3d::DepthPass</scope><name>initialise</name></member>
      <member refid="d1/d48/a04575_1a3206b3416f9f404253530cd6a8bcf39d" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d1/d48/a04575_1a19fdc14553d98acdae5243a15a009b0e" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d1/d48/a04575_1a9f7a16a74d188c71932474d2dfabd496" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d1/d48/a04575_1a6293db061efb0ed860e247a10373b25b" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d1/d48/a04575_1a244414e5446292f40316010853b25a85" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d1/d48/a04575_1a80f92f9b5d2ac1396870e4a19d88baaa" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d1/d48/a04575_1a41e1f148667ede6bf4a4b15b63edbd09" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d1/d48/a04575_1a1566db0372f6d6a3db34efc6c469cd26" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d1/d48/a04575_1a6eb27cf641fd25efae02250beae221ac" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d1/d48/a04575_1a8e22a05fc6dbb5c7a99030c0a688cc15" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d1/d48/a04575_1a174e24b5897213c0dda6e3fcfb4d90d5" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d1/d48/a04575_1ab6ccf8272797a7df98ad6dc8c7c43706" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d1/d48/a04575_1a912328721eae90138599880d76a309ae" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>isDirty</name></member>
      <member refid="d1/d48/a04575_1a4bac800c4178729d7e6c2324eb126fd6" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>isOrderIndependent</name></member>
      <member refid="df/d7b/a04903_1a561fc478bc6c7a8929c0ccd8357d0ac7" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_camera</name></member>
      <member refid="d1/d48/a04575_1aa7fc94ef9d99bc777795fb27941d7c65" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_category</name></member>
      <member refid="d1/d48/a04575_1a16c632e89f0628620bcf01a70d520b2d" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_culler</name></member>
      <member refid="df/d7b/a04903_1a269923719047d7da20f4a6e264461bae" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_environment</name></member>
      <member refid="df/d7b/a04903_1ad3107dc97f3d953d13c47f44b59edbd0" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_finished</name></member>
      <member refid="d1/d48/a04575_1aa9df6fd78c7eb9ca9b59c10574776085" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_forceTwoSided</name></member>
      <member refid="d2/d5e/a04363_1aa8ac4040ab1449a9582ca3a3dd3233e5" prot="private" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_frameBuffer</name></member>
      <member refid="d1/d48/a04575_1a6e274505905d565cac4f9d6743b0417d" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_index</name></member>
      <member refid="d1/d48/a04575_1afe43990c332123ca5bcaaa12e2204ff5" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_instanceMult</name></member>
      <member refid="d1/d48/a04575_1ac70af3d0c68adfc6fa7ec2f68d5b6f12" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_isDirty</name></member>
      <member refid="df/d7b/a04903_1a9b457c9f92302ebfec621d6198af2ae1" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_llpvConfigUbo</name></member>
      <member refid="df/d7b/a04903_1a4df75ae519c2c6695914fe8f9c618944" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_lpvConfigUbo</name></member>
      <member refid="df/d7b/a04903_1a0da52e609494b66e161f6cf5d0d202ce" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_lpvResult</name></member>
      <member refid="d1/d48/a04575_1a6b0f370e15e18a3a554c56b09fba85b4" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_matrixUbo</name></member>
      <member refid="d1/d48/a04575_1a927f5ac447cecf2b3419ce9501632fd7" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_mode</name></member>
      <member refid="d1/d48/a04575_1a923ae0f7686d6ef4c9a27f0799ca62c8" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_modelsInstances</name></member>
      <member refid="d2/d5e/a04363_1ad4093ebdbb917984e05f0cab891bab94" prot="private" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_nodesCommands</name></member>
      <member refid="d1/d48/a04575_1a898939bc8fc037bb32daebe391e6263b" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_oit</name></member>
      <member refid="d1/d48/a04575_1a5faf1387a50606631d9eccf95060f84a" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_ownTimer</name></member>
      <member refid="d1/d48/a04575_1a6f215acabcb9564bc85f30f8abeaba56" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_renderPass</name></member>
      <member refid="d1/d48/a04575_1a3fd80e792cc2f052add8f252b531c0e2" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_renderQueue</name></member>
      <member refid="d1/d48/a04575_1a1513ba71b682375fed01e9819105c894" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_renderSystem</name></member>
      <member refid="df/d7b/a04903_1a97ef9757bc87714bf0d7f61594a10dc1" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_scene</name></member>
      <member refid="df/d7b/a04903_1aa7a5ba8ef4a7a31a7585322ce2f4f17f" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_sceneNode</name></member>
      <member refid="d1/d48/a04575_1aa623f3557914bcc6e2e8cf058da1c5e5" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_sceneUbo</name></member>
      <member refid="d1/d48/a04575_1ab4b6ee7f462854794ed9e3fccdc5b10f" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_size</name></member>
      <member refid="df/d7b/a04903_1a13bfc94b8af871d1e1bca1268d921397" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_ssaoConfig</name></member>
      <member refid="d1/d48/a04575_1a729739080d9153cd9ce71129b909a869" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_timer</name></member>
      <member refid="df/d7b/a04903_1a2635c15545bce3cfe1f8a71698fc8286" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_vctConfigUbo</name></member>
      <member refid="df/d7b/a04903_1ad1f6e25e29d6fab2aefab5c09dacbddb" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_vctFirstBounce</name></member>
      <member refid="df/d7b/a04903_1a15a7d78a593d50789066f2ad20aa3f13" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>m_vctSecondaryBounce</name></member>
      <member refid="d1/d48/a04575_1a1944832d81c804c1db58c6ce658aa50c" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>prepareBackPipeline</name></member>
      <member refid="d1/d48/a04575_1aca7f84fa9420e1056a2254e7387c4c56" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>prepareBackPipeline</name></member>
      <member refid="d1/d48/a04575_1a8ef8352df2d2af6d596e4b8f7f013679" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>prepareFrontPipeline</name></member>
      <member refid="d1/d48/a04575_1ab2e52ba19699b996f9a24a209af5c50d" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>prepareFrontPipeline</name></member>
      <member refid="d2/d5e/a04363_1a15846a58b1705ef1244776091d40f094" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>render</name></member>
      <member refid="df/d7b/a04903_1a2babe394143a32a9b58e1e8afaf11b5c" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>RenderTechniquePass</name></member>
      <member refid="df/d7b/a04903_1a18da3e98fa3727c796c4ded91c736a9c" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>RenderTechniquePass</name></member>
      <member refid="d1/d48/a04575_1affb5828080147f1657a582841cbaca01" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>SceneRenderPass</name></member>
      <member refid="d1/d48/a04575_1ac65dc41b8e3392db21bd3cadd94754d6" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>SceneRenderPass</name></member>
      <member refid="d1/d48/a04575_1a7a964bd723f31105db6937b6c2016344" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>SceneRenderPass</name></member>
      <member refid="d1/d48/a04575_1a78ae5b7ef98084673c04980da95e359f" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>SceneRenderPass</name></member>
      <member refid="d1/d48/a04575_1adf551a42f8dec9de911b7f2ffc56b666" prot="protected" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>SceneRenderPass</name></member>
      <member refid="d2/d5e/a04363_1a34b80c98549ada2496387ba4db944fd1" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>update</name></member>
      <member refid="df/d7b/a04903_1a34b80c98549ada2496387ba4db944fd1" prot="public" virt="non-virtual" ambiguityscope="castor3d::RenderTechniquePass::"><scope>castor3d::DepthPass</scope><name>update</name></member>
      <member refid="d1/d48/a04575_1add6df2057351a89dbe243c62d6a5728a" prot="public" virt="non-virtual" ambiguityscope="castor3d::SceneRenderPass::"><scope>castor3d::DepthPass</scope><name>update</name></member>
      <member refid="d1/d48/a04575_1a49f451446a2b5cc5622aaaeda521bfbf" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>updateFlags</name></member>
      <member refid="d1/d48/a04575_1aeb30d85455e3fb74cff7074377268d80" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>updatePipeline</name></member>
      <member refid="d2/d5e/a04363_1a7404961904a0ac06b897f6f016fc3c12" prot="public" virt="non-virtual"><scope>castor3d::DepthPass</scope><name>~DepthPass</name></member>
      <member refid="d1/d48/a04575_1a8ece518761c68ec639b59e82cde459af" prot="public" virt="virtual"><scope>castor3d::DepthPass</scope><name>~SceneRenderPass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
