<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d2/dcb/a07439" kind="struct" language="C++" prot="public">
    <compoundname>castor3d::shader::ColourT</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ColourStructT&lt; ColTypeT, FlagT &gt;</basecompoundref>
    <includes local="no">GlslBaseIO.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ColTypeT</type>
      </param>
      <param>
        <type>sdw::var::Flag</type>
        <declname>FlagT</declname>
        <defname>FlagT</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/dcb/a07439_1a1945f2e6280868a0d7513314fdf383ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::shader::ColourT&lt; ColTypeT, FlagT &gt;::ColourT</definition>
        <argsstring>(sdw::ShaderWriter &amp;writer, sdw::expr::ExprPtr expr, bool enabled)</argsstring>
        <name>ColourT</name>
        <qualifiedname>castor3d::shader::ColourT::ColourT</qualifiedname>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>sdw::expr::ExprPtr</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslBaseIO.hpp" line="36" column="1" bodyfile="Castor3D/Shader/Shaders/GlslBaseIO.hpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d2/dcb/a07439_1a458bbd0cb36b958098f7b47774ba2a33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto castor3d::shader::ColourT&lt; ColTypeT, FlagT &gt;::colour</definition>
        <argsstring>() const</argsstring>
        <name>colour</name>
        <qualifiedname>castor3d::shader::ColourT::colour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslBaseIO.hpp" line="43" column="6" bodyfile="Castor3D/Shader/Shaders/GlslBaseIO.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ColourStructT&lt; ColTypeT, FlagT &gt;</label>
      </node>
      <node id="1">
        <label>castor3d::shader::ColourT&lt; ColTypeT, FlagT &gt;</label>
        <link refid="d2/dcb/a07439"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ColourStructT&lt; ColTypeT, FlagT &gt;</label>
      </node>
      <node id="1">
        <label>castor3d::shader::ColourT&lt; ColTypeT, FlagT &gt;</label>
        <link refid="d2/dcb/a07439"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Shader/Shaders/GlslBaseIO.hpp" line="33" column="1" bodyfile="Castor3D/Shader/Shaders/GlslBaseIO.hpp" bodystart="35" bodyend="44"/>
    <listofallmembers>
      <member refid="d2/dcb/a07439_1a458bbd0cb36b958098f7b47774ba2a33" prot="public" virt="non-virtual"><scope>castor3d::shader::ColourT</scope><name>colour</name></member>
      <member refid="d2/dcb/a07439_1a1945f2e6280868a0d7513314fdf383ec" prot="public" virt="non-virtual"><scope>castor3d::shader::ColourT</scope><name>ColourT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
