<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d2/db0/a09075" kind="struct" language="C++" prot="public">
    <compoundname>castor::TraceLoggerStreambufTraitsT</compoundname>
    <includes local="no">LoggerStreambuf.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename CharType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d2/db0/a09075_1a5c9c1543818f1d0013ef7ee133d2545b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor::TraceLoggerStreambufTraitsT&lt; CharType &gt;::log</definition>
        <argsstring>(LoggerInstance &amp;logger, std::basic_string&lt; CharType &gt; const &amp;text)</argsstring>
        <name>log</name>
        <qualifiedname>castor::TraceLoggerStreambufTraitsT::log</qualifiedname>
        <param>
          <type><ref refid="d9/d93/a09063" kindref="compound">LoggerInstance</ref> &amp;</type>
          <declname>logger</declname>
        </param>
        <param>
          <type>std::basic_string&lt; CharType &gt; const &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Log/LoggerStreambuf.hpp" line="134" column="13" bodyfile="CastorUtils/Log/LoggerStreambuf.hpp" bodystart="134" bodyend="138"/>
        <references refid="d9/d93/a09063_1af1210bf21788ee77ae5c77f616311be0" compoundref="d8/dd8/a02108" startline="88" endline="91">castor::LoggerInstance::lockedLogTrace</references>
      </memberdef>
      <memberdef kind="function" id="d2/db0/a09075_1abd4da368f127b99bd617f589b0e8bd99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor::TraceLoggerStreambufTraitsT&lt; CharType &gt;::logNoLF</definition>
        <argsstring>(LoggerInstance &amp;logger, std::basic_string&lt; CharType &gt; const &amp;text)</argsstring>
        <name>logNoLF</name>
        <qualifiedname>castor::TraceLoggerStreambufTraitsT::logNoLF</qualifiedname>
        <param>
          <type><ref refid="d9/d93/a09063" kindref="compound">LoggerInstance</ref> &amp;</type>
          <declname>logger</declname>
        </param>
        <param>
          <type>std::basic_string&lt; CharType &gt; const &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Log/LoggerStreambuf.hpp" line="139" column="13" bodyfile="CastorUtils/Log/LoggerStreambuf.hpp" bodystart="139" bodyend="143"/>
        <references refid="d9/d93/a09063_1a8dc180a32872562f42b9a8010094238d" compoundref="d8/dd8/a02108" startline="101" endline="104">castor::LoggerInstance::lockedLogTraceNoLF</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Traits de streambuf pour du log de trace. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CastorUtils/Log/LoggerStreambuf.hpp" line="132" column="1" bodyfile="CastorUtils/Log/LoggerStreambuf.hpp" bodystart="133" bodyend="144"/>
    <listofallmembers>
      <member refid="d2/db0/a09075_1a5c9c1543818f1d0013ef7ee133d2545b" prot="public" virt="non-virtual"><scope>castor::TraceLoggerStreambufTraitsT</scope><name>log</name></member>
      <member refid="d2/db0/a09075_1abd4da368f127b99bd617f589b0e8bd99" prot="public" virt="non-virtual"><scope>castor::TraceLoggerStreambufTraitsT</scope><name>logNoLF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
