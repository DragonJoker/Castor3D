<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="de/dc1/a05771" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::DoubleBufferedResourceT</compoundname>
    <basecompoundref refid="d6/da8/a08227" prot="public" virt="non-virtual">castor::OwnedBy&lt; Engine &gt;</basecompoundref>
    <derivedcompoundref refid="d6/d64/a05779" prot="public" virt="non-virtual">castor3d::FontTexture</derivedcompoundref>
    <includes local="no">FontTexture.hpp</includes>
    <innerclass refid="d2/d2d/a05775" prot="public">castor3d::DoubleBufferedResourceT::Resource</innerclass>
    <templateparamlist>
      <param>
        <type>typename ResourceT</type>
      </param>
      <param>
        <type>template&lt; typename ResT &gt; typename</type>
        <declname>PointerT</declname>
        <defname>PointerT</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="de/dc1/a05771_1a1770714a87ef49a80d35acd020c6465b" prot="public" static="no">
        <type>PointerT&lt; ResourceT &gt;</type>
        <definition>using castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::ResourcePtrT =  PointerT&lt; ResourceT &gt;</definition>
        <argsstring></argsstring>
        <name>ResourcePtrT</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::ResourcePtrT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="31" column="1" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/dc1/a05771_1a8545a5bc75c8472410bf444b4c044d8e" prot="public" static="no">
        <type><ref refid="d2/dd2/a02279_1a171f0ae06cbbe361277eaab9ed92ec74" kindref="member">castor::Function</ref>&lt; void(<ref refid="de/dc1/a05771" kindref="compound">DoubleBufferedResourceT</ref> const &amp;) &gt;</type>
        <definition>using castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::OnChangedFunction =  castor::Function&lt; void( DoubleBufferedResourceT const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnChangedFunction</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::OnChangedFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="32" column="1" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/dc1/a05771_1a379faa0b85c1dcd6d993addcb61796f6" prot="public" static="no">
        <type><ref refid="dc/d79/a08267" kindref="compound">castor::SignalT</ref>&lt; <ref refid="de/dc1/a05771_1a8545a5bc75c8472410bf444b4c044d8e" kindref="member">OnChangedFunction</ref> &gt;</type>
        <definition>using castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::OnChanged =  castor::SignalT&lt; OnChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnChanged</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::OnChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="33" column="1" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="de/dc1/a05771_1a0d6b1cc8974174dbc826fcb630464543" prot="public" static="no" mutable="no">
        <type><ref refid="de/dc1/a05771_1a379faa0b85c1dcd6d993addcb61796f6" kindref="member">OnChanged</ref></type>
        <definition>OnChanged castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::onResourceChanged</definition>
        <argsstring></argsstring>
        <name>onResourceChanged</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::onResourceChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal utilisé pour notifier les clients que cette ressource a changé. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="56" column="11" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="56" bodyend="-1"/>
        <referencedby refid="de/dc1/a05771_1a6742b419c96445fd002c58b8fb1d9eb7" compoundref="d7/d92/a00887" startline="109" endline="138">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doRefresh</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="de/dc1/a05771_1aa05c6ea0056c6b31a99b52f994adc7dc" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/d2d/a05775" kindref="compound">Resource</ref></type>
        <definition>Resource castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_back</definition>
        <argsstring></argsstring>
        <name>m_back</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::m_back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="74" column="10" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="74" bodyend="-1"/>
        <referencedby refid="de/dc1/a05771_1a8a21fcfe1a2dd8347790c92a201523e5" compoundref="d7/d92/a00887" startline="98" endline="102">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doCleanup</referencedby>
        <referencedby refid="de/dc1/a05771_1a4ef7841bfce55d91a9cf72d942bd03dd" compoundref="d7/d92/a00887" startline="86" endline="91">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doInitialise</referencedby>
        <referencedby refid="de/dc1/a05771_1a6742b419c96445fd002c58b8fb1d9eb7" compoundref="d7/d92/a00887" startline="109" endline="138">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doRefresh</referencedby>
      </memberdef>
      <memberdef kind="variable" id="de/dc1/a05771_1a4561754342165e1742533554b58f4bb4" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/d2d/a05775" kindref="compound">Resource</ref></type>
        <definition>Resource castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_front</definition>
        <argsstring></argsstring>
        <name>m_front</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::m_front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="75" column="10" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="75" bodyend="-1"/>
        <referencedby refid="de/dc1/a05771_1a8a21fcfe1a2dd8347790c92a201523e5" compoundref="d7/d92/a00887" startline="98" endline="102">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doCleanup</referencedby>
        <referencedby refid="de/dc1/a05771_1a78ec7afb442cf1f020225822e6fdaada" compoundref="d7/d92/a00887" startline="140" endline="143">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doGetResource</referencedby>
        <referencedby refid="de/dc1/a05771_1a4ef7841bfce55d91a9cf72d942bd03dd" compoundref="d7/d92/a00887" startline="86" endline="91">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doInitialise</referencedby>
        <referencedby refid="de/dc1/a05771_1a6742b419c96445fd002c58b8fb1d9eb7" compoundref="d7/d92/a00887" startline="109" endline="138">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doRefresh</referencedby>
        <referencedby refid="de/dc1/a05771_1a48f484f145676c4e088c5982d0a2d3bd" compoundref="d7/d92/a00887" startline="68" endline="71">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::getResource</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/dc1/a05771_1a1ca84eec76b829bcd675a81a6c25a2f8" prot="private" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_first</definition>
        <argsstring></argsstring>
        <name>m_first</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::m_first</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="146" column="18" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="146" bodyend="146"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="de/dc1/a05771_1a63f8c2530eb43241d3a437aab7c06f88" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::DoubleBufferedResourceT</definition>
        <argsstring>(Engine &amp;parent, ResourcePtrT back, ResourcePtrT front)</argsstring>
        <name>DoubleBufferedResourceT</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::DoubleBufferedResourceT</qualifiedname>
        <param>
          <type><ref refid="d8/d4f/a03703" kindref="compound">Engine</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="de/dc1/a05771_1a1770714a87ef49a80d35acd020c6465b" kindref="member">ResourcePtrT</ref></type>
          <declname>back</declname>
        </param>
        <param>
          <type><ref refid="de/dc1/a05771_1a1770714a87ef49a80d35acd020c6465b" kindref="member">ResourcePtrT</ref></type>
          <declname>front</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="42" column="1" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="42" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1a21ee2890d4ae4455e4c72ca9381d7c2a" prot="protected" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>virtual C3D_API castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::~DoubleBufferedResourceT</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~DoubleBufferedResourceT</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::~DoubleBufferedResourceT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="51" column="17"/>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1a4ef7841bfce55d91a9cf72d942bd03dd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doInitialise</definition>
        <argsstring>(RenderDevice const &amp;device, QueueData const &amp;queueData)</argsstring>
        <name>doInitialise</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::doInitialise</qualifiedname>
        <param>
          <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d3/d0e/a06399" kindref="compound">QueueData</ref> const &amp;</type>
          <declname>queueData</declname>
        </param>
        <briefdescription>
<para>Initialise la texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>Le device GPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">queueData</parametername>
</parameternamelist>
<parameterdescription>
<para>La queue recevant les commandes GPU. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="86" column="6" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="86" bodyend="91"/>
        <references refid="de/dc1/a05771_1aa05c6ea0056c6b31a99b52f994adc7dc" compoundref="d7/d92/a00887" startline="74">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_back</references>
        <references refid="de/dc1/a05771_1a4561754342165e1742533554b58f4bb4" compoundref="d7/d92/a00887" startline="75">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_front</references>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1a8a21fcfe1a2dd8347790c92a201523e5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doCleanup</definition>
        <argsstring>()</argsstring>
        <name>doCleanup</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::doCleanup</qualifiedname>
        <briefdescription>
<para>Nettoie la texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="98" column="6" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="98" bodyend="102"/>
        <references refid="de/dc1/a05771_1aa05c6ea0056c6b31a99b52f994adc7dc" compoundref="d7/d92/a00887" startline="74">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_back</references>
        <references refid="de/dc1/a05771_1a4561754342165e1742533554b58f4bb4" compoundref="d7/d92/a00887" startline="75">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_front</references>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1a6742b419c96445fd002c58b8fb1d9eb7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doRefresh</definition>
        <argsstring>(bool clean, bool front)</argsstring>
        <name>doRefresh</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::doRefresh</qualifiedname>
        <param>
          <type>bool</type>
          <declname>clean</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>front</declname>
        </param>
        <briefdescription>
<para>Ordonne les évènements pour rafraîchir la ressource. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="109" column="6" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="109" bodyend="138"/>
        <references refid="d9/dba/a02278_1a277103e4579517a41bd606b5d0870de9">castor3d::getEngine</references>
        <references refid="de/dc1/a05771_1aa05c6ea0056c6b31a99b52f994adc7dc" compoundref="d7/d92/a00887" startline="74">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_back</references>
        <references refid="de/dc1/a05771_1a4561754342165e1742533554b58f4bb4" compoundref="d7/d92/a00887" startline="75">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_front</references>
        <references refid="de/dc1/a05771_1a0d6b1cc8974174dbc826fcb630464543" compoundref="d7/d92/a00887" startline="56">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::onResourceChanged</references>
        <references refid="d9/dba/a02278_1a318f603f5a12665b7b15f4e4b6f985c7">castor3d::postPreRenderGpuEvent</references>
        <references refid="d9/dba/a02278_1a01696e192b19128be49ec3d41f3582d6">castor3d::postQueueRenderCpuEvent</references>
        <referencedby refid="de/dc1/a05771_1a7853caa76c1f94e868e5d1f190f7d01b" compoundref="d7/d92/a00887" startline="63" endline="66">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1a78ec7afb442cf1f020225822e6fdaada" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d2d/a05775" kindref="compound">Resource</ref> &amp;</type>
        <definition>Resource &amp; castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doGetResource</definition>
        <argsstring>()</argsstring>
        <name>doGetResource</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::doGetResource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="140" column="11" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="140" bodyend="143"/>
        <references refid="de/dc1/a05771_1a4561754342165e1742533554b58f4bb4" compoundref="d7/d92/a00887" startline="75">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_front</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="de/dc1/a05771_1a7853caa76c1f94e868e5d1f190f7d01b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::update</definition>
        <argsstring>(bool clean)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::update</qualifiedname>
        <param>
          <type>bool</type>
          <declname>clean</declname>
        </param>
        <briefdescription>
<para>Met à jour la ressource. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="63" column="6" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="63" bodyend="66"/>
        <references refid="de/dc1/a05771_1a6742b419c96445fd002c58b8fb1d9eb7" compoundref="d7/d92/a00887" startline="109" endline="138">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::doRefresh</references>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1a48f484f145676c4e088c5982d0a2d3bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d2d/a05775" kindref="compound">Resource</ref> const &amp;</type>
        <definition>Resource const  &amp; castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::getResource</definition>
        <argsstring>() const</argsstring>
        <name>getResource</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::getResource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="68" column="24" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="68" bodyend="71"/>
        <references refid="de/dc1/a05771_1a4561754342165e1742533554b58f4bb4" compoundref="d7/d92/a00887" startline="75">castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::m_front</references>
        <referencedby refid="d6/d64/a05779_1aa0fbe332ab4c9592e10cf390a9803e69" compoundref="d7/d92/a00887" startline="247" endline="250">castor3d::FontTexture::getTexture</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="de/dc1/a05771_1a855a172263421e190736fac7e88ac9c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::initialiseResource</definition>
        <argsstring>(Resource &amp;resource, RenderDevice const &amp;device, QueueData const &amp;queueData)=0</argsstring>
        <name>initialiseResource</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::initialiseResource</qualifiedname>
        <reimplementedby refid="d6/d64/a05779_1afd5ba1fc2f5fbfab763aa8ec0bd4d0be">initialiseResource</reimplementedby>
        <param>
          <type><ref refid="d2/d2d/a05775" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <param>
          <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d3/d0e/a06399" kindref="compound">QueueData</ref> const &amp;</type>
          <declname>queueData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="148" column="22"/>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1ae6939a52ad38f680b5a565089d21ba9c" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::cleanupResource</definition>
        <argsstring>(Resource &amp;resource)=0</argsstring>
        <name>cleanupResource</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::cleanupResource</qualifiedname>
        <reimplementedby refid="d6/d64/a05779_1a403705e739c340e5e5d68529facbbc2d">cleanupResource</reimplementedby>
        <param>
          <type><ref refid="d2/d2d/a05775" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="151" column="22"/>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1a59706cba28c7543af67ab806a99dd77c" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::updateResource</definition>
        <argsstring>(Resource &amp;resource, bool front)=0</argsstring>
        <name>updateResource</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::updateResource</qualifiedname>
        <reimplementedby refid="d6/d64/a05779_1a888224c34e23226b1d1fb708abf27151">updateResource</reimplementedby>
        <param>
          <type><ref refid="d2/d2d/a05775" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>front</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="152" column="22"/>
      </memberdef>
      <memberdef kind="function" id="de/dc1/a05771_1a36a2371243d671c6181a8c5dce98e71b" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::swapResources</definition>
        <argsstring>()=0</argsstring>
        <name>swapResources</name>
        <qualifiedname>castor3d::DoubleBufferedResourceT::swapResources</qualifiedname>
        <reimplementedby refid="d6/d64/a05779_1a50183dc409501adbb4826923dace2bb2">swapResources</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Overlay/FontTexture.hpp" line="154" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;</label>
        <link refid="de/dc1/a05771"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::FontTexture</label>
        <link refid="d6/d64/a05779"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>castor::SignalT&lt; OnChangedFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; OnChangedFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;::Resource</label>
        <link refid="d2/d2d/a05775"/>
      </node>
      <node id="1">
        <label>castor3d::DoubleBufferedResourceT&lt; ResourceT, PointerT &gt;</label>
        <link refid="de/dc1/a05771"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>onResourceChanged</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_back</edgelabel>
          <edgelabel>m_front</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor::NonCopyable</label>
        <link refid="da/d36/a08315"/>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="6">
        <label>castor::SignalT&lt; Function &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Overlay/FontTexture.hpp" line="27" column="1" bodyfile="Castor3D/Overlay/FontTexture.hpp" bodystart="29" bodyend="155"/>
    <listofallmembers>
      <member refid="de/dc1/a05771_1ae6939a52ad38f680b5a565089d21ba9c" prot="private" virt="pure-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>cleanupResource</name></member>
      <member refid="de/dc1/a05771_1a8a21fcfe1a2dd8347790c92a201523e5" prot="protected" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>doCleanup</name></member>
      <member refid="de/dc1/a05771_1a78ec7afb442cf1f020225822e6fdaada" prot="protected" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>doGetResource</name></member>
      <member refid="de/dc1/a05771_1a4ef7841bfce55d91a9cf72d942bd03dd" prot="protected" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>doInitialise</name></member>
      <member refid="de/dc1/a05771_1a6742b419c96445fd002c58b8fb1d9eb7" prot="protected" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>doRefresh</name></member>
      <member refid="de/dc1/a05771_1a63f8c2530eb43241d3a437aab7c06f88" prot="protected" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>DoubleBufferedResourceT</name></member>
      <member refid="d6/da8/a08227_1ae200b1c3bde17ab092b0d0b37095ff76" prot="public" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>getOwner</name></member>
      <member refid="de/dc1/a05771_1a48f484f145676c4e088c5982d0a2d3bd" prot="public" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>getResource</name></member>
      <member refid="de/dc1/a05771_1a855a172263421e190736fac7e88ac9c9" prot="private" virt="pure-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>initialiseResource</name></member>
      <member refid="de/dc1/a05771_1aa05c6ea0056c6b31a99b52f994adc7dc" prot="protected" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>m_back</name></member>
      <member refid="de/dc1/a05771_1a1ca84eec76b829bcd675a81a6c25a2f8" prot="private" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>m_first</name></member>
      <member refid="de/dc1/a05771_1a4561754342165e1742533554b58f4bb4" prot="protected" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>m_front</name></member>
      <member refid="de/dc1/a05771_1a379faa0b85c1dcd6d993addcb61796f6" prot="public" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>OnChanged</name></member>
      <member refid="de/dc1/a05771_1a8545a5bc75c8472410bf444b4c044d8e" prot="public" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>OnChangedFunction</name></member>
      <member refid="de/dc1/a05771_1a0d6b1cc8974174dbc826fcb630464543" prot="public" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>onResourceChanged</name></member>
      <member refid="d6/da8/a08227_1a5efafa99a79dd1036a6ae3f3242a366b" prot="protected" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>OwnedBy</name></member>
      <member refid="de/dc1/a05771_1a1770714a87ef49a80d35acd020c6465b" prot="public" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>ResourcePtrT</name></member>
      <member refid="de/dc1/a05771_1a36a2371243d671c6181a8c5dce98e71b" prot="private" virt="pure-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>swapResources</name></member>
      <member refid="de/dc1/a05771_1a7853caa76c1f94e868e5d1f190f7d01b" prot="public" virt="non-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>update</name></member>
      <member refid="de/dc1/a05771_1a59706cba28c7543af67ab806a99dd77c" prot="private" virt="pure-virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>updateResource</name></member>
      <member refid="de/dc1/a05771_1a21ee2890d4ae4455e4c72ca9381d7c2a" prot="protected" virt="virtual"><scope>castor3d::DoubleBufferedResourceT</scope><name>~DoubleBufferedResourceT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
