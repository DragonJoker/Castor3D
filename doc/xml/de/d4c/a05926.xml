<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="de/d4c/a05926" kind="class" language="C++" prot="public">
    <compoundname>castor3d::Camera</compoundname>
    <basecompoundref refid="dd/d5d/a05998" prot="public" virt="non-virtual">castor3d::MovableObject</basecompoundref>
    <includes local="no">Camera.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="de/d4c/a05926_1a7a76454710865d81e4cc79ab181f442b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Matrix4x4f</type>
        <definition>C3D_API castor::Matrix4x4f castor3d::Camera::getRescaledProjection</definition>
        <argsstring>(float scale, bool safeBanded) const</argsstring>
        <name>getRescaledProjection</name>
        <qualifiedname>castor3d::Camera::getRescaledProjection</qualifiedname>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>safeBanded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="110" column="28"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a261595527005dee3c9f8c801d668af89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/db7/a05798" kindref="compound">Viewport</ref> const &amp;</type>
        <definition>Viewport const  &amp; castor3d::Camera::getViewport</definition>
        <argsstring>() const</argsstring>
        <name>getViewport</name>
        <qualifiedname>castor3d::Camera::getViewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="113" column="17" bodyfile="Scene/Camera.hpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a77372d487a24e7a82d90166c37b8e68d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/db7/a05798" kindref="compound">Viewport</ref> &amp;</type>
        <definition>Viewport &amp; castor3d::Camera::getViewport</definition>
        <argsstring>()</argsstring>
        <name>getViewport</name>
        <qualifiedname>castor3d::Camera::getViewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="118" column="11" bodyfile="Scene/Camera.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a77869b12fb2ec344c03fd5b3a7c6e8f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Matrix4x4f const &amp;</type>
        <definition>castor::Matrix4x4f const  &amp; castor3d::Camera::getView</definition>
        <argsstring>() const</argsstring>
        <name>getView</name>
        <qualifiedname>castor3d::Camera::getView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="123" column="27" bodyfile="Scene/Camera.hpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a45a52185945081d1018bc43f33ccf1db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Matrix4x4f const &amp;</type>
        <definition>castor::Matrix4x4f const  &amp; castor3d::Camera::getProjection</definition>
        <argsstring>(bool safeBanded) const</argsstring>
        <name>getProjection</name>
        <qualifiedname>castor3d::Camera::getProjection</qualifiedname>
        <param>
          <type>bool</type>
          <declname>safeBanded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="128" column="27" bodyfile="Scene/Camera.hpp" bodystart="128" bodyend="135"/>
        <references refid="d5/db7/a05798_1a9f1411fc01774ba2dc5f909e35e04dc2" compoundref="dc/d8e/a01331" startline="245" endline="248">castor3d::Viewport::getProjection</references>
        <references refid="d5/db7/a05798_1a3a9001631d5b8eefb059c900dc3c2d7e" compoundref="dc/d8e/a01331" startline="250" endline="253">castor3d::Viewport::getSafeBandedProjection</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1aae63db3ab522039fe77511b7978f6960" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/da6/a01698_1a4141612e14f3113f10b3872630c29b3d" kindref="member">ViewportType</ref></type>
        <definition>ViewportType castor3d::Camera::getViewportType</definition>
        <argsstring>() const</argsstring>
        <name>getViewportType</name>
        <qualifiedname>castor3d::Camera::getViewportType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="137" column="14" bodyfile="Scene/Camera.hpp" bodystart="137" bodyend="140"/>
        <references refid="d5/db7/a05798_1ad418ed8f2e5a15652c5becc3455474b5" compoundref="dc/d8e/a01331" startline="185" endline="188">castor3d::Viewport::getType</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1adc5d4295e939f5d05b3b10594a326686" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Size const &amp;</type>
        <definition>castor::Size const  &amp; castor3d::Camera::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <qualifiedname>castor3d::Camera::getSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="142" column="21" bodyfile="Scene/Camera.hpp" bodystart="142" bodyend="145"/>
        <references refid="d5/db7/a05798_1a73bdc4b09ec98b5603fcb7ea7871c01e" compoundref="dc/d8e/a01331" startline="175" endline="178">castor3d::Viewport::getSize</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a88448f9caa3d89b98746bc56c9accb12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Camera::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <qualifiedname>castor3d::Camera::getWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="147" column="10" bodyfile="Scene/Camera.hpp" bodystart="147" bodyend="150"/>
        <references refid="d5/db7/a05798_1a0ed606731174457e7c63c702d56937d1" compoundref="dc/d8e/a01331" startline="230" endline="233">castor3d::Viewport::getWidth</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a373035b448a6bef453a5a4232cfdfa14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Camera::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <qualifiedname>castor3d::Camera::getHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="152" column="10" bodyfile="Scene/Camera.hpp" bodystart="152" bodyend="155"/>
        <references refid="d5/db7/a05798_1a367ac40887c86996224ea2f0a9d20148" compoundref="dc/d8e/a01331" startline="235" endline="238">castor3d::Viewport::getHeight</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1acc1ad416e4f51169cd16661c049801f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getNear</definition>
        <argsstring>() const</argsstring>
        <name>getNear</name>
        <qualifiedname>castor3d::Camera::getNear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="157" column="7" bodyfile="Scene/Camera.hpp" bodystart="157" bodyend="160"/>
        <references refid="d5/db7/a05798_1a8fa3ee4eff6d1cc9852b72755ff043dd" compoundref="dc/d8e/a01331" startline="195" endline="198">castor3d::Viewport::getNear</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a348da0fb22ffb751d5741d897c33da27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getFar</definition>
        <argsstring>() const</argsstring>
        <name>getFar</name>
        <qualifiedname>castor3d::Camera::getFar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="162" column="7" bodyfile="Scene/Camera.hpp" bodystart="162" bodyend="165"/>
        <references refid="d5/db7/a05798_1a4f415390f17f4cea72f210c6b24d3827" compoundref="dc/d8e/a01331" startline="200" endline="203">castor3d::Viewport::getFar</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a198f38c9471f61b49d93b6ee20964e55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getRatio</definition>
        <argsstring>() const</argsstring>
        <name>getRatio</name>
        <qualifiedname>castor3d::Camera::getRatio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="167" column="7" bodyfile="Scene/Camera.hpp" bodystart="167" bodyend="170"/>
        <references refid="d5/db7/a05798_1ad6118a5db50bc41619b348b1e79e6269" compoundref="dc/d8e/a01331" startline="190" endline="193">castor3d::Viewport::getRatio</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1af35919dd822add0906c03904cc2506ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Angle const &amp;</type>
        <definition>castor::Angle const  &amp; castor3d::Camera::getFovY</definition>
        <argsstring>() const</argsstring>
        <name>getFovY</name>
        <qualifiedname>castor3d::Camera::getFovY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="172" column="22" bodyfile="Scene/Camera.hpp" bodystart="172" bodyend="175"/>
        <references refid="d5/db7/a05798_1afa2d5cdbd7532101b653eabcf0b56939" compoundref="dc/d8e/a01331" startline="205" endline="208">castor3d::Viewport::getFovY</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a83cfb19ac57357fb76621be586d9fa0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getProjectionScale</definition>
        <argsstring>() const</argsstring>
        <name>getProjectionScale</name>
        <qualifiedname>castor3d::Camera::getProjectionScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="177" column="7" bodyfile="Scene/Camera.hpp" bodystart="177" bodyend="180"/>
        <references refid="d5/db7/a05798_1ac3b37a37a142d60a0880741f94887bac">castor3d::Viewport::getProjectionScale</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a4b024cf5dd96bcf933c8b90a70d2c183" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::BoundingBox const &amp;box, castor::Matrix4x4f const &amp;transformations) const</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::Camera::isVisible</qualifiedname>
        <param>
          <type>castor::BoundingBox const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>transformations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="182" column="6" bodyfile="Scene/Camera.hpp" bodystart="182" bodyend="187"/>
        <references refid="df/df6/a04914_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a280f2138072e46efb3985c004be52bcc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::BoundingSphere const &amp;sphere, castor::Matrix4x4f const &amp;transformations, castor::Point3f const &amp;scale) const</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::Camera::isVisible</qualifiedname>
        <param>
          <type>castor::BoundingSphere const &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>transformations</declname>
        </param>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="189" column="6" bodyfile="Scene/Camera.hpp" bodystart="189" bodyend="196"/>
        <references refid="df/df6/a04914_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a14d86d5d44e0415b042e80f52d4a015e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::Point3f const &amp;point) const</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::Camera::isVisible</qualifiedname>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="198" column="6" bodyfile="Scene/Camera.hpp" bodystart="198" bodyend="201"/>
        <references refid="df/df6/a04914_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1aadde674211c53f95317aa8426fed12d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="df/df6/a04914" kindref="compound">Frustum</ref> const &amp;</type>
        <definition>Frustum const  &amp; castor3d::Camera::getFrustum</definition>
        <argsstring>() const</argsstring>
        <name>getFrustum</name>
        <qualifiedname>castor3d::Camera::getFrustum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="203" column="16" bodyfile="Scene/Camera.hpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a49be9614edeee5d6d2ed30d88c18c714" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d00/a05710" kindref="compound">HdrConfig</ref> const &amp;</type>
        <definition>HdrConfig const  &amp; castor3d::Camera::getHdrConfig</definition>
        <argsstring>() const</argsstring>
        <name>getHdrConfig</name>
        <qualifiedname>castor3d::Camera::getHdrConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="208" column="18" bodyfile="Scene/Camera.hpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a571eacb15857d7f24e1e0191edcf1592" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d00/a05710" kindref="compound">HdrConfig</ref> &amp;</type>
        <definition>HdrConfig &amp; castor3d::Camera::getHdrConfig</definition>
        <argsstring>()</argsstring>
        <name>getHdrConfig</name>
        <qualifiedname>castor3d::Camera::getHdrConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="213" column="12" bodyfile="Scene/Camera.hpp" bodystart="213" bodyend="216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="de/d4c/a05926_1ae8bb96f14872d17f9c01d458e5058ed5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setView</definition>
        <argsstring>(castor::Matrix4x4f const &amp;view)</argsstring>
        <name>setView</name>
        <qualifiedname>castor3d::Camera::setView</qualifiedname>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Mutators. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="227" column="6" bodyfile="Scene/Camera.hpp" bodystart="227" bodyend="231"/>
        <references refid="dd/d5d/a05998_1a3308ef0055a0be80c34d6aefeff2044a">castor3d::MovableObject::markDirty</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1aba6e8288a09d2614b0f25a7e8a8ab043" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::resize</definition>
        <argsstring>(uint32_t width, uint32_t height)</argsstring>
        <name>resize</name>
        <qualifiedname>castor3d::Camera::resize</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="233" column="6" bodyfile="Scene/Camera.hpp" bodystart="233" bodyend="236"/>
        <references refid="de/d4c/a05926_1aba6e8288a09d2614b0f25a7e8a8ab043" compoundref="d5/da5/a01424" startline="233" endline="236">resize</references>
        <referencedby refid="de/d4c/a05926_1aba6e8288a09d2614b0f25a7e8a8ab043" compoundref="d5/da5/a01424" startline="233" endline="236">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a38dae7d74ec72af0fa347c0eefb8872b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::resize</definition>
        <argsstring>(castor::Size const &amp;size)</argsstring>
        <name>resize</name>
        <qualifiedname>castor3d::Camera::resize</qualifiedname>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="238" column="6" bodyfile="Scene/Camera.hpp" bodystart="238" bodyend="245"/>
        <references refid="d5/db7/a05798_1a73bdc4b09ec98b5603fcb7ea7871c01e" compoundref="dc/d8e/a01331" startline="175" endline="178">castor3d::Viewport::getSize</references>
        <references refid="dd/d5d/a05998_1a3308ef0055a0be80c34d6aefeff2044a">castor3d::MovableObject::markDirty</references>
        <references refid="d5/db7/a05798_1a6bf22fe2482397222b93c41f6a0464ed">castor3d::Viewport::resize</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1abfa6db9cee09d6cc4f1ca671b5968d5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setViewportType</definition>
        <argsstring>(ViewportType value)</argsstring>
        <name>setViewportType</name>
        <qualifiedname>castor3d::Camera::setViewportType</qualifiedname>
        <param>
          <type><ref refid="d5/da6/a01698_1a4141612e14f3113f10b3872630c29b3d" kindref="member">ViewportType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="247" column="6" bodyfile="Scene/Camera.hpp" bodystart="247" bodyend="251"/>
        <references refid="dd/d5d/a05998_1a3308ef0055a0be80c34d6aefeff2044a">castor3d::MovableObject::markDirty</references>
        <references refid="d5/db7/a05798_1a677639be80d4b552b5ff93332cd607a8" compoundref="dc/d8e/a01331" startline="284" endline="287">castor3d::Viewport::updateType</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a3164f41de67e9bb9b4df3e39a3bc4433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setExposure</definition>
        <argsstring>(float value)</argsstring>
        <name>setExposure</name>
        <qualifiedname>castor3d::Camera::setExposure</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="253" column="6" bodyfile="Scene/Camera.hpp" bodystart="253" bodyend="256"/>
        <references refid="d4/d00/a05710_1ac8fd9583280cdc34d0a26e1237764a0d" compoundref="dc/dd9/a01268" startline="18">castor3d::HdrConfig::exposure</references>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1af59eaccd54cff1df69b3ef0f406a2e06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setGamma</definition>
        <argsstring>(float value)</argsstring>
        <name>setGamma</name>
        <qualifiedname>castor3d::Camera::setGamma</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="258" column="6" bodyfile="Scene/Camera.hpp" bodystart="258" bodyend="261"/>
        <references refid="d4/d00/a05710_1a9d5123b1dbd5da1ebb2517854c23fb26" compoundref="dc/dd9/a01268" startline="21">castor3d::HdrConfig::gamma</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="de/d4c/a05926_1ac2f8a86af94f58fd6256412b0cbe0c15" prot="public" static="no" mutable="yes">
        <type><ref refid="d5/da6/a01698_1a1d756c78a8d4f3356fb121109c8bcffc" kindref="member">OnCameraChanged</ref></type>
        <definition>OnCameraChanged castor3d::Camera::onGpuChanged</definition>
        <argsstring></argsstring>
        <name>onGpuChanged</name>
        <qualifiedname>castor3d::Camera::onGpuChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The signal raised when the camera has changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="267" column="25" bodyfile="Scene/Camera.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="de/d4c/a05926_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Scene</definition>
        <argsstring></argsstring>
        <name>Scene</name>
        <qualifiedname>castor3d::Camera::Scene</qualifiedname>
        <param>
          <type><ref refid="db/dd3/a06070" kindref="compound">Scene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="270" column="14" bodyfile="Scene/Camera.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/d4c/a05926_1a748e34ededfa429fe2a814fceb82aadc" prot="private" static="no" mutable="no">
        <type><ref refid="d5/db7/a05798" kindref="compound">Viewport</ref></type>
        <definition>Viewport castor3d::Camera::m_viewport</definition>
        <argsstring></argsstring>
        <name>m_viewport</name>
        <qualifiedname>castor3d::Camera::m_viewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="271" column="10" bodyfile="Scene/Camera.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d4c/a05926_1ad4b4db2e4c8bad122de676b528aa1678" prot="private" static="no" mutable="no">
        <type><ref refid="df/df6/a04914" kindref="compound">Frustum</ref></type>
        <definition>Frustum castor3d::Camera::m_frustum</definition>
        <argsstring></argsstring>
        <name>m_frustum</name>
        <qualifiedname>castor3d::Camera::m_frustum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="272" column="9" bodyfile="Scene/Camera.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d4c/a05926_1aae19d878cd49f84a6b7345ab4efaf4fc" prot="private" static="no" mutable="no">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::Camera::m_view</definition>
        <argsstring></argsstring>
        <name>m_view</name>
        <qualifiedname>castor3d::Camera::m_view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="273" column="20" bodyfile="Scene/Camera.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d4c/a05926_1a95d8e9b76a35949cb779725b1703d922" prot="private" static="no" mutable="no">
        <type><ref refid="d4/d00/a05710" kindref="compound">HdrConfig</ref></type>
        <definition>HdrConfig castor3d::Camera::m_hdrConfig</definition>
        <argsstring></argsstring>
        <name>m_hdrConfig</name>
        <qualifiedname>castor3d::Camera::m_hdrConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="274" column="11" bodyfile="Scene/Camera.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d4c/a05926_1aa956cef384f2757c82e20f7c3a4b97a0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Camera::m_ownProjection</definition>
        <argsstring></argsstring>
        <name>m_ownProjection</name>
        <qualifiedname>castor3d::Camera::m_ownProjection</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="275" column="6" bodyfile="Scene/Camera.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d4c/a05926_1a03d3edece27ba6cf2f59ac4254cf9d45" prot="private" static="no" mutable="no">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::Camera::m_projection</definition>
        <argsstring></argsstring>
        <name>m_projection</name>
        <qualifiedname>castor3d::Camera::m_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="276" column="20" bodyfile="Scene/Camera.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/d4c/a05926_1a7b76d7d3f8dca9678a029d9a8e615203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Camera::Camera</definition>
        <argsstring>(castor::String const &amp;name, Scene &amp;scene, SceneNode &amp;node, Viewport viewport, bool ownProjMtx=false)</argsstring>
        <name>Camera</name>
        <qualifiedname>castor3d::Camera::Camera</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="db/dd3/a06070" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type><ref refid="de/dd2/a06258" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="d5/db7/a05798" kindref="compound">Viewport</ref></type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ownProjMtx</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent scene. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent scene node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">viewport</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d5/db7/a05798" kindref="compound">Viewport</ref> to copy. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ownProjMtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the projection matrix is held by the viewport <computeroutput>false</computeroutput>, or not <computeroutput>true</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a87e6d3e814064e377c961b449064010c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Camera::Camera</definition>
        <argsstring>(castor::String const &amp;name, Scene &amp;scene, SceneNode &amp;node, bool ownProjMtx=false)</argsstring>
        <name>Camera</name>
        <qualifiedname>castor3d::Camera::Camera</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="db/dd3/a06070" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type><ref refid="de/dd2/a06258" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ownProjMtx</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor, needs the camera renderer, the name, window size and projection type. Creates a viewport renderer and a viewport. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent scene. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent scene node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ownProjMtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the projection matrix is held by the viewport <computeroutput>false</computeroutput>, or not <computeroutput>true</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="60" column="9"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1aed868197191aca547df5624ad61f37c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::updateFrustum</definition>
        <argsstring>()</argsstring>
        <name>updateFrustum</name>
        <qualifiedname>castor3d::Camera::updateFrustum</qualifiedname>
        <briefdescription>
<para>Updates the frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="70" column="14"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a8c92fa71ede63c925d81b9fe41be3e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::Camera::update</qualifiedname>
        <briefdescription>
<para>Updates the viewport, the view matrix, and the frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="77" column="14"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a979e2f2c2bc6e3e61ea8651f2493ebb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::setProjection</definition>
        <argsstring>(castor::Matrix4x4f const &amp;projection)</argsstring>
        <name>setProjection</name>
        <qualifiedname>castor3d::Camera::setProjection</qualifiedname>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>projection</declname>
        </param>
        <briefdescription>
<para>Sets the projection matrix, updates the viewport and the frustum. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">projection</parametername>
</parameternamelist>
<parameterdescription>
<para>The projection matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="86" column="14"/>
      </memberdef>
      <memberdef kind="function" id="de/d4c/a05926_1a6da0f58f9fb8f8cbb815ca084f4d18ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d39/a00257_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Camera::isVisible</definition>
        <argsstring>(Geometry const &amp;geometry, Submesh const &amp;submesh) const</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::Camera::isVisible</qualifiedname>
        <param>
          <type><ref refid="da/d76/a05934" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type><ref refid="dd/d22/a04662" kindref="compound">Submesh</ref> const &amp;</type>
          <declname>submesh</declname>
        </param>
        <briefdescription>
<para>Checks if a submesh is visible, through a geometry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The submesh. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if the submesh is not visible. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="100" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::Camera</label>
        <link refid="de/d4c/a05926"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::MovableObject</label>
        <link refid="dd/d5d/a05998"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor::Named</label>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Scene &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>Animable</label>
        <link refid="d6/de1/a02518"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_animations</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>K</label>
      </node>
      <node id="11">
        <label>T</label>
      </node>
      <node id="12">
        <label>castor3d::AnimableT&lt; AnimableHandlerT &gt;</label>
        <link refid="d6/de1/a02518"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_animations</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::Camera</label>
        <link refid="de/d4c/a05926"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::MovableObject</label>
        <link refid="dd/d5d/a05998"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_sceneNode</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor3d::SceneNode</label>
        <link refid="de/dd2/a06258"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor::Named</label>
      </node>
      <node id="13">
        <label>castor::OwnedBy&lt; AnimableHandlerT &gt;</label>
      </node>
      <node id="7">
        <label>castor::OwnedBy&lt; Engine  &gt;</label>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Scene &gt;</label>
      </node>
      <node id="8">
        <label>std::map&lt; castor::String, AnimationPtr &gt;</label>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; castor::String, AnimationPtr &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Scene/Camera.hpp" line="21" column="1" bodyfile="Scene/Camera.hpp" bodystart="23" bodyend="277"/>
    <listofallmembers>
      <member refid="dd/d5d/a05998_1ab2169299d3e08b4e50066e400d1d86dc" prot="public" virt="virtual"><scope>castor3d::Camera</scope><name>attachTo</name></member>
      <member refid="de/d4c/a05926_1a7b76d7d3f8dca9678a029d9a8e615203" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>Camera</name></member>
      <member refid="de/d4c/a05926_1a87e6d3e814064e377c961b449064010c" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>Camera</name></member>
      <member refid="dd/d5d/a05998_1afbef8194f2a0b9e15c9cc483221a08ee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>detach</name></member>
      <member refid="dd/d5d/a05998_1aa6c7b745273530f44b2fe2b2a2603e8d" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getEngine</name></member>
      <member refid="de/d4c/a05926_1a348da0fb22ffb751d5741d897c33da27" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFar</name></member>
      <member refid="de/d4c/a05926_1af35919dd822add0906c03904cc2506ec" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFovY</name></member>
      <member refid="de/d4c/a05926_1aadde674211c53f95317aa8426fed12d0" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFrustum</name></member>
      <member refid="de/d4c/a05926_1a49be9614edeee5d6d2ed30d88c18c714" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHdrConfig</name></member>
      <member refid="de/d4c/a05926_1a571eacb15857d7f24e1e0191edcf1592" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHdrConfig</name></member>
      <member refid="de/d4c/a05926_1a373035b448a6bef453a5a4232cfdfa14" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHeight</name></member>
      <member refid="de/d4c/a05926_1acc1ad416e4f51169cd16661c049801f2" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getNear</name></member>
      <member refid="dd/d5d/a05998_1a19af4c363050397777f59c30b451be05" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getParent</name></member>
      <member refid="de/d4c/a05926_1a45a52185945081d1018bc43f33ccf1db" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getProjection</name></member>
      <member refid="de/d4c/a05926_1a83cfb19ac57357fb76621be586d9fa0b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getProjectionScale</name></member>
      <member refid="de/d4c/a05926_1a198f38c9471f61b49d93b6ee20964e55" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getRatio</name></member>
      <member refid="de/d4c/a05926_1a7a76454710865d81e4cc79ab181f442b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getRescaledProjection</name></member>
      <member refid="de/d4c/a05926_1adc5d4295e939f5d05b3b10594a326686" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getSize</name></member>
      <member refid="dd/d5d/a05998_1acf2dafd94427b63121981ac18ac652a7" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getType</name></member>
      <member refid="de/d4c/a05926_1a77869b12fb2ec344c03fd5b3a7c6e8f7" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getView</name></member>
      <member refid="de/d4c/a05926_1a261595527005dee3c9f8c801d668af89" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewport</name></member>
      <member refid="de/d4c/a05926_1a77372d487a24e7a82d90166c37b8e68d" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewport</name></member>
      <member refid="de/d4c/a05926_1aae63db3ab522039fe77511b7978f6960" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewportType</name></member>
      <member refid="de/d4c/a05926_1a88448f9caa3d89b98746bc56c9accb12" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getWidth</name></member>
      <member refid="de/d4c/a05926_1a6da0f58f9fb8f8cbb815ca084f4d18ee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="de/d4c/a05926_1a4b024cf5dd96bcf933c8b90a70d2c183" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="de/d4c/a05926_1a280f2138072e46efb3985c004be52bcc" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="de/d4c/a05926_1a14d86d5d44e0415b042e80f52d4a015e" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="de/d4c/a05926_1ad4b4db2e4c8bad122de676b528aa1678" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_frustum</name></member>
      <member refid="de/d4c/a05926_1a95d8e9b76a35949cb779725b1703d922" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_hdrConfig</name></member>
      <member refid="dd/d5d/a05998_1a8385c7c8fd9aee20a3c6de804cb09514" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_notifyIndex</name></member>
      <member refid="de/d4c/a05926_1aa956cef384f2757c82e20f7c3a4b97a0" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_ownProjection</name></member>
      <member refid="de/d4c/a05926_1a03d3edece27ba6cf2f59ac4254cf9d45" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_projection</name></member>
      <member refid="dd/d5d/a05998_1aa058c86365c45c7d4b85a04ce56a9d22" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_sceneNode</name></member>
      <member refid="dd/d5d/a05998_1acf6726e80bb3098468fe1fcd5a1f720e" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_type</name></member>
      <member refid="de/d4c/a05926_1aae19d878cd49f84a6b7345ab4efaf4fc" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_view</name></member>
      <member refid="de/d4c/a05926_1a748e34ededfa429fe2a814fceb82aadc" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_viewport</name></member>
      <member refid="dd/d5d/a05998_1a3308ef0055a0be80c34d6aefeff2044a" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>markDirty</name></member>
      <member refid="dd/d5d/a05998_1a40b0fe7602fb945cb5b89de71a8cf4d8" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>MovableObject</name></member>
      <member refid="dd/d5d/a05998_1acf7517058566afbb2290a7856fc9dfee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>MovableObject</name></member>
      <member refid="de/d4c/a05926_1ac2f8a86af94f58fd6256412b0cbe0c15" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>onGpuChanged</name></member>
      <member refid="de/d4c/a05926_1aba6e8288a09d2614b0f25a7e8a8ab043" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>resize</name></member>
      <member refid="de/d4c/a05926_1a38dae7d74ec72af0fa347c0eefb8872b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>resize</name></member>
      <member refid="de/d4c/a05926_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>Scene</name></member>
      <member refid="de/d4c/a05926_1a3164f41de67e9bb9b4df3e39a3bc4433" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setExposure</name></member>
      <member refid="de/d4c/a05926_1af59eaccd54cff1df69b3ef0f406a2e06" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setGamma</name></member>
      <member refid="de/d4c/a05926_1a979e2f2c2bc6e3e61ea8651f2493ebb6" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setProjection</name></member>
      <member refid="de/d4c/a05926_1ae8bb96f14872d17f9c01d458e5058ed5" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setView</name></member>
      <member refid="de/d4c/a05926_1abfa6db9cee09d6cc4f1ca671b5968d5d" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setViewportType</name></member>
      <member refid="de/d4c/a05926_1a8c92fa71ede63c925d81b9fe41be3e33" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>update</name></member>
      <member refid="de/d4c/a05926_1aed868197191aca547df5624ad61f37c0" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>updateFrustum</name></member>
      <member refid="dd/d5d/a05998_1a05bd8e8940d26cb4361fccfa67733b03" prot="public" virt="virtual"><scope>castor3d::Camera</scope><name>~MovableObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
