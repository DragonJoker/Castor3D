<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d4/d9c/a03231" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::BinaryWriterBase</compoundname>
    <includes local="no">BinaryWriter.hpp</includes>
    <templateparamlist>
      <param>
        <type>class TWritten</type>
      </param>
    </templateparamlist>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d4/d9c/a03231_1ad6c66bdde51dd57ab2b27f4ddc8db513" prot="protected" static="no" mutable="no">
        <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref></type>
        <definition>BinaryChunk castor3d::BinaryWriterBase&lt; TWritten &gt;::m_chunk</definition>
        <argsstring></argsstring>
        <name>m_chunk</name>
        <qualifiedname>castor3d::BinaryWriterBase::m_chunk</qualifiedname>
        <initializer>{ <ref refid="db/d5f/a03239" kindref="compound">ChunkTyper</ref>&lt; TWritten &gt;::Value }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Le chunk du writer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="253" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="253" bodyend="253"/>
        <referencedby refid="d4/d9c/a03231_1a3b4ae75e6ecd0bdf9f5dc26381633dab" compoundref="d4/de0/a11669" startline="59" endline="71">castor3d::BinaryWriterBase&lt; TWritten &gt;::write</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/d9c/a03231_1a455d885b04ddaed4d650461bbef1711c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual castor3d::BinaryWriterBase&lt; TWritten &gt;::~BinaryWriterBase</definition>
        <argsstring>()=default</argsstring>
        <name>~BinaryWriterBase</name>
        <qualifiedname>castor3d::BinaryWriterBase::~BinaryWriterBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="16" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9c/a03231_1a21e7985d2f99ff20a6056d198aac07c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::write</definition>
        <argsstring>(TWritten const &amp;obj, castor::BinaryFile &amp;file)</argsstring>
        <name>write</name>
        <qualifiedname>castor3d::BinaryWriterBase::write</qualifiedname>
        <param>
          <type>TWritten const &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="dc/d86/a07971" kindref="compound">castor::BinaryFile</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;écriture dans un fichier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;objet à écrire. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">file</parametername>
</parameternamelist>
<parameterdescription>
<para>Le fichier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="29" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="29" bodyend="46"/>
        <references refid="d4/d9c/a03231_1a8828d359b7a61ea2b657d5aada2dd87b" compoundref="d4/de0/a11669" startline="84" endline="103">castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteHeader</references>
        <references refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414da3af707888e537c6e9dde81b11bf02959">castor3d::eCmshFile</references>
        <references refid="d4/d9c/a03231_1a21e7985d2f99ff20a6056d198aac07c5" compoundref="d4/de0/a11669" startline="29" endline="46">castor3d::BinaryWriterBase&lt; TWritten &gt;::write</references>
        <referencedby refid="d4/d9c/a03231_1a21e7985d2f99ff20a6056d198aac07c5" compoundref="d4/de0/a11669" startline="29" endline="46">castor3d::BinaryWriterBase&lt; TWritten &gt;::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d9c/a03231_1a3b4ae75e6ecd0bdf9f5dc26381633dab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::write</definition>
        <argsstring>(TWritten const &amp;obj, BinaryChunk &amp;chunk)</argsstring>
        <name>write</name>
        <qualifiedname>castor3d::BinaryWriterBase::write</qualifiedname>
        <param>
          <type>TWritten const &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;écriture dans un chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;objet à écrire. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">chunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Le chunk. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="59" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="59" bodyend="71"/>
        <references refid="d5/d27/a03183_1a05ffb50a92f97be91612f8f91ceeed8e">castor3d::BinaryChunk::addSubChunk</references>
        <references refid="d5/d27/a03183_1abbed73a8f9ab118d0b9ba81219a919b6">castor3d::BinaryChunk::finalise</references>
        <references refid="d4/d9c/a03231_1ad6c66bdde51dd57ab2b27f4ddc8db513" compoundref="d4/de0/a11669" startline="253" endline="253">castor3d::BinaryWriterBase&lt; TWritten &gt;::m_chunk</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="d4/d9c/a03231_1a8828d359b7a61ea2b657d5aada2dd87b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteHeader</definition>
        <argsstring>(BinaryChunk &amp;chunk) const</argsstring>
        <name>doWriteHeader</name>
        <qualifiedname>castor3d::BinaryWriterBase::doWriteHeader</qualifiedname>
        <param>
          <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
<para>Ecrit une le chunk d&apos;en-tête. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">chunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Le chunk. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="84" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="84" bodyend="103"/>
        <references refid="d5/d27/a03183_1a05ffb50a92f97be91612f8f91ceeed8e">castor3d::BinaryChunk::addSubChunk</references>
        <references refid="d9/dba/a02278_1abb378ab1c4b7208b4d80b496f3ad14bc" compoundref="d0/dc2/a00104" startline="94">castor3d::CurrentCmshVersion</references>
        <references refid="d5/d12/a01799_1a3564792a496e57dd35e9121d9bb5fe98" compoundref="d5/d12/a01799" startline="51">cuT</references>
        <references refid="d4/d9c/a03231_1a95685db95521fe46169767620976688c" compoundref="d4/de0/a11669" startline="121" endline="127">castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteChunk</references>
        <references refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414da9e33398324cc27f4d18d60ffe7436294">castor3d::eCmshHeader</references>
        <references refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414da52eafb299773df06313321e3eca83362">castor3d::eCmshVersion</references>
        <references refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414daa866af182acab9fffb643ecb752cd9e5">castor3d::eName</references>
        <references refid="d2/dd2/a02279_1af41ea5b34edb8c4103f57937867ea4d6" compoundref="d5/d12/a01799" startline="197" endline="200">castor::makeStringStream</references>
        <referencedby refid="d4/d9c/a03231_1a21e7985d2f99ff20a6056d198aac07c5" compoundref="d4/de0/a11669" startline="29" endline="46">castor3d::BinaryWriterBase&lt; TWritten &gt;::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d9c/a03231_1a95685db95521fe46169767620976688c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteChunk</definition>
        <argsstring>(T const *values, size_t count, ChunkType chunkType, BinaryChunk &amp;chunk) const</argsstring>
        <name>doWriteChunk</name>
        <qualifiedname>castor3d::BinaryWriterBase::doWriteChunk</qualifiedname>
        <param>
          <type>T const *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
          <declname>chunkType</declname>
        </param>
        <param>
          <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
<para>Ecrit une valeur d&apos;un subchunk dans un chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>Les valeurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nombre de valeurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chunkType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type du subchunk. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">chunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Le chunk. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="121" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="121" bodyend="127"/>
        <references refid="d0/d4b/a03415_1ac4cf51584e348def2f360b81e6ec7a9a" compoundref="dc/de6/a00167" startline="80" endline="96">castor3d::ChunkWriter&lt; T &gt;::write</references>
        <referencedby refid="d4/d9c/a03231_1a8828d359b7a61ea2b657d5aada2dd87b" compoundref="d4/de0/a11669" startline="84" endline="103">castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteHeader</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d9c/a03231_1ac978d1019caf2d37ad181911c78dde33" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteChunk</definition>
        <argsstring>(T const(&amp;values)[Count], ChunkType chunkType, BinaryChunk &amp;chunk) const</argsstring>
        <name>doWriteChunk</name>
        <qualifiedname>castor3d::BinaryWriterBase::doWriteChunk</qualifiedname>
        <param>
          <type>T const(&amp;)</type>
          <declname>values</declname>
          <array>[Count]</array>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
          <declname>chunkType</declname>
        </param>
        <param>
          <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
<para>Ecrit une valeur d&apos;un subchunk dans un chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>Les valeurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chunkType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type du subchunk. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">chunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Le chunk. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="143" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="143" bodyend="148"/>
        <references refid="d0/d4b/a03415_1ac4cf51584e348def2f360b81e6ec7a9a" compoundref="dc/de6/a00167" startline="80" endline="96">castor3d::ChunkWriter&lt; T &gt;::write</references>
      </memberdef>
      <memberdef kind="function" id="d4/d9c/a03231_1a1cf5e80f4e1564a6fd090a607ba1b033" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteChunk</definition>
        <argsstring>(castor::Array&lt; T, Count &gt; const &amp;values, ChunkType chunkType, BinaryChunk &amp;chunk) const</argsstring>
        <name>doWriteChunk</name>
        <qualifiedname>castor3d::BinaryWriterBase::doWriteChunk</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1aeece6f8801a7db118a091f586a413edf" kindref="member">castor::Array</ref>&lt; T, Count &gt; const &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
          <declname>chunkType</declname>
        </param>
        <param>
          <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
<para>Ecrit une valeur d&apos;un subchunk dans un chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>Les valeurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chunkType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type du subchunk. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">chunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Le chunk. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="164" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="164" bodyend="169"/>
        <references refid="d0/d4b/a03415_1ac4cf51584e348def2f360b81e6ec7a9a" compoundref="dc/de6/a00167" startline="80" endline="96">castor3d::ChunkWriter&lt; T &gt;::write</references>
      </memberdef>
      <memberdef kind="function" id="d4/d9c/a03231_1a5c34d6366fb3a830b669fe7116e52043" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteChunk</definition>
        <argsstring>(castor::Vector&lt; T &gt; const &amp;values, ChunkType chunkType, BinaryChunk &amp;chunk) const</argsstring>
        <name>doWriteChunk</name>
        <qualifiedname>castor3d::BinaryWriterBase::doWriteChunk</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1a57d18b0d40cd54921270bcf33d0aadc5" kindref="member">castor::Vector</ref>&lt; T &gt; const &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
          <declname>chunkType</declname>
        </param>
        <param>
          <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
<para>Ecrit une valeur d&apos;un subchunk dans un chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>Les valeurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chunkType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type du subchunk. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">chunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Le chunk. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="185" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="185" bodyend="190"/>
        <references refid="d0/d4b/a03415_1ac4cf51584e348def2f360b81e6ec7a9a" compoundref="dc/de6/a00167" startline="80" endline="96">castor3d::ChunkWriter&lt; T &gt;::write</references>
      </memberdef>
      <memberdef kind="function" id="d4/d9c/a03231_1a3bd1cb047e1f2872668a4397496bd7c4" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteChunk</definition>
        <argsstring>(T const *begin, T const *end, ChunkType chunkType, BinaryChunk &amp;chunk) const</argsstring>
        <name>doWriteChunk</name>
        <qualifiedname>castor3d::BinaryWriterBase::doWriteChunk</qualifiedname>
        <param>
          <type>T const *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
          <declname>chunkType</declname>
        </param>
        <param>
          <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
<para>Ecrit une valeur d&apos;un subchunk dans un chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Le début des valeurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>La fin des valeurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chunkType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type du subchunk. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">chunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Le chunk. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="208" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="208" bodyend="214"/>
        <references refid="d0/d4b/a03415_1ac4cf51584e348def2f360b81e6ec7a9a" compoundref="dc/de6/a00167" startline="80" endline="96">castor3d::ChunkWriter&lt; T &gt;::write</references>
      </memberdef>
      <memberdef kind="function" id="d4/d9c/a03231_1a7bdb655caf767fdde8a4267602e06191" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteChunk</definition>
        <argsstring>(T const &amp;value, ChunkType chunkType, BinaryChunk &amp;chunk) const</argsstring>
        <name>doWriteChunk</name>
        <qualifiedname>castor3d::BinaryWriterBase::doWriteChunk</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
          <declname>chunkType</declname>
        </param>
        <param>
          <type><ref refid="d5/d27/a03183" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
<para>Ecrit une valeur d&apos;un subchunk dans un chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>La valeur. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chunkType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type du subchunk. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">chunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Le chunk. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="230" column="13" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="230" bodyend="235"/>
        <references refid="d0/d4b/a03415_1ac4cf51584e348def2f360b81e6ec7a9a" compoundref="dc/de6/a00167" startline="80" endline="96">castor3d::ChunkWriter&lt; T &gt;::write</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d4/d9c/a03231_1a720ab792b3e53c6556c3cb4e5b0e2d06" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>virtual C3D_API bool castor3d::BinaryWriterBase&lt; TWritten &gt;::doWrite</definition>
        <argsstring>(TWritten const &amp;obj)=0</argsstring>
        <name>doWrite</name>
        <qualifiedname>castor3d::BinaryWriterBase::doWrite</qualifiedname>
        <reimplementedby refid="d0/da2/a03163_1a5ffce8901dc926cff5e016a9a812fec2">doWrite</reimplementedby>
        <reimplementedby refid="d7/d45/a03175_1a6d130b034e283812b93bab1a505b3503">doWrite</reimplementedby>
        <reimplementedby refid="d1/d45/a03191_1af34cf38176f0875eadac43d1b31d0c43">doWrite</reimplementedby>
        <reimplementedby refid="d5/d73/a03203_1ad372e4f97c60e8a32a7e05a15121b34c">doWrite</reimplementedby>
        <reimplementedby refid="d9/d65/a03215_1ae68486b65723c0f9aeb626e13ac3025a">doWrite</reimplementedby>
        <reimplementedby refid="db/dd3/a03251_1a88a25dd48dfdf3cedddaad146fe5b7d5">doWrite</reimplementedby>
        <reimplementedby refid="dc/dc1/a03263_1a79129ffffa96604b92951be6ad8d7973">doWrite</reimplementedby>
        <reimplementedby refid="d8/dbf/a03275_1a8226867d8615aeba5c2e1a0c07221ca4">doWrite</reimplementedby>
        <reimplementedby refid="d8/dcc/a03287_1a6da6fa4b3e42eb50878abd53c8cec1e0">doWrite</reimplementedby>
        <reimplementedby refid="d8/de2/a03299_1a312b94b28345bb2a86e4a07116903f74">doWrite</reimplementedby>
        <reimplementedby refid="de/d19/a03311_1a9c7bcfd9f05bec9febc9a200c1e14792">doWrite</reimplementedby>
        <reimplementedby refid="d4/d00/a03323_1ace650871bb057cf3320fa1234f30b30e">doWrite</reimplementedby>
        <reimplementedby refid="d9/db1/a03335_1ae4cd3b1abadc82ee2c90960acdab1175">doWrite</reimplementedby>
        <reimplementedby refid="d9/dc9/a03347_1af3e623de8610408418aee0969210c196">doWrite</reimplementedby>
        <reimplementedby refid="d9/dd9/a03359_1ac97dd8f0aafa7d834041d778b0c22b66">doWrite</reimplementedby>
        <reimplementedby refid="d9/d58/a03371_1a7d105b098f8b3e2ce246426c1d2c70ef">doWrite</reimplementedby>
        <reimplementedby refid="dc/d58/a03383_1a2e106060645a94fe21d58a6cd5735079">doWrite</reimplementedby>
        <param>
          <type>TWritten const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Ecrit l&apos;objet dans le chunk du writer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;objet à écrire. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si une erreur quelconque est arrivée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Binary/BinaryWriter.hpp" line="248" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Classe de base d&apos;écriture d&apos;un chunk de données binaires. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor3d::BinaryWriterBase&lt; Animation &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Animation &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::BinaryWriterBase&lt; BoneNode &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; BoneNode &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>castor3d::BinaryWriterBase&lt; Mesh &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Mesh &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>castor3d::BinaryWriterBase&lt; MeshAnimation &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; MeshAnimation &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>castor3d::BinaryWriterBase&lt; MeshMorphTarget &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; MeshMorphTarget &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>castor3d::BinaryWriterBase&lt; MorphComponent &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; MorphComponent &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>castor3d::BinaryWriterBase&lt; SceneNodeAnimation &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SceneNodeAnimation &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>castor3d::BinaryWriterBase&lt; SceneNodeAnimationKeyFrame &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SceneNodeAnimationKeyFrame &gt;</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>castor3d::BinaryWriterBase&lt; Skeleton &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Skeleton &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>castor3d::BinaryWriterBase&lt; SkeletonAnimation &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SkeletonAnimation &gt;</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>castor3d::BinaryWriterBase&lt; SkeletonAnimationBone &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SkeletonAnimationBone &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>castor3d::BinaryWriterBase&lt; SkeletonAnimationKeyFrame &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SkeletonAnimationKeyFrame &gt;</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>castor3d::BinaryWriterBase&lt; SkeletonAnimationNode &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SkeletonAnimationNode &gt;</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>castor3d::BinaryWriterBase&lt; SkeletonAnimationObject &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SkeletonAnimationObject &gt;</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>castor3d::BinaryWriterBase&lt; SkeletonNode &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SkeletonNode &gt;</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>castor3d::BinaryWriterBase&lt; SkinComponent &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SkinComponent &gt;</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>castor3d::BinaryWriterBase&lt; Submesh &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Submesh &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::BinaryWriter&lt; Animation &gt;</label>
        <link refid="d0/da2/a03163"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>castor3d::BinaryWriter&lt; BoneNode &gt;</label>
        <link refid="d7/d45/a03175"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>castor3d::BinaryWriter&lt; Mesh &gt;</label>
        <link refid="d1/d45/a03191"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>castor3d::BinaryWriter&lt; MeshAnimation &gt;</label>
        <link refid="d5/d73/a03203"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>castor3d::BinaryWriter&lt; MeshMorphTarget &gt;</label>
        <link refid="d9/d65/a03215"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>castor3d::BinaryWriter&lt; MorphComponent &gt;</label>
        <link refid="db/dd3/a03251"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>castor3d::BinaryWriter&lt; SceneNodeAnimation &gt;</label>
        <link refid="dc/dc1/a03263"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>castor3d::BinaryWriter&lt; SceneNodeAnimationKeyFrame &gt;</label>
        <link refid="d8/dbf/a03275"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>castor3d::BinaryWriter&lt; Skeleton &gt;</label>
        <link refid="d8/dcc/a03287"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>castor3d::BinaryWriter&lt; SkeletonAnimation &gt;</label>
        <link refid="d8/de2/a03299"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>castor3d::BinaryWriter&lt; SkeletonAnimationBone &gt;</label>
        <link refid="de/d19/a03311"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>castor3d::BinaryWriter&lt; SkeletonAnimationKeyFrame &gt;</label>
        <link refid="d4/d00/a03323"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>castor3d::BinaryWriter&lt; SkeletonAnimationNode &gt;</label>
        <link refid="d9/db1/a03335"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>castor3d::BinaryWriter&lt; SkeletonAnimationObject &gt;</label>
        <link refid="d9/dc9/a03347"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>castor3d::BinaryWriter&lt; SkeletonNode &gt;</label>
        <link refid="d9/dd9/a03359"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>castor3d::BinaryWriter&lt; SkinComponent &gt;</label>
        <link refid="d9/d58/a03371"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>castor3d::BinaryWriter&lt; Submesh &gt;</label>
        <link refid="dc/d58/a03383"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::BinaryWriterBase&lt; TWritten &gt;</label>
        <link refid="d4/d9c/a03231"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>castor3d::BinaryChunk</label>
        <link refid="d5/d27/a03183"/>
      </node>
      <node id="1">
        <label>castor3d::BinaryWriterBase&lt; TWritten &gt;</label>
        <link refid="d4/d9c/a03231"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_chunk</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Binary/BinaryWriter.hpp" line="13" column="1" bodyfile="Castor3D/Binary/BinaryWriter.hpp" bodystart="14" bodyend="254"/>
    <listofallmembers>
      <member refid="d4/d9c/a03231_1a720ab792b3e53c6556c3cb4e5b0e2d06" prot="private" virt="pure-virtual"><scope>castor3d::BinaryWriterBase</scope><name>doWrite</name></member>
      <member refid="d4/d9c/a03231_1a95685db95521fe46169767620976688c" prot="protected" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>doWriteChunk</name></member>
      <member refid="d4/d9c/a03231_1ac978d1019caf2d37ad181911c78dde33" prot="protected" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>doWriteChunk</name></member>
      <member refid="d4/d9c/a03231_1a1cf5e80f4e1564a6fd090a607ba1b033" prot="protected" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>doWriteChunk</name></member>
      <member refid="d4/d9c/a03231_1a5c34d6366fb3a830b669fe7116e52043" prot="protected" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>doWriteChunk</name></member>
      <member refid="d4/d9c/a03231_1a3bd1cb047e1f2872668a4397496bd7c4" prot="protected" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>doWriteChunk</name></member>
      <member refid="d4/d9c/a03231_1a7bdb655caf767fdde8a4267602e06191" prot="protected" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>doWriteChunk</name></member>
      <member refid="d4/d9c/a03231_1a8828d359b7a61ea2b657d5aada2dd87b" prot="protected" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>doWriteHeader</name></member>
      <member refid="d4/d9c/a03231_1ad6c66bdde51dd57ab2b27f4ddc8db513" prot="protected" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>m_chunk</name></member>
      <member refid="d4/d9c/a03231_1a21e7985d2f99ff20a6056d198aac07c5" prot="public" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>write</name></member>
      <member refid="d4/d9c/a03231_1a3b4ae75e6ecd0bdf9f5dc26381633dab" prot="public" virt="non-virtual"><scope>castor3d::BinaryWriterBase</scope><name>write</name></member>
      <member refid="d4/d9c/a03231_1a455d885b04ddaed4d650461bbef1711c" prot="public" virt="virtual"><scope>castor3d::BinaryWriterBase</scope><name>~BinaryWriterBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
