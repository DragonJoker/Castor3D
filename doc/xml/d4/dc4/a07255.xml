<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d4/dc4/a07255" kind="class" language="C++" prot="public">
    <compoundname>castor3d::SceneNode</compoundname>
    <basecompoundref refid="d2/d7a/a03115" prot="public" virt="non-virtual">castor3d::AnimableT&lt; Engine &gt;</basecompoundref>
    <basecompoundref refid="d5/d3c/a08223" prot="public" virt="non-virtual">castor::NamedBaseT&lt; String &gt;</basecompoundref>
    <includes local="no">SceneNode.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Attached objects management.</header>
      <memberdef kind="function" id="d4/dc4/a07255_1a1dd4a168d6a13cf4bb036b778c92af4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::attachObject</definition>
        <argsstring>(MovableObject &amp;object)</argsstring>
        <name>attachObject</name>
        <qualifiedname>castor3d::SceneNode::attachObject</qualifiedname>
        <param>
          <type><ref refid="da/d09/a07047" kindref="compound">MovableObject</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Attache un <ref refid="da/d09/a07047" kindref="compound">MovableObject</ref> au noeud. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;objet à attacher </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="96" column="14"/>
        <referencedby refid="d8/dcd/a07055_1a646979a39290634b365c41c594c00f6e" compoundref="dc/d47/a01487" startline="165" endline="172">castor3d::MovableAttacherT&lt; CacheT &gt;::operator()</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a097196735a0583f426b9ec37bdb87ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::detachObject</definition>
        <argsstring>(MovableObject const &amp;object)</argsstring>
        <name>detachObject</name>
        <qualifiedname>castor3d::SceneNode::detachObject</qualifiedname>
        <param>
          <type><ref refid="da/d09/a07047" kindref="compound">MovableObject</ref> const &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Détache un <ref refid="da/d09/a07047" kindref="compound">MovableObject</ref> fu noeud. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;objet à détacher </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="105" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Children management.</header>
      <memberdef kind="function" id="d4/dc4/a07255_1ab35e18173e866c2b1fae60ffbd6c7abd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::attachTo</definition>
        <argsstring>(SceneNode &amp;parent)</argsstring>
        <name>attachTo</name>
        <qualifiedname>castor3d::SceneNode::attachTo</qualifiedname>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Définit le noeud parent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nouveau parent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="119" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a44d77b68c1f9f11332f2010f7e76d0e8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::detach</definition>
        <argsstring>(bool cleanup) noexcept</argsstring>
        <name>detach</name>
        <qualifiedname>castor3d::SceneNode::detach</qualifiedname>
        <param>
          <type>bool</type>
          <declname>cleanup</declname>
        </param>
        <briefdescription>
<para>Détache le noeud de son parent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="126" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a89f25fc998f6c961588bca313ce0f726" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::SceneNode::hasChild</definition>
        <argsstring>(castor::String const &amp;name) const</argsstring>
        <name>hasChild</name>
        <qualifiedname>castor3d::SceneNode::hasChild</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du noeud </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si un des enfants de ce noeud a le nom donné </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="135" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a80dcad8075d1590de5e8b16f73338d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::addChild</definition>
        <argsstring>(SceneNode &amp;child)</argsstring>
        <name>addChild</name>
        <qualifiedname>castor3d::SceneNode::addChild</qualifiedname>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Ajoute le noeud donné aux enfants de ce noeud, s&apos;il n&apos;y est pas encore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">child</parametername>
</parameternamelist>
<parameterdescription>
<para>Le noeud à ajouter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="144" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a8611c5c85479ff8f3918374ca233ccf3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::detachChild</definition>
        <argsstring>(SceneNode const &amp;child) noexcept</argsstring>
        <name>detachChild</name>
        <qualifiedname>castor3d::SceneNode::detachChild</qualifiedname>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> const &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Détache un noeud des enfants de ce noeud, s&apos;il en fait partie. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">child</parametername>
</parameternamelist>
<parameterdescription>
<para>Le noeud à détacher </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="153" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a73702d88ff7b24f38b32ca1ee947b96f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::detachChild</definition>
        <argsstring>(castor::String const &amp;childName) noexcept</argsstring>
        <name>detachChild</name>
        <qualifiedname>castor3d::SceneNode::detachChild</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>childName</declname>
        </param>
        <briefdescription>
<para>Détache un noeud des enfants de ce noeud, s&apos;il en fait partie. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">childName</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du noeud à détacher </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="162" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1ae782c78086e46be3a2d853f44aaeb068" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::detachChildren</definition>
        <argsstring>(bool cleanup) noexcept</argsstring>
        <name>detachChildren</name>
        <qualifiedname>castor3d::SceneNode::detachChildren</qualifiedname>
        <param>
          <type>bool</type>
          <declname>cleanup</declname>
        </param>
        <briefdescription>
<para>Détache tous les enfants de ce noeud. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="169" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a1bd7296955f74bd95b15ebdbcfddd848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::markDirty</definition>
        <argsstring>()</argsstring>
        <name>markDirty</name>
        <qualifiedname>castor3d::SceneNode::markDirty</qualifiedname>
        <briefdescription>
<para>Marque ce noeud comme dirty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="176" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Local transformations.</header>
      <memberdef kind="function" id="d4/dc4/a07255_1a65988602cd539e898204c6782ffe4105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::yaw</definition>
        <argsstring>(castor::Angle const &amp;angle)</argsstring>
        <name>yaw</name>
        <qualifiedname>castor3d::SceneNode::yaw</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1ae8e874b0f16e0aed39b2128f83554e8b" kindref="member">castor::Angle</ref> const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Tourne le noeud autour de son axe Y. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">angle</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;angle de rotation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="190" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a17527a2183f7826cfcda52330fa96fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::pitch</definition>
        <argsstring>(castor::Angle const &amp;angle)</argsstring>
        <name>pitch</name>
        <qualifiedname>castor3d::SceneNode::pitch</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1ae8e874b0f16e0aed39b2128f83554e8b" kindref="member">castor::Angle</ref> const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Tourne le noeud autour de son axe Z. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">angle</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;angle de rotation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="199" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a838858f96a34ff436fc34ca16f137875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::roll</definition>
        <argsstring>(castor::Angle const &amp;angle)</argsstring>
        <name>roll</name>
        <qualifiedname>castor3d::SceneNode::roll</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1ae8e874b0f16e0aed39b2128f83554e8b" kindref="member">castor::Angle</ref> const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Tourne le noeud autour de son axe X. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">angle</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;angle de rotation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="208" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aba03dfa8151020460e42a6fe7718ebb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::rotate</definition>
        <argsstring>(castor::Quaternion const &amp;quat)</argsstring>
        <name>rotate</name>
        <qualifiedname>castor3d::SceneNode::rotate</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1a09d3481f4a05ba6fbf3d4dede82380d8" kindref="member">castor::Quaternion</ref> const &amp;</type>
          <declname>quat</declname>
        </param>
        <briefdescription>
<para>Tourne le noeud d&apos;une rotation donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">quat</parametername>
</parameternamelist>
<parameterdescription>
<para>La rotation à appliquer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="217" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aab7b823683cf1a24b2c911e924cf7aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::translate</definition>
        <argsstring>(castor::Point3f const &amp;t)</argsstring>
        <name>translate</name>
        <qualifiedname>castor3d::SceneNode::translate</qualifiedname>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Translate le noeud. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>The La valeur de translation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="226" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1af9241e4c1fc060ba6445b7d159e24801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::scale</definition>
        <argsstring>(castor::Point3f const &amp;s)</argsstring>
        <name>scale</name>
        <qualifiedname>castor3d::SceneNode::scale</qualifiedname>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Change l&apos;échelle du noeud. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>La valeur d&apos;échelle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="235" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a86d0b37ba3414a311a8c60a1922d784a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dfb/a06863" kindref="compound">SceneNodeAnimation</ref> &amp;</type>
        <definition>C3D_API SceneNodeAnimation &amp; castor3d::SceneNode::createAnimation</definition>
        <argsstring>(castor::String const &amp;name)</argsstring>
        <name>createAnimation</name>
        <qualifiedname>castor3d::SceneNode::createAnimation</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Crée une animation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom de l&apos;animation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>l&apos;animation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="246" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a273419e698d74e32d4d67c538cba995b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::removeAnimation</definition>
        <argsstring>(castor::String const &amp;name)</argsstring>
        <name>removeAnimation</name>
        <qualifiedname>castor3d::SceneNode::removeAnimation</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retire une animation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom de l&apos;animation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="255" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Absolute value getters.</header>
      <memberdef kind="function" id="d4/dc4/a07255_1abcbe420410abfafdf3ab6a785c921bfb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Point3f</type>
        <definition>C3D_API castor::Point3f castor3d::SceneNode::getDerivedPosition</definition>
        <argsstring>() const</argsstring>
        <name>getDerivedPosition</name>
        <qualifiedname>castor3d::SceneNode::getDerivedPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="261" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1af09b4e9893a5c9efad520d9d01eed1b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dd2/a02279_1a09d3481f4a05ba6fbf3d4dede82380d8" kindref="member">castor::Quaternion</ref></type>
        <definition>C3D_API castor::Quaternion castor3d::SceneNode::getDerivedOrientation</definition>
        <argsstring>() const</argsstring>
        <name>getDerivedOrientation</name>
        <qualifiedname>castor3d::SceneNode::getDerivedOrientation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="262" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aa78ad9bbff095a15e6d4beef4440bc42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Point3f</type>
        <definition>C3D_API castor::Point3f castor3d::SceneNode::getDerivedScale</definition>
        <argsstring>() const</argsstring>
        <name>getDerivedScale</name>
        <qualifiedname>castor3d::SceneNode::getDerivedScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="263" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a7ca3301f4f4eba9e9295bbc6926062f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Matrix4x4f const &amp;</type>
        <definition>C3D_API castor::Matrix4x4f const  &amp; castor3d::SceneNode::getTransformationMatrix</definition>
        <argsstring>() const</argsstring>
        <name>getTransformationMatrix</name>
        <qualifiedname>castor3d::SceneNode::getTransformationMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="264" column="35"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a11a26c63c895a827d6dba95144708708" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Matrix4x4f const &amp;</type>
        <definition>C3D_API castor::Matrix4x4f const  &amp; castor3d::SceneNode::getDerivedTransformationMatrix</definition>
        <argsstring>() const</argsstring>
        <name>getDerivedTransformationMatrix</name>
        <qualifiedname>castor3d::SceneNode::getDerivedTransformationMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="265" column="35"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Local value getters.</header>
      <memberdef kind="function" id="d4/dc4/a07255_1aa814e7d9e348b013f1f2dd565612474d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point3f const &amp;</type>
        <definition>castor::Point3f const  &amp; castor3d::SceneNode::getPosition</definition>
        <argsstring>() const</argsstring>
        <name>getPosition</name>
        <qualifiedname>castor3d::SceneNode::getPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="270" column="24" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a3355a4973617918f50f7247cf3cfea06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a09d3481f4a05ba6fbf3d4dede82380d8" kindref="member">castor::Quaternion</ref> const &amp;</type>
        <definition>castor::Quaternion const  &amp; castor3d::SceneNode::getOrientation</definition>
        <argsstring>() const</argsstring>
        <name>getOrientation</name>
        <qualifiedname>castor3d::SceneNode::getOrientation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="275" column="27" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aba058ef71d4f4b8646e7fe423d4186d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point3f const &amp;</type>
        <definition>castor::Point3f const  &amp; castor3d::SceneNode::getScale</definition>
        <argsstring>() const</argsstring>
        <name>getScale</name>
        <qualifiedname>castor3d::SceneNode::getScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="280" column="24" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a55f4c11837ba24cd0da48dbd5efb6e5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::getAxisAngle</definition>
        <argsstring>(castor::Point3f &amp;axis, castor::Angle &amp;angle) const</argsstring>
        <name>getAxisAngle</name>
        <qualifiedname>castor3d::SceneNode::getAxisAngle</qualifiedname>
        <param>
          <type>castor::Point3f &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1ae8e874b0f16e0aed39b2128f83554e8b" kindref="member">castor::Angle</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="285" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="285" bodyend="288"/>
        <references refid="dc/dc3/a09203_1a8b4efc816d012e9404bee3d1009fb741">castor::QuaternionT&lt; T &gt;::toAxisAngle</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Other getters.</header>
      <memberdef kind="function" id="d4/dc4/a07255_1a16aa3199224d152121b8820033641f81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d4/dc4/a07255_1a094560d339c013ea479d7faf9925d354" kindref="member">SceneNodeMap</ref> const &amp;</type>
        <definition>C3D_API SceneNodeMap const  &amp; castor3d::SceneNode::getChildren</definition>
        <argsstring>() const</argsstring>
        <name>getChildren</name>
        <qualifiedname>castor3d::SceneNode::getChildren</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="294" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aec6b7961111af199607ab09f54b7cb5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> SceneNodeRPtr</type>
        <definition>C3D_API SceneNodeRPtr castor3d::SceneNode::getChild</definition>
        <argsstring>(castor::String const &amp;name) const</argsstring>
        <name>getChild</name>
        <qualifiedname>castor3d::SceneNode::getChild</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="295" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1adce548e6630a30009b9801089432185e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d4/dc4/a07255_1a91d84b238e6c1615101a24aa6fe7e234" kindref="member">MovableArray</ref> const &amp;</type>
        <definition>C3D_API MovableArray const  &amp; castor3d::SceneNode::getObjects</definition>
        <argsstring>() const</argsstring>
        <name>getObjects</name>
        <qualifiedname>castor3d::SceneNode::getObjects</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="296" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aca030d3126c0bd5dd8bdf1133147394d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::SceneNode::isVisible</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isVisible</name>
        <qualifiedname>castor3d::SceneNode::isVisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="298" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aabe501ab99cf5191ffe0bd8b31e530f9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::isDisplayable</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isDisplayable</name>
        <qualifiedname>castor3d::SceneNode::isDisplayable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="300" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a52eabb5ad2b6fdb17992e6c9e26d07b3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> *</type>
        <definition>SceneNode * castor3d::SceneNode::getParent</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getParent</name>
        <qualifiedname>castor3d::SceneNode::getParent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="305" column="12" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1acaa520a484502b84dbdfd597080a9415" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> *</type>
        <definition>Scene * castor3d::SceneNode::getScene</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getScene</name>
        <qualifiedname>castor3d::SceneNode::getScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="310" column="8" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1acd391d7a1d1dd0b9fa14a1a904493800" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::isSerialisable</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isSerialisable</name>
        <qualifiedname>castor3d::SceneNode::isSerialisable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="315" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aa382cd84926f9b2b9a1a3d8a1f4749ff" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::isStatic</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isStatic</name>
        <qualifiedname>castor3d::SceneNode::isStatic</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="320" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a785fe25fac1a32c79da6d6452da1a720" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::isModified</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isModified</name>
        <qualifiedname>castor3d::SceneNode::isModified</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="325" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a316cb9c76b08e109e9d04e3d6516bb40" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t castor3d::SceneNode::getId</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getId</name>
        <qualifiedname>castor3d::SceneNode::getId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="330" column="10" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="330" bodyend="333"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Setters.</header>
      <memberdef kind="function" id="d4/dc4/a07255_1a8d7a34239fd5667b32e9db5041acf6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::setOrientation</definition>
        <argsstring>(castor::Quaternion const &amp;orientation)</argsstring>
        <name>setOrientation</name>
        <qualifiedname>castor3d::SceneNode::setOrientation</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1a09d3481f4a05ba6fbf3d4dede82380d8" kindref="member">castor::Quaternion</ref> const &amp;</type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="339" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aa1f1a9ac6fb75ffeb3aadd3da4619830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::setPosition</definition>
        <argsstring>(castor::Point3f const &amp;position)</argsstring>
        <name>setPosition</name>
        <qualifiedname>castor3d::SceneNode::setPosition</qualifiedname>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="340" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a5b885e1f9687b49d4cfdd160ac020802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::setScale</definition>
        <argsstring>(castor::Point3f const &amp;scale)</argsstring>
        <name>setScale</name>
        <qualifiedname>castor3d::SceneNode::setScale</qualifiedname>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="341" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1ac3b3bc7565251f95197fcbdcd56b1325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::setTransformationMatrix</definition>
        <argsstring>(castor::Matrix4x4f const &amp;transform)</argsstring>
        <name>setTransformationMatrix</name>
        <qualifiedname>castor3d::SceneNode::setTransformationMatrix</qualifiedname>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="342" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a26bb8a174d85c97049b3c942b2cd43e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::setVisible</definition>
        <argsstring>(bool visible)</argsstring>
        <name>setVisible</name>
        <qualifiedname>castor3d::SceneNode::setVisible</qualifiedname>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="343" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a3960712463a75938e5a8b5d1a5645534" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::setSerialisable</definition>
        <argsstring>(bool value) noexcept</argsstring>
        <name>setSerialisable</name>
        <qualifiedname>castor3d::SceneNode::setSerialisable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="345" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="345" bodyend="348"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d4/dc4/a07255_1a094560d339c013ea479d7faf9925d354" prot="public" static="no">
        <type><ref refid="d2/dd2/a02279_1af776079ca1d2ee2d1b993f2d34011159" kindref="member">castor::StringMap</ref>&lt; SceneNodeRPtr &gt;</type>
        <definition>using castor3d::SceneNode::SceneNodeMap =  castor::StringMap&lt; SceneNodeRPtr &gt;</definition>
        <argsstring></argsstring>
        <name>SceneNodeMap</name>
        <qualifiedname>castor3d::SceneNode::SceneNodeMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="27" column="1" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d4/dc4/a07255_1a91d84b238e6c1615101a24aa6fe7e234" prot="public" static="no">
        <type><ref refid="d2/dd2/a02279_1ad647f2440f3ac85908e69db85c3706ca" kindref="member">castor::List</ref>&lt; <ref refid="d2/dd2/a02279_1aaac20e91bd22921708388c09abb51422" kindref="member">castor::ReferenceWrapper</ref>&lt; <ref refid="da/d09/a07047" kindref="compound">MovableObject</ref> &gt; &gt;</type>
        <definition>using castor3d::SceneNode::MovableArray =  castor::List&lt; castor::ReferenceWrapper&lt; MovableObject &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MovableArray</name>
        <qualifiedname>castor3d::SceneNode::MovableArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="28" column="1" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d4/dc4/a07255_1ae0114da6c0d65908c72928c61cc2c440" prot="public" static="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t castor3d::SceneNode::Count</definition>
        <argsstring></argsstring>
        <name>Count</name>
        <qualifiedname>castor3d::SceneNode::Count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Le nombre total de noeuds de scène. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="26" column="17" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d4/dc4/a07255_1aeaf401982425c9d2f0aff54e34d4f9f9" prot="public" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1a630e117fd0e01c36bca9c55e7871eb09" kindref="member">OnSceneNodeReparent</ref></type>
        <definition>OnSceneNodeReparent castor3d::SceneNode::onParentChanged</definition>
        <argsstring></argsstring>
        <name>onParentChanged</name>
        <qualifiedname>castor3d::SceneNode::onParentChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal utilisé pour notifier que le noeud a été attaché à un autre. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="363" column="21" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d4/dc4/a07255_1a6426e4d7b529c2ebe980e36e84fb2927" prot="private" static="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t castor3d::SceneNode::CurrentId</definition>
        <argsstring></argsstring>
        <name>CurrentId</name>
        <qualifiedname>castor3d::SceneNode::CurrentId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="366" column="17" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/dc4/a07255_1a2c5e2ce744705a143214e0e3a2c29ffe" prot="private" static="no" mutable="no">
        <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> &amp;</type>
        <definition>Scene&amp; castor3d::SceneNode::m_scene</definition>
        <argsstring></argsstring>
        <name>m_scene</name>
        <qualifiedname>castor3d::SceneNode::m_scene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="367" column="8" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a1e45dd2b922f9690e780a2ffa3ce16a0" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t castor3d::SceneNode::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <qualifiedname>castor3d::SceneNode::m_id</qualifiedname>
        <initializer>{ CurrentId }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="368" column="10" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a7afe33d2d0fa8f8814f9999a3c431df5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::m_static</definition>
        <argsstring></argsstring>
        <name>m_static</name>
        <qualifiedname>castor3d::SceneNode::m_static</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="369" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1ac5b4204138c11a73c481d802d60aefce" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::m_displayable</definition>
        <argsstring></argsstring>
        <name>m_displayable</name>
        <qualifiedname>castor3d::SceneNode::m_displayable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="370" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1ab54bb860c1f486472ee5c5c7be9b9b23" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::m_visible</definition>
        <argsstring></argsstring>
        <name>m_visible</name>
        <qualifiedname>castor3d::SceneNode::m_visible</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="371" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a5282bdbfd9892e7c5223bb3f337edc31" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::m_serialisable</definition>
        <argsstring></argsstring>
        <name>m_serialisable</name>
        <qualifiedname>castor3d::SceneNode::m_serialisable</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="372" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1ad422743d61df49072a383fee4ea06366" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1a09d3481f4a05ba6fbf3d4dede82380d8" kindref="member">castor::Quaternion</ref></type>
        <definition>castor::Quaternion castor3d::SceneNode::m_orientation</definition>
        <argsstring></argsstring>
        <name>m_orientation</name>
        <qualifiedname>castor3d::SceneNode::m_orientation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="373" column="20" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a1a7e1f8c8d2fa16fe9492674ab082c7b" prot="private" static="no" mutable="no">
        <type>castor::Point3f</type>
        <definition>castor::Point3f castor3d::SceneNode::m_position</definition>
        <argsstring></argsstring>
        <name>m_position</name>
        <qualifiedname>castor3d::SceneNode::m_position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="374" column="17" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1aaedfb121d83178dc08b755eff503f6ca" prot="private" static="no" mutable="no">
        <type>castor::Point3f</type>
        <definition>castor::Point3f castor3d::SceneNode::m_scale</definition>
        <argsstring></argsstring>
        <name>m_scale</name>
        <qualifiedname>castor3d::SceneNode::m_scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="375" column="17" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a9ec623e3924b3f2df6cc35736d909b70" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::m_mtxSet</definition>
        <argsstring></argsstring>
        <name>m_mtxSet</name>
        <qualifiedname>castor3d::SceneNode::m_mtxSet</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="376" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="376" bodyend="376"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1af6d779929a7d917eab3a35baadeb7857" prot="private" static="no" mutable="no">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::SceneNode::m_transform</definition>
        <argsstring></argsstring>
        <name>m_transform</name>
        <qualifiedname>castor3d::SceneNode::m_transform</qualifiedname>
        <initializer>{ 1.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="377" column="20" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="377" bodyend="377"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a10cf7171a6269ef58b5d03eb6ff606d8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::m_mtxChanged</definition>
        <argsstring></argsstring>
        <name>m_mtxChanged</name>
        <qualifiedname>castor3d::SceneNode::m_mtxChanged</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="378" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="378" bodyend="378"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a8418ad4110f698684f134098070b1e21" prot="private" static="no" mutable="no">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::SceneNode::m_derivedTransform</definition>
        <argsstring></argsstring>
        <name>m_derivedTransform</name>
        <qualifiedname>castor3d::SceneNode::m_derivedTransform</qualifiedname>
        <initializer>{ 1.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="379" column="20" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a89a2ed75e81ee7c18bbf37ad8af9f536" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneNode::m_derivedMtxChanged</definition>
        <argsstring></argsstring>
        <name>m_derivedMtxChanged</name>
        <qualifiedname>castor3d::SceneNode::m_derivedMtxChanged</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="380" column="6" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="380" bodyend="380"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a52091423e836daef1648266a4b1d9b4b" prot="private" static="no" mutable="no">
        <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> *</type>
        <definition>SceneNode* castor3d::SceneNode::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <qualifiedname>castor3d::SceneNode::m_parent</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="381" column="12" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="381" bodyend="381"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1a8e90729e96e3701df493da5e461b1e5a" prot="private" static="no" mutable="no">
        <type><ref refid="d4/dc4/a07255_1a094560d339c013ea479d7faf9925d354" kindref="member">SceneNodeMap</ref></type>
        <definition>SceneNodeMap castor3d::SceneNode::m_children</definition>
        <argsstring></argsstring>
        <name>m_children</name>
        <qualifiedname>castor3d::SceneNode::m_children</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="382" column="14" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dc4/a07255_1ab077848e514e128b7205f2339db51b15" prot="private" static="no" mutable="no">
        <type><ref refid="d4/dc4/a07255_1a91d84b238e6c1615101a24aa6fe7e234" kindref="member">MovableArray</ref></type>
        <definition>MovableArray castor3d::SceneNode::m_objects</definition>
        <argsstring></argsstring>
        <name>m_objects</name>
        <qualifiedname>castor3d::SceneNode::m_objects</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="383" column="14" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/dc4/a07255_1aefe0e218584c8c9a6e74bbcd41cc7f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneNode::SceneNode</definition>
        <argsstring>(castor::String const &amp;name, Scene &amp;scene, SceneNode *parent, castor::Point3f position, castor::Quaternion orientation, castor::Point3f scale, bool isStatic=true)</argsstring>
        <name>SceneNode</name>
        <qualifiedname>castor3d::SceneNode::SceneNode</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>castor::Point3f</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1a09d3481f4a05ba6fbf3d4dede82380d8" kindref="member">castor::Quaternion</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>castor::Point3f</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du noeud. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>La scène parente. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Le noeud parent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>La position initiale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;orientation initiale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;échelle initiale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isStatic</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> pour un noeud statique. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="51" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a17897d09974e155741bd043e4ef86ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneNode::SceneNode</definition>
        <argsstring>(castor::String const &amp;name, Scene &amp;scene)</argsstring>
        <name>SceneNode</name>
        <qualifiedname>castor3d::SceneNode::SceneNode</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du noeud. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>La scène parente. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="68" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a6d7bd25d7b9df21ef864718d7adb36f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneNode::~SceneNode</definition>
        <argsstring>() override</argsstring>
        <name>~SceneNode</name>
        <qualifiedname>castor3d::SceneNode::~SceneNode</qualifiedname>
        <briefdescription>
<para>Destructeur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="76" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1af198a9ea927ef55738b5b03b0113b339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneNode::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::SceneNode::update</qualifiedname>
        <briefdescription>
<para>Met à jour les matrices du noeud. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="83" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d4/dc4/a07255_1abd66ffbd23659e745cc709e2f5c23282" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::doComputeMatrix</definition>
        <argsstring>()</argsstring>
        <name>doComputeMatrix</name>
        <qualifiedname>castor3d::SceneNode::doComputeMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="352" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a0e21865297f077197eef83a596354589" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::doUpdateChildsDerivedTransform</definition>
        <argsstring>()</argsstring>
        <name>doUpdateChildsDerivedTransform</name>
        <qualifiedname>castor3d::SceneNode::doUpdateChildsDerivedTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="353" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a6e497f4694e7ca67666d1eedb4c5618a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::doAttachTo</definition>
        <argsstring>(SceneNode &amp;node)</argsstring>
        <name>doAttachTo</name>
        <qualifiedname>castor3d::SceneNode::doAttachTo</qualifiedname>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="354" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1aa29f5c8f4be97b05fba00434e8af1c84" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::doDetach</definition>
        <argsstring>() noexcept</argsstring>
        <name>doDetach</name>
        <qualifiedname>castor3d::SceneNode::doDetach</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="355" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a7da76f0e7695b586251ffdb0fdb8f6ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::doAddChild</definition>
        <argsstring>(SceneNode &amp;child)</argsstring>
        <name>doAddChild</name>
        <qualifiedname>castor3d::SceneNode::doAddChild</qualifiedname>
        <param>
          <type><ref refid="d4/dc4/a07255" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="356" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1a2d2b7b8e505e3ef2be3077a00d880e16" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::doDetachChild</definition>
        <argsstring>(castor::String const &amp;childName) noexcept</argsstring>
        <name>doDetachChild</name>
        <qualifiedname>castor3d::SceneNode::doDetachChild</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>childName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="357" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/dc4/a07255_1ac20d22875e4382fd986fba07f326ec46" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::SceneNode::doDetachChildren</definition>
        <argsstring>(bool cleanup) noexcept</argsstring>
        <name>doDetachChildren</name>
        <qualifiedname>castor3d::SceneNode::doDetachChildren</qualifiedname>
        <param>
          <type>bool</type>
          <declname>cleanup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/SceneNode.hpp" line="358" column="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Animable</label>
        <link refid="d2/d7a/a03115"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor::OwnedBy&lt; AnimableHandlerT &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; AnimableHandlerT &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::AnimableT&lt; AnimableHandlerT &gt;</label>
        <link refid="d2/d7a/a03115"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::SceneNode</label>
        <link refid="d4/dc4/a07255"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="6">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Animable</label>
        <link refid="d2/d7a/a03115"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor::OwnedBy&lt; AnimableHandlerT &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; AnimableHandlerT &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>castor::SignalT&lt; OnSceneNodeReparentFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; OnSceneNodeReparentFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::AnimableT&lt; AnimableHandlerT &gt;</label>
        <link refid="d2/d7a/a03115"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::SceneNode</label>
        <link refid="d4/dc4/a07255"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>onParentChanged</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="9">
        <label>castor::NonCopyable</label>
        <link refid="da/d36/a08315"/>
      </node>
      <node id="6">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="10">
        <label>castor::SignalT&lt; Function &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Scene/SceneNode.hpp" line="19" column="1" bodyfile="Castor3D/Scene/SceneNode.hpp" bodystart="22" bodyend="384"/>
    <listofallmembers>
      <member refid="d2/d7a/a03115_1af537797cc01d440454c256b7d93134a7" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>addAnimation</name></member>
      <member refid="d4/dc4/a07255_1a80dcad8075d1590de5e8b16f73338d92" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>addChild</name></member>
      <member refid="d2/d7a/a03115_1acce1c5516d8c2b672521f796eca097f6" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>AnimableT</name></member>
      <member refid="d2/d7a/a03115_1af0266ce74ded3ef288e8d246ed2b868c" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>AnimableT</name></member>
      <member refid="d2/d7a/a03115_1aa7d1ea320b354786c4d88e06999ce873" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>AnimableT</name></member>
      <member refid="d2/d7a/a03115_1a29ec9b70c2d5c178be151157abb4caa4" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>Animation</name></member>
      <member refid="d2/d7a/a03115_1a93a60b9605417569c09c31e9a51fd9e3" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>AnimationPtr</name></member>
      <member refid="d2/d7a/a03115_1a00d1886675c6ab534afd2fc44ba3e4b4" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>AnimationsMap</name></member>
      <member refid="d4/dc4/a07255_1a1dd4a168d6a13cf4bb036b778c92af4f" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>attachObject</name></member>
      <member refid="d4/dc4/a07255_1ab35e18173e866c2b1fae60ffbd6c7abd" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>attachTo</name></member>
      <member refid="d2/d7a/a03115_1a54363c138d022e02a6da2881e8cfcea2" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>cleanupAnimations</name></member>
      <member refid="d4/dc4/a07255_1ae0114da6c0d65908c72928c61cc2c440" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>Count</name></member>
      <member refid="d4/dc4/a07255_1a86d0b37ba3414a311a8c60a1922d784a" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>createAnimation</name></member>
      <member refid="d4/dc4/a07255_1a6426e4d7b529c2ebe980e36e84fb2927" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>CurrentId</name></member>
      <member refid="d4/dc4/a07255_1a44d77b68c1f9f11332f2010f7e76d0e8" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>detach</name></member>
      <member refid="d4/dc4/a07255_1a8611c5c85479ff8f3918374ca233ccf3" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>detachChild</name></member>
      <member refid="d4/dc4/a07255_1a73702d88ff7b24f38b32ca1ee947b96f" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>detachChild</name></member>
      <member refid="d4/dc4/a07255_1ae782c78086e46be3a2d853f44aaeb068" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>detachChildren</name></member>
      <member refid="d4/dc4/a07255_1a097196735a0583f426b9ec37bdb87ef5" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>detachObject</name></member>
      <member refid="d4/dc4/a07255_1a7da76f0e7695b586251ffdb0fdb8f6ac" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doAddChild</name></member>
      <member refid="d4/dc4/a07255_1a6e497f4694e7ca67666d1eedb4c5618a" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doAttachTo</name></member>
      <member refid="d4/dc4/a07255_1abd66ffbd23659e745cc709e2f5c23282" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doComputeMatrix</name></member>
      <member refid="d4/dc4/a07255_1aa29f5c8f4be97b05fba00434e8af1c84" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doDetach</name></member>
      <member refid="d4/dc4/a07255_1a2d2b7b8e505e3ef2be3077a00d880e16" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doDetachChild</name></member>
      <member refid="d4/dc4/a07255_1ac20d22875e4382fd986fba07f326ec46" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doDetachChildren</name></member>
      <member refid="d2/d7a/a03115_1a1bebab2a91849a6d03743a60742855d2" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doGetAnimation</name></member>
      <member refid="d2/d7a/a03115_1ab0befd7350748e1d432232aef30bf3af" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doGetAnimation</name></member>
      <member refid="d2/d7a/a03115_1a5c0a28cfebad1a69862d34d5f15f9341" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doRemoveAnimation</name></member>
      <member refid="d4/dc4/a07255_1a0e21865297f077197eef83a596354589" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>doUpdateChildsDerivedTransform</name></member>
      <member refid="d2/d7a/a03115_1ab4eee25a3c5fa4b3ac239c9d94e41aed" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getAnimation</name></member>
      <member refid="d2/d7a/a03115_1a9a19c79051ae04d61170004d981d72c3" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getAnimation</name></member>
      <member refid="d2/d7a/a03115_1a7b34275f160a799db83c8d4fed06aed2" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getAnimations</name></member>
      <member refid="d4/dc4/a07255_1a55f4c11837ba24cd0da48dbd5efb6e5f" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getAxisAngle</name></member>
      <member refid="d4/dc4/a07255_1aec6b7961111af199607ab09f54b7cb5a" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getChild</name></member>
      <member refid="d4/dc4/a07255_1a16aa3199224d152121b8820033641f81" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getChildren</name></member>
      <member refid="d4/dc4/a07255_1af09b4e9893a5c9efad520d9d01eed1b7" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getDerivedOrientation</name></member>
      <member refid="d4/dc4/a07255_1abcbe420410abfafdf3ab6a785c921bfb" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getDerivedPosition</name></member>
      <member refid="d4/dc4/a07255_1aa78ad9bbff095a15e6d4beef4440bc42" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getDerivedScale</name></member>
      <member refid="d4/dc4/a07255_1a11a26c63c895a827d6dba95144708708" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getDerivedTransformationMatrix</name></member>
      <member refid="d4/dc4/a07255_1a316cb9c76b08e109e9d04e3d6516bb40" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getId</name></member>
      <member refid="d5/d3c/a08223_1abc1fa9ec1a50d2023373baa4d4c79519" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getName</name></member>
      <member refid="d4/dc4/a07255_1adce548e6630a30009b9801089432185e" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getObjects</name></member>
      <member refid="d4/dc4/a07255_1a3355a4973617918f50f7247cf3cfea06" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getOrientation</name></member>
      <member refid="d6/da8/a08227_1ae200b1c3bde17ab092b0d0b37095ff76" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getOwner</name></member>
      <member refid="d4/dc4/a07255_1a52eabb5ad2b6fdb17992e6c9e26d07b3" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getParent</name></member>
      <member refid="d4/dc4/a07255_1aa814e7d9e348b013f1f2dd565612474d" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getPosition</name></member>
      <member refid="d4/dc4/a07255_1aba058ef71d4f4b8646e7fe423d4186d1" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getScale</name></member>
      <member refid="d4/dc4/a07255_1acaa520a484502b84dbdfd597080a9415" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getScene</name></member>
      <member refid="d4/dc4/a07255_1a7ca3301f4f4eba9e9295bbc6926062f2" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>getTransformationMatrix</name></member>
      <member refid="d2/d7a/a03115_1ab96f3e18b0d1e54dccfa3fa9078f773f" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>hasAnimation</name></member>
      <member refid="d2/d7a/a03115_1ad49b8e50e5ed96d16d9c50c3854e0a22" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>hasAnimation</name></member>
      <member refid="d4/dc4/a07255_1a89f25fc998f6c961588bca313ce0f726" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>hasChild</name></member>
      <member refid="d4/dc4/a07255_1aabe501ab99cf5191ffe0bd8b31e530f9" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>isDisplayable</name></member>
      <member refid="d4/dc4/a07255_1a785fe25fac1a32c79da6d6452da1a720" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>isModified</name></member>
      <member refid="d4/dc4/a07255_1acd391d7a1d1dd0b9fa14a1a904493800" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>isSerialisable</name></member>
      <member refid="d4/dc4/a07255_1aa382cd84926f9b2b9a1a3d8a1f4749ff" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>isStatic</name></member>
      <member refid="d4/dc4/a07255_1aca030d3126c0bd5dd8bdf1133147394d" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>isVisible</name></member>
      <member refid="d2/d7a/a03115_1a854b611cc40d0a6fd1f4855c2bfac744" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_animations</name></member>
      <member refid="d4/dc4/a07255_1a8e90729e96e3701df493da5e461b1e5a" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_children</name></member>
      <member refid="d4/dc4/a07255_1a89a2ed75e81ee7c18bbf37ad8af9f536" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_derivedMtxChanged</name></member>
      <member refid="d4/dc4/a07255_1a8418ad4110f698684f134098070b1e21" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_derivedTransform</name></member>
      <member refid="d4/dc4/a07255_1ac5b4204138c11a73c481d802d60aefce" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_displayable</name></member>
      <member refid="d4/dc4/a07255_1a1e45dd2b922f9690e780a2ffa3ce16a0" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_id</name></member>
      <member refid="d4/dc4/a07255_1a10cf7171a6269ef58b5d03eb6ff606d8" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_mtxChanged</name></member>
      <member refid="d4/dc4/a07255_1a9ec623e3924b3f2df6cc35736d909b70" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_mtxSet</name></member>
      <member refid="d5/d3c/a08223_1a869b429a7190ecf614d8221b270e6dca" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_name</name></member>
      <member refid="d4/dc4/a07255_1ab077848e514e128b7205f2339db51b15" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_objects</name></member>
      <member refid="d4/dc4/a07255_1ad422743d61df49072a383fee4ea06366" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_orientation</name></member>
      <member refid="d4/dc4/a07255_1a52091423e836daef1648266a4b1d9b4b" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_parent</name></member>
      <member refid="d4/dc4/a07255_1a1a7e1f8c8d2fa16fe9492674ab082c7b" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_position</name></member>
      <member refid="d4/dc4/a07255_1aaedfb121d83178dc08b755eff503f6ca" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_scale</name></member>
      <member refid="d4/dc4/a07255_1a2c5e2ce744705a143214e0e3a2c29ffe" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_scene</name></member>
      <member refid="d4/dc4/a07255_1a5282bdbfd9892e7c5223bb3f337edc31" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_serialisable</name></member>
      <member refid="d4/dc4/a07255_1a7afe33d2d0fa8f8814f9999a3c431df5" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_static</name></member>
      <member refid="d4/dc4/a07255_1af6d779929a7d917eab3a35baadeb7857" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_transform</name></member>
      <member refid="d4/dc4/a07255_1ab54bb860c1f486472ee5c5c7be9b9b23" prot="private" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>m_visible</name></member>
      <member refid="d4/dc4/a07255_1a1bd7296955f74bd95b15ebdbcfddd848" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>markDirty</name></member>
      <member refid="d4/dc4/a07255_1a91d84b238e6c1615101a24aa6fe7e234" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>MovableArray</name></member>
      <member refid="d5/d3c/a08223_1a4a6e4748603541685b04f95fb91efb26" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>NamedBaseT</name></member>
      <member refid="d4/dc4/a07255_1aeaf401982425c9d2f0aff54e34d4f9f9" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>onParentChanged</name></member>
      <member refid="d2/d7a/a03115_1a1a971d2d604c698dc954813ff5ab38e6" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>operator=</name></member>
      <member refid="d2/d7a/a03115_1a207720462d3a7e48b69b6ae188e4414b" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>operator=</name></member>
      <member refid="d6/da8/a08227_1a5efafa99a79dd1036a6ae3f3242a366b" prot="protected" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>OwnedBy</name></member>
      <member refid="d4/dc4/a07255_1a17527a2183f7826cfcda52330fa96fa0" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>pitch</name></member>
      <member refid="d4/dc4/a07255_1a273419e698d74e32d4d67c538cba995b" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>removeAnimation</name></member>
      <member refid="d5/d3c/a08223_1a2d62ce1925efead03c4e0842c06b3e11" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>rename</name></member>
      <member refid="d4/dc4/a07255_1a838858f96a34ff436fc34ca16f137875" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>roll</name></member>
      <member refid="d4/dc4/a07255_1aba03dfa8151020460e42a6fe7718ebb9" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>rotate</name></member>
      <member refid="d4/dc4/a07255_1af9241e4c1fc060ba6445b7d159e24801" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>scale</name></member>
      <member refid="d4/dc4/a07255_1aefe0e218584c8c9a6e74bbcd41cc7f12" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>SceneNode</name></member>
      <member refid="d4/dc4/a07255_1a17897d09974e155741bd043e4ef86ca5" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>SceneNode</name></member>
      <member refid="d4/dc4/a07255_1a094560d339c013ea479d7faf9925d354" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>SceneNodeMap</name></member>
      <member refid="d4/dc4/a07255_1a8d7a34239fd5667b32e9db5041acf6ec" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>setOrientation</name></member>
      <member refid="d4/dc4/a07255_1aa1f1a9ac6fb75ffeb3aadd3da4619830" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>setPosition</name></member>
      <member refid="d4/dc4/a07255_1a5b885e1f9687b49d4cfdd160ac020802" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>setScale</name></member>
      <member refid="d4/dc4/a07255_1a3960712463a75938e5a8b5d1a5645534" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>setSerialisable</name></member>
      <member refid="d4/dc4/a07255_1ac3b3bc7565251f95197fcbdcd56b1325" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>setTransformationMatrix</name></member>
      <member refid="d4/dc4/a07255_1a26bb8a174d85c97049b3c942b2cd43e1" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>setVisible</name></member>
      <member refid="d4/dc4/a07255_1aab7b823683cf1a24b2c911e924cf7aee" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>translate</name></member>
      <member refid="d4/dc4/a07255_1af198a9ea927ef55738b5b03b0113b339" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>update</name></member>
      <member refid="d4/dc4/a07255_1a65988602cd539e898204c6782ffe4105" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>yaw</name></member>
      <member refid="d2/d7a/a03115_1ac71b2ee80c71d5f256f00be3966cf2cf" prot="public" virt="virtual"><scope>castor3d::SceneNode</scope><name>~AnimableT</name></member>
      <member refid="d4/dc4/a07255_1a6d7bd25d7b9df21ef864718d7adb36f0" prot="public" virt="non-virtual"><scope>castor3d::SceneNode</scope><name>~SceneNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
