<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d3/da5/a07555" kind="class" language="C++" prot="public">
    <compoundname>castor3d::shader::Materials</compoundname>
    <basecompoundref refid="dd/d24/a07475" prot="public" virt="non-virtual">castor3d::shader::BufferT&lt; Material &gt;</basecompoundref>
    <includes local="no">GlslMaterial.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/da5/a07555_1ac445d0ca68329645032b2ecd00e992c3" prot="private" static="no" mutable="no">
        <type><ref refid="d5/d49/a07611" kindref="compound">PassShaders</ref> &amp;</type>
        <definition>PassShaders&amp; castor3d::shader::Materials::m_passShaders</definition>
        <argsstring></argsstring>
        <name>m_passShaders</name>
        <qualifiedname>castor3d::shader::Materials::m_passShaders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="209" column="14" bodyfile="Castor3D/Shader/Shaders/GlslMaterial.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/da5/a07555_1aa794b4f5a8dbed1433825f460b8b09f6" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1af776079ca1d2ee2d1b993f2d34011159" kindref="member">castor::StringMap</ref>&lt; BufferBaseUPtr &gt;</type>
        <definition>castor::StringMap&lt; BufferBaseUPtr &gt; castor3d::shader::Materials::m_buffers</definition>
        <argsstring></argsstring>
        <name>m_buffers</name>
        <qualifiedname>castor3d::shader::Materials::m_buffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="210" column="19" bodyfile="Castor3D/Shader/Shaders/GlslMaterial.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/da5/a07555_1ac758f8db0b5056d529bd502b2a914ffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::shader::Materials::Materials</definition>
        <argsstring>(sdw::ShaderWriter &amp;writer, PassShaders &amp;passShaders)</argsstring>
        <name>Materials</name>
        <qualifiedname>castor3d::shader::Materials::Materials</qualifiedname>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="d5/d49/a07611" kindref="compound">PassShaders</ref> &amp;</type>
          <declname>passShaders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="91" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1ad751d30a152c9b551d2e5b4da8780212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::shader::Materials::Materials</definition>
        <argsstring>(sdw::ShaderWriter &amp;writer, PassShaders &amp;passShaders, uint32_t binding, uint32_t set, bool enable=true)</argsstring>
        <name>Materials</name>
        <qualifiedname>castor3d::shader::Materials::Materials</qualifiedname>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="d5/d49/a07611" kindref="compound">PassShaders</ref> &amp;</type>
          <declname>passShaders</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>binding</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>set</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="93" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1a835548888655642a797d62d08d4dedf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::shader::Materials::Materials</definition>
        <argsstring>(Engine const &amp;engine, sdw::ShaderWriter &amp;writer, PassShaders &amp;passShaders, uint32_t binding, uint32_t set, uint32_t &amp;specifics, bool enable=true)</argsstring>
        <name>Materials</name>
        <qualifiedname>castor3d::shader::Materials::Materials</qualifiedname>
        <param>
          <type><ref refid="d8/d4f/a03703" kindref="compound">Engine</ref> const &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="d5/d49/a07611" kindref="compound">PassShaders</ref> &amp;</type>
          <declname>passShaders</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>binding</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>set</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>specifics</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="98" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1a95b6acd786f8588ee40df59e62d49569" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1a924293b8f4fc39410f651e98ed535eb0" kindref="member">ComponentModeFlags</ref></type>
        <definition>C3D_API ComponentModeFlags castor3d::shader::Materials::getFilter</definition>
        <argsstring>() const</argsstring>
        <name>getFilter</name>
        <qualifiedname>castor3d::shader::Materials::getFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="106" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1aff60c314255090dc1c54ac581d951589" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TypeT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::shader::Materials::hasSpecificsBuffer</definition>
        <argsstring>() const</argsstring>
        <name>hasSpecificsBuffer</name>
        <qualifiedname>castor3d::shader::Materials::hasSpecificsBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="109" column="6" bodyfile="Castor3D/Shader/Shaders/GlslMaterial.hpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1afb3500b3dd8748a6300fea1feda90fef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TypeT</type>
          </param>
        </templateparamlist>
        <type><ref refid="dd/d24/a07475" kindref="compound">BufferT</ref>&lt; TypeT &gt; const &amp;</type>
        <definition>BufferT&lt; TypeT &gt; const  &amp; castor3d::shader::Materials::getSpecificsBuffer</definition>
        <argsstring>() const</argsstring>
        <name>getSpecificsBuffer</name>
        <qualifiedname>castor3d::shader::Materials::getSpecificsBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="115" column="16" bodyfile="Castor3D/Shader/Shaders/GlslMaterial.hpp" bodystart="115" bodyend="125"/>
        <references refid="d0/dce/a01946_1ab9410fa9a6a0a8fa4bce2bebc9d2edaf" compoundref="d0/dce/a01946" startline="203" endline="204">CU_Exception</references>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1a484a079b6d901beaa62a0b60cb42226d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>sdw::UInt</type>
        <definition>sdw::UInt castor3d::shader::Materials::getPassTypesCount</definition>
        <argsstring>() const</argsstring>
        <name>getPassTypesCount</name>
        <qualifiedname>castor3d::shader::Materials::getPassTypesCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="127" column="11" bodyfile="Castor3D/Shader/Shaders/GlslMaterial.hpp" bodystart="127" bodyend="130"/>
        <references refid="d1/d33/a07471_1adb02316d9ef1fd07d4c12df96e79de6d" compoundref="d9/dfd/a01610" startline="46" endline="51">castor3d::shader::BufferBase::getSecondCount</references>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1a37424613ba5a62cef0aa1f18e576bbcc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d98/a07551" kindref="compound">Material</ref></type>
        <definition>Material castor3d::shader::Materials::getMaterial</definition>
        <argsstring>(sdw::UInt const &amp;index) const</argsstring>
        <name>getMaterial</name>
        <qualifiedname>castor3d::shader::Materials::getMaterial</qualifiedname>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="132" column="10" bodyfile="Castor3D/Shader/Shaders/GlslMaterial.hpp" bodystart="132" bodyend="135"/>
        <references refid="dd/d24/a07475_1a7fed7db7c6ddd5ec43d4b243a608ee8a" compoundref="d9/dfd/a01610" startline="116" endline="122">castor3d::shader::BufferT&lt; Material &gt;::getData</references>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1af1eae8012d89003041837e3ae25be569" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; castor3d::shader::Materials::getPassShaders</definition>
        <argsstring>() const</argsstring>
        <name>getPassShaders</name>
        <qualifiedname>castor3d::shader::Materials::getPassShaders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="137" column="7" bodyfile="Castor3D/Shader/Shaders/GlslMaterial.hpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1ae4f869dcf237f2337dfb5e7097e620ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::Materials::blendMaterials</definition>
        <argsstring>(PipelineFlags const &amp;flags, shader::TextureConfigurations const &amp;textureConfigs, shader::TextureAnimations const &amp;textureAnims, sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;maps, Material &amp;material, sdw::UInt const &amp;materialId, sdw::Array&lt; sdw::Vec4 &gt; const &amp;passMultipliers, BlendComponents &amp;output) const</argsstring>
        <name>blendMaterials</name>
        <qualifiedname>castor3d::shader::Materials::blendMaterials</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="d9/d7c/a07707" kindref="compound">shader::TextureConfigurations</ref> const &amp;</type>
          <declname>textureConfigs</declname>
        </param>
        <param>
          <type><ref refid="d2/d61/a07699" kindref="compound">shader::TextureAnimations</ref> const &amp;</type>
          <declname>textureAnims</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;</type>
          <declname>maps</declname>
        </param>
        <param>
          <type><ref refid="d8/d98/a07551" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>materialId</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::Vec4 &gt; const &amp;</type>
          <declname>passMultipliers</declname>
        </param>
        <param>
          <type><ref refid="da/dc6/a07459" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="146" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1a78f2396ffe627b482c337a181c0ee0fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::Materials::blendMaterials</definition>
        <argsstring>(VkCompareOp alphaFunc, PipelineFlags const &amp;flags, shader::TextureConfigurations const &amp;textureConfigs, shader::TextureAnimations const &amp;textureAnims, sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;maps, Material &amp;material, sdw::UInt const &amp;materialId, sdw::Array&lt; sdw::Vec4 &gt; const &amp;passMultipliers, BlendComponents &amp;output) const</argsstring>
        <name>blendMaterials</name>
        <qualifiedname>castor3d::shader::Materials::blendMaterials</qualifiedname>
        <param>
          <type>VkCompareOp</type>
          <declname>alphaFunc</declname>
        </param>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="d9/d7c/a07707" kindref="compound">shader::TextureConfigurations</ref> const &amp;</type>
          <declname>textureConfigs</declname>
        </param>
        <param>
          <type><ref refid="d2/d61/a07699" kindref="compound">shader::TextureAnimations</ref> const &amp;</type>
          <declname>textureAnims</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;</type>
          <declname>maps</declname>
        </param>
        <param>
          <type><ref refid="d8/d98/a07551" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>materialId</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::Vec4 &gt; const &amp;</type>
          <declname>passMultipliers</declname>
        </param>
        <param>
          <type><ref refid="da/dc6/a07459" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="157" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1af6fa4b6053b4841985088902185a0478" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::Materials::blendMaterials</definition>
        <argsstring>(DebugOutput &amp;debugOutput, VkCompareOp alphaFunc, PipelineFlags const &amp;flags, shader::TextureConfigurations const &amp;textureConfigs, shader::TextureAnimations const &amp;textureAnims, sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;maps, Material &amp;material, sdw::UInt const &amp;materialId, sdw::Array&lt; sdw::Vec4 &gt; const &amp;passMultipliers, BlendComponents &amp;output) const</argsstring>
        <name>blendMaterials</name>
        <qualifiedname>castor3d::shader::Materials::blendMaterials</qualifiedname>
        <param>
          <type><ref refid="d7/d68/a07491" kindref="compound">DebugOutput</ref> &amp;</type>
          <declname>debugOutput</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>alphaFunc</declname>
        </param>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="d9/d7c/a07707" kindref="compound">shader::TextureConfigurations</ref> const &amp;</type>
          <declname>textureConfigs</declname>
        </param>
        <param>
          <type><ref refid="d2/d61/a07699" kindref="compound">shader::TextureAnimations</ref> const &amp;</type>
          <declname>textureAnims</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;</type>
          <declname>maps</declname>
        </param>
        <param>
          <type><ref refid="d8/d98/a07551" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>materialId</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::Vec4 &gt; const &amp;</type>
          <declname>passMultipliers</declname>
        </param>
        <param>
          <type><ref refid="da/dc6/a07459" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="166" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1a31cbd4aeef2d0a843d74abfccf7b567e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::Materials::blendMaterials</definition>
        <argsstring>(bool opaque, PipelineFlags const &amp;flags, shader::TextureConfigurations const &amp;textureConfigs, shader::TextureAnimations const &amp;textureAnims, sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;maps, Material &amp;material, sdw::UInt const &amp;materialId, sdw::Array&lt; sdw::Vec4 &gt; const &amp;passMultipliers, BlendComponents &amp;output) const</argsstring>
        <name>blendMaterials</name>
        <qualifiedname>castor3d::shader::Materials::blendMaterials</qualifiedname>
        <param>
          <type>bool</type>
          <declname>opaque</declname>
        </param>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="d9/d7c/a07707" kindref="compound">shader::TextureConfigurations</ref> const &amp;</type>
          <declname>textureConfigs</declname>
        </param>
        <param>
          <type><ref refid="d2/d61/a07699" kindref="compound">shader::TextureAnimations</ref> const &amp;</type>
          <declname>textureAnims</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;</type>
          <declname>maps</declname>
        </param>
        <param>
          <type><ref refid="d8/d98/a07551" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>materialId</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::Vec4 &gt; const &amp;</type>
          <declname>passMultipliers</declname>
        </param>
        <param>
          <type><ref refid="da/dc6/a07459" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="177" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1ab35f949ceffb64e9077ad8d53db351e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::Materials::blendMaterials</definition>
        <argsstring>(DebugOutput &amp;debugOutput, bool opaque, PipelineFlags const &amp;flags, shader::TextureConfigurations const &amp;textureConfigs, shader::TextureAnimations const &amp;textureAnims, sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;maps, Material &amp;material, sdw::UInt const &amp;materialId, sdw::Array&lt; sdw::Vec4 &gt; const &amp;passMultipliers, BlendComponents &amp;output) const</argsstring>
        <name>blendMaterials</name>
        <qualifiedname>castor3d::shader::Materials::blendMaterials</qualifiedname>
        <param>
          <type><ref refid="d7/d68/a07491" kindref="compound">DebugOutput</ref> &amp;</type>
          <declname>debugOutput</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>opaque</declname>
        </param>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="d9/d7c/a07707" kindref="compound">shader::TextureConfigurations</ref> const &amp;</type>
          <declname>textureConfigs</declname>
        </param>
        <param>
          <type><ref refid="d2/d61/a07699" kindref="compound">shader::TextureAnimations</ref> const &amp;</type>
          <declname>textureAnims</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;</type>
          <declname>maps</declname>
        </param>
        <param>
          <type><ref refid="d8/d98/a07551" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>materialId</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::Vec4 &gt; const &amp;</type>
          <declname>passMultipliers</declname>
        </param>
        <param>
          <type><ref refid="da/dc6/a07459" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="186" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d3/da5/a07555_1a36922f743dcdb6970fd2886802e50410" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::shader::Materials::applyMaterialMaps</definition>
        <argsstring>(PipelineFlags const &amp;flags, TextureConfigurations const &amp;textureConfigs, TextureAnimations const &amp;textureAnims, sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;maps, Material const &amp;material, BlendComponents &amp;components) const</argsstring>
        <name>applyMaterialMaps</name>
        <qualifiedname>castor3d::shader::Materials::applyMaterialMaps</qualifiedname>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="d9/d7c/a07707" kindref="compound">TextureConfigurations</ref> const &amp;</type>
          <declname>textureConfigs</declname>
        </param>
        <param>
          <type><ref refid="d2/d61/a07699" kindref="compound">TextureAnimations</ref> const &amp;</type>
          <declname>textureAnims</declname>
        </param>
        <param>
          <type>sdw::Array&lt; sdw::CombinedImage2DRgba32 &gt; const &amp;</type>
          <declname>maps</declname>
        </param>
        <param>
          <type><ref refid="d8/d98/a07551" kindref="compound">Material</ref> const &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type><ref refid="da/dc6/a07459" kindref="compound">BlendComponents</ref> &amp;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="197" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/da5/a07555_1a8fb21ce83dec804accea03011e81d043" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::shader::Materials::doDisplayDebug</definition>
        <argsstring>(DebugOutput &amp;debugOutput, BlendComponents const &amp;components) const</argsstring>
        <name>doDisplayDebug</name>
        <qualifiedname>castor3d::shader::Materials::doDisplayDebug</qualifiedname>
        <param>
          <type><ref refid="d7/d68/a07491" kindref="compound">DebugOutput</ref> &amp;</type>
          <declname>debugOutput</declname>
        </param>
        <param>
          <type><ref refid="da/dc6/a07459" kindref="compound">BlendComponents</ref> const &amp;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="205" column="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor3d::shader::BufferT&lt; Material &gt;</label>
        <link refid="dd/d24/a07475"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Material &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::shader::BufferBase</label>
        <link refid="d1/d33/a07471"/>
      </node>
      <node id="4">
        <label>castor3d::shader::BufferT&lt; DataT &gt;</label>
        <link refid="dd/d24/a07475"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::shader::Materials</label>
        <link refid="d3/da5/a07555"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>castor3d::shader::BufferT&lt; Material &gt;</label>
        <link refid="dd/d24/a07475"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; Material &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::basic_string&lt; mbchar &gt;</label>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; mbchar &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::shader::BufferBase</label>
        <link refid="d1/d33/a07471"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_variableName</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>castor3d::shader::BufferT&lt; DataT &gt;</label>
        <link refid="dd/d24/a07475"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::shader::Materials</label>
        <link refid="d3/da5/a07555"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Shader/Shaders/GlslMaterial.hpp" line="87" column="1" bodyfile="Castor3D/Shader/Shaders/GlslMaterial.hpp" bodystart="89" bodyend="211"/>
    <listofallmembers>
      <member refid="d3/da5/a07555_1a36922f743dcdb6970fd2886802e50410" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>applyMaterialMaps</name></member>
      <member refid="d3/da5/a07555_1ae4f869dcf237f2337dfb5e7097e620ea" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>blendMaterials</name></member>
      <member refid="d3/da5/a07555_1a78f2396ffe627b482c337a181c0ee0fb" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>blendMaterials</name></member>
      <member refid="d3/da5/a07555_1af6fa4b6053b4841985088902185a0478" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>blendMaterials</name></member>
      <member refid="d3/da5/a07555_1a31cbd4aeef2d0a843d74abfccf7b567e" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>blendMaterials</name></member>
      <member refid="d3/da5/a07555_1ab35f949ceffb64e9077ad8d53db351e3" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>blendMaterials</name></member>
      <member refid="d1/d33/a07471_1aad973b9b301d60b112cb38fe719e1ce9" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>BufferBase</name></member>
      <member refid="dd/d24/a07475_1a17153c98365eceff42a4e2067c48ea5d" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>BufferT</name></member>
      <member refid="d3/da5/a07555_1a8fb21ce83dec804accea03011e81d043" prot="private" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>doDisplayDebug</name></member>
      <member refid="d1/d33/a07471_1ac39085e1f563915a9270c99d3837a6b7" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getCount</name></member>
      <member refid="dd/d24/a07475_1a7fed7db7c6ddd5ec43d4b243a608ee8a" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getData</name></member>
      <member refid="d3/da5/a07555_1a95b6acd786f8588ee40df59e62d49569" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getFilter</name></member>
      <member refid="d1/d33/a07471_1af00addb76247551b7afa557e5b366580" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getFirstCount</name></member>
      <member refid="d1/d33/a07471_1ae7c2ff75adb43ff14450a561fe3ea5cd" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getFourthCount</name></member>
      <member refid="d3/da5/a07555_1a37424613ba5a62cef0aa1f18e576bbcc" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getMaterial</name></member>
      <member refid="d3/da5/a07555_1af1eae8012d89003041837e3ae25be569" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getPassShaders</name></member>
      <member refid="d3/da5/a07555_1a484a079b6d901beaa62a0b60cb42226d" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getPassTypesCount</name></member>
      <member refid="d1/d33/a07471_1adb02316d9ef1fd07d4c12df96e79de6d" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getSecondCount</name></member>
      <member refid="d3/da5/a07555_1afb3500b3dd8748a6300fea1feda90fef" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getSpecificsBuffer</name></member>
      <member refid="d1/d33/a07471_1adc3bec1abc05499dc522dcb7b1288a12" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getThirdCount</name></member>
      <member refid="d1/d33/a07471_1a30e5f486cf48f99e981f62c0eaf4c4f2" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>getWriter</name></member>
      <member refid="d3/da5/a07555_1aff60c314255090dc1c54ac581d951589" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>hasSpecificsBuffer</name></member>
      <member refid="d1/d33/a07471_1a17f3f731aeca6327e611dd45636d0760" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>isEnabled</name></member>
      <member refid="d3/da5/a07555_1aa794b4f5a8dbed1433825f460b8b09f6" prot="private" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>m_buffers</name></member>
      <member refid="d3/da5/a07555_1ac445d0ca68329645032b2ecd00e992c3" prot="private" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>m_passShaders</name></member>
      <member refid="d1/d33/a07471_1a191c4581692c6431bab5584af5fb96bd" prot="protected" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>m_ssbo</name></member>
      <member refid="d1/d33/a07471_1a90c6502a1d74d92926b8f048c62786e4" prot="protected" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>m_variableName</name></member>
      <member refid="d1/d33/a07471_1a8094a884d182023869e7b4a9be80c93e" prot="protected" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>m_writer</name></member>
      <member refid="d3/da5/a07555_1ac758f8db0b5056d529bd502b2a914ffe" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>Materials</name></member>
      <member refid="d3/da5/a07555_1ad751d30a152c9b551d2e5b4da8780212" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>Materials</name></member>
      <member refid="d3/da5/a07555_1a835548888655642a797d62d08d4dedf8" prot="public" virt="non-virtual"><scope>castor3d::shader::Materials</scope><name>Materials</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
