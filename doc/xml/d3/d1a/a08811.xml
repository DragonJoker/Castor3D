<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d3/d1a/a08811" kind="struct" language="C++" prot="public">
    <compoundname>castor::PixelIterator</compoundname>
    <includes local="no">PixelIterator.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="d2/dd2/a02279_1ab7ddacfc1253b707a0048b8425b0f055" kindref="member">PixelFormat</ref></type>
        <declname>PF</declname>
        <defname>PF</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d3/d1a/a08811_1aced823f5904327ae9ffae1d40e1b9659" prot="public" static="no">
        <type><ref refid="d6/d41/a08799" kindref="compound">Pixel</ref>&lt; PF &gt;</type>
        <definition>using castor::PixelIterator&lt; PF &gt;::value_type =  Pixel&lt; PF &gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>castor::PixelIterator::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="20" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d1a/a08811_1a557a729fb74ef30443ead2fcf605e7fa" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using castor::PixelIterator&lt; PF &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>castor::PixelIterator::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="21" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d1a/a08811_1a5c3ebf4ab8392db0a10c85749646f63f" prot="public" static="no">
        <type><ref refid="d6/d41/a08799" kindref="compound">Pixel</ref>&lt; PF &gt; *</type>
        <definition>using castor::PixelIterator&lt; PF &gt;::pointer =  Pixel&lt; PF &gt; *</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>castor::PixelIterator::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="22" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d1a/a08811_1aba621a49586db7339518b73b7fdb2504" prot="public" static="no">
        <type><ref refid="d6/d41/a08799" kindref="compound">Pixel</ref>&lt; PF &gt; &amp;</type>
        <definition>using castor::PixelIterator&lt; PF &gt;::reference =  Pixel&lt; PF &gt; &amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>castor::PixelIterator::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="23" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d1a/a08811_1a5972351d752446feae994d4c7426e1eb" prot="public" static="no">
        <type><ref refid="d6/d41/a08799" kindref="compound">Pixel</ref>&lt; PF &gt;</type>
        <definition>using castor::PixelIterator&lt; PF &gt;::pixel_type =  Pixel&lt; PF &gt;</definition>
        <argsstring></argsstring>
        <name>pixel_type</name>
        <qualifiedname>castor::PixelIterator::pixel_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="25" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d1a/a08811_1a478bff40ff756959d5bfc6547f574acd" prot="public" static="no">
        <type><ref refid="dd/df9/a08987_1adb1ea170c68df343dcd6e2f2364f0877" kindref="member">PxBufferBase::PxArray</ref></type>
        <definition>using castor::PixelIterator&lt; PF &gt;::array_type =  PxBufferBase::PxArray</definition>
        <argsstring></argsstring>
        <name>array_type</name>
        <qualifiedname>castor::PixelIterator::array_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="26" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d1a/a08811_1a774be87b66c9bce901ff11daede7811e" prot="public" static="no">
        <type>array_type::iterator</type>
        <definition>using castor::PixelIterator&lt; PF &gt;::internal_type =  array_type::iterator</definition>
        <argsstring></argsstring>
        <name>internal_type</name>
        <qualifiedname>castor::PixelIterator::internal_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="27" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d1a/a08811_1aa53f478accbb25f396e0d65acc424a75" prot="public" static="no">
        <type>array_type::const_iterator</type>
        <definition>using castor::PixelIterator&lt; PF &gt;::const_internal_type =  array_type::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_internal_type</name>
        <qualifiedname>castor::PixelIterator::const_internal_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="28" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d1a/a08811_1a197e2fcecc2a11e61009b1624e53e290" prot="public" static="no">
        <type>internal_type::iterator_category</type>
        <definition>using castor::PixelIterator&lt; PF &gt;::iterator_category =  internal_type::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <qualifiedname>castor::PixelIterator::iterator_category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="30" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="d3/d1a/a08811_1a0d05e150cc0fb7f2694d603f85b4f992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="d2/dd2/a02279_1ab7ddacfc1253b707a0048b8425b0f055" kindref="member">PixelFormat</ref></type>
            <declname>PiF</declname>
            <defname>PiF</defname>
          </param>
        </templateparamlist>
        <type>struct</type>
        <definition>friend struct ConstPixelIterator</definition>
        <argsstring></argsstring>
        <name>ConstPixelIterator</name>
        <qualifiedname>castor::PixelIterator::ConstPixelIterator</qualifiedname>
        <param>
          <type><ref refid="d4/d1d/a08807" kindref="compound">ConstPixelIterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="18" column="15" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d3/d1a/a08811_1ab4f295bf59662eb2c9b030ee7b949cc7" prot="private" static="yes" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const castor::PixelIterator&lt; PF &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>castor::PixelIterator::size</qualifiedname>
        <initializer>= <ref refid="d1/dea/a08819" kindref="compound">PixelDefinitionsT</ref>&lt; PF &gt;::Size</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="158" column="22" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d1a/a08811_1a56f8126a9cbe716fd0721924746edfa0" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d1a/a08811_1a774be87b66c9bce901ff11daede7811e" kindref="member">internal_type</ref></type>
        <definition>internal_type castor::PixelIterator&lt; PF &gt;::m_current</definition>
        <argsstring></argsstring>
        <name>m_current</name>
        <qualifiedname>castor::PixelIterator::m_current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="159" column="15" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d1a/a08811_1ae2da010329eee6b571486886d73c0e2a" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d1a/a08811_1aa53f478accbb25f396e0d65acc424a75" kindref="member">const_internal_type</ref></type>
        <definition>const_internal_type castor::PixelIterator&lt; PF &gt;::m_end</definition>
        <argsstring></argsstring>
        <name>m_end</name>
        <qualifiedname>castor::PixelIterator::m_end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="160" column="21" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d1a/a08811_1aa04f440ce4a47d3c4e9b1c4573cb63bd" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d1a/a08811_1a5972351d752446feae994d4c7426e1eb" kindref="member">pixel_type</ref></type>
        <definition>pixel_type castor::PixelIterator&lt; PF &gt;::m_pixel</definition>
        <argsstring></argsstring>
        <name>m_pixel</name>
        <qualifiedname>castor::PixelIterator::m_pixel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="161" column="12" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d1a/a08811_1a6204bbcad546ff3f99d20dd2e3456b0e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>castor::PixelIterator&lt; PF &gt;::~PixelIterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~PixelIterator</name>
        <qualifiedname>castor::PixelIterator::~PixelIterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a1b71562e7c8b915d4d62b8078d84b83a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor::PixelIterator&lt; PF &gt;::PixelIterator</definition>
        <argsstring>(array_type const &amp;array, internal_type const &amp;iter)</argsstring>
        <name>PixelIterator</name>
        <qualifiedname>castor::PixelIterator::PixelIterator</qualifiedname>
        <param>
          <type><ref refid="d3/d1a/a08811_1a478bff40ff756959d5bfc6547f574acd" kindref="member">array_type</ref> const &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="d3/d1a/a08811_1a774be87b66c9bce901ff11daede7811e" kindref="member">internal_type</ref> const &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="34" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a826b2d136e74256c0940a77b33b8aefa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor::PixelIterator&lt; PF &gt;::PixelIterator</definition>
        <argsstring>(PixelIterator const &amp;iter)</argsstring>
        <name>PixelIterator</name>
        <qualifiedname>castor::PixelIterator::PixelIterator</qualifiedname>
        <param>
          <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> const &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="41" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a9775b421ae4a69338ba89571fa27e6cc" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>castor::PixelIterator&lt; PF &gt;::PixelIterator</definition>
        <argsstring>(PixelIterator &amp;&amp;iter) noexcept</argsstring>
        <name>PixelIterator</name>
        <qualifiedname>castor::PixelIterator::PixelIterator</qualifiedname>
        <param>
          <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> &amp;&amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="48" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1ad088e67e6c563ee1748821ae39f955a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> &amp;</type>
        <definition>PixelIterator &amp; castor::PixelIterator&lt; PF &gt;::operator=</definition>
        <argsstring>(PixelIterator const &amp;it)</argsstring>
        <name>operator=</name>
        <qualifiedname>castor::PixelIterator::operator=</qualifiedname>
        <param>
          <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> const &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="56" column="16" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1afb4171faaac9a5fe9af74cf3b81d1bdb" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> &amp;</type>
        <definition>PixelIterator &amp; castor::PixelIterator&lt; PF &gt;::operator=</definition>
        <argsstring>(PixelIterator &amp;&amp;it) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>castor::PixelIterator::operator=</qualifiedname>
        <param>
          <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> &amp;&amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="64" column="16" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1ab45e6bf81263d09d802585a5fd8960bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> &amp;</type>
        <definition>PixelIterator &amp; castor::PixelIterator&lt; PF &gt;::operator+=</definition>
        <argsstring>(size_t offset)</argsstring>
        <name>operator+=</name>
        <qualifiedname>castor::PixelIterator::operator+=</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="73" column="16" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="73" bodyend="78"/>
        <referencedby refid="d3/d1a/a08811_1a23116c275a1e39fda41623e734ae55a9" compoundref="d5/d8b/a02060" startline="87" endline="91">castor::PixelIterator&lt; PF &gt;::operator++</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1aac23db7abb4e6ed5d8285982fefcffc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> &amp;</type>
        <definition>PixelIterator &amp; castor::PixelIterator&lt; PF &gt;::operator-=</definition>
        <argsstring>(size_t offset)</argsstring>
        <name>operator-=</name>
        <qualifiedname>castor::PixelIterator::operator-=</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="80" column="16" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="80" bodyend="85"/>
        <referencedby refid="d3/d1a/a08811_1a550b8f920fdadb23d4388cddc271dd69" compoundref="d5/d8b/a02060" startline="100" endline="104">castor::PixelIterator&lt; PF &gt;::operator--</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a23116c275a1e39fda41623e734ae55a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> &amp;</type>
        <definition>PixelIterator &amp; castor::PixelIterator&lt; PF &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>castor::PixelIterator::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="87" column="16" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="87" bodyend="91"/>
        <references refid="d3/d1a/a08811_1ab45e6bf81263d09d802585a5fd8960bf" compoundref="d5/d8b/a02060" startline="73" endline="78">castor::PixelIterator&lt; PF &gt;::operator+=</references>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a421a850da8d2e476ccb6f47a83b8961b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref></type>
        <definition>PixelIterator castor::PixelIterator&lt; PF &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <qualifiedname>castor::PixelIterator::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="93" column="15" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a550b8f920fdadb23d4388cddc271dd69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> &amp;</type>
        <definition>PixelIterator &amp; castor::PixelIterator&lt; PF &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <qualifiedname>castor::PixelIterator::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="100" column="16" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="100" bodyend="104"/>
        <references refid="d3/d1a/a08811_1aac23db7abb4e6ed5d8285982fefcffc6" compoundref="d5/d8b/a02060" startline="80" endline="85">castor::PixelIterator&lt; PF &gt;::operator-=</references>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a82878cf8f7a0de40d3550462eba075bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref></type>
        <definition>PixelIterator castor::PixelIterator&lt; PF &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <qualifiedname>castor::PixelIterator::operator--</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="106" column="15" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1aeb0e693f4ba1dad8bdbec47f01d66aa8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811_1a5972351d752446feae994d4c7426e1eb" kindref="member">pixel_type</ref> const &amp;</type>
        <definition>pixel_type const  &amp; castor::PixelIterator&lt; PF &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>castor::PixelIterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="113" column="19" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="113" bodyend="117"/>
        <references refid="df/dd8/a01943_1a7db41dab6f93d75339a43575590ee196" compoundref="df/dd8/a01943" startline="49">CU_Require</references>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a86b6896447f5873712b0dd346e6cd4a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811_1a5972351d752446feae994d4c7426e1eb" kindref="member">pixel_type</ref> &amp;</type>
        <definition>pixel_type &amp; castor::PixelIterator&lt; PF &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <qualifiedname>castor::PixelIterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="119" column="13" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="119" bodyend="123"/>
        <references refid="df/dd8/a01943_1a7db41dab6f93d75339a43575590ee196" compoundref="df/dd8/a01943" startline="49">CU_Require</references>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1ab3b6ef20d72364fc772f71a3bde37c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811_1a5972351d752446feae994d4c7426e1eb" kindref="member">pixel_type</ref> *</type>
        <definition>pixel_type * castor::PixelIterator&lt; PF &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>castor::PixelIterator::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="125" column="13" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="125" bodyend="129"/>
        <references refid="df/dd8/a01943_1a7db41dab6f93d75339a43575590ee196" compoundref="df/dd8/a01943" startline="49">CU_Require</references>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1aad308d519fbd3bf3c86500a50cb3115b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor::PixelIterator&lt; PF &gt;::operator==</definition>
        <argsstring>(PixelIterator const &amp;it) const</argsstring>
        <name>operator==</name>
        <qualifiedname>castor::PixelIterator::operator==</qualifiedname>
        <param>
          <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> const &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="131" column="6" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="d3/d1a/a08811_1a72b1c19a44e88e5c84e61b1bc205c834" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor::PixelIterator&lt; PF &gt;::operator!=</definition>
        <argsstring>(PixelIterator const &amp;it) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>castor::PixelIterator::operator!=</qualifiedname>
        <param>
          <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> const &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="136" column="6" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d3/d1a/a08811_1acbbf3f6e12903ae497cbdd6f43a5f458" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d1a/a08811_1a557a729fb74ef30443ead2fcf605e7fa" kindref="member">difference_type</ref></type>
        <definition>static difference_type castor::PixelIterator&lt; PF &gt;::diffIt</definition>
        <argsstring>(PixelIterator const &amp;lhs, PixelIterator const &amp;rhs)</argsstring>
        <name>diffIt</name>
        <qualifiedname>castor::PixelIterator::diffIt</qualifiedname>
        <param>
          <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="d3/d1a/a08811" kindref="compound">PixelIterator</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="141" column="24" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="141" bodyend="146"/>
        <referencedby refid="d2/dd2/a02279_1ae4fe8e7c80a690c778ca6bd4bc35fead" compoundref="d5/d8b/a02060" startline="183" endline="187">castor::operator-</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/d1a/a08811_1a9f378e533261ae0a8143f722636a48aa" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor::PixelIterator&lt; PF &gt;::doLink</definition>
        <argsstring>() noexcept</argsstring>
        <name>doLink</name>
        <qualifiedname>castor::PixelIterator::doLink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Graphics/PixelIterator.hpp" line="149" column="6" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="149" bodyend="155"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Itérateur de buffer de pixels. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CastorUtils/Graphics/PixelIterator.hpp" line="15" column="1" bodyfile="CastorUtils/Graphics/PixelIterator.hpp" bodystart="16" bodyend="162"/>
    <listofallmembers>
      <member refid="d3/d1a/a08811_1a478bff40ff756959d5bfc6547f574acd" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>array_type</name></member>
      <member refid="d3/d1a/a08811_1aa53f478accbb25f396e0d65acc424a75" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>const_internal_type</name></member>
      <member refid="d3/d1a/a08811_1a0d05e150cc0fb7f2694d603f85b4f992" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>ConstPixelIterator</name></member>
      <member refid="d3/d1a/a08811_1a557a729fb74ef30443ead2fcf605e7fa" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>difference_type</name></member>
      <member refid="d3/d1a/a08811_1acbbf3f6e12903ae497cbdd6f43a5f458" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>diffIt</name></member>
      <member refid="d3/d1a/a08811_1a9f378e533261ae0a8143f722636a48aa" prot="private" virt="non-virtual"><scope>castor::PixelIterator</scope><name>doLink</name></member>
      <member refid="d3/d1a/a08811_1a774be87b66c9bce901ff11daede7811e" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>internal_type</name></member>
      <member refid="d3/d1a/a08811_1a197e2fcecc2a11e61009b1624e53e290" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>iterator_category</name></member>
      <member refid="d3/d1a/a08811_1a56f8126a9cbe716fd0721924746edfa0" prot="private" virt="non-virtual"><scope>castor::PixelIterator</scope><name>m_current</name></member>
      <member refid="d3/d1a/a08811_1ae2da010329eee6b571486886d73c0e2a" prot="private" virt="non-virtual"><scope>castor::PixelIterator</scope><name>m_end</name></member>
      <member refid="d3/d1a/a08811_1aa04f440ce4a47d3c4e9b1c4573cb63bd" prot="private" virt="non-virtual"><scope>castor::PixelIterator</scope><name>m_pixel</name></member>
      <member refid="d3/d1a/a08811_1a72b1c19a44e88e5c84e61b1bc205c834" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator!=</name></member>
      <member refid="d3/d1a/a08811_1aeb0e693f4ba1dad8bdbec47f01d66aa8" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator*</name></member>
      <member refid="d3/d1a/a08811_1a86b6896447f5873712b0dd346e6cd4a0" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator*</name></member>
      <member refid="d3/d1a/a08811_1a23116c275a1e39fda41623e734ae55a9" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator++</name></member>
      <member refid="d3/d1a/a08811_1a421a850da8d2e476ccb6f47a83b8961b" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator++</name></member>
      <member refid="d3/d1a/a08811_1ab45e6bf81263d09d802585a5fd8960bf" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator+=</name></member>
      <member refid="d3/d1a/a08811_1a550b8f920fdadb23d4388cddc271dd69" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator--</name></member>
      <member refid="d3/d1a/a08811_1a82878cf8f7a0de40d3550462eba075bd" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator--</name></member>
      <member refid="d3/d1a/a08811_1aac23db7abb4e6ed5d8285982fefcffc6" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator-=</name></member>
      <member refid="d3/d1a/a08811_1ab3b6ef20d72364fc772f71a3bde37c7f" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator-&gt;</name></member>
      <member refid="d3/d1a/a08811_1ad088e67e6c563ee1748821ae39f955a4" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator=</name></member>
      <member refid="d3/d1a/a08811_1afb4171faaac9a5fe9af74cf3b81d1bdb" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator=</name></member>
      <member refid="d3/d1a/a08811_1aad308d519fbd3bf3c86500a50cb3115b" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>operator==</name></member>
      <member refid="d3/d1a/a08811_1a5972351d752446feae994d4c7426e1eb" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>pixel_type</name></member>
      <member refid="d3/d1a/a08811_1a1b71562e7c8b915d4d62b8078d84b83a" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>PixelIterator</name></member>
      <member refid="d3/d1a/a08811_1a826b2d136e74256c0940a77b33b8aefa" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>PixelIterator</name></member>
      <member refid="d3/d1a/a08811_1a9775b421ae4a69338ba89571fa27e6cc" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>PixelIterator</name></member>
      <member refid="d3/d1a/a08811_1a5c3ebf4ab8392db0a10c85749646f63f" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>pointer</name></member>
      <member refid="d3/d1a/a08811_1aba621a49586db7339518b73b7fdb2504" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>reference</name></member>
      <member refid="d3/d1a/a08811_1ab4f295bf59662eb2c9b030ee7b949cc7" prot="private" virt="non-virtual"><scope>castor::PixelIterator</scope><name>size</name></member>
      <member refid="d3/d1a/a08811_1aced823f5904327ae9ffae1d40e1b9659" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>value_type</name></member>
      <member refid="d3/d1a/a08811_1a6204bbcad546ff3f99d20dd2e3456b0e" prot="public" virt="non-virtual"><scope>castor::PixelIterator</scope><name>~PixelIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
