<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="d6/d7f/a03438" kind="class" language="C++" prot="public">
    <compoundname>castor3d::SubmeshUtils</compoundname>
    <includes local="no">SubmeshUtils.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d6/d7f/a03438_1a01dd567b436d0025b6652aaba2aa5cb0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::SubmeshUtils::computeFacesFromPolygonVertex</definition>
        <argsstring>(InterleavedVertexArray &amp;points, TriFaceMapping &amp;triFace)</argsstring>
        <name>computeFacesFromPolygonVertex</name>
        <qualifiedname>castor3d::SubmeshUtils::computeFacesFromPolygonVertex</qualifiedname>
        <param>
          <type><ref refid="dc/df4/a01401_1a56e63531cb249a631d9bca1767624584" kindref="member">InterleavedVertexArray</ref> &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="d3/dff/a03422" kindref="compound">TriFaceMapping</ref> &amp;</type>
          <declname>triFace</declname>
        </param>
        <briefdescription>
<para>Creates faces from the points. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This function assumes the points are sorted like triangles fan. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">points</parametername>
</parameternamelist>
<parameterdescription>
<para>The points. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">triFace</parametername>
</parameternamelist>
<parameterdescription>
<para>The component that will receive the computed triangles. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshUtils.hpp" line="32" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7f/a03438_1a652504451b39a5025c90de4e9b21c91d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::SubmeshUtils::computeNormals</definition>
        <argsstring>(InterleavedVertexArray &amp;points, TriFaceMapping const &amp;triFace, bool reverted=false)</argsstring>
        <name>computeNormals</name>
        <qualifiedname>castor3d::SubmeshUtils::computeNormals</qualifiedname>
        <param>
          <type><ref refid="dc/df4/a01401_1a56e63531cb249a631d9bca1767624584" kindref="member">InterleavedVertexArray</ref> &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="d3/dff/a03422" kindref="compound">TriFaceMapping</ref> const &amp;</type>
          <declname>triFace</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reverted</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Generates normals and tangents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">points</parametername>
</parameternamelist>
<parameterdescription>
<para>The points. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reverted</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the normals must be inverted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">triFace</parametername>
</parameternamelist>
<parameterdescription>
<para>The component that will receive the computed triangles. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshUtils.hpp" line="46" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7f/a03438_1a746a01f12a8e10d10fdd23298b04b438" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::SubmeshUtils::computeTangentsFromNormals</definition>
        <argsstring>(InterleavedVertexArray &amp;points, TriFaceMapping const &amp;triFace)</argsstring>
        <name>computeTangentsFromNormals</name>
        <qualifiedname>castor3d::SubmeshUtils::computeTangentsFromNormals</qualifiedname>
        <param>
          <type><ref refid="dc/df4/a01401_1a56e63531cb249a631d9bca1767624584" kindref="member">InterleavedVertexArray</ref> &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="d3/dff/a03422" kindref="compound">TriFaceMapping</ref> const &amp;</type>
          <declname>triFace</declname>
        </param>
        <briefdescription>
<para>Computes tangent for each vertex of the submesh. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This function supposes the normals are defined. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">points</parametername>
</parameternamelist>
<parameterdescription>
<para>The points. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">triFace</parametername>
</parameternamelist>
<parameterdescription>
<para>The component that will receive the computed triangles. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshUtils.hpp" line="61" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7f/a03438_1a4b64fdc3a94d9807082c064aa6290127" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::SubmeshUtils::computeNormals</definition>
        <argsstring>(InterleavedVertexArray &amp;points, Face const &amp;face)</argsstring>
        <name>computeNormals</name>
        <qualifiedname>castor3d::SubmeshUtils::computeNormals</qualifiedname>
        <param>
          <type><ref refid="dc/df4/a01401_1a56e63531cb249a631d9bca1767624584" kindref="member">InterleavedVertexArray</ref> &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="df/d7f/a03366" kindref="compound">Face</ref> const &amp;</type>
          <declname>face</declname>
        </param>
        <briefdescription>
<para>Computes normal and tangent for each vertex of the given face. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">points</parametername>
</parameternamelist>
<parameterdescription>
<para>The points. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">face</parametername>
</parameternamelist>
<parameterdescription>
<para>The face. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshUtils.hpp" line="73" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7f/a03438_1ad01a41d3a0e0158a1ce82a97a02ab4b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>static C3D_API void castor3d::SubmeshUtils::computeTangents</definition>
        <argsstring>(InterleavedVertexArray &amp;points, Face const &amp;face)</argsstring>
        <name>computeTangents</name>
        <qualifiedname>castor3d::SubmeshUtils::computeTangents</qualifiedname>
        <param>
          <type><ref refid="dc/df4/a01401_1a56e63531cb249a631d9bca1767624584" kindref="member">InterleavedVertexArray</ref> &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="df/d7f/a03366" kindref="compound">Face</ref> const &amp;</type>
          <declname>face</declname>
        </param>
        <briefdescription>
<para>Computes tangent for each vertex of the given face. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">points</parametername>
</parameternamelist>
<parameterdescription>
<para>The points. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">face</parametername>
</parameternamelist>
<parameterdescription>
<para>The face. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshUtils.hpp" line="85" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d7/d46/a03430" kindref="compound">Submesh</ref> utility functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Model/Mesh/Submesh/SubmeshUtils.hpp" line="17" column="1" bodyfile="Model/Mesh/Submesh/SubmeshUtils.hpp" bodystart="18" bodyend="87"/>
    <listofallmembers>
      <member refid="d6/d7f/a03438_1a01dd567b436d0025b6652aaba2aa5cb0" prot="public" virt="non-virtual"><scope>castor3d::SubmeshUtils</scope><name>computeFacesFromPolygonVertex</name></member>
      <member refid="d6/d7f/a03438_1a652504451b39a5025c90de4e9b21c91d" prot="public" virt="non-virtual"><scope>castor3d::SubmeshUtils</scope><name>computeNormals</name></member>
      <member refid="d6/d7f/a03438_1a4b64fdc3a94d9807082c064aa6290127" prot="public" virt="non-virtual"><scope>castor3d::SubmeshUtils</scope><name>computeNormals</name></member>
      <member refid="d6/d7f/a03438_1ad01a41d3a0e0158a1ce82a97a02ab4b0" prot="public" virt="non-virtual"><scope>castor3d::SubmeshUtils</scope><name>computeTangents</name></member>
      <member refid="d6/d7f/a03438_1a746a01f12a8e10d10fdd23298b04b438" prot="public" virt="non-virtual"><scope>castor3d::SubmeshUtils</scope><name>computeTangentsFromNormals</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
