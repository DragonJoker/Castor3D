<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d6/d1b/a04590" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::SceneRenderPass</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; Engine &gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Named</basecompoundref>
    <derivedcompoundref refid="d5/d47/a04490" prot="public" virt="non-virtual">castor3d::PickingPass</derivedcompoundref>
    <derivedcompoundref refid="d6/d54/a04918" prot="public" virt="non-virtual">castor3d::RenderTechniquePass</derivedcompoundref>
    <derivedcompoundref refid="d0/d70/a04658" prot="public" virt="non-virtual">castor3d::ShadowMapPass</derivedcompoundref>
    <derivedcompoundref refid="d8/d10/a05018" prot="public" virt="non-virtual">castor3d::VoxelizePass</derivedcompoundref>
    <includes local="no">RenderPass.hpp</includes>
    <innerclass refid="d0/d7e/a04594" prot="public">castor3d::SceneRenderPass::VertexInputs</innerclass>
    <innerclass refid="d6/d71/a04598" prot="public">castor3d::SceneRenderPass::VertexOutputs</innerclass>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d6/d1b/a04590_1abe50f4442fa70138e392be9d1bfba637" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1a3b9e457486b668463148ebc06850f3ac" kindref="member">TextureFlags</ref></type>
        <definition>virtual C3D_API TextureFlags castor3d::SceneRenderPass::getTexturesMask</definition>
        <argsstring>() const</argsstring>
        <name>getTexturesMask</name>
        <reimplementedby refid="db/dc9/a04378_1aa2c92873b5dc657476e3a5950ebc55cc">getTexturesMask</reimplementedby>
        <reimplementedby refid="d4/db9/a04870_1a39ad9b2e93e31212a87f08dbde82f172">getTexturesMask</reimplementedby>
        <reimplementedby refid="da/d9e/a04926_1a3b0d6847ccfe39b88217f9c4a0efa975">getTexturesMask</reimplementedby>
        <reimplementedby refid="d0/d70/a04658_1a641044a6e337993464b57845b52e1cec">getTexturesMask</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a0ba908df7a1f969a5fbb1f882bbfd572">getTexturesMask</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="646" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a4bac800c4178729d7e6c2324eb126fd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderPass::isOrderIndependent</definition>
        <argsstring>() const</argsstring>
        <name>isOrderIndependent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="648" column="1" bodyfile="Render/RenderPass.hpp" bodystart="648" bodyend="651"/>
        <references refid="d6/d1b/a04590_1a898939bc8fc037bb32daebe391e6263b" compoundref="df/d0e/a00800" startline="1299">m_oit</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a9ec598bacebe135008057204f4b7e498" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d73/a04226" kindref="compound">SceneCuller</ref> const  &amp;</type>
        <definition>SceneCuller const&amp; castor3d::SceneRenderPass::getCuller</definition>
        <argsstring>() const</argsstring>
        <name>getCuller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="653" column="1" bodyfile="Render/RenderPass.hpp" bodystart="653" bodyend="656"/>
        <references refid="d6/d1b/a04590_1a16c632e89f0628620bcf01a70d520b2d" compoundref="df/d0e/a00800" startline="1295">m_culler</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab06deeaf325f047f97f0fdd046b1db9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d73/a04226" kindref="compound">SceneCuller</ref> &amp;</type>
        <definition>SceneCuller&amp; castor3d::SceneRenderPass::getCuller</definition>
        <argsstring>()</argsstring>
        <name>getCuller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="658" column="1" bodyfile="Render/RenderPass.hpp" bodystart="658" bodyend="661"/>
        <references refid="d6/d1b/a04590_1a16c632e89f0628620bcf01a70d520b2d" compoundref="df/d0e/a00800" startline="1295">m_culler</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a9ce55bbe9de899304219df9a29869ac2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d79/a05522" kindref="compound">SceneUbo</ref> &amp;</type>
        <definition>SceneUbo&amp; castor3d::SceneRenderPass::getSceneUbo</definition>
        <argsstring>()</argsstring>
        <name>getSceneUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="663" column="1" bodyfile="Render/RenderPass.hpp" bodystart="663" bodyend="666"/>
        <references refid="d6/d1b/a04590_1aa623f3557914bcc6e2e8cf058da1c5e5" compoundref="df/d0e/a00800" startline="1302">m_sceneUbo</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ad5bf1e846317bf671e0cac4118922226" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d79/a05522" kindref="compound">SceneUbo</ref> const  &amp;</type>
        <definition>SceneUbo const&amp; castor3d::SceneRenderPass::getSceneUbo</definition>
        <argsstring>() const</argsstring>
        <name>getSceneUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="668" column="1" bodyfile="Render/RenderPass.hpp" bodystart="668" bodyend="671"/>
        <references refid="d6/d1b/a04590_1aa623f3557914bcc6e2e8cf058da1c5e5" compoundref="df/d0e/a00800" startline="1302">m_sceneUbo</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a283dc741d44f730b657f153ee8c0b21d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d30/a05490" kindref="compound">MatrixUbo</ref> &amp;</type>
        <definition>MatrixUbo&amp; castor3d::SceneRenderPass::getMatrixUbo</definition>
        <argsstring>() const</argsstring>
        <name>getMatrixUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="673" column="1" bodyfile="Render/RenderPass.hpp" bodystart="673" bodyend="676"/>
        <references refid="d6/d1b/a04590_1a6b0f370e15e18a3a554c56b09fba85b4" compoundref="df/d0e/a00800" startline="1294">m_matrixUbo</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1abcf02ee3b5e0f4dbfb0c9b5cf22a3245" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::CommandBuffer const  &amp;</type>
        <definition>ashes::CommandBuffer const&amp; castor3d::SceneRenderPass::getCommandBuffer</definition>
        <argsstring>() const</argsstring>
        <name>getCommandBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="678" column="1" bodyfile="Render/RenderPass.hpp" bodystart="678" bodyend="681"/>
        <references refid="d2/dc4/a04614_1ae7197cda512ae08754242ee024ca979a" compoundref="dd/d7e/a00809" startline="108" endline="111">castor3d::RenderQueue::getCommandBuffer</references>
        <references refid="d6/d1b/a04590_1a3fd80e792cc2f052add8f252b531c0e2" compoundref="df/d0e/a00800" startline="1296">m_renderQueue</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1afaa168a458700f72a3365a1f4c550c55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderPass::hasNodes</definition>
        <argsstring>() const</argsstring>
        <name>hasNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="683" column="1" bodyfile="Render/RenderPass.hpp" bodystart="683" bodyend="686"/>
        <references refid="d2/dc4/a04614_1af07889a285e79d73e7a88767d3771906">castor3d::RenderQueue::hasNodes</references>
        <references refid="d6/d1b/a04590_1a3fd80e792cc2f052add8f252b531c0e2" compoundref="df/d0e/a00800" startline="1296">m_renderQueue</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1af9a616bf4b5e1bf848d4a7783cff5dcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::RenderPass const  &amp;</type>
        <definition>ashes::RenderPass const&amp; castor3d::SceneRenderPass::getRenderPass</definition>
        <argsstring>() const</argsstring>
        <name>getRenderPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="688" column="1" bodyfile="Render/RenderPass.hpp" bodystart="688" bodyend="691"/>
        <references refid="d6/d1b/a04590_1a6f215acabcb9564bc85f30f8abeaba56" compoundref="df/d0e/a00800" startline="1303">m_renderPass</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab21b006fe9daf0ae6172c17f076c5f85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d76/a04606" kindref="compound">RenderPassTimer</ref> const  &amp;</type>
        <definition>RenderPassTimer const&amp; castor3d::SceneRenderPass::getTimer</definition>
        <argsstring>() const</argsstring>
        <name>getTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="693" column="1" bodyfile="Render/RenderPass.hpp" bodystart="693" bodyend="696"/>
        <references refid="d6/d1b/a04590_1a729739080d9153cd9ce71129b909a869" compoundref="df/d0e/a00800" startline="1304">m_timer</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a70c70fcde770cfa3efeaba683a11cbe4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d76/a04606" kindref="compound">RenderPassTimer</ref> &amp;</type>
        <definition>RenderPassTimer&amp; castor3d::SceneRenderPass::getTimer</definition>
        <argsstring>()</argsstring>
        <name>getTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="698" column="1" bodyfile="Render/RenderPass.hpp" bodystart="698" bodyend="701"/>
        <references refid="d6/d1b/a04590_1a729739080d9153cd9ce71129b909a869" compoundref="df/d0e/a00800" startline="1304">m_timer</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a6f6289ae6913449d6cb3cb7a1ae64976" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::SceneRenderPass::getPipelinesCount</definition>
        <argsstring>() const</argsstring>
        <name>getPipelinesCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="703" column="1" bodyfile="Render/RenderPass.hpp" bodystart="703" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ae964287f47d4145776448a31cb9a6ccd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::SceneRenderPass::getInstanceMult</definition>
        <argsstring>() const</argsstring>
        <name>getInstanceMult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="709" column="1" bodyfile="Render/RenderPass.hpp" bodystart="709" bodyend="712"/>
        <references refid="d6/d1b/a04590_1afe43990c332123ca5bcaaa12e2204ff5" compoundref="df/d0e/a00800" startline="1308">m_instanceMult</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a912328721eae90138599880d76a309ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderPass::isDirty</definition>
        <argsstring>() const</argsstring>
        <name>isDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="714" column="1" bodyfile="Render/RenderPass.hpp" bodystart="714" bodyend="717"/>
        <references refid="d6/d1b/a04590_1ac70af3d0c68adfc6fa7ec2f68d5b6f12" compoundref="df/d0e/a00800" startline="1301">m_isDirty</references>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a8dd34d9bcfcbf1cc93c73d633e26b375" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderPass::forceTwoSided</definition>
        <argsstring>() const</argsstring>
        <name>forceTwoSided</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="719" column="1" bodyfile="Render/RenderPass.hpp" bodystart="719" bodyend="722"/>
        <references refid="d6/d1b/a04590_1aa9df6fd78c7eb9ca9b59c10574776085" compoundref="df/d0e/a00800" startline="1300">m_forceTwoSided</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d6/d1b/a04590_1acfc7eaded98ff40bb227979eb6f56274" prot="public" static="no">
        <type>std::multimap&lt; double, std::unique_ptr&lt; <ref refid="de/d34/a04302" kindref="compound">DistanceRenderNodeBase</ref> &gt; &gt;</type>
        <definition>using castor3d::SceneRenderPass::DistanceSortedNodeMap =  std::multimap&lt; double, std::unique_ptr&lt; DistanceRenderNodeBase &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>DistanceSortedNodeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="28" column="1" bodyfile="Render/RenderPass.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d6/d1b/a04590_1a1513ba71b682375fed01e9819105c894" prot="protected" static="no" mutable="no">
        <type><ref refid="d1/d9a/a04618" kindref="compound">RenderSystem</ref> &amp;</type>
        <definition>RenderSystem&amp; castor3d::SceneRenderPass::m_renderSystem</definition>
        <argsstring></argsstring>
        <name>m_renderSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1293" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a6b0f370e15e18a3a554c56b09fba85b4" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/d30/a05490" kindref="compound">MatrixUbo</ref> &amp;</type>
        <definition>MatrixUbo&amp; castor3d::SceneRenderPass::m_matrixUbo</definition>
        <argsstring></argsstring>
        <name>m_matrixUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1294" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1294" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1a283dc741d44f730b657f153ee8c0b21d" compoundref="df/d0e/a00800" startline="673" endline="676">getMatrixUbo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a16c632e89f0628620bcf01a70d520b2d" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/d73/a04226" kindref="compound">SceneCuller</ref> &amp;</type>
        <definition>SceneCuller&amp; castor3d::SceneRenderPass::m_culler</definition>
        <argsstring></argsstring>
        <name>m_culler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1295" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1295" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1a9ec598bacebe135008057204f4b7e498" compoundref="df/d0e/a00800" startline="653" endline="656">getCuller</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a3fd80e792cc2f052add8f252b531c0e2" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/dc4/a04614" kindref="compound">RenderQueue</ref></type>
        <definition>RenderQueue castor3d::SceneRenderPass::m_renderQueue</definition>
        <argsstring></argsstring>
        <name>m_renderQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1296" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1296" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1abcf02ee3b5e0f4dbfb0c9b5cf22a3245" compoundref="df/d0e/a00800" startline="678" endline="681">getCommandBuffer</referencedby>
        <referencedby refid="d6/d1b/a04590_1afaa168a458700f72a3365a1f4c550c55" compoundref="df/d0e/a00800" startline="683" endline="686">hasNodes</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1aa7fc94ef9d99bc777795fb27941d7c65" prot="protected" static="no" mutable="no">
        <type>castor::String</type>
        <definition>castor::String castor3d::SceneRenderPass::m_category</definition>
        <argsstring></argsstring>
        <name>m_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1297" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a927f5ac447cecf2b3419ce9501632fd7" prot="protected" static="no" mutable="no">
        <type><ref refid="de/d13/a01473_1a908786422cb850b8f90f8992963734d5" kindref="member">RenderMode</ref></type>
        <definition>RenderMode castor3d::SceneRenderPass::m_mode</definition>
        <argsstring></argsstring>
        <name>m_mode</name>
        <initializer>{ <ref refid="de/d13/a01473_1a908786422cb850b8f90f8992963734d5af33a4ae0625b377c9723b84da191b46e" kindref="member">RenderMode::eBoth</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1298" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a898939bc8fc037bb32daebe391e6263b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderPass::m_oit</definition>
        <argsstring></argsstring>
        <name>m_oit</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1299" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1299" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1a4bac800c4178729d7e6c2324eb126fd6" compoundref="df/d0e/a00800" startline="648" endline="651">isOrderIndependent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1aa9df6fd78c7eb9ca9b59c10574776085" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderPass::m_forceTwoSided</definition>
        <argsstring></argsstring>
        <name>m_forceTwoSided</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1300" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1300" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1a8dd34d9bcfcbf1cc93c73d633e26b375" compoundref="df/d0e/a00800" startline="719" endline="722">forceTwoSided</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1ac70af3d0c68adfc6fa7ec2f68d5b6f12" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderPass::m_isDirty</definition>
        <argsstring></argsstring>
        <name>m_isDirty</name>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1301" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1301" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1a912328721eae90138599880d76a309ae" compoundref="df/d0e/a00800" startline="714" endline="717">isDirty</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1aa623f3557914bcc6e2e8cf058da1c5e5" prot="protected" static="no" mutable="no">
        <type><ref refid="dc/d79/a05522" kindref="compound">SceneUbo</ref></type>
        <definition>SceneUbo castor3d::SceneRenderPass::m_sceneUbo</definition>
        <argsstring></argsstring>
        <name>m_sceneUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1302" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1302" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1a9ce55bbe9de899304219df9a29869ac2" compoundref="df/d0e/a00800" startline="663" endline="666">getSceneUbo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a6f215acabcb9564bc85f30f8abeaba56" prot="protected" static="no" mutable="no">
        <type>ashes::RenderPassPtr</type>
        <definition>ashes::RenderPassPtr castor3d::SceneRenderPass::m_renderPass</definition>
        <argsstring></argsstring>
        <name>m_renderPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1303" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1303" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1af9a616bf4b5e1bf848d4a7783cff5dcf" compoundref="df/d0e/a00800" startline="688" endline="691">getRenderPass</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a729739080d9153cd9ce71129b909a869" prot="protected" static="no" mutable="no">
        <type><ref refid="d6/d76/a04606" kindref="compound">RenderPassTimer</ref> *</type>
        <definition>RenderPassTimer* castor3d::SceneRenderPass::m_timer</definition>
        <argsstring></argsstring>
        <name>m_timer</name>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1304" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1304" bodyend="-1"/>
        <referencedby refid="d0/d70/a04658_1a7b4c31a35a83999130cf2b32b82004f7" compoundref="dc/d6e/a00833" startline="65" endline="68">castor3d::ShadowMapPass::getTimer</referencedby>
        <referencedby refid="d6/d1b/a04590_1ab21b006fe9daf0ae6172c17f076c5f85" compoundref="df/d0e/a00800" startline="693" endline="696">getTimer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a6e274505905d565cac4f9d6743b0417d" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::SceneRenderPass::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <initializer>{ 0u }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1305" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a5faf1387a50606631d9eccf95060f84a" prot="protected" static="no" mutable="no">
        <type>RenderPassTimerSPtr</type>
        <definition>RenderPassTimerSPtr castor3d::SceneRenderPass::m_ownTimer</definition>
        <argsstring></argsstring>
        <name>m_ownTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1306" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1ab4b6ee7f462854794ed9e3fccdc5b10f" prot="protected" static="no" mutable="no">
        <type>castor::Size</type>
        <definition>castor::Size castor3d::SceneRenderPass::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1307" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1afe43990c332123ca5bcaaa12e2204ff5" prot="protected" static="no" mutable="no">
        <type>uint32_t const</type>
        <definition>uint32_t const castor3d::SceneRenderPass::m_instanceMult</definition>
        <argsstring></argsstring>
        <name>m_instanceMult</name>
        <initializer>{ 1u }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1308" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1308" bodyend="-1"/>
        <referencedby refid="d6/d1b/a04590_1ae964287f47d4145776448a31cb9a6ccd" compoundref="df/d0e/a00800" startline="709" endline="712">getInstanceMult</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a923ae0f7686d6ef4c9a27f0799ca62c8" prot="protected" static="no" mutable="no">
        <type>std::map&lt; size_t, <ref refid="dd/dae/a02294" kindref="compound">UniformBufferOffsetT</ref>&lt; <ref refid="d3/d27/a05574" kindref="compound">ModelInstancesUboConfiguration</ref> &gt; &gt;</type>
        <definition>std::map&lt; size_t, UniformBufferOffsetT&lt; ModelInstancesUboConfiguration &gt; &gt; castor3d::SceneRenderPass::m_modelsInstances</definition>
        <argsstring></argsstring>
        <name>m_modelsInstances</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1309" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1309" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d1b/a04590_1a7bf0165597d111965609b8027226579f" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref>, RenderPipelineUPtr &gt;</type>
        <definition>std::map&lt; PipelineFlags, RenderPipelineUPtr &gt; castor3d::SceneRenderPass::m_frontPipelines</definition>
        <argsstring></argsstring>
        <name>m_frontPipelines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1312" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d1b/a04590_1a2effa9fa6f6a601610b3c68943806efd" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref>, RenderPipelineUPtr &gt;</type>
        <definition>std::map&lt; PipelineFlags, RenderPipelineUPtr &gt; castor3d::SceneRenderPass::m_backPipelines</definition>
        <argsstring></argsstring>
        <name>m_backPipelines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1313" column="1" bodyfile="Render/RenderPass.hpp" bodystart="1313" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d6/d1b/a04590_1affb5828080147f1657a582841cbaca01" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneRenderPass::SceneRenderPass</definition>
        <argsstring>(castor::String const &amp;category, castor::String const &amp;name, Engine &amp;engine, MatrixUbo &amp;matrixUbo, SceneCuller &amp;culler, RenderMode mode, bool oit, bool forceTwoSided, SceneNode const *ignored, uint32_t instanceMult)</argsstring>
        <name>SceneRenderPass</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="df/d9b/a02514" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="d2/d30/a05490" kindref="compound">MatrixUbo</ref> &amp;</type>
          <declname>matrixUbo</declname>
        </param>
        <param>
          <type><ref refid="d2/d73/a04226" kindref="compound">SceneCuller</ref> &amp;</type>
          <declname>culler</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a908786422cb850b8f90f8992963734d5" kindref="member">RenderMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>oit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceTwoSided</declname>
        </param>
        <param>
          <type><ref refid="d8/de7/a05250" kindref="compound">SceneNode</ref> const *</type>
          <declname>ignored</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ac65dc41b8e3392db21bd3cadd94754d6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneRenderPass::SceneRenderPass</definition>
        <argsstring>(castor::String const &amp;category, castor::String const &amp;name, Engine &amp;engine, MatrixUbo &amp;matrixUbo, SceneCuller &amp;culler, uint32_t instanceMult=1u)</argsstring>
        <name>SceneRenderPass</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="df/d9b/a02514" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="d2/d30/a05490" kindref="compound">MatrixUbo</ref> &amp;</type>
          <declname>matrixUbo</declname>
        </param>
        <param>
          <type><ref refid="d2/d73/a04226" kindref="compound">SceneCuller</ref> &amp;</type>
          <declname>culler</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
          <defval>1u</defval>
        </param>
        <briefdescription>
<para>Constructor for opaque nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass category. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixUbo</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene matrices UBO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">culler</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene culler for this pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">instanceMult</parametername>
</parameternamelist>
<parameterdescription>
<para>The object instance multiplier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a7a964bd723f31105db6937b6c2016344" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneRenderPass::SceneRenderPass</definition>
        <argsstring>(castor::String const &amp;category, castor::String const &amp;name, Engine &amp;engine, MatrixUbo &amp;matrixUbo, SceneCuller &amp;culler, bool oit, uint32_t instanceMult=1u)</argsstring>
        <name>SceneRenderPass</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="df/d9b/a02514" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="d2/d30/a05490" kindref="compound">MatrixUbo</ref> &amp;</type>
          <declname>matrixUbo</declname>
        </param>
        <param>
          <type><ref refid="d2/d73/a04226" kindref="compound">SceneCuller</ref> &amp;</type>
          <declname>culler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>oit</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
          <defval>1u</defval>
        </param>
        <briefdescription>
<para>Constructor for transparent nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass category. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixUbo</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene matrices UBO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">culler</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene culler for this pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">oit</parametername>
</parameternamelist>
<parameterdescription>
<para>The order independant status. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">instanceMult</parametername>
</parameternamelist>
<parameterdescription>
<para>The object instance multiplier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a78ae5b7ef98084673c04980da95e359f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneRenderPass::SceneRenderPass</definition>
        <argsstring>(castor::String const &amp;category, castor::String const &amp;name, Engine &amp;engine, MatrixUbo &amp;matrixUbo, SceneCuller &amp;culler, SceneNode const *ignored, uint32_t instanceMult=1u)</argsstring>
        <name>SceneRenderPass</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="df/d9b/a02514" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="d2/d30/a05490" kindref="compound">MatrixUbo</ref> &amp;</type>
          <declname>matrixUbo</declname>
        </param>
        <param>
          <type><ref refid="d2/d73/a04226" kindref="compound">SceneCuller</ref> &amp;</type>
          <declname>culler</declname>
        </param>
        <param>
          <type><ref refid="d8/de7/a05250" kindref="compound">SceneNode</ref> const *</type>
          <declname>ignored</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
          <defval>1u</defval>
        </param>
        <briefdescription>
<para>Constructor for opaque nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass category. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixUbo</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene matrices UBO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">culler</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene culler for this pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ignored</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometries attached to this node will be ignored in the render. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">instanceMult</parametername>
</parameternamelist>
<parameterdescription>
<para>The object instance multiplier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1adf551a42f8dec9de911b7f2ffc56b666" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneRenderPass::SceneRenderPass</definition>
        <argsstring>(castor::String const &amp;category, castor::String const &amp;name, Engine &amp;engine, MatrixUbo &amp;matrixUbo, SceneCuller &amp;culler, bool oit, SceneNode const *ignored, uint32_t instanceMult=1u)</argsstring>
        <name>SceneRenderPass</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="df/d9b/a02514" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="d2/d30/a05490" kindref="compound">MatrixUbo</ref> &amp;</type>
          <declname>matrixUbo</declname>
        </param>
        <param>
          <type><ref refid="d2/d73/a04226" kindref="compound">SceneCuller</ref> &amp;</type>
          <declname>culler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>oit</declname>
        </param>
        <param>
          <type><ref refid="d8/de7/a05250" kindref="compound">SceneNode</ref> const *</type>
          <declname>ignored</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
          <defval>1u</defval>
        </param>
        <briefdescription>
<para>Constructor for transparent nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass category. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixUbo</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene matrices UBO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">culler</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene culler for this pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">oit</parametername>
</parameternamelist>
<parameterdescription>
<para>The order independant status. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ignored</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometries attached to this node will be ignored in the render. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">instanceMult</parametername>
</parameternamelist>
<parameterdescription>
<para>The object instance multiplier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab989a2da21f70c26e1fed17823e39af6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d8c/a04318" kindref="compound">PassRenderNode</ref></type>
        <definition>C3D_API PassRenderNode castor3d::SceneRenderPass::doCreatePassRenderNode</definition>
        <argsstring>(Pass &amp;pass, RenderPipeline &amp;pipeline)</argsstring>
        <name>doCreatePassRenderNode</name>
        <param>
          <type><ref refid="df/d57/a02590" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <briefdescription>
<para>Creates a render node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The render node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="738" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a9bf6b45209c8b79cccfa152d51b3b144" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/d6b/a04334" kindref="compound">SceneRenderNode</ref></type>
        <definition>C3D_API SceneRenderNode castor3d::SceneRenderPass::doCreateSceneRenderNode</definition>
        <argsstring>(Scene &amp;scene, RenderPipeline &amp;pipeline)</argsstring>
        <name>doCreateSceneRenderNode</name>
        <param>
          <type><ref refid="d6/d66/a05238" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type><ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <briefdescription>
<para>Creates a scene render node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The render node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="752" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a4b807ea9d74d5f1ccaba4b29e78c8085" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ShaderProgramSPtr</type>
        <definition>C3D_API ShaderProgramSPtr castor3d::SceneRenderPass::doGetProgram</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>doGetProgram</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the shader program matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="762" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ac7e8cea34069461a25c5dce78ad4133d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::SceneRenderPass::doCopyNodesMatrices</definition>
        <argsstring>(StaticRenderNodePtrArray const &amp;renderNodes, std::vector&lt; InstantiationData &gt; &amp;matrixBuffer) const</argsstring>
        <name>doCopyNodesMatrices</name>
        <param>
          <type>StaticRenderNodePtrArray const &amp;</type>
          <declname>renderNodes</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="df/dfb/a03946" kindref="compound">InstantiationData</ref> &gt; &amp;</type>
          <declname>matrixBuffer</declname>
        </param>
        <briefdescription>
<para>Copies the instanced nodes model matrices into given matrix buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderNodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The instanced nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="773" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1abedc9556fe34264878d1175e4c5dd76d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::SceneRenderPass::doCopyNodesMatrices</definition>
        <argsstring>(StaticRenderNodePtrArray const &amp;renderNodes, std::vector&lt; InstantiationData &gt; &amp;matrixBuffer, RenderInfo &amp;info) const</argsstring>
        <name>doCopyNodesMatrices</name>
        <param>
          <type>StaticRenderNodePtrArray const &amp;</type>
          <declname>renderNodes</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="df/dfb/a03946" kindref="compound">InstantiationData</ref> &gt; &amp;</type>
          <declname>matrixBuffer</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Copies the instanced nodes model matrices into given matrix buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The nodes which are copied will be registered in the rendered nodes list. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderNodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The instanced nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a8ea69998caa9d7ccc3c86d5fd5b4f0f0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::SceneRenderPass::doCopyNodesMatrices</definition>
        <argsstring>(SkinningRenderNodePtrArray const &amp;renderNodes, std::vector&lt; InstantiationData &gt; &amp;matrixBuffer) const</argsstring>
        <name>doCopyNodesMatrices</name>
        <param>
          <type>SkinningRenderNodePtrArray const &amp;</type>
          <declname>renderNodes</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="df/dfb/a03946" kindref="compound">InstantiationData</ref> &gt; &amp;</type>
          <declname>matrixBuffer</declname>
        </param>
        <briefdescription>
<para>Copies the instanced nodes model matrices into given matrix buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderNodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The instanced nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="802" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a6bce0687b325c3413c94465655611170" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::SceneRenderPass::doCopyNodesMatrices</definition>
        <argsstring>(SkinningRenderNodePtrArray const &amp;renderNodes, std::vector&lt; InstantiationData &gt; &amp;matrixBuffer, RenderInfo &amp;info) const</argsstring>
        <name>doCopyNodesMatrices</name>
        <param>
          <type>SkinningRenderNodePtrArray const &amp;</type>
          <declname>renderNodes</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="df/dfb/a03946" kindref="compound">InstantiationData</ref> &gt; &amp;</type>
          <declname>matrixBuffer</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Copies the instanced nodes model matrices into given matrix buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The nodes which are copied will be registered in the rendered nodes list. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderNodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The instanced nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matrixBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="818" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a5ad44dd6ff6eff2ff3ef28ffce50790d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::SceneRenderPass::doCopyNodesBones</definition>
        <argsstring>(SkinningRenderNodePtrArray const &amp;renderNodes, ShaderBuffer &amp;bonesBuffer) const</argsstring>
        <name>doCopyNodesBones</name>
        <param>
          <type>SkinningRenderNodePtrArray const &amp;</type>
          <declname>renderNodes</declname>
        </param>
        <param>
          <type><ref refid="db/dd7/a05302" kindref="compound">ShaderBuffer</ref> &amp;</type>
          <declname>bonesBuffer</declname>
        </param>
        <briefdescription>
<para>Copies the instanced skinned nodes model matrices into given matrix buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderNodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The instanced nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bonesBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The bones matrix buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="831" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1af6a1dcd4de30a16371ff2801ae10c23a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::SceneRenderPass::doCopyNodesBones</definition>
        <argsstring>(SkinningRenderNodePtrArray const &amp;renderNodes, ShaderBuffer &amp;bonesBuffer, RenderInfo &amp;info) const</argsstring>
        <name>doCopyNodesBones</name>
        <param>
          <type>SkinningRenderNodePtrArray const &amp;</type>
          <declname>renderNodes</declname>
        </param>
        <param>
          <type><ref refid="db/dd7/a05302" kindref="compound">ShaderBuffer</ref> &amp;</type>
          <declname>bonesBuffer</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Copies the instanced skinned nodes model matrices into given matrix buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The nodes which are copied will be registered in the rendered nodes list. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderNodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The instanced nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bonesBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The bones matrix buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="847" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a1f6449a6facd708b63468e0cf2395133" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(SubmeshStaticRenderNodesPtrByPipelineMap &amp;nodes)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>SubmeshStaticRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Updates instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="858" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a8daee9fd51dd6295fcfde8f29d9b0215" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(SubmeshStaticRenderNodesPtrByPipelineMap &amp;nodes, RenderInfo &amp;info)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>SubmeshStaticRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Updates instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="869" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1accb2dd43ffa84bee0d475a1f39135d2a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(StaticRenderNodesPtrByPipelineMap &amp;nodes)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>StaticRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Updates non instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a42af41141686d6979c7f14d427b2b978" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(StaticRenderNodesPtrByPipelineMap &amp;nodes, RenderInfo &amp;info)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>StaticRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Updates non instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="890" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a8130e8bcfe91063cf2589979d4381e73" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(SkinningRenderNodesPtrByPipelineMap &amp;nodes)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>SkinningRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Updates non instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="900" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab524ba33c1aaec1b9f95ab64b8efaab5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(SkinningRenderNodesPtrByPipelineMap &amp;nodes, RenderInfo &amp;info)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>SkinningRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Updates non instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="911" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a8e02e08b5f5e4065d583926ae5a2b313" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(SubmeshSkinningRenderNodesPtrByPipelineMap &amp;nodes)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>SubmeshSkinningRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Updates instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ae907440fd9c2237ba4bb5a4dec97a898" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(SubmeshSkinningRenderNodesPtrByPipelineMap &amp;nodes, RenderInfo &amp;info)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>SubmeshSkinningRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Updates instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab0c1a3251b5af55708ad6b6a13307fa6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(MorphingRenderNodesPtrByPipelineMap &amp;nodes)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>MorphingRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Updates non instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="942" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1acc81b152f8a75a0006f933aa9ad1c35b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(MorphingRenderNodesPtrByPipelineMap &amp;nodes, RenderInfo &amp;info)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>MorphingRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Updates non instanced submeshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="953" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ad95120cc3a5f5ae2566518fbfd1e96b1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(BillboardRenderNodesPtrByPipelineMap &amp;nodes)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>BillboardRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Updates billboards. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="963" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1abcc866dd44044031e30ed73d47357ed0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(BillboardRenderNodesPtrByPipelineMap &amp;nodes, RenderInfo &amp;info)</argsstring>
        <name>doUpdate</name>
        <param>
          <type>BillboardRenderNodesPtrByPipelineMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="d5/dba/a04510" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Updates billboards. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The render nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="974" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a7b644b338ea6bbbffec7ed1cf4936a38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doUpdate</definition>
        <argsstring>(RenderQueueArray &amp;queues)</argsstring>
        <name>doUpdate</name>
        <reimplementedby refid="d5/d47/a04490_1a6ba9f66a789d8c524de196544f855ec5">doUpdate</reimplementedby>
        <param>
          <type><ref refid="de/d13/a01473_1a16af0407887759f4b7d74964b4533ec6" kindref="member">RenderQueueArray</ref> &amp;</type>
          <declname>queues</declname>
        </param>
        <briefdescription>
<para>Updates the specific data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Gather the render queues, for further update. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">queues</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render queues needed for the rendering of the frame. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="986" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1acd676b5c76dd43d28372ae795dea952e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doUpdateUbos</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>doUpdateUbos</name>
        <reimplementedby refid="dd/d22/a04662_1ac92101d69d81b9c4594fc3d110c67b23">doUpdateUbos</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1abc0ce1f1a55694e3db5af51c1e566909">doUpdateUbos</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a379291ade5f7091fa766aafdf12652cf">doUpdateUbos</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1acdfea39f350a6e70d8342761cd7b894d">doUpdateUbos</reimplementedby>
        <param>
          <type><ref refid="d5/d03/a04582" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the render pass, CPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="995" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a1f4d8c2e2d67d3686c1059e189ab2d95" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::map&lt; <ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref>, RenderPipelineUPtr &gt; &amp;</type>
        <definition>C3D_API std::map&lt; PipelineFlags, RenderPipelineUPtr &gt;&amp; castor3d::SceneRenderPass::doGetFrontPipelines</definition>
        <argsstring>()</argsstring>
        <name>doGetFrontPipelines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The front culled pipelines list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1004" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1adc154d1a476245fee3c7a997e51018ae" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::map&lt; <ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref>, RenderPipelineUPtr &gt; &amp;</type>
        <definition>C3D_API std::map&lt; PipelineFlags, RenderPipelineUPtr &gt;&amp; castor3d::SceneRenderPass::doGetBackPipelines</definition>
        <argsstring>()</argsstring>
        <name>doGetBackPipelines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The back culled pipelines list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1013" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab11482c4f9eb0c4a7d91af6681bc558d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::map&lt; <ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref>, RenderPipelineUPtr &gt; const  &amp;</type>
        <definition>C3D_API std::map&lt; PipelineFlags, RenderPipelineUPtr &gt; const&amp; castor3d::SceneRenderPass::doGetFrontPipelines</definition>
        <argsstring>() const</argsstring>
        <name>doGetFrontPipelines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The front culled pipelines list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1022" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a31fa7bcde80cfbdcb6acce0810df198e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::map&lt; <ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref>, RenderPipelineUPtr &gt; const  &amp;</type>
        <definition>C3D_API std::map&lt; PipelineFlags, RenderPipelineUPtr &gt; const&amp; castor3d::SceneRenderPass::doGetBackPipelines</definition>
        <argsstring>() const</argsstring>
        <name>doGetBackPipelines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The back culled pipelines list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1031" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab5eabfab3b395ee4a59d0302b0e245d1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doPrepareFrontPipeline</definition>
        <argsstring>(ShaderProgramSPtr program, ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;layouts, PipelineFlags const &amp;flags)</argsstring>
        <name>doPrepareFrontPipeline</name>
        <param>
          <type>ShaderProgramSPtr</type>
          <declname>program</declname>
        </param>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>layouts</declname>
        </param>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Prepares the pipeline, culling front faces. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">program</parametername>
</parameternamelist>
<parameterdescription>
<para>The program. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layouts</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertex buffers layouts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1044" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a01dba0c138042186e5976fd73e716fc5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doPrepareBackPipeline</definition>
        <argsstring>(ShaderProgramSPtr program, ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;layouts, PipelineFlags const &amp;flags)</argsstring>
        <name>doPrepareBackPipeline</name>
        <param>
          <type>ShaderProgramSPtr</type>
          <declname>program</declname>
        </param>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>layouts</declname>
        </param>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Prepares the pipeline, culling back faces. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">program</parametername>
</parameternamelist>
<parameterdescription>
<para>The program. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layouts</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertex buffers layouts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1059" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ad540b45ce71ad9f060c3fee1e50da35f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::VkDescriptorSetLayoutBindingArray</type>
        <definition>virtual C3D_API ashes::VkDescriptorSetLayoutBindingArray castor3d::SceneRenderPass::doCreateUboBindings</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>doCreateUboBindings</name>
        <reimplementedby refid="dd/d22/a04662_1aa127d94857491200ec957f2df5c108c5">doCreateUboBindings</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1af4447267f8e4f1ae88e658bfea454005">doCreateUboBindings</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a1b9ce5524a4205701877066f02417ddb">doCreateUboBindings</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a9d8317867d2eba99dda13995c26acf79">doCreateUboBindings</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1aaf8bc2adc1ec263f60686e8cbd6705c8">doCreateUboBindings</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates the common UBO descriptor layout bindings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1add71461e455e60430c682a664e5ff163" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::VkDescriptorSetLayoutBindingArray</type>
        <definition>virtual C3D_API ashes::VkDescriptorSetLayoutBindingArray castor3d::SceneRenderPass::doCreateTextureBindings</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doCreateTextureBindings</name>
        <reimplementedby refid="d4/db9/a04870_1a64901a80bed9459d6d228c25458a06ba">doCreateTextureBindings</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a61622e28cc6d91dd34f7f947602b8501">doCreateTextureBindings</reimplementedby>
        <reimplementedby refid="d0/d70/a04658_1a20c06e8eb775f9e1f9509be38683df56">doCreateTextureBindings</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1aeae31caf427c1d92ed020899157f185c">doCreateTextureBindings</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1ae38cdbc6569003188112df0c6a520222">doCreateTextureBindings</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1ad9e37d9faa638b44916072a6f9faaca8">doCreateTextureBindings</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates the common textures descriptor layout bindings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1079" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a966911ad6ae24a856db42dc265df1c23" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::PipelineDepthStencilStateCreateInfo</type>
        <definition>virtual C3D_API ashes::PipelineDepthStencilStateCreateInfo castor3d::SceneRenderPass::doCreateDepthStencilState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doCreateDepthStencilState</name>
        <reimplementedby refid="dd/d22/a04662_1aed83f5cc4bc3aa96bd09a73a95ac8648">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1a431ad68d57f1286f2a56a3fe5ee4de3a">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1af7380c4af2e595111ee95ccd7bc42d08">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a513277558ebdc089688e29007ca9f225">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="da/d9e/a04926_1a66a1193830371815c6449cac35756345">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a8d3bbb462acafcd057399182a8d30c59">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a876fa4b7195b471e51d04384a9664cb5">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1ab0aeb7579ebac2906ec9954ff970ed9f">doCreateDepthStencilState</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates the depth stencil state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1088" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1aee56eed63ba3932ab498d5b7a10a5d41" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::PipelineColorBlendStateCreateInfo</type>
        <definition>virtual C3D_API ashes::PipelineColorBlendStateCreateInfo castor3d::SceneRenderPass::doCreateBlendState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doCreateBlendState</name>
        <reimplementedby refid="dd/d22/a04662_1aa0de0d75db51aad5918c2aa0491b5266">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1aa08621776475de14262f7aa035ab4ed8">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d4/db9/a04870_1a724ddd2686e1759df808c548a2d8d320">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a7f0ba67fabce0835b927518d7cd1f2ae">doCreateBlendState</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a0d7cf9c74270355b7467425d9186a956">doCreateBlendState</reimplementedby>
        <reimplementedby refid="da/d9e/a04926_1a1bdbac2bc43c236e3ee53f13dfc85194">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a2a173d63d75710ed28e8853a5316c45d">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a7c26034c5d5b3fb2fb4bfc4f2241b40f">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1afd7311426c1cc5a4dcb29a841193f180">doCreateBlendState</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates the colour blend state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1097" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a747fb083615688d7f6aed157719ef001" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doCleanup</definition>
        <argsstring>(RenderDevice const &amp;device)=0</argsstring>
        <name>doCleanup</name>
        <reimplementedby refid="dd/d22/a04662_1a7015b0b0fc6b5e71d70a9b133cecf3a8">doCleanup</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1a8dbc83d596ed9dece2205bfca92d705b">doCleanup</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a999abac907c115eed3d3a7ecf028f247">doCleanup</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a1d2323912612605a0b8f37b48418cc6a">doCleanup</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a2419a3d98bfa213a0f2e198dabc40ea0">doCleanup</reimplementedby>
        <reimplementedby refid="d9/d82/a04718_1a91d73c976be9793a1064250b8cc23a48">doCleanup</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a06ceac03e62918d871f0ce9e481a6799">doCleanup</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a281c6db6df63bc04b4656377b453a571">doCleanup</reimplementedby>
        <param>
          <type><ref refid="d8/d4c/a04506" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Cleans up the pass. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1abb2cbf41043f25a8e5a7edf335d1f4c6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>virtual C3D_API bool castor3d::SceneRenderPass::doInitialise</definition>
        <argsstring>(RenderDevice const &amp;device, castor::Size const &amp;size)=0</argsstring>
        <name>doInitialise</name>
        <reimplementedby refid="dd/d22/a04662_1a7b6be1f4cdd7aa3a2d8d9333cab07419">doInitialise</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1a4b722cd13f26298183c07753039c5733">doInitialise</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a40ab896f3d50b45e9d6ec0442fde2d1b">doInitialise</reimplementedby>
        <reimplementedby refid="da/d9e/a04926_1a543fbaa765004699379e18ac4a9f04ff">doInitialise</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a256062c56dbc35e0ed5f971e1a374950">doInitialise</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1ae57a26f34ff9d942d9dc5976e474de76">doInitialise</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a1be42c59a817fa1c892cfae340dd23a9">doInitialise</reimplementedby>
        <param>
          <type><ref refid="d8/d4c/a04506" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Initialises the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass needed dimensions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> on ok. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1aa3c113ef6dd789de03b30c2579e773f0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doFillUboDescriptor</definition>
        <argsstring>(ashes::DescriptorSetLayout const &amp;layout, BillboardListRenderNode &amp;node)=0</argsstring>
        <name>doFillUboDescriptor</name>
        <reimplementedby refid="dd/d22/a04662_1ade0614d685759c83aa50e97b9e1f1d34">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1ac83c0e2bea7d9eb640a7c4dc6da8bfec">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a25a86d4962ad065b2fd91254251c70be">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a50e40ce5677fa3abc9eb0358d37a21f2">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a925fb6958cba9129754cefcd610a97b3">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a5c0050b4d6a01f6ab1d955f136afcba4">doFillUboDescriptor</reimplementedby>
        <param>
          <type>ashes::DescriptorSetLayout const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a384f6fd61b75ba3fbac28239a79872cd" kindref="member">BillboardListRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Initialises the descriptor set of a billboard node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptors layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ac876a1d4eac1cd8094444d6562cc7952" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doFillUboDescriptor</definition>
        <argsstring>(ashes::DescriptorSetLayout const &amp;layout, SubmeshRenderNode &amp;node)=0</argsstring>
        <name>doFillUboDescriptor</name>
        <reimplementedby refid="dd/d22/a04662_1a3d291627867c6d62d958970be096fc3a">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1a23c86cc71bd56a34610437a2d1c9a69a">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1ae39fdba223fa388abb0aedbbe4a50a35">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a15476ff87c4a0492df0bd9691634dd34">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1af4d35a67b036bc8aac50aaf2e1022498">doFillUboDescriptor</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a23167a6752f6c30a4046ceb6bf6884ab">doFillUboDescriptor</reimplementedby>
        <param>
          <type>ashes::DescriptorSetLayout const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ae05cd0daba83f842b870aa2eb08b1b91" kindref="member">SubmeshRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Initialises the descriptor set of a morphing node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptors layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a2ff8b6ee2139a5f6dd562c74d94a913a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doFillTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetLayout const &amp;layout, uint32_t &amp;index, BillboardListRenderNode &amp;node, ShadowMapLightTypeArray const &amp;shadowMaps)=0</argsstring>
        <name>doFillTextureDescriptor</name>
        <reimplementedby refid="d4/db9/a04870_1a2ce6dd0e42f5b976f2e4ab3d8680b041">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1aa51740bafb4b696c60f80d0a42351c40">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="d0/d70/a04658_1a74ada7780ae0dd6ce1195db3a531e1c8">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a125d522728198cf7d0200347be51a4b0">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a7ef3a8afdf4a00af33642708a789a8ee">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a3ef922a7586738cb46c449a0d698d371">doFillTextureDescriptor</reimplementedby>
        <param>
          <type>ashes::DescriptorSetLayout const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a384f6fd61b75ba3fbac28239a79872cd" kindref="member">BillboardListRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the descriptor set of a billboard node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptors layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture index, updated to the next available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a15b8a481485c2184f315c4ba4131ec3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doFillTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetLayout const &amp;layout, uint32_t &amp;index, SubmeshRenderNode &amp;node, ShadowMapLightTypeArray const &amp;shadowMaps)=0</argsstring>
        <name>doFillTextureDescriptor</name>
        <reimplementedby refid="d4/db9/a04870_1aca1dedc12185f8c2936f0cc90f605061">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a428195fec76d0ec5532ff4824bb24724">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="d0/d70/a04658_1a152aac6f3544e60e380655720c901c44">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a6d5f0ccd7c5c5a8062ed72a613b625a5">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a071decbc0597aaeb94423af9539219b6">doFillTextureDescriptor</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a702165723e7fe6380004085cef45f3b9">doFillTextureDescriptor</reimplementedby>
        <param>
          <type>ashes::DescriptorSetLayout const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ae05cd0daba83f842b870aa2eb08b1b91" kindref="member">SubmeshRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the descriptor set of a morphing node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptors layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture index, updated to the next available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1175" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d1b/a04590_1a8ece518761c68ec639b59e82cde459af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>virtual C3D_API castor3d::SceneRenderPass::~SceneRenderPass</definition>
        <argsstring>()=default</argsstring>
        <name>~SceneRenderPass</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a659c1c103b9db5a461c77a6c0417be1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::SceneRenderPass::initialise</definition>
        <argsstring>(RenderDevice const &amp;device, castor::Size const &amp;size)</argsstring>
        <name>initialise</name>
        <param>
          <type><ref refid="d8/d4c/a04506" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Initialises the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The current device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass needed dimensions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> on ok. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1aa19a90dd2842009db8b987e205272135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::SceneRenderPass::initialise</definition>
        <argsstring>(RenderDevice const &amp;device, castor::Size const &amp;size, RenderPassTimer &amp;timer, uint32_t index)</argsstring>
        <name>initialise</name>
        <param>
          <type><ref refid="d8/d4c/a04506" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="d6/d76/a04606" kindref="compound">RenderPassTimer</ref> &amp;</type>
          <declname>timer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Initialises the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The current device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass needed dimensions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent timer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass timer index, in its parent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> on ok. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ac5627bf8072801b914f5a7a8fde7c4ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::cleanup</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>cleanup</name>
        <param>
          <type><ref refid="d8/d4c/a04506" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Cleans up the pass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The current device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1add6df2057351a89dbe243c62d6a5728a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="d5/d03/a04582" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the render pass, CPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a2d99705d33fb3391c2556e0c484d6ab8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>C3D_API ShaderPtr castor3d::SceneRenderPass::getVertexShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>getVertexShaderSource</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the vertex shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a32ad22d6a16a83d89a3a888599bf19ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>C3D_API ShaderPtr castor3d::SceneRenderPass::getPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>getPixelShaderSource</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pixel shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ad17ff2b38eb4b3323973a04816eca7a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>C3D_API ShaderPtr castor3d::SceneRenderPass::getGeometryShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>getGeometryShaderSource</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the geometry shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a1944832d81c804c1db58c6ce658aa50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref></type>
        <definition>C3D_API PipelineFlags castor3d::SceneRenderPass::prepareBackPipeline</definition>
        <argsstring>(BlendMode colourBlendMode, BlendMode alphaBlendMode, VkCompareOp alphaFunc, PassFlags const &amp;passFlags, TextureFlagsArray const &amp;textures, uint32_t heightMapIndex, ProgramFlags const &amp;programFlags, SceneFlags const &amp;sceneFlags, VkPrimitiveTopology topology, ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;layouts)</argsstring>
        <name>prepareBackPipeline</name>
        <param>
          <type><ref refid="de/d13/a01473_1a840ab6fd50c1a08fcc1b6dc3f98d90fa" kindref="member">BlendMode</ref></type>
          <declname>colourBlendMode</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a840ab6fd50c1a08fcc1b6dc3f98d90fa" kindref="member">BlendMode</ref></type>
          <declname>alphaBlendMode</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>alphaFunc</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a69e89af11c4c9247dce7ee99a21090fc" kindref="member">PassFlags</ref> const &amp;</type>
          <declname>passFlags</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1afa51b269ca00eaeff4f95f361bf2208f" kindref="member">TextureFlagsArray</ref> const &amp;</type>
          <declname>textures</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>heightMapIndex</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ab503144f281345b45ccc3f3a94543dce" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>programFlags</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a525bec5d25db94bcff4168e9e1a826fa" kindref="member">SceneFlags</ref> const &amp;</type>
          <declname>sceneFlags</declname>
        </param>
        <param>
          <type>VkPrimitiveTopology</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>layouts</declname>
        </param>
        <briefdescription>
<para>Prepares the pipeline matching the given flags, for back face culling nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">colourBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour blend mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha blend mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha test function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">passFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>A combination of PassFlag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">textures</parametername>
</parameternamelist>
<parameterdescription>
<para>The textures configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">heightMapIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The height map index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">programFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>A combination of ProgramFlag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">sceneFlags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d6/d66/a05238" kindref="compound">Scene</ref> related flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">topology</parametername>
</parameternamelist>
<parameterdescription>
<para>The render topology. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layouts</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertex buffers layouts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1aca7f84fa9420e1056a2254e7387c4c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::prepareBackPipeline</definition>
        <argsstring>(PipelineFlags &amp;flags, ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;layouts)</argsstring>
        <name>prepareBackPipeline</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>layouts</declname>
        </param>
        <briefdescription>
<para>Prepares the pipeline matching the given flags, for back face culling nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layouts</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertex buffers layouts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a8ef8352df2d2af6d596e4b8f7f013679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref></type>
        <definition>C3D_API PipelineFlags castor3d::SceneRenderPass::prepareFrontPipeline</definition>
        <argsstring>(BlendMode colourBlendMode, BlendMode alphaBlendMode, VkCompareOp alphaFunc, PassFlags const &amp;passFlags, TextureFlagsArray const &amp;textures, uint32_t heightMapIndex, ProgramFlags const &amp;programFlags, SceneFlags const &amp;sceneFlags, VkPrimitiveTopology topology, ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;layouts)</argsstring>
        <name>prepareFrontPipeline</name>
        <param>
          <type><ref refid="de/d13/a01473_1a840ab6fd50c1a08fcc1b6dc3f98d90fa" kindref="member">BlendMode</ref></type>
          <declname>colourBlendMode</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a840ab6fd50c1a08fcc1b6dc3f98d90fa" kindref="member">BlendMode</ref></type>
          <declname>alphaBlendMode</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>alphaFunc</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a69e89af11c4c9247dce7ee99a21090fc" kindref="member">PassFlags</ref> const &amp;</type>
          <declname>passFlags</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1afa51b269ca00eaeff4f95f361bf2208f" kindref="member">TextureFlagsArray</ref> const &amp;</type>
          <declname>textures</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>heightMapIndex</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ab503144f281345b45ccc3f3a94543dce" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>programFlags</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a525bec5d25db94bcff4168e9e1a826fa" kindref="member">SceneFlags</ref> const &amp;</type>
          <declname>sceneFlags</declname>
        </param>
        <param>
          <type>VkPrimitiveTopology</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>layouts</declname>
        </param>
        <briefdescription>
<para>Prepares the pipeline matching the given flags, for front face culling nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">colourBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour blend mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha blend mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha test function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">passFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>A combination of PassFlag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">textures</parametername>
</parameternamelist>
<parameterdescription>
<para>The textures configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">heightMapIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The height map index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">programFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>A combination of ProgramFlag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">sceneFlags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d6/d66/a05238" kindref="compound">Scene</ref> related flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">topology</parametername>
</parameternamelist>
<parameterdescription>
<para>The render topology. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layouts</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertex buffers layouts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab2e52ba19699b996f9a24a209af5c50d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::prepareFrontPipeline</definition>
        <argsstring>(PipelineFlags &amp;flags, ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;layouts)</argsstring>
        <name>prepareFrontPipeline</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ashes::PipelineVertexInputStateCreateInfoCRefArray const &amp;</type>
          <declname>layouts</declname>
        </param>
        <briefdescription>
<para>Prepares the pipeline matching the given flags, for front face culling nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layouts</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertex buffers layouts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a9ee5e22f4b636f7d1eb3dc7993cc23a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> *</type>
        <definition>C3D_API RenderPipeline* castor3d::SceneRenderPass::getPipelineFront</definition>
        <argsstring>(PipelineFlags flags) const</argsstring>
        <name>getPipelineFront</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pipeline matching the given flags, for front face culling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ready to use pipeline, <computeroutput>nullptr</computeroutput> if none is available for wanted configuration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a3f2e595dabdcea8b9668d591a5e26879" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> *</type>
        <definition>C3D_API RenderPipeline* castor3d::SceneRenderPass::getPipelineBack</definition>
        <argsstring>(PipelineFlags flags) const</argsstring>
        <name>getPipelineBack</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pipeline matching the given flags, for back face culling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ready to use pipeline, <computeroutput>nullptr</computeroutput> if none is available for wanted configuration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a1f6309ff1990fcf752d1b1fc4162707e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="dd/d0e/a04350" kindref="compound">SkinningRenderNode</ref></type>
        <definition>C3D_API SkinningRenderNode castor3d::SceneRenderPass::createSkinningNode</definition>
        <argsstring>(Pass &amp;pass, RenderPipeline &amp;pipeline, Submesh &amp;submesh, Geometry &amp;primitive, AnimatedSkeleton &amp;skeleton)</argsstring>
        <name>createSkinningNode</name>
        <param>
          <type><ref refid="df/d57/a02590" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type><ref refid="d7/df2/a03986" kindref="compound">Submesh</ref> &amp;</type>
          <declname>submesh</declname>
        </param>
        <param>
          <type><ref refid="d9/dcb/a05154" kindref="compound">Geometry</ref> &amp;</type>
          <declname>primitive</declname>
        </param>
        <param>
          <type><ref refid="da/df4/a05050" kindref="compound">AnimatedSkeleton</ref> &amp;</type>
          <declname>skeleton</declname>
        </param>
        <briefdescription>
<para>Creates an animated render node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The submesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">primitive</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">skeleton</parametername>
</parameternamelist>
<parameterdescription>
<para>The animated skeleton. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The render node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1aef15f688cd35f6b8b50970e7b5f57d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dfc/a04310" kindref="compound">MorphingRenderNode</ref></type>
        <definition>C3D_API MorphingRenderNode castor3d::SceneRenderPass::createMorphingNode</definition>
        <argsstring>(Pass &amp;pass, RenderPipeline &amp;pipeline, Submesh &amp;submesh, Geometry &amp;primitive, AnimatedMesh &amp;mesh)</argsstring>
        <name>createMorphingNode</name>
        <param>
          <type><ref refid="df/d57/a02590" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type><ref refid="d7/df2/a03986" kindref="compound">Submesh</ref> &amp;</type>
          <declname>submesh</declname>
        </param>
        <param>
          <type><ref refid="d9/dcb/a05154" kindref="compound">Geometry</ref> &amp;</type>
          <declname>primitive</declname>
        </param>
        <param>
          <type><ref refid="d5/dbd/a05038" kindref="compound">AnimatedMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
<para>Creates an animated render node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The submesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">primitive</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The animated mesh. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The render node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ad06a7b233133bd72a5f40a6309bbb636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d6/db7/a04354" kindref="compound">StaticRenderNode</ref></type>
        <definition>C3D_API StaticRenderNode castor3d::SceneRenderPass::createStaticNode</definition>
        <argsstring>(Pass &amp;pass, RenderPipeline &amp;pipeline, Submesh &amp;submesh, Geometry &amp;primitive)</argsstring>
        <name>createStaticNode</name>
        <param>
          <type><ref refid="df/d57/a02590" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type><ref refid="d7/df2/a03986" kindref="compound">Submesh</ref> &amp;</type>
          <declname>submesh</declname>
        </param>
        <param>
          <type><ref refid="d9/dcb/a05154" kindref="compound">Geometry</ref> &amp;</type>
          <declname>primitive</declname>
        </param>
        <briefdescription>
<para>Creates a static render node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The submesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">primitive</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The render node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a7534bc2c8e7a5e8812685d23cf92da18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d7/d12/a04298" kindref="compound">BillboardRenderNode</ref></type>
        <definition>C3D_API BillboardRenderNode castor3d::SceneRenderPass::createBillboardNode</definition>
        <argsstring>(Pass &amp;pass, RenderPipeline &amp;pipeline, BillboardBase &amp;billboard)</argsstring>
        <name>createBillboardNode</name>
        <param>
          <type><ref refid="df/d57/a02590" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type><ref refid="d2/dc4/a05134" kindref="compound">BillboardBase</ref> &amp;</type>
          <declname>billboard</declname>
        </param>
        <briefdescription>
<para>Creates a static render node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">billboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The billboard. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The render node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1aeb30d85455e3fb74cff7074377268d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::updatePipeline</definition>
        <argsstring>(RenderPipeline &amp;pipeline)</argsstring>
        <name>updatePipeline</name>
        <param>
          <type><ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <briefdescription>
<para>Updates the opaque pipeline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The render pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a41e1f148667ede6bf4a4b15b63edbd09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseUboDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, BillboardRenderNode &amp;node)</argsstring>
        <name>initialiseUboDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type><ref refid="d7/d12/a04298" kindref="compound">BillboardRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Initialises the UBO descriptor set of a billboard node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a1566db0372f6d6a3db34efc6c469cd26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseUboDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, MorphingRenderNode &amp;node)</argsstring>
        <name>initialiseUboDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type><ref refid="d2/dfc/a04310" kindref="compound">MorphingRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Initialises the UBO descriptor set of a morphing node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="471" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a6eb27cf641fd25efae02250beae221ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseUboDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, SkinningRenderNode &amp;node)</argsstring>
        <name>initialiseUboDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type><ref refid="dd/d0e/a04350" kindref="compound">SkinningRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Initialises the UBO descriptor set of a skinning node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a8e22a05fc6dbb5c7a99030c0a688cc15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseUboDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, StaticRenderNode &amp;node)</argsstring>
        <name>initialiseUboDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type><ref refid="d6/db7/a04354" kindref="compound">StaticRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Initialises the UBO descriptor set of a static node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a174e24b5897213c0dda6e3fcfb4d90d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseUboDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, SubmeshSkinninRenderNodesByPassMap &amp;nodes)</argsstring>
        <name>initialiseUboDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type>SubmeshSkinninRenderNodesByPassMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Initialises the UBO descriptor set of skining nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1ab6ccf8272797a7df98ad6dc8c7c43706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseUboDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, SubmeshStaticRenderNodesByPassMap &amp;nodes)</argsstring>
        <name>initialiseUboDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesByPassMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Initialises the UBO descriptor set of static nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="519" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a3206b3416f9f404253530cd6a8bcf39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, BillboardRenderNode &amp;node, ShadowMapLightTypeArray const &amp;shadowMaps)</argsstring>
        <name>initialiseTextureDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type><ref refid="d7/d12/a04298" kindref="compound">BillboardRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the textures descriptor set of a billboard node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a19fdc14553d98acdae5243a15a009b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, MorphingRenderNode &amp;node, ShadowMapLightTypeArray const &amp;shadowMaps)</argsstring>
        <name>initialiseTextureDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type><ref refid="d2/dfc/a04310" kindref="compound">MorphingRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the textures descriptor set of a morphing node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="548" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a9f7a16a74d188c71932474d2dfabd496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, SkinningRenderNode &amp;node, ShadowMapLightTypeArray const &amp;shadowMaps)</argsstring>
        <name>initialiseTextureDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type><ref refid="dd/d0e/a04350" kindref="compound">SkinningRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the textures descriptor set of a skinning node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a6293db061efb0ed860e247a10373b25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, StaticRenderNode &amp;node, ShadowMapLightTypeArray const &amp;shadowMaps)</argsstring>
        <name>initialiseTextureDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type><ref refid="d6/db7/a04354" kindref="compound">StaticRenderNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the textures descriptor set of a static node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="578" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a244414e5446292f40316010853b25a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, SubmeshSkinninRenderNodesByPassMap &amp;nodes, ShadowMapLightTypeArray const &amp;shadowMaps)</argsstring>
        <name>initialiseTextureDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type>SubmeshSkinninRenderNodesByPassMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the textures descriptor set of skinning nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="593" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a80f92f9b5d2ac1396870e4a19d88baaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::initialiseTextureDescriptor</definition>
        <argsstring>(ashes::DescriptorSetPool const &amp;descriptorPool, SubmeshStaticRenderNodesByPassMap &amp;nodes, ShadowMapLightTypeArray const &amp;shadowMaps)</argsstring>
        <name>initialiseTextureDescriptor</name>
        <param>
          <type>ashes::DescriptorSetPool const &amp;</type>
          <declname>descriptorPool</declname>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesByPassMap &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <briefdescription>
<para>Initialises the textures descriptor set of static nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descriptorPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The nodes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>The shadow maps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a49f451446a2b5cc5622aaaeda521bfbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderPass::updateFlags</definition>
        <argsstring>(PipelineFlags &amp;flags) const</argsstring>
        <name>updateFlags</name>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Modifies the given flags to make them match the render pass requirements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="619" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d6/d1b/a04590_1a85a295a43ea151d07bbb59a983fc0a9b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::PipelineColorBlendStateCreateInfo</type>
        <definition>static C3D_API ashes::PipelineColorBlendStateCreateInfo castor3d::SceneRenderPass::createBlendState</definition>
        <argsstring>(BlendMode colourBlendMode, BlendMode alphaBlendMode, uint32_t attachesCount)</argsstring>
        <name>createBlendState</name>
        <param>
          <type><ref refid="de/d13/a01473_1a840ab6fd50c1a08fcc1b6dc3f98d90fa" kindref="member">BlendMode</ref></type>
          <declname>colourBlendMode</declname>
        </param>
        <param>
          <type><ref refid="de/d13/a01473_1a840ab6fd50c1a08fcc1b6dc3f98d90fa" kindref="member">BlendMode</ref></type>
          <declname>alphaBlendMode</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>attachesCount</declname>
        </param>
        <briefdescription>
<para>Creates a blend state matching given blend modes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">colourBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour blend mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha blend mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attachesCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The wanted blend attaches count. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="634" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d1b/a04590_1a5d3dc93485a69008afb0170312d11e11" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doUpdateFlags</definition>
        <argsstring>(PipelineFlags &amp;flags) const =0</argsstring>
        <name>doUpdateFlags</name>
        <reimplementedby refid="dd/d22/a04662_1aca822c93f793c9ccad05a9fe147f7b92">doUpdateFlags</reimplementedby>
        <reimplementedby refid="d4/db9/a04870_1a33ab6f093dbe14d4ddb66e430b00a0f1">doUpdateFlags</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1a87bcd0a12b6a9f2065b30e62817f363f">doUpdateFlags</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a0837a3375a7aa4aed87b01c4539367e7">doUpdateFlags</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a48c2511d1d7a5676b5f49930e9b487b8">doUpdateFlags</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a58342f4d2dfd73d6920c33fd389c4dc4">doUpdateFlags</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a6961e967bbe19b9fe97bbde00d1c3fb1">doUpdateFlags</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a91b317296387ffee005e31efe90de99c">doUpdateFlags</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Modifies the given flags to make them match the render pass requirements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a698e64428c216acae1ca725373359689" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::SceneRenderPass::doUpdatePipeline</definition>
        <argsstring>(RenderPipeline &amp;pipeline)=0</argsstring>
        <name>doUpdatePipeline</name>
        <reimplementedby refid="d4/db9/a04870_1a3e2b1e692468c83c356b96a897912feb">doUpdatePipeline</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a10125d57aeeb01c400959dbf826326fa">doUpdatePipeline</reimplementedby>
        <reimplementedby refid="da/d9e/a04926_1ae3e2f6ab6e57f1ccca304fd4f715d853">doUpdatePipeline</reimplementedby>
        <reimplementedby refid="d0/d70/a04658_1a350ec12d3883587af38293c8f9fc21a9">doUpdatePipeline</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a05e8ab401a0db1e61c5b917f2d44101a">doUpdatePipeline</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a749e61fea4ab25dae9b566d392a64743">doUpdatePipeline</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a93314d2fea227ddc8125a3c0d360db0c">doUpdatePipeline</reimplementedby>
        <param>
          <type><ref refid="d9/d98/a04610" kindref="compound">RenderPipeline</ref> &amp;</type>
          <declname>pipeline</declname>
        </param>
        <briefdescription>
<para>Updates the pipeline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The render pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a81135a22e0eb402b74c05a66abb4b7a9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>virtual C3D_API ShaderPtr castor3d::SceneRenderPass::doGetVertexShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>doGetVertexShaderSource</name>
        <reimplementedby refid="dd/d22/a04662_1a6cf23d46453eb9c94d02e9241ab3d0d3">doGetVertexShaderSource</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1a708198a468325dc0df35b352a8d4b7e6">doGetVertexShaderSource</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a8d959864a0f43d3dcc4354958c64915c">doGetVertexShaderSource</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a07dff404727af3edf2acfbb5cf961c59">doGetVertexShaderSource</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a1e78ef1ab0dc208db2164d95e14bdf6e">doGetVertexShaderSource</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1aa1c792361b8406960958a7a2f2d56bd7">doGetVertexShaderSource</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a58e4f7398f67bbfff2c97dc6e0d1549b">doGetVertexShaderSource</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the vertex shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a5d9336ece6ac22832db7c0883bcd31db" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>virtual C3D_API ShaderPtr castor3d::SceneRenderPass::doGetBillboardShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const</argsstring>
        <name>doGetBillboardShaderSource</name>
        <reimplementedby refid="d8/d10/a05018_1ac23af990b4818660e0e477deba431cda">doGetBillboardShaderSource</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the billboards&apos; vertex shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a29139e48d35633ad218f6ecc9e52c435" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>virtual C3D_API ShaderPtr castor3d::SceneRenderPass::doGetGeometryShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doGetGeometryShaderSource</name>
        <reimplementedby refid="d4/db9/a04870_1ab23681f74e85b38c2137edcb0c5989e6">doGetGeometryShaderSource</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1afa4bb01983c2174c9cda1c7e6d4831f2">doGetGeometryShaderSource</reimplementedby>
        <reimplementedby refid="d0/d70/a04658_1adca1713ec09632055270f8dcb6b85564">doGetGeometryShaderSource</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1ad5349ce6f2b7f24c66eb37cfc03d38d5">doGetGeometryShaderSource</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a185b70869a81a5e56255d5d767c98e17">doGetGeometryShaderSource</reimplementedby>
        <reimplementedby refid="d6/d54/a04918_1a95f83b8f1dadc7f5da69eef0d73ce93b">doGetGeometryShaderSource</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the geometry shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a64c67405e2954877ce96d89c3bd6b0ad" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>virtual C3D_API ShaderPtr castor3d::SceneRenderPass::doGetPhongPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doGetPhongPixelShaderSource</name>
        <reimplementedby refid="dd/d22/a04662_1a8b194102bb601571fdffe4e04fdbfb50">doGetPhongPixelShaderSource</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1aece8404b38fb9996fccd976f2fd5986d">doGetPhongPixelShaderSource</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1ab1509972ce7b5a50e848a335ff6d22e7">doGetPhongPixelShaderSource</reimplementedby>
        <reimplementedby refid="d4/db9/a04870_1adb3956fe08bb49a6c8e0ca6e8a7eb67e">doGetPhongPixelShaderSource</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a4ea17c25e37c31909d4fecda5e701772">doGetPhongPixelShaderSource</reimplementedby>
        <reimplementedby refid="da/d9e/a04926_1a870e0f037e1b52f333acc4cca8a29b54">doGetPhongPixelShaderSource</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a902bf1e1de7e0f2d28c6e727205dd66a">doGetPhongPixelShaderSource</reimplementedby>
        <reimplementedby refid="d9/d82/a04718_1aa65be3ba033a12115a30450eb69cd896">doGetPhongPixelShaderSource</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a1b38a4fc01353fa31624f725652ea0c7">doGetPhongPixelShaderSource</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pixel shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a840611696fdbf0542000710c0191781f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>virtual C3D_API ShaderPtr castor3d::SceneRenderPass::doGetPbrMRPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doGetPbrMRPixelShaderSource</name>
        <reimplementedby refid="dd/d22/a04662_1a90efec37d00dc8d1ebb2d6f7a1195843">doGetPbrMRPixelShaderSource</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1a7296cc84bd9adddc58aaebbb2c9eefa6">doGetPbrMRPixelShaderSource</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a6fe7edc028445c3e7d149eb720192014">doGetPbrMRPixelShaderSource</reimplementedby>
        <reimplementedby refid="d4/db9/a04870_1a2bd79c05d264235b205cd806d664e3f7">doGetPbrMRPixelShaderSource</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1add326e905b9773d946acd60d6948180b">doGetPbrMRPixelShaderSource</reimplementedby>
        <reimplementedby refid="da/d9e/a04926_1a578f8678135ad9b944575ebce3b98ad8">doGetPbrMRPixelShaderSource</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a4731f4cb6c598dfec7a9bad5639bd1dd">doGetPbrMRPixelShaderSource</reimplementedby>
        <reimplementedby refid="d9/d82/a04718_1a3dce9525b288805e23f365140c44ca55">doGetPbrMRPixelShaderSource</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a1badb4060844c35818dc06c1b1a6f2d1">doGetPbrMRPixelShaderSource</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pixel shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d1b/a04590_1a26b38ac7476d3a153faa4b18573f3744" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/d13/a01473_1aec4f86dd5fea51ba4c7a8a10c7f503c7" kindref="member">ShaderPtr</ref></type>
        <definition>virtual C3D_API ShaderPtr castor3d::SceneRenderPass::doGetPbrSGPixelShaderSource</definition>
        <argsstring>(PipelineFlags const &amp;flags) const =0</argsstring>
        <name>doGetPbrSGPixelShaderSource</name>
        <reimplementedby refid="dd/d22/a04662_1ac3f057c853008e3e9f74eadfeffea8c2">doGetPbrSGPixelShaderSource</reimplementedby>
        <reimplementedby refid="d7/d54/a04666_1a5345eacc264b2a980d90ed98be7659f5">doGetPbrSGPixelShaderSource</reimplementedby>
        <reimplementedby refid="d8/dca/a04670_1a7b41e0249dc8d9062fb6a0da7c3fa6b2">doGetPbrSGPixelShaderSource</reimplementedby>
        <reimplementedby refid="d4/db9/a04870_1a74ee199d3f15e3be7e1bfff00abc3123">doGetPbrSGPixelShaderSource</reimplementedby>
        <reimplementedby refid="db/dc9/a04378_1a6483028f3fbb597d1e832410319a512b">doGetPbrSGPixelShaderSource</reimplementedby>
        <reimplementedby refid="da/d9e/a04926_1a8fb7678d3ceff6c5d0dc38f4265af4f0">doGetPbrSGPixelShaderSource</reimplementedby>
        <reimplementedby refid="d8/d10/a05018_1a592f41d7f1dbdbef18ec38c70fbed115">doGetPbrSGPixelShaderSource</reimplementedby>
        <reimplementedby refid="d9/d82/a04718_1af6667b70318b471c3e2f941b03cb0542">doGetPbrSGPixelShaderSource</reimplementedby>
        <reimplementedby refid="d5/d47/a04490_1a435d03443c40035badfe28f5232dfbe5">doGetPbrSGPixelShaderSource</reimplementedby>
        <param>
          <type><ref refid="d0/d15/a04574" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Retrieves the pixel shader source matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderPass.hpp" line="1252" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3382">
        <label>castor3d::ShadowMapPassPoint</label>
        <link refid="d7/d54/a04666"/>
        <childnode refid="3380" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3379">
        <label>castor3d::TransparentPass</label>
        <link refid="da/d9e/a04926"/>
        <childnode refid="3375" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3381">
        <label>castor3d::ShadowMapPassDirectional</label>
        <link refid="dd/d22/a04662"/>
        <childnode refid="3380" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3375">
        <label>castor3d::RenderTechniquePass</label>
        <link refid="d6/d54/a04918"/>
        <childnode refid="3371" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3377">
        <label>castor3d::ForwardRenderTechniquePass</label>
        <link refid="d9/d82/a04718"/>
        <childnode refid="3375" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3373">
        <label>Named</label>
      </node>
      <node id="3371">
        <label>castor3d::SceneRenderPass</label>
        <link refid="d6/d1b/a04590"/>
        <childnode refid="3372" relation="public-inheritance">
        </childnode>
        <childnode refid="3373" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3384">
        <label>castor3d::VoxelizePass</label>
        <link refid="d8/d10/a05018"/>
        <childnode refid="3371" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3380">
        <label>castor3d::ShadowMapPass</label>
        <link refid="d0/d70/a04658"/>
        <childnode refid="3371" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3372">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="3374">
        <label>castor3d::PickingPass</label>
        <link refid="d5/d47/a04490"/>
        <childnode refid="3371" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3378">
        <label>castor3d::OpaquePass</label>
        <link refid="d4/db9/a04870"/>
        <childnode refid="3375" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3376">
        <label>castor3d::DepthPass</label>
        <link refid="db/dc9/a04378"/>
        <childnode refid="3375" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3383">
        <label>castor3d::ShadowMapPassSpot</label>
        <link refid="d8/dca/a04670"/>
        <childnode refid="3380" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3399">
        <label>castor3d::RenderQueue</label>
        <link refid="d2/dc4/a04614"/>
        <childnode refid="3400" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3396">
        <label>castor3d::SceneCuller</label>
        <link refid="d2/d73/a04226"/>
      </node>
      <node id="3395">
        <label>castor3d::RenderSystem</label>
        <link refid="d1/d9a/a04618"/>
        <childnode refid="3386" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3392">
        <label>K</label>
      </node>
      <node id="3393">
        <label>T</label>
      </node>
      <node id="3400">
        <label>castor::OwnedBy&lt; SceneRenderPass &gt;</label>
      </node>
      <node id="3391">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="3392" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="3393" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3390">
        <label>castor3d::UniformBufferOffsetT&lt; DataT &gt;</label>
        <link refid="dd/dae/a02294"/>
      </node>
      <node id="3387">
        <label>Named</label>
      </node>
      <node id="3389">
        <label>castor3d::UniformBufferOffsetT&lt; castor3d::ModelInstancesUboConfiguration &gt;</label>
        <link refid="dd/dae/a02294"/>
        <childnode refid="3390" relation="template-instance">
          <edgelabel>&lt; castor3d::ModelInstancesUboConfiguration &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3385">
        <label>castor3d::SceneRenderPass</label>
        <link refid="d6/d1b/a04590"/>
        <childnode refid="3386" relation="public-inheritance">
        </childnode>
        <childnode refid="3387" relation="public-inheritance">
        </childnode>
        <childnode refid="3388" relation="usage">
          <edgelabel>m_modelsInstances</edgelabel>
        </childnode>
        <childnode refid="3394" relation="usage">
          <edgelabel>m_sceneUbo</edgelabel>
        </childnode>
        <childnode refid="3395" relation="usage">
          <edgelabel>m_renderSystem</edgelabel>
        </childnode>
        <childnode refid="3396" relation="usage">
          <edgelabel>m_culler</edgelabel>
        </childnode>
        <childnode refid="3397" relation="usage">
          <edgelabel>m_timer</edgelabel>
        </childnode>
        <childnode refid="3398" relation="usage">
          <edgelabel>m_matrixUbo</edgelabel>
        </childnode>
        <childnode refid="3399" relation="usage">
          <edgelabel>m_renderQueue</edgelabel>
        </childnode>
      </node>
      <node id="3394">
        <label>castor3d::SceneUbo</label>
        <link refid="dc/d79/a05522"/>
      </node>
      <node id="3397">
        <label>castor3d::RenderPassTimer</label>
        <link refid="d6/d76/a04606"/>
        <childnode refid="3387" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3386">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="3398">
        <label>castor3d::MatrixUbo</label>
        <link refid="d2/d30/a05490"/>
      </node>
      <node id="3388">
        <label>std::map&lt; size_t, castor3d::UniformBufferOffsetT&lt; castor3d::ModelInstancesUboConfiguration &gt; &gt;</label>
        <childnode refid="3389" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="3391" relation="template-instance">
          <edgelabel>&lt; size_t, castor3d::UniformBufferOffsetT&lt; castor3d::ModelInstancesUboConfiguration &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Render/RenderPass.hpp" line="26" column="1" bodyfile="Render/RenderPass.hpp" bodystart="23" bodyend="1314"/>
    <listofallmembers>
      <member refid="d6/d1b/a04590_1ac5627bf8072801b914f5a7a8fde7c4ef" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>cleanup</name></member>
      <member refid="d6/d1b/a04590_1a7534bc2c8e7a5e8812685d23cf92da18" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>createBillboardNode</name></member>
      <member refid="d6/d1b/a04590_1a85a295a43ea151d07bbb59a983fc0a9b" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>createBlendState</name></member>
      <member refid="d6/d1b/a04590_1aef15f688cd35f6b8b50970e7b5f57d1b" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>createMorphingNode</name></member>
      <member refid="d6/d1b/a04590_1a1f6309ff1990fcf752d1b1fc4162707e" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>createSkinningNode</name></member>
      <member refid="d6/d1b/a04590_1ad06a7b233133bd72a5f40a6309bbb636" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>createStaticNode</name></member>
      <member refid="d6/d1b/a04590_1acfc7eaded98ff40bb227979eb6f56274" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>DistanceSortedNodeMap</name></member>
      <member refid="d6/d1b/a04590_1a747fb083615688d7f6aed157719ef001" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCleanup</name></member>
      <member refid="d6/d1b/a04590_1a5ad44dd6ff6eff2ff3ef28ffce50790d" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCopyNodesBones</name></member>
      <member refid="d6/d1b/a04590_1af6a1dcd4de30a16371ff2801ae10c23a" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCopyNodesBones</name></member>
      <member refid="d6/d1b/a04590_1ac7e8cea34069461a25c5dce78ad4133d" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCopyNodesMatrices</name></member>
      <member refid="d6/d1b/a04590_1abedc9556fe34264878d1175e4c5dd76d" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCopyNodesMatrices</name></member>
      <member refid="d6/d1b/a04590_1a8ea69998caa9d7ccc3c86d5fd5b4f0f0" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCopyNodesMatrices</name></member>
      <member refid="d6/d1b/a04590_1a6bce0687b325c3413c94465655611170" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCopyNodesMatrices</name></member>
      <member refid="d6/d1b/a04590_1aee56eed63ba3932ab498d5b7a10a5d41" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCreateBlendState</name></member>
      <member refid="d6/d1b/a04590_1a966911ad6ae24a856db42dc265df1c23" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCreateDepthStencilState</name></member>
      <member refid="d6/d1b/a04590_1ab989a2da21f70c26e1fed17823e39af6" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCreatePassRenderNode</name></member>
      <member refid="d6/d1b/a04590_1a9bf6b45209c8b79cccfa152d51b3b144" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCreateSceneRenderNode</name></member>
      <member refid="d6/d1b/a04590_1add71461e455e60430c682a664e5ff163" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doCreateTextureBindings</name></member>
      <member refid="d6/d1b/a04590_1ad540b45ce71ad9f060c3fee1e50da35f" prot="protected" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>doCreateUboBindings</name></member>
      <member refid="d6/d1b/a04590_1a2ff8b6ee2139a5f6dd562c74d94a913a" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doFillTextureDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a15b8a481485c2184f315c4ba4131ec3b" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doFillTextureDescriptor</name></member>
      <member refid="d6/d1b/a04590_1aa3c113ef6dd789de03b30c2579e773f0" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doFillUboDescriptor</name></member>
      <member refid="d6/d1b/a04590_1ac876a1d4eac1cd8094444d6562cc7952" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doFillUboDescriptor</name></member>
      <member refid="d6/d1b/a04590_1adc154d1a476245fee3c7a997e51018ae" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetBackPipelines</name></member>
      <member refid="d6/d1b/a04590_1a31fa7bcde80cfbdcb6acce0810df198e" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetBackPipelines</name></member>
      <member refid="d6/d1b/a04590_1a5d9336ece6ac22832db7c0883bcd31db" prot="private" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetBillboardShaderSource</name></member>
      <member refid="d6/d1b/a04590_1a1f4d8c2e2d67d3686c1059e189ab2d95" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetFrontPipelines</name></member>
      <member refid="d6/d1b/a04590_1ab11482c4f9eb0c4a7d91af6681bc558d" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetFrontPipelines</name></member>
      <member refid="d6/d1b/a04590_1a29139e48d35633ad218f6ecc9e52c435" prot="private" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetGeometryShaderSource</name></member>
      <member refid="d6/d1b/a04590_1a840611696fdbf0542000710c0191781f" prot="private" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetPbrMRPixelShaderSource</name></member>
      <member refid="d6/d1b/a04590_1a26b38ac7476d3a153faa4b18573f3744" prot="private" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetPbrSGPixelShaderSource</name></member>
      <member refid="d6/d1b/a04590_1a64c67405e2954877ce96d89c3bd6b0ad" prot="private" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetPhongPixelShaderSource</name></member>
      <member refid="d6/d1b/a04590_1a4b807ea9d74d5f1ccaba4b29e78c8085" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetProgram</name></member>
      <member refid="d6/d1b/a04590_1a81135a22e0eb402b74c05a66abb4b7a9" prot="private" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>doGetVertexShaderSource</name></member>
      <member refid="d6/d1b/a04590_1abb2cbf41043f25a8e5a7edf335d1f4c6" prot="protected" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doInitialise</name></member>
      <member refid="d6/d1b/a04590_1a01dba0c138042186e5976fd73e716fc5" prot="protected" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>doPrepareBackPipeline</name></member>
      <member refid="d6/d1b/a04590_1ab5eabfab3b395ee4a59d0302b0e245d1" prot="protected" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>doPrepareFrontPipeline</name></member>
      <member refid="d6/d1b/a04590_1a1f6449a6facd708b63468e0cf2395133" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1a8daee9fd51dd6295fcfde8f29d9b0215" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1accb2dd43ffa84bee0d475a1f39135d2a" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1a42af41141686d6979c7f14d427b2b978" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1a8130e8bcfe91063cf2589979d4381e73" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1ab524ba33c1aaec1b9f95ab64b8efaab5" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1a8e02e08b5f5e4065d583926ae5a2b313" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1ae907440fd9c2237ba4bb5a4dec97a898" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1ab0c1a3251b5af55708ad6b6a13307fa6" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1acc81b152f8a75a0006f933aa9ad1c35b" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1ad95120cc3a5f5ae2566518fbfd1e96b1" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1abcc866dd44044031e30ed73d47357ed0" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1a7b644b338ea6bbbffec7ed1cf4936a38" prot="protected" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdate</name></member>
      <member refid="d6/d1b/a04590_1a5d3dc93485a69008afb0170312d11e11" prot="private" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdateFlags</name></member>
      <member refid="d6/d1b/a04590_1a698e64428c216acae1ca725373359689" prot="private" virt="pure-virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdatePipeline</name></member>
      <member refid="d6/d1b/a04590_1acd676b5c76dd43d28372ae795dea952e" prot="protected" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>doUpdateUbos</name></member>
      <member refid="d6/d1b/a04590_1a8dd34d9bcfcbf1cc93c73d633e26b375" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>forceTwoSided</name></member>
      <member refid="d6/d1b/a04590_1abcf02ee3b5e0f4dbfb0c9b5cf22a3245" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getCommandBuffer</name></member>
      <member refid="d6/d1b/a04590_1a9ec598bacebe135008057204f4b7e498" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getCuller</name></member>
      <member refid="d6/d1b/a04590_1ab06deeaf325f047f97f0fdd046b1db9a" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getCuller</name></member>
      <member refid="d6/d1b/a04590_1ad17ff2b38eb4b3323973a04816eca7a9" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getGeometryShaderSource</name></member>
      <member refid="d6/d1b/a04590_1ae964287f47d4145776448a31cb9a6ccd" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getInstanceMult</name></member>
      <member refid="d6/d1b/a04590_1a283dc741d44f730b657f153ee8c0b21d" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getMatrixUbo</name></member>
      <member refid="d6/d1b/a04590_1a3f2e595dabdcea8b9668d591a5e26879" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getPipelineBack</name></member>
      <member refid="d6/d1b/a04590_1a9ee5e22f4b636f7d1eb3dc7993cc23a4" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getPipelineFront</name></member>
      <member refid="d6/d1b/a04590_1a6f6289ae6913449d6cb3cb7a1ae64976" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getPipelinesCount</name></member>
      <member refid="d6/d1b/a04590_1a32ad22d6a16a83d89a3a888599bf19ed" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getPixelShaderSource</name></member>
      <member refid="d6/d1b/a04590_1af9a616bf4b5e1bf848d4a7783cff5dcf" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getRenderPass</name></member>
      <member refid="d6/d1b/a04590_1a9ce55bbe9de899304219df9a29869ac2" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getSceneUbo</name></member>
      <member refid="d6/d1b/a04590_1ad5bf1e846317bf671e0cac4118922226" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getSceneUbo</name></member>
      <member refid="d6/d1b/a04590_1abe50f4442fa70138e392be9d1bfba637" prot="public" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>getTexturesMask</name></member>
      <member refid="d6/d1b/a04590_1ab21b006fe9daf0ae6172c17f076c5f85" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getTimer</name></member>
      <member refid="d6/d1b/a04590_1a70c70fcde770cfa3efeaba683a11cbe4" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getTimer</name></member>
      <member refid="d6/d1b/a04590_1a2d99705d33fb3391c2556e0c484d6ab8" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>getVertexShaderSource</name></member>
      <member refid="d6/d1b/a04590_1afaa168a458700f72a3365a1f4c550c55" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>hasNodes</name></member>
      <member refid="d6/d1b/a04590_1a659c1c103b9db5a461c77a6c0417be1b" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialise</name></member>
      <member refid="d6/d1b/a04590_1aa19a90dd2842009db8b987e205272135" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialise</name></member>
      <member refid="d6/d1b/a04590_1a3206b3416f9f404253530cd6a8bcf39d" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a19fdc14553d98acdae5243a15a009b0e" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a9f7a16a74d188c71932474d2dfabd496" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a6293db061efb0ed860e247a10373b25b" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a244414e5446292f40316010853b25a85" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a80f92f9b5d2ac1396870e4a19d88baaa" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseTextureDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a41e1f148667ede6bf4a4b15b63edbd09" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a1566db0372f6d6a3db34efc6c469cd26" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a6eb27cf641fd25efae02250beae221ac" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a8e22a05fc6dbb5c7a99030c0a688cc15" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a174e24b5897213c0dda6e3fcfb4d90d5" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d6/d1b/a04590_1ab6ccf8272797a7df98ad6dc8c7c43706" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>initialiseUboDescriptor</name></member>
      <member refid="d6/d1b/a04590_1a912328721eae90138599880d76a309ae" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>isDirty</name></member>
      <member refid="d6/d1b/a04590_1a4bac800c4178729d7e6c2324eb126fd6" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>isOrderIndependent</name></member>
      <member refid="d6/d1b/a04590_1a2effa9fa6f6a601610b3c68943806efd" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_backPipelines</name></member>
      <member refid="d6/d1b/a04590_1aa7fc94ef9d99bc777795fb27941d7c65" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_category</name></member>
      <member refid="d6/d1b/a04590_1a16c632e89f0628620bcf01a70d520b2d" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_culler</name></member>
      <member refid="d6/d1b/a04590_1aa9df6fd78c7eb9ca9b59c10574776085" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_forceTwoSided</name></member>
      <member refid="d6/d1b/a04590_1a7bf0165597d111965609b8027226579f" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_frontPipelines</name></member>
      <member refid="d6/d1b/a04590_1a6e274505905d565cac4f9d6743b0417d" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_index</name></member>
      <member refid="d6/d1b/a04590_1afe43990c332123ca5bcaaa12e2204ff5" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_instanceMult</name></member>
      <member refid="d6/d1b/a04590_1ac70af3d0c68adfc6fa7ec2f68d5b6f12" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_isDirty</name></member>
      <member refid="d6/d1b/a04590_1a6b0f370e15e18a3a554c56b09fba85b4" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_matrixUbo</name></member>
      <member refid="d6/d1b/a04590_1a927f5ac447cecf2b3419ce9501632fd7" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_mode</name></member>
      <member refid="d6/d1b/a04590_1a923ae0f7686d6ef4c9a27f0799ca62c8" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_modelsInstances</name></member>
      <member refid="d6/d1b/a04590_1a898939bc8fc037bb32daebe391e6263b" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_oit</name></member>
      <member refid="d6/d1b/a04590_1a5faf1387a50606631d9eccf95060f84a" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_ownTimer</name></member>
      <member refid="d6/d1b/a04590_1a6f215acabcb9564bc85f30f8abeaba56" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_renderPass</name></member>
      <member refid="d6/d1b/a04590_1a3fd80e792cc2f052add8f252b531c0e2" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_renderQueue</name></member>
      <member refid="d6/d1b/a04590_1a1513ba71b682375fed01e9819105c894" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_renderSystem</name></member>
      <member refid="d6/d1b/a04590_1aa623f3557914bcc6e2e8cf058da1c5e5" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_sceneUbo</name></member>
      <member refid="d6/d1b/a04590_1ab4b6ee7f462854794ed9e3fccdc5b10f" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_size</name></member>
      <member refid="d6/d1b/a04590_1a729739080d9153cd9ce71129b909a869" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>m_timer</name></member>
      <member refid="d6/d1b/a04590_1a1944832d81c804c1db58c6ce658aa50c" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>prepareBackPipeline</name></member>
      <member refid="d6/d1b/a04590_1aca7f84fa9420e1056a2254e7387c4c56" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>prepareBackPipeline</name></member>
      <member refid="d6/d1b/a04590_1a8ef8352df2d2af6d596e4b8f7f013679" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>prepareFrontPipeline</name></member>
      <member refid="d6/d1b/a04590_1ab2e52ba19699b996f9a24a209af5c50d" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>prepareFrontPipeline</name></member>
      <member refid="d6/d1b/a04590_1affb5828080147f1657a582841cbaca01" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>SceneRenderPass</name></member>
      <member refid="d6/d1b/a04590_1ac65dc41b8e3392db21bd3cadd94754d6" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>SceneRenderPass</name></member>
      <member refid="d6/d1b/a04590_1a7a964bd723f31105db6937b6c2016344" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>SceneRenderPass</name></member>
      <member refid="d6/d1b/a04590_1a78ae5b7ef98084673c04980da95e359f" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>SceneRenderPass</name></member>
      <member refid="d6/d1b/a04590_1adf551a42f8dec9de911b7f2ffc56b666" prot="protected" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>SceneRenderPass</name></member>
      <member refid="d6/d1b/a04590_1add6df2057351a89dbe243c62d6a5728a" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>update</name></member>
      <member refid="d6/d1b/a04590_1a49f451446a2b5cc5622aaaeda521bfbf" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>updateFlags</name></member>
      <member refid="d6/d1b/a04590_1aeb30d85455e3fb74cff7074377268d80" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderPass</scope><name>updatePipeline</name></member>
      <member refid="d6/d1b/a04590_1a8ece518761c68ec639b59e82cde459af" prot="public" virt="virtual"><scope>castor3d::SceneRenderPass</scope><name>~SceneRenderPass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
