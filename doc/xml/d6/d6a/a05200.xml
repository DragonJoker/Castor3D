<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="d6/d6a/a05200" kind="class" language="C++" prot="public">
    <compoundname>castor3d::RenderTechnique</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; Engine &gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">castor::Named</basecompoundref>
    <includes local="no">RenderTechnique.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d6/d6a/a05200_1a36160a042f237505952ec7d9c690f588" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> crg::FramePass const &amp;</type>
        <definition>C3D_API crg::FramePass const  &amp; castor3d::RenderTechnique::getLastPass</definition>
        <argsstring>() const</argsstring>
        <name>getLastPass</name>
        <qualifiedname>castor3d::RenderTechnique::getLastPass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="166" column="31"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1ae90fc4a73dbae1161b6953421f4c5ec2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d6/d72/a05308" kindref="compound">SsaoConfig</ref> const &amp;</type>
        <definition>C3D_API SsaoConfig const  &amp; castor3d::RenderTechnique::getSsaoConfig</definition>
        <argsstring>() const</argsstring>
        <name>getSsaoConfig</name>
        <qualifiedname>castor3d::RenderTechnique::getSsaoConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="167" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1abb97bb2df0363d9e59f534e1c75371d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d6/d72/a05308" kindref="compound">SsaoConfig</ref> &amp;</type>
        <definition>C3D_API SsaoConfig &amp; castor3d::RenderTechnique::getSsaoConfig</definition>
        <argsstring>()</argsstring>
        <name>getSsaoConfig</name>
        <qualifiedname>castor3d::RenderTechnique::getSsaoConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="168" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a4005ff7bbde7698b1c969b767dfc2f26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>C3D_API Texture const  &amp; castor3d::RenderTechnique::getSsaoResult</definition>
        <argsstring>() const</argsstring>
        <name>getSsaoResult</name>
        <qualifiedname>castor3d::RenderTechnique::getSsaoResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="169" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a8258ad370dd41338e4694878d33f4b88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>C3D_API Texture const  &amp; castor3d::RenderTechnique::getFirstVctBounce</definition>
        <argsstring>() const</argsstring>
        <name>getFirstVctBounce</name>
        <qualifiedname>castor3d::RenderTechnique::getFirstVctBounce</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="170" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a6f3ad9ad67328118468096b29a143a20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>C3D_API Texture const  &amp; castor3d::RenderTechnique::getSecondaryVctBounce</definition>
        <argsstring>() const</argsstring>
        <name>getSecondaryVctBounce</name>
        <qualifiedname>castor3d::RenderTechnique::getSecondaryVctBounce</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="171" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a4262180532ace8660c1690a9e790f945" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> crg::ImageViewId const &amp;</type>
        <definition>C3D_API crg::ImageViewId const  &amp; castor3d::RenderTechnique::getLightDepthImgView</definition>
        <argsstring>() const</argsstring>
        <name>getLightDepthImgView</name>
        <qualifiedname>castor3d::RenderTechnique::getLightDepthImgView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="172" column="33"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1aad85498b89f92cbd18ca3f90a68e4386" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d22/a01572_1aba44f560382de7bf76d8fe9d1408eaab" kindref="member">TechniquePassVector</ref></type>
        <definition>C3D_API TechniquePassVector castor3d::RenderTechnique::getCustomRenderPasses</definition>
        <argsstring>() const</argsstring>
        <name>getCustomRenderPasses</name>
        <qualifiedname>castor3d::RenderTechnique::getCustomRenderPasses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="173" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1aea8f548e4abf2f6f8e13971dcfa0bac1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>C3D_API Texture const  &amp; castor3d::RenderTechnique::getDiffuseLightingResult</definition>
        <argsstring>() const</argsstring>
        <name>getDiffuseLightingResult</name>
        <qualifiedname>castor3d::RenderTechnique::getDiffuseLightingResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="174" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a63052e13ce1e407088a429b5a034a570" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>C3D_API Texture const  &amp; castor3d::RenderTechnique::getBaseColourResult</definition>
        <argsstring>() const</argsstring>
        <name>getBaseColourResult</name>
        <qualifiedname>castor3d::RenderTechnique::getBaseColourResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="175" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a70251968b621dacb56426d9481a81f95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Size const &amp;</type>
        <definition>castor::Size const  &amp; castor3d::RenderTechnique::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <qualifiedname>castor3d::RenderTechnique::getSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="177" column="21" bodyfile="Render/RenderTechnique.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a210970348d56d4ef04e3ff3d5daafd02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>Texture const  &amp; castor3d::RenderTechnique::getResult</definition>
        <argsstring>() const</argsstring>
        <name>getResult</name>
        <qualifiedname>castor3d::RenderTechnique::getResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="182" column="16" bodyfile="Render/RenderTechnique.hpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a305dd01e3cdd6099a30af26383beefd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>Texture const  &amp; castor3d::RenderTechnique::getNormal</definition>
        <argsstring>() const</argsstring>
        <name>getNormal</name>
        <qualifiedname>castor3d::RenderTechnique::getNormal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="187" column="16" bodyfile="Render/RenderTechnique.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a337548093c2fdb0d762c1356927cd4b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>Texture const  &amp; castor3d::RenderTechnique::getDepth</definition>
        <argsstring>() const</argsstring>
        <name>getDepth</name>
        <qualifiedname>castor3d::RenderTechnique::getDepth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="192" column="16" bodyfile="Render/RenderTechnique.hpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a4fc03b685e08378d5b56f1e7bdedda93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>Texture const  &amp; castor3d::RenderTechnique::getDepthObj</definition>
        <argsstring>() const</argsstring>
        <name>getDepthObj</name>
        <qualifiedname>castor3d::RenderTechnique::getDepthObj</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="197" column="16" bodyfile="Render/RenderTechnique.hpp" bodystart="197" bodyend="200"/>
        <references refid="dc/d61/a05028_1afc2090988c46b9d4e637e40d442cab8a" compoundref="da/d17/a01046" startline="115" endline="118">castor3d::PrepassRendering::getDepthObj</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a6e40d4fc96ba9f156d01270937c1679a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; int32_t &gt; const &amp;</type>
        <definition>ashes::Buffer&lt; int32_t &gt; const  &amp; castor3d::RenderTechnique::getDepthRange</definition>
        <argsstring>() const</argsstring>
        <name>getDepthRange</name>
        <qualifiedname>castor3d::RenderTechnique::getDepthRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="202" column="22" bodyfile="Render/RenderTechnique.hpp" bodystart="202" bodyend="205"/>
        <references refid="dc/d61/a05028_1a8fb6007415f3d7b401d20cdcbd1d024a" compoundref="da/d17/a01046" startline="131" endline="135">castor3d::PrepassRendering::getDepthRange</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a7edf49adb60c10efd7309d8100e048c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::setNeedsDepthRange</definition>
        <argsstring>(bool v)</argsstring>
        <name>setNeedsDepthRange</name>
        <qualifiedname>castor3d::RenderTechnique::setNeedsDepthRange</qualifiedname>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="207" column="6" bodyfile="Render/RenderTechnique.hpp" bodystart="207" bodyend="210"/>
        <references refid="dc/d61/a05028_1a813f9d47b11d5c5119cfc6c6f335f07a" compoundref="da/d17/a01046" startline="142" endline="145">castor3d::PrepassRendering::setNeedsDepthRange</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a325a21d51d6b07898cfcc65c5ea14b32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d75/a05284" kindref="compound">ShadowMapResult</ref> const &amp;</type>
        <definition>ShadowMapResult const  &amp; castor3d::RenderTechnique::getDirectionalShadowPassResult</definition>
        <argsstring>() const</argsstring>
        <name>getDirectionalShadowPassResult</name>
        <qualifiedname>castor3d::RenderTechnique::getDirectionalShadowPassResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="212" column="24" bodyfile="Render/RenderTechnique.hpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a162dde2ed05c9fa4804e903c8b6202e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d75/a05284" kindref="compound">ShadowMapResult</ref> const &amp;</type>
        <definition>ShadowMapResult const  &amp; castor3d::RenderTechnique::getPointShadowPassResult</definition>
        <argsstring>() const</argsstring>
        <name>getPointShadowPassResult</name>
        <qualifiedname>castor3d::RenderTechnique::getPointShadowPassResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="217" column="24" bodyfile="Render/RenderTechnique.hpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a242312a16985ff4111e9cdfb3f3f39cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d75/a05284" kindref="compound">ShadowMapResult</ref> const &amp;</type>
        <definition>ShadowMapResult const  &amp; castor3d::RenderTechnique::getSpotShadowPassResult</definition>
        <argsstring>() const</argsstring>
        <name>getSpotShadowPassResult</name>
        <qualifiedname>castor3d::RenderTechnique::getSpotShadowPassResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="222" column="24" bodyfile="Render/RenderTechnique.hpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a375ab0c7809597fc9192adb2357048f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d4b/a04700" kindref="compound">LightVolumePassResult</ref> const &amp;</type>
        <definition>LightVolumePassResult const  &amp; castor3d::RenderTechnique::getLpvResult</definition>
        <argsstring>() const</argsstring>
        <name>getLpvResult</name>
        <qualifiedname>castor3d::RenderTechnique::getLpvResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="227" column="30" bodyfile="Render/RenderTechnique.hpp" bodystart="227" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a454aecdabf34a21d99736026167568b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>LightVolumePassResultArray const &amp;</type>
        <definition>LightVolumePassResultArray const  &amp; castor3d::RenderTechnique::getLlpvResult</definition>
        <argsstring>() const</argsstring>
        <name>getLlpvResult</name>
        <qualifiedname>castor3d::RenderTechnique::getLlpvResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="233" column="35" bodyfile="Render/RenderTechnique.hpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a3dd10b18f4b3e35f69f7c8db26d0d1b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="df/df2/a06208" kindref="compound">MatrixUbo</ref> const &amp;</type>
        <definition>MatrixUbo const  &amp; castor3d::RenderTechnique::getMatrixUbo</definition>
        <argsstring>() const</argsstring>
        <name>getMatrixUbo</name>
        <qualifiedname>castor3d::RenderTechnique::getMatrixUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="238" column="18" bodyfile="Render/RenderTechnique.hpp" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1afdd0c353461eea33d3adad8544109897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="df/df2/a06208" kindref="compound">MatrixUbo</ref> &amp;</type>
        <definition>MatrixUbo &amp; castor3d::RenderTechnique::getMatrixUbo</definition>
        <argsstring>()</argsstring>
        <name>getMatrixUbo</name>
        <qualifiedname>castor3d::RenderTechnique::getMatrixUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="243" column="12" bodyfile="Render/RenderTechnique.hpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a9b9c015bb92785f1ed8de7a062cb9a5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
        <definition>SceneUbo const  &amp; castor3d::RenderTechnique::getSceneUbo</definition>
        <argsstring>() const</argsstring>
        <name>getSceneUbo</name>
        <qualifiedname>castor3d::RenderTechnique::getSceneUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="248" column="17" bodyfile="Render/RenderTechnique.hpp" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1afe5c8916c53006ccd8de562a45650b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> &amp;</type>
        <definition>SceneUbo &amp; castor3d::RenderTechnique::getSceneUbo</definition>
        <argsstring>()</argsstring>
        <name>getSceneUbo</name>
        <qualifiedname>castor3d::RenderTechnique::getSceneUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="253" column="11" bodyfile="Render/RenderTechnique.hpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1ad6e048b0f10e7dbf0dd013ce5ba9aa5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/df8/a06168" kindref="compound">GpInfoUbo</ref> const &amp;</type>
        <definition>GpInfoUbo const  &amp; castor3d::RenderTechnique::getGpInfoUbo</definition>
        <argsstring>() const</argsstring>
        <name>getGpInfoUbo</name>
        <qualifiedname>castor3d::RenderTechnique::getGpInfoUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="258" column="18" bodyfile="Render/RenderTechnique.hpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a0213a6391cc9a6007cd95e8251e905de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d65/a06192" kindref="compound">LpvGridConfigUbo</ref> const &amp;</type>
        <definition>LpvGridConfigUbo const  &amp; castor3d::RenderTechnique::getLpvConfigUbo</definition>
        <argsstring>() const</argsstring>
        <name>getLpvConfigUbo</name>
        <qualifiedname>castor3d::RenderTechnique::getLpvConfigUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="263" column="25" bodyfile="Render/RenderTechnique.hpp" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a7a73b00262eb394a24275a802f873719" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d07/a06184" kindref="compound">LayeredLpvGridConfigUbo</ref> const &amp;</type>
        <definition>LayeredLpvGridConfigUbo const  &amp; castor3d::RenderTechnique::getLlpvConfigUbo</definition>
        <argsstring>() const</argsstring>
        <name>getLlpvConfigUbo</name>
        <qualifiedname>castor3d::RenderTechnique::getLlpvConfigUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="268" column="32" bodyfile="Render/RenderTechnique.hpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a54fd8b6b95417f44687afb1e5ee83622" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d96/a06360" kindref="compound">VoxelizerUbo</ref> const &amp;</type>
        <definition>VoxelizerUbo const  &amp; castor3d::RenderTechnique::getVctConfigUbo</definition>
        <argsstring>() const</argsstring>
        <name>getVctConfigUbo</name>
        <qualifiedname>castor3d::RenderTechnique::getVctConfigUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="273" column="21" bodyfile="Render/RenderTechnique.hpp" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a98be477a139f2dbd240c487038da1ed7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d22/a01572_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
        <definition>ShadowMapLightTypeArray const  &amp; castor3d::RenderTechnique::getShadowMaps</definition>
        <argsstring>() const</argsstring>
        <name>getShadowMaps</name>
        <qualifiedname>castor3d::RenderTechnique::getShadowMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="278" column="32" bodyfile="Render/RenderTechnique.hpp" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1adcce73bf620a16bae81a00520bec6b31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dff/a05196" kindref="compound">RenderTarget</ref> const &amp;</type>
        <definition>RenderTarget const  &amp; castor3d::RenderTechnique::getRenderTarget</definition>
        <argsstring>() const</argsstring>
        <name>getRenderTarget</name>
        <qualifiedname>castor3d::RenderTechnique::getRenderTarget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="283" column="21" bodyfile="Render/RenderTechnique.hpp" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a720694a9b543aa383ca27f8e60301a93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dff/a05196" kindref="compound">RenderTarget</ref> &amp;</type>
        <definition>RenderTarget &amp; castor3d::RenderTechnique::getRenderTarget</definition>
        <argsstring>()</argsstring>
        <name>getRenderTarget</name>
        <qualifiedname>castor3d::RenderTechnique::getRenderTarget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="288" column="15" bodyfile="Render/RenderTechnique.hpp" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a17c12a1a7b458a7956baf183dea253cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderTechnique::isMultisampling</definition>
        <argsstring>() const</argsstring>
        <name>isMultisampling</name>
        <qualifiedname>castor3d::RenderTechnique::isMultisampling</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="293" column="6" bodyfile="Render/RenderTechnique.hpp" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a22a7d7449a2d61512eee60c78672da99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; uint32_t &gt; const &amp;</type>
        <definition>ashes::Buffer&lt; uint32_t &gt; const  &amp; castor3d::RenderTechnique::getMaterialsCounts</definition>
        <argsstring>() const</argsstring>
        <name>getMaterialsCounts</name>
        <qualifiedname>castor3d::RenderTechnique::getMaterialsCounts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="298" column="22" bodyfile="Render/RenderTechnique.hpp" bodystart="298" bodyend="301"/>
        <references refid="db/dde/a04856_1a4e98086e4d0659fa70fdcc6b4e4704f5" compoundref="db/d40/a00959" startline="148" endline="151">castor3d::OpaqueRendering::getMaterialsCounts</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1af19801c97dc2ed74137affbf332c0882" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; uint32_t &gt; const &amp;</type>
        <definition>ashes::Buffer&lt; uint32_t &gt; const  &amp; castor3d::RenderTechnique::getMaterialsStarts</definition>
        <argsstring>() const</argsstring>
        <name>getMaterialsStarts</name>
        <qualifiedname>castor3d::RenderTechnique::getMaterialsStarts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="303" column="22" bodyfile="Render/RenderTechnique.hpp" bodystart="303" bodyend="306"/>
        <references refid="db/dde/a04856_1a8ed2137714597c88ab3dc71f2b9b6401" compoundref="db/d40/a00959" startline="153" endline="156">castor3d::OpaqueRendering::getMaterialsStarts</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1ab9deb660b77ad3d6bd62bcd65f59ba99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; castor::Point2ui &gt; const &amp;</type>
        <definition>ashes::Buffer&lt; castor::Point2ui &gt; const  &amp; castor3d::RenderTechnique::getPixelXY</definition>
        <argsstring>() const</argsstring>
        <name>getPixelXY</name>
        <qualifiedname>castor3d::RenderTechnique::getPixelXY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="308" column="22" bodyfile="Render/RenderTechnique.hpp" bodystart="308" bodyend="311"/>
        <references refid="db/dde/a04856_1a1104d21c48129242ec0558ce90a96acf" compoundref="db/d40/a00959" startline="158" endline="161">castor3d::OpaqueRendering::getPixelXY</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a63b1e05fe7250de56898f381d171d8b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderTechnique::hasVisibility</definition>
        <argsstring>() const</argsstring>
        <name>hasVisibility</name>
        <qualifiedname>castor3d::RenderTechnique::hasVisibility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="313" column="6" bodyfile="Render/RenderTechnique.hpp" bodystart="313" bodyend="316"/>
        <references refid="dc/d61/a05028_1aff018390b23cb7fdd546d4b3eb9b30e0" compoundref="da/d17/a01046" startline="120" endline="123">castor3d::PrepassRendering::hasVisibility</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1aabcdc58f8c70e02ff6a024833344e347" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d75/a04852" kindref="compound">OpaquePassResult</ref> const &amp;</type>
        <definition>OpaquePassResult const  &amp; castor3d::RenderTechnique::getOpaqueResult</definition>
        <argsstring>() const</argsstring>
        <name>getOpaqueResult</name>
        <qualifiedname>castor3d::RenderTechnique::getOpaqueResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="318" column="25" bodyfile="Render/RenderTechnique.hpp" bodystart="318" bodyend="321"/>
        <references refid="db/dde/a04856_1a5ead819817a8159188a6563a9e8619e0" compoundref="db/d40/a00959" startline="143" endline="146">castor3d::OpaqueRendering::getOpaqueResult</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1ac36184bed609814000534761aa413c8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/db3/a05328" kindref="compound">Texture</ref> const &amp;</type>
        <definition>Texture const  &amp; castor3d::RenderTechnique::getVisibilityResult</definition>
        <argsstring>() const</argsstring>
        <name>getVisibilityResult</name>
        <qualifiedname>castor3d::RenderTechnique::getVisibilityResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="323" column="16" bodyfile="Render/RenderTechnique.hpp" bodystart="323" bodyend="326"/>
        <references refid="dc/d61/a05028_1a390e045fc5eec22f28f358d0dbf55789" compoundref="da/d17/a01046" startline="125" endline="129">castor3d::PrepassRendering::getVisibility</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d6/d6a/a05200_1a8041804a8d37587ec2e005122a90f6a3" prot="public" static="no">
        <type>std::vector&lt; ShadowMapUPtr &gt;</type>
        <definition>using castor3d::RenderTechnique::ShadowMapArray =  std::vector&lt; ShadowMapUPtr &gt;</definition>
        <argsstring></argsstring>
        <name>ShadowMapArray</name>
        <qualifiedname>castor3d::RenderTechnique::ShadowMapArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="330" column="1" bodyfile="Render/RenderTechnique.hpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d6/d6a/a05200_1a8a9a2e56d4e385004fa8100d6c7e7496" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class RenderTechniquePass</definition>
        <argsstring></argsstring>
        <name>RenderTechniquePass</name>
        <qualifiedname>castor3d::RenderTechnique::RenderTechniquePass</qualifiedname>
        <param>
          <type><ref refid="df/dfd/a05208" kindref="compound">RenderTechniquePass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="41" column="14" bodyfile="Render/RenderTechnique.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d6a/a05200_1a567ad614522a3960905fe009907a9119" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dff/a05196" kindref="compound">RenderTarget</ref> &amp;</type>
        <definition>RenderTarget&amp; castor3d::RenderTechnique::m_renderTarget</definition>
        <argsstring></argsstring>
        <name>m_renderTarget</name>
        <qualifiedname>castor3d::RenderTechnique::m_renderTarget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="353" column="15" bodyfile="Render/RenderTechnique.hpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1ada38d228417135f2febbd9bdd9d043ec" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const  &amp;</type>
        <definition>RenderDevice const&amp; castor3d::RenderTechnique::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <qualifiedname>castor3d::RenderTechnique::m_device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="354" column="21" bodyfile="Render/RenderTechnique.hpp" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1ab41f2c8e5d88e1cebb5c6eeba0f940c1" prot="private" static="no" mutable="no">
        <type>castor::Size</type>
        <definition>castor::Size castor3d::RenderTechnique::m_targetSize</definition>
        <argsstring></argsstring>
        <name>m_targetSize</name>
        <qualifiedname>castor3d::RenderTechnique::m_targetSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="355" column="14" bodyfile="Render/RenderTechnique.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1ad5507fd9504bf700ed11ebfe2ef8ef99" prot="private" static="no" mutable="no">
        <type>castor::Size</type>
        <definition>castor::Size castor3d::RenderTechnique::m_rawSize</definition>
        <argsstring></argsstring>
        <name>m_rawSize</name>
        <qualifiedname>castor3d::RenderTechnique::m_rawSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="356" column="14" bodyfile="Render/RenderTechnique.hpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a7fd1398605b1814fc1569cd67bec6afd" prot="private" static="no" mutable="no">
        <type><ref refid="d5/db3/a05328" kindref="compound">Texture</ref></type>
        <definition>Texture castor3d::RenderTechnique::m_colour</definition>
        <argsstring></argsstring>
        <name>m_colour</name>
        <qualifiedname>castor3d::RenderTechnique::m_colour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="357" column="9" bodyfile="Render/RenderTechnique.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a99cfde40c2f88e455f063692b5e19025" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1a174cedaf5dfc3b47caa264f344279af2" kindref="member">TexturePtr</ref></type>
        <definition>TexturePtr castor3d::RenderTechnique::m_depth</definition>
        <argsstring></argsstring>
        <name>m_depth</name>
        <qualifiedname>castor3d::RenderTechnique::m_depth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="358" column="12" bodyfile="Render/RenderTechnique.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1af085e0d48a7ef726b9f8ddb49dd9edb2" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1a174cedaf5dfc3b47caa264f344279af2" kindref="member">TexturePtr</ref></type>
        <definition>TexturePtr castor3d::RenderTechnique::m_normal</definition>
        <argsstring></argsstring>
        <name>m_normal</name>
        <qualifiedname>castor3d::RenderTechnique::m_normal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="359" column="12" bodyfile="Render/RenderTechnique.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a6925c2e5d89073990c625857dbde68dd" prot="private" static="no" mutable="no">
        <type><ref refid="df/df2/a06208" kindref="compound">MatrixUbo</ref></type>
        <definition>MatrixUbo castor3d::RenderTechnique::m_matrixUbo</definition>
        <argsstring></argsstring>
        <name>m_matrixUbo</name>
        <qualifiedname>castor3d::RenderTechnique::m_matrixUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="360" column="11" bodyfile="Render/RenderTechnique.hpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a94d631a9a0068d4cedb6e03172d0d239" prot="private" static="no" mutable="no">
        <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref></type>
        <definition>SceneUbo castor3d::RenderTechnique::m_sceneUbo</definition>
        <argsstring></argsstring>
        <name>m_sceneUbo</name>
        <qualifiedname>castor3d::RenderTechnique::m_sceneUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="361" column="10" bodyfile="Render/RenderTechnique.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a1cd745f80592734bf9aef76a7a3d4b4d" prot="private" static="no" mutable="no">
        <type><ref refid="d3/df8/a06168" kindref="compound">GpInfoUbo</ref></type>
        <definition>GpInfoUbo castor3d::RenderTechnique::m_gpInfoUbo</definition>
        <argsstring></argsstring>
        <name>m_gpInfoUbo</name>
        <qualifiedname>castor3d::RenderTechnique::m_gpInfoUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="362" column="11" bodyfile="Render/RenderTechnique.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1af0de85f9c121b55bc794d502df27258b" prot="private" static="no" mutable="no">
        <type><ref refid="db/d65/a06192" kindref="compound">LpvGridConfigUbo</ref></type>
        <definition>LpvGridConfigUbo castor3d::RenderTechnique::m_lpvConfigUbo</definition>
        <argsstring></argsstring>
        <name>m_lpvConfigUbo</name>
        <qualifiedname>castor3d::RenderTechnique::m_lpvConfigUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="363" column="18" bodyfile="Render/RenderTechnique.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1ab2aa7c0710ba3fb73bddda4d9db9ba15" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d07/a06184" kindref="compound">LayeredLpvGridConfigUbo</ref></type>
        <definition>LayeredLpvGridConfigUbo castor3d::RenderTechnique::m_llpvConfigUbo</definition>
        <argsstring></argsstring>
        <name>m_llpvConfigUbo</name>
        <qualifiedname>castor3d::RenderTechnique::m_llpvConfigUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="364" column="25" bodyfile="Render/RenderTechnique.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a06e44e2b810b562ef6832c8bcb5c1f02" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d96/a06360" kindref="compound">VoxelizerUbo</ref></type>
        <definition>VoxelizerUbo castor3d::RenderTechnique::m_vctConfigUbo</definition>
        <argsstring></argsstring>
        <name>m_vctConfigUbo</name>
        <qualifiedname>castor3d::RenderTechnique::m_vctConfigUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="365" column="14" bodyfile="Render/RenderTechnique.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a309fdd0a318ea6c0ff6b760326344350" prot="private" static="no" mutable="no">
        <type>VoxelizerUPtr</type>
        <definition>VoxelizerUPtr castor3d::RenderTechnique::m_voxelizer</definition>
        <argsstring></argsstring>
        <name>m_voxelizer</name>
        <qualifiedname>castor3d::RenderTechnique::m_voxelizer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="366" column="15" bodyfile="Render/RenderTechnique.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a881a5764b5f9d6934787413453a4b3ac" prot="private" static="no" mutable="no">
        <type>LightVolumePassResultUPtr</type>
        <definition>LightVolumePassResultUPtr castor3d::RenderTechnique::m_lpvResult</definition>
        <argsstring></argsstring>
        <name>m_lpvResult</name>
        <qualifiedname>castor3d::RenderTechnique::m_lpvResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="367" column="27" bodyfile="Render/RenderTechnique.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a2675ebf80b8fe0253761f240eb7bf441" prot="private" static="no" mutable="no">
        <type>LightVolumePassResultArray</type>
        <definition>LightVolumePassResultArray castor3d::RenderTechnique::m_llpvResult</definition>
        <argsstring></argsstring>
        <name>m_llpvResult</name>
        <qualifiedname>castor3d::RenderTechnique::m_llpvResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="368" column="28" bodyfile="Render/RenderTechnique.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1abc5461d317086d163c5ae68914439a0c" prot="private" static="no" mutable="no">
        <type>ShadowMapUPtr</type>
        <definition>ShadowMapUPtr castor3d::RenderTechnique::m_directionalShadowMap</definition>
        <argsstring></argsstring>
        <name>m_directionalShadowMap</name>
        <qualifiedname>castor3d::RenderTechnique::m_directionalShadowMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="369" column="15" bodyfile="Render/RenderTechnique.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a4495ba76e40c7ee8495b9be956c99996" prot="private" static="no" mutable="no">
        <type>ShadowMapUPtr</type>
        <definition>ShadowMapUPtr castor3d::RenderTechnique::m_pointShadowMap</definition>
        <argsstring></argsstring>
        <name>m_pointShadowMap</name>
        <qualifiedname>castor3d::RenderTechnique::m_pointShadowMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="370" column="15" bodyfile="Render/RenderTechnique.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a9c3a8a67fb97d69baeb1fed7a492fbbd" prot="private" static="no" mutable="no">
        <type>ShadowMapUPtr</type>
        <definition>ShadowMapUPtr castor3d::RenderTechnique::m_spotShadowMap</definition>
        <argsstring></argsstring>
        <name>m_spotShadowMap</name>
        <qualifiedname>castor3d::RenderTechnique::m_spotShadowMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="371" column="15" bodyfile="Render/RenderTechnique.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a013f7815d089998d53ab9bdb11ee6f7e" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1ac1c0af2ea4e5c1f5d66eef467ee6af28" kindref="member">TechniquePasses</ref></type>
        <definition>TechniquePasses castor3d::RenderTechnique::m_renderPasses</definition>
        <argsstring></argsstring>
        <name>m_renderPasses</name>
        <qualifiedname>castor3d::RenderTechnique::m_renderPasses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="372" column="17" bodyfile="Render/RenderTechnique.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1ad259bec47d17a266d1851f852a1f615e" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d61/a05028" kindref="compound">PrepassRendering</ref></type>
        <definition>PrepassRendering castor3d::RenderTechnique::m_prepass</definition>
        <argsstring></argsstring>
        <name>m_prepass</name>
        <qualifiedname>castor3d::RenderTechnique::m_prepass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="373" column="18" bodyfile="Render/RenderTechnique.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1af2dd09e8c52fe2f590c2f7c73647ab8c" prot="private" static="no" mutable="no">
        <type>BackgroundRendererUPtr</type>
        <definition>BackgroundRendererUPtr castor3d::RenderTechnique::m_background</definition>
        <argsstring></argsstring>
        <name>m_background</name>
        <qualifiedname>castor3d::RenderTechnique::m_background</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="374" column="24" bodyfile="Render/RenderTechnique.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a64b320af293c998375bd930af5252279" prot="private" static="no" mutable="no">
        <type><ref refid="db/dde/a04856" kindref="compound">OpaqueRendering</ref></type>
        <definition>OpaqueRendering castor3d::RenderTechnique::m_opaque</definition>
        <argsstring></argsstring>
        <name>m_opaque</name>
        <qualifiedname>castor3d::RenderTechnique::m_opaque</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="375" column="17" bodyfile="Render/RenderTechnique.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1ac82360cf532ef37276c94bf89a97292b" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d7f/a05416" kindref="compound">TransparentRendering</ref></type>
        <definition>TransparentRendering castor3d::RenderTechnique::m_transparent</definition>
        <argsstring></argsstring>
        <name>m_transparent</name>
        <qualifiedname>castor3d::RenderTechnique::m_transparent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="376" column="22" bodyfile="Render/RenderTechnique.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1afa61b0990993c25ec0f07c6bb84b76a2" prot="private" static="no" mutable="no">
        <type>crg::FrameGraph</type>
        <definition>crg::FrameGraph castor3d::RenderTechnique::m_clearLpvGraph</definition>
        <argsstring></argsstring>
        <name>m_clearLpvGraph</name>
        <qualifiedname>castor3d::RenderTechnique::m_clearLpvGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="377" column="17" bodyfile="Render/RenderTechnique.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a34fbdea97ba06276ddd2116044613358" prot="private" static="no" mutable="no">
        <type>crg::RunnableGraphPtr</type>
        <definition>crg::RunnableGraphPtr castor3d::RenderTechnique::m_clearLpvRunnable</definition>
        <argsstring></argsstring>
        <name>m_clearLpvRunnable</name>
        <qualifiedname>castor3d::RenderTechnique::m_clearLpvRunnable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="378" column="23" bodyfile="Render/RenderTechnique.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1aba8f98e0cd4417e558b0ba92bca5cc5d" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref></type>
        <definition>ShadowMapLightTypeArray castor3d::RenderTechnique::m_allShadowMaps</definition>
        <argsstring></argsstring>
        <name>m_allShadowMaps</name>
        <qualifiedname>castor3d::RenderTechnique::m_allShadowMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="379" column="25" bodyfile="Render/RenderTechnique.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a8441e1f89378a47d834fd904604614ff" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1aca3f31197a4b2f1cc44044b95f58fcaf" kindref="member">ShadowMapLightArray</ref></type>
        <definition>ShadowMapLightArray castor3d::RenderTechnique::m_activeShadowMaps</definition>
        <argsstring></argsstring>
        <name>m_activeShadowMaps</name>
        <qualifiedname>castor3d::RenderTechnique::m_activeShadowMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="380" column="21" bodyfile="Render/RenderTechnique.hpp" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a70fd625e037b0bb5485d4f0f7eb2f7a0" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1a0d08094dbc29136cf3b11775987ed4d5" kindref="member">LightPropagationVolumesLightType</ref></type>
        <definition>LightPropagationVolumesLightType castor3d::RenderTechnique::m_lightPropagationVolumes</definition>
        <argsstring></argsstring>
        <name>m_lightPropagationVolumes</name>
        <qualifiedname>castor3d::RenderTechnique::m_lightPropagationVolumes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="381" column="34" bodyfile="Render/RenderTechnique.hpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a8780a89774be87c7113a3adfbe0f744a" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1a45b5676720a8d0a13c78ad5f00c94163" kindref="member">LayeredLightPropagationVolumesLightType</ref></type>
        <definition>LayeredLightPropagationVolumesLightType castor3d::RenderTechnique::m_layeredLightPropagationVolumes</definition>
        <argsstring></argsstring>
        <name>m_layeredLightPropagationVolumes</name>
        <qualifiedname>castor3d::RenderTechnique::m_layeredLightPropagationVolumes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="382" column="41" bodyfile="Render/RenderTechnique.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1a9895fda6bc928a4b32d3c5a62d0c2757" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1a5b16382cb984a93c1f022f08963b2493" kindref="member">LightPropagationVolumesGLightType</ref></type>
        <definition>LightPropagationVolumesGLightType castor3d::RenderTechnique::m_lightPropagationVolumesG</definition>
        <argsstring></argsstring>
        <name>m_lightPropagationVolumesG</name>
        <qualifiedname>castor3d::RenderTechnique::m_lightPropagationVolumesG</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="383" column="35" bodyfile="Render/RenderTechnique.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d6a/a05200_1ad5485f4ff8da25ed3e84c3bedb12d9f5" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d22/a01572_1aeb1a81c01b04833e5175bef5f7857874" kindref="member">LayeredLightPropagationVolumesGLightType</ref></type>
        <definition>LayeredLightPropagationVolumesGLightType castor3d::RenderTechnique::m_layeredLightPropagationVolumesG</definition>
        <argsstring></argsstring>
        <name>m_layeredLightPropagationVolumesG</name>
        <qualifiedname>castor3d::RenderTechnique::m_layeredLightPropagationVolumesG</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="384" column="42" bodyfile="Render/RenderTechnique.hpp" bodystart="384" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d6a/a05200_1a3396d818aa2881e2ab3b0b6115092cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::RenderTechnique::RenderTechnique</definition>
        <argsstring>(castor::String const &amp;name, RenderTarget &amp;renderTarget, RenderDevice const &amp;device, QueueData const &amp;queueData, Parameters const &amp;parameters, SsaoConfig const &amp;ssaoConfig, ProgressBar *progress, bool deferred, bool visbuffer, bool weightedBlended)</argsstring>
        <name>RenderTechnique</name>
        <qualifiedname>castor3d::RenderTechnique::RenderTechnique</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d9/dff/a05196" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d2/d9d/a05056" kindref="compound">QueueData</ref> const &amp;</type>
          <declname>queueData</declname>
        </param>
        <param>
          <type><ref refid="d3/d22/a01572_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref> const &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type><ref refid="d6/d72/a05308" kindref="compound">SsaoConfig</ref> const &amp;</type>
          <declname>ssaoConfig</declname>
        </param>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deferred</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visbuffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>weightedBlended</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The technique name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">renderTarget</parametername>
</parameternamelist>
<parameterdescription>
<para>The render target for this technique. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">queueData</parametername>
</parameternamelist>
<parameterdescription>
<para>The queue receiving the GPU commands. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The technique parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssaoConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSAO configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">progress</parametername>
</parameternamelist>
<parameterdescription>
<para>The optional progress bar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">deferred</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable deferred rendering. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">visbuffer</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable visibility buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">weightedBlended</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable weighted blended rendering. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="70" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a218a75c0279a0443d44340ba74de26e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::RenderTechnique::~RenderTechnique</definition>
        <argsstring>()</argsstring>
        <name>~RenderTechnique</name>
        <qualifiedname>castor3d::RenderTechnique::~RenderTechnique</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="86" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a3698ac0bc45b4e328c6f23d9949b9ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechnique::listIntermediates</definition>
        <argsstring>(std::vector&lt; IntermediateView &gt; &amp;intermediates)</argsstring>
        <name>listIntermediates</name>
        <qualifiedname>castor3d::RenderTechnique::listIntermediates</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="d8/d27/a05332" kindref="compound">IntermediateView</ref> &gt; &amp;</type>
          <declname>intermediates</declname>
        </param>
        <briefdescription>
<para>Lists the intermediate view used by the whole technique. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">intermediates</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the intermediate views. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="102" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a3ac035aec4905eb6d75b1d332a8598c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechnique::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::RenderTechnique::update</qualifiedname>
        <param>
          <type><ref refid="d7/d13/a05156" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the render pass, CPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="111" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a1c8b000b7edec5f90f18271f83e108fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechnique::update</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::RenderTechnique::update</qualifiedname>
        <param>
          <type><ref refid="d9/dab/a05164" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the render pass, GPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="120" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a707c502b53c0c28fc4cbbdb3675934d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> crg::SemaphoreWaitArray</type>
        <definition>C3D_API crg::SemaphoreWaitArray castor3d::RenderTechnique::preRender</definition>
        <argsstring>(crg::SemaphoreWaitArray const &amp;toWait, ashes::Queue const &amp;queue)</argsstring>
        <name>preRender</name>
        <qualifiedname>castor3d::RenderTechnique::preRender</qualifiedname>
        <param>
          <type>crg::SemaphoreWaitArray const &amp;</type>
          <declname>toWait</declname>
        </param>
        <param>
          <type>ashes::Queue const &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Renders maps needed for the actual rendering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">toWait</parametername>
</parameternamelist>
<parameterdescription>
<para>The semaphores to wait. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">queue</parametername>
</parameternamelist>
<parameterdescription>
<para>The queue receiving the render commands. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The semaphores signaled by this render. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="133" column="33"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a1e0b4979e57b7c404f2aca8acc9ae4b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderTechnique::writeInto</definition>
        <argsstring>(castor::TextFile &amp;file)</argsstring>
        <name>writeInto</name>
        <qualifiedname>castor3d::RenderTechnique::writeInto</qualifiedname>
        <param>
          <type>castor::TextFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Writes the technique into a text file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="143" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a38d0ec1974652fad11db60b854eda44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechnique::accept</definition>
        <argsstring>(RenderTechniqueVisitor &amp;visitor)</argsstring>
        <name>accept</name>
        <qualifiedname>castor3d::RenderTechnique::accept</qualifiedname>
        <param>
          <type><ref refid="df/d2e/a05216" kindref="compound">RenderTechniqueVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Visitor acceptance function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The ... visitor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="156" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d6/d6a/a05200_1a04b4d0f6ccdca7eb9421cd5d78ea6837" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>static C3D_API uint32_t castor3d::RenderTechnique::countInitialisationSteps</definition>
        <argsstring>()</argsstring>
        <name>countInitialisationSteps</name>
        <qualifiedname>castor3d::RenderTechnique::countInitialisationSteps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of steps needed for initialisation, to show progression. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="93" column="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d6a/a05200_1a7c4ebbb3fdbf3c45da58e9523691641c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::FramePassArray</type>
        <definition>crg::FramePassArray castor3d::RenderTechnique::doCreateRenderPasses</definition>
        <argsstring>(ProgressBar *progress, TechniquePassEvent event, crg::FramePass const *previousPass)</argsstring>
        <name>doCreateRenderPasses</name>
        <qualifiedname>castor3d::RenderTechnique::doCreateRenderPasses</qualifiedname>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <param>
          <type><ref refid="d3/d22/a01572_1aa022298cb8b50ea099829baffdfee684" kindref="member">TechniquePassEvent</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>crg::FramePass const *</type>
          <declname>previousPass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="333" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a7581f5a13358f46307538af9854b6e9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BackgroundRendererUPtr</type>
        <definition>BackgroundRendererUPtr castor3d::RenderTechnique::doCreateBackgroundPass</definition>
        <argsstring>(ProgressBar *progress)</argsstring>
        <name>doCreateBackgroundPass</name>
        <qualifiedname>castor3d::RenderTechnique::doCreateBackgroundPass</qualifiedname>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="336" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a55bba2d74f6f9e36d4e4ae546f44120b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doInitialiseLpv</definition>
        <argsstring>()</argsstring>
        <name>doInitialiseLpv</name>
        <qualifiedname>castor3d::RenderTechnique::doInitialiseLpv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="337" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1ab417433dd28482feed90f7c6b3c3fb28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateShadowMaps</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>doUpdateShadowMaps</name>
        <qualifiedname>castor3d::RenderTechnique::doUpdateShadowMaps</qualifiedname>
        <param>
          <type><ref refid="d7/d13/a05156" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="338" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a1bfb00168961873705ec089d3f3107ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateShadowMaps</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>doUpdateShadowMaps</name>
        <qualifiedname>castor3d::RenderTechnique::doUpdateShadowMaps</qualifiedname>
        <param>
          <type><ref refid="d9/dab/a05164" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="339" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1aa30dab6f307082fdfebb6808ca429582" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateLpv</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>doUpdateLpv</name>
        <qualifiedname>castor3d::RenderTechnique::doUpdateLpv</qualifiedname>
        <param>
          <type><ref refid="d7/d13/a05156" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="340" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1ad8e6d68775be69e34b6935fb54b2e6e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateLpv</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>doUpdateLpv</name>
        <qualifiedname>castor3d::RenderTechnique::doUpdateLpv</qualifiedname>
        <param>
          <type><ref refid="d9/dab/a05164" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="341" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a54de48b05cef871d954c06d2f9ebcd36" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>crg::SemaphoreWaitArray</type>
        <definition>crg::SemaphoreWaitArray castor3d::RenderTechnique::doRenderShadowMaps</definition>
        <argsstring>(crg::SemaphoreWaitArray const &amp;semaphore, ashes::Queue const &amp;queue) const</argsstring>
        <name>doRenderShadowMaps</name>
        <qualifiedname>castor3d::RenderTechnique::doRenderShadowMaps</qualifiedname>
        <param>
          <type>crg::SemaphoreWaitArray const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <param>
          <type>ashes::Queue const &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="343" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a04188c2e17eac7845f57eea9191518b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::SemaphoreWaitArray</type>
        <definition>crg::SemaphoreWaitArray castor3d::RenderTechnique::doRenderLPV</definition>
        <argsstring>(crg::SemaphoreWaitArray const &amp;semaphore, ashes::Queue const &amp;queue)</argsstring>
        <name>doRenderLPV</name>
        <qualifiedname>castor3d::RenderTechnique::doRenderLPV</qualifiedname>
        <param>
          <type>crg::SemaphoreWaitArray const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <param>
          <type>ashes::Queue const &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="345" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a8ee2c952c0dce3604e353d881e8e7a79" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>crg::SemaphoreWaitArray</type>
        <definition>crg::SemaphoreWaitArray castor3d::RenderTechnique::doRenderEnvironmentMaps</definition>
        <argsstring>(crg::SemaphoreWaitArray const &amp;semaphore, ashes::Queue const &amp;queue) const</argsstring>
        <name>doRenderEnvironmentMaps</name>
        <qualifiedname>castor3d::RenderTechnique::doRenderEnvironmentMaps</qualifiedname>
        <param>
          <type>crg::SemaphoreWaitArray const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <param>
          <type>ashes::Queue const &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="347" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6a/a05200_1a6e35a65e4add473f2146872226647ac9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>crg::SemaphoreWaitArray</type>
        <definition>crg::SemaphoreWaitArray castor3d::RenderTechnique::doRenderVCT</definition>
        <argsstring>(crg::SemaphoreWaitArray const &amp;semaphore, ashes::Queue const &amp;queue) const</argsstring>
        <name>doRenderVCT</name>
        <qualifiedname>castor3d::RenderTechnique::doRenderVCT</qualifiedname>
        <param>
          <type>crg::SemaphoreWaitArray const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <param>
          <type>ashes::Queue const &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderTechnique.hpp" line="349" column="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::RenderTechnique</label>
        <link refid="d6/d6a/a05200"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor::Named</label>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>castor3d::RenderTechnique</label>
        <link refid="d6/d6a/a05200"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor::Named</label>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Render/RenderTechnique.hpp" line="37" column="1" bodyfile="Render/RenderTechnique.hpp" bodystart="40" bodyend="385"/>
    <listofallmembers>
      <member refid="d6/d6a/a05200_1a38d0ec1974652fad11db60b854eda44f" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>accept</name></member>
      <member refid="d6/d6a/a05200_1a04b4d0f6ccdca7eb9421cd5d78ea6837" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>countInitialisationSteps</name></member>
      <member refid="d6/d6a/a05200_1a7581f5a13358f46307538af9854b6e9e" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doCreateBackgroundPass</name></member>
      <member refid="d6/d6a/a05200_1a7c4ebbb3fdbf3c45da58e9523691641c" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doCreateRenderPasses</name></member>
      <member refid="d6/d6a/a05200_1a55bba2d74f6f9e36d4e4ae546f44120b" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doInitialiseLpv</name></member>
      <member refid="d6/d6a/a05200_1a8ee2c952c0dce3604e353d881e8e7a79" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderEnvironmentMaps</name></member>
      <member refid="d6/d6a/a05200_1a04188c2e17eac7845f57eea9191518b2" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderLPV</name></member>
      <member refid="d6/d6a/a05200_1a54de48b05cef871d954c06d2f9ebcd36" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderShadowMaps</name></member>
      <member refid="d6/d6a/a05200_1a6e35a65e4add473f2146872226647ac9" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderVCT</name></member>
      <member refid="d6/d6a/a05200_1aa30dab6f307082fdfebb6808ca429582" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateLpv</name></member>
      <member refid="d6/d6a/a05200_1ad8e6d68775be69e34b6935fb54b2e6e6" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateLpv</name></member>
      <member refid="d6/d6a/a05200_1ab417433dd28482feed90f7c6b3c3fb28" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateShadowMaps</name></member>
      <member refid="d6/d6a/a05200_1a1bfb00168961873705ec089d3f3107ce" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateShadowMaps</name></member>
      <member refid="d6/d6a/a05200_1a63052e13ce1e407088a429b5a034a570" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getBaseColourResult</name></member>
      <member refid="d6/d6a/a05200_1aad85498b89f92cbd18ca3f90a68e4386" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getCustomRenderPasses</name></member>
      <member refid="d6/d6a/a05200_1a337548093c2fdb0d762c1356927cd4b0" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDepth</name></member>
      <member refid="d6/d6a/a05200_1a4fc03b685e08378d5b56f1e7bdedda93" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDepthObj</name></member>
      <member refid="d6/d6a/a05200_1a6e40d4fc96ba9f156d01270937c1679a" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDepthRange</name></member>
      <member refid="d6/d6a/a05200_1aea8f548e4abf2f6f8e13971dcfa0bac1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDiffuseLightingResult</name></member>
      <member refid="d6/d6a/a05200_1a325a21d51d6b07898cfcc65c5ea14b32" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDirectionalShadowPassResult</name></member>
      <member refid="d6/d6a/a05200_1a8258ad370dd41338e4694878d33f4b88" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getFirstVctBounce</name></member>
      <member refid="d6/d6a/a05200_1ad6e048b0f10e7dbf0dd013ce5ba9aa5b" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getGpInfoUbo</name></member>
      <member refid="d6/d6a/a05200_1a36160a042f237505952ec7d9c690f588" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getLastPass</name></member>
      <member refid="d6/d6a/a05200_1a4262180532ace8660c1690a9e790f945" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getLightDepthImgView</name></member>
      <member refid="d6/d6a/a05200_1a7a73b00262eb394a24275a802f873719" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getLlpvConfigUbo</name></member>
      <member refid="d6/d6a/a05200_1a454aecdabf34a21d99736026167568b0" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getLlpvResult</name></member>
      <member refid="d6/d6a/a05200_1a0213a6391cc9a6007cd95e8251e905de" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getLpvConfigUbo</name></member>
      <member refid="d6/d6a/a05200_1a375ab0c7809597fc9192adb2357048f1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getLpvResult</name></member>
      <member refid="d6/d6a/a05200_1a22a7d7449a2d61512eee60c78672da99" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getMaterialsCounts</name></member>
      <member refid="d6/d6a/a05200_1af19801c97dc2ed74137affbf332c0882" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getMaterialsStarts</name></member>
      <member refid="d6/d6a/a05200_1a3dd10b18f4b3e35f69f7c8db26d0d1b7" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getMatrixUbo</name></member>
      <member refid="d6/d6a/a05200_1afdd0c353461eea33d3adad8544109897" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getMatrixUbo</name></member>
      <member refid="d6/d6a/a05200_1a305dd01e3cdd6099a30af26383beefd9" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getNormal</name></member>
      <member refid="d6/d6a/a05200_1aabcdc58f8c70e02ff6a024833344e347" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getOpaqueResult</name></member>
      <member refid="d6/d6a/a05200_1ab9deb660b77ad3d6bd62bcd65f59ba99" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getPixelXY</name></member>
      <member refid="d6/d6a/a05200_1a162dde2ed05c9fa4804e903c8b6202e0" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getPointShadowPassResult</name></member>
      <member refid="d6/d6a/a05200_1adcce73bf620a16bae81a00520bec6b31" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getRenderTarget</name></member>
      <member refid="d6/d6a/a05200_1a720694a9b543aa383ca27f8e60301a93" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getRenderTarget</name></member>
      <member refid="d6/d6a/a05200_1a210970348d56d4ef04e3ff3d5daafd02" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getResult</name></member>
      <member refid="d6/d6a/a05200_1a9b9c015bb92785f1ed8de7a062cb9a5c" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSceneUbo</name></member>
      <member refid="d6/d6a/a05200_1afe5c8916c53006ccd8de562a45650b14" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSceneUbo</name></member>
      <member refid="d6/d6a/a05200_1a6f3ad9ad67328118468096b29a143a20" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSecondaryVctBounce</name></member>
      <member refid="d6/d6a/a05200_1a98be477a139f2dbd240c487038da1ed7" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getShadowMaps</name></member>
      <member refid="d6/d6a/a05200_1a70251968b621dacb56426d9481a81f95" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSize</name></member>
      <member refid="d6/d6a/a05200_1a242312a16985ff4111e9cdfb3f3f39cf" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSpotShadowPassResult</name></member>
      <member refid="d6/d6a/a05200_1ae90fc4a73dbae1161b6953421f4c5ec2" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSsaoConfig</name></member>
      <member refid="d6/d6a/a05200_1abb97bb2df0363d9e59f534e1c75371d4" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSsaoConfig</name></member>
      <member refid="d6/d6a/a05200_1a4005ff7bbde7698b1c969b767dfc2f26" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSsaoResult</name></member>
      <member refid="d6/d6a/a05200_1a54fd8b6b95417f44687afb1e5ee83622" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getVctConfigUbo</name></member>
      <member refid="d6/d6a/a05200_1ac36184bed609814000534761aa413c8a" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getVisibilityResult</name></member>
      <member refid="d6/d6a/a05200_1a63b1e05fe7250de56898f381d171d8b6" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>hasVisibility</name></member>
      <member refid="d6/d6a/a05200_1a17c12a1a7b458a7956baf183dea253cf" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>isMultisampling</name></member>
      <member refid="d6/d6a/a05200_1a3698ac0bc45b4e328c6f23d9949b9ea1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>listIntermediates</name></member>
      <member refid="d6/d6a/a05200_1a8441e1f89378a47d834fd904604614ff" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_activeShadowMaps</name></member>
      <member refid="d6/d6a/a05200_1aba8f98e0cd4417e558b0ba92bca5cc5d" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_allShadowMaps</name></member>
      <member refid="d6/d6a/a05200_1af2dd09e8c52fe2f590c2f7c73647ab8c" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_background</name></member>
      <member refid="d6/d6a/a05200_1afa61b0990993c25ec0f07c6bb84b76a2" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_clearLpvGraph</name></member>
      <member refid="d6/d6a/a05200_1a34fbdea97ba06276ddd2116044613358" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_clearLpvRunnable</name></member>
      <member refid="d6/d6a/a05200_1a7fd1398605b1814fc1569cd67bec6afd" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_colour</name></member>
      <member refid="d6/d6a/a05200_1a99cfde40c2f88e455f063692b5e19025" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_depth</name></member>
      <member refid="d6/d6a/a05200_1ada38d228417135f2febbd9bdd9d043ec" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_device</name></member>
      <member refid="d6/d6a/a05200_1abc5461d317086d163c5ae68914439a0c" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_directionalShadowMap</name></member>
      <member refid="d6/d6a/a05200_1a1cd745f80592734bf9aef76a7a3d4b4d" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_gpInfoUbo</name></member>
      <member refid="d6/d6a/a05200_1a8780a89774be87c7113a3adfbe0f744a" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_layeredLightPropagationVolumes</name></member>
      <member refid="d6/d6a/a05200_1ad5485f4ff8da25ed3e84c3bedb12d9f5" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_layeredLightPropagationVolumesG</name></member>
      <member refid="d6/d6a/a05200_1a70fd625e037b0bb5485d4f0f7eb2f7a0" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_lightPropagationVolumes</name></member>
      <member refid="d6/d6a/a05200_1a9895fda6bc928a4b32d3c5a62d0c2757" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_lightPropagationVolumesG</name></member>
      <member refid="d6/d6a/a05200_1ab2aa7c0710ba3fb73bddda4d9db9ba15" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_llpvConfigUbo</name></member>
      <member refid="d6/d6a/a05200_1a2675ebf80b8fe0253761f240eb7bf441" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_llpvResult</name></member>
      <member refid="d6/d6a/a05200_1af0de85f9c121b55bc794d502df27258b" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_lpvConfigUbo</name></member>
      <member refid="d6/d6a/a05200_1a881a5764b5f9d6934787413453a4b3ac" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_lpvResult</name></member>
      <member refid="d6/d6a/a05200_1a6925c2e5d89073990c625857dbde68dd" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_matrixUbo</name></member>
      <member refid="d6/d6a/a05200_1af085e0d48a7ef726b9f8ddb49dd9edb2" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_normal</name></member>
      <member refid="d6/d6a/a05200_1a64b320af293c998375bd930af5252279" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_opaque</name></member>
      <member refid="d6/d6a/a05200_1a4495ba76e40c7ee8495b9be956c99996" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_pointShadowMap</name></member>
      <member refid="d6/d6a/a05200_1ad259bec47d17a266d1851f852a1f615e" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_prepass</name></member>
      <member refid="d6/d6a/a05200_1ad5507fd9504bf700ed11ebfe2ef8ef99" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_rawSize</name></member>
      <member refid="d6/d6a/a05200_1a013f7815d089998d53ab9bdb11ee6f7e" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_renderPasses</name></member>
      <member refid="d6/d6a/a05200_1a567ad614522a3960905fe009907a9119" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_renderTarget</name></member>
      <member refid="d6/d6a/a05200_1a94d631a9a0068d4cedb6e03172d0d239" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_sceneUbo</name></member>
      <member refid="d6/d6a/a05200_1a9c3a8a67fb97d69baeb1fed7a492fbbd" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_spotShadowMap</name></member>
      <member refid="d6/d6a/a05200_1ab41f2c8e5d88e1cebb5c6eeba0f940c1" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_targetSize</name></member>
      <member refid="d6/d6a/a05200_1ac82360cf532ef37276c94bf89a97292b" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_transparent</name></member>
      <member refid="d6/d6a/a05200_1a06e44e2b810b562ef6832c8bcb5c1f02" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_vctConfigUbo</name></member>
      <member refid="d6/d6a/a05200_1a309fdd0a318ea6c0ff6b760326344350" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_voxelizer</name></member>
      <member refid="d6/d6a/a05200_1a707c502b53c0c28fc4cbbdb3675934d0" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>preRender</name></member>
      <member refid="d6/d6a/a05200_1a3396d818aa2881e2ab3b0b6115092cca" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>RenderTechnique</name></member>
      <member refid="d6/d6a/a05200_1a8a9a2e56d4e385004fa8100d6c7e7496" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>RenderTechniquePass</name></member>
      <member refid="d6/d6a/a05200_1a7edf49adb60c10efd7309d8100e048c5" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>setNeedsDepthRange</name></member>
      <member refid="d6/d6a/a05200_1a8041804a8d37587ec2e005122a90f6a3" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>ShadowMapArray</name></member>
      <member refid="d6/d6a/a05200_1a3ac035aec4905eb6d75b1d332a8598c8" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>update</name></member>
      <member refid="d6/d6a/a05200_1a1c8b000b7edec5f90f18271f83e108fb" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>update</name></member>
      <member refid="d6/d6a/a05200_1a1e0b4979e57b7c404f2aca8acc9ae4b3" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>writeInto</name></member>
      <member refid="d6/d6a/a05200_1a218a75c0279a0443d44340ba74de26e9" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>~RenderTechnique</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
