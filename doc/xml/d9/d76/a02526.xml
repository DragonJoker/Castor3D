<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d9/d76/a02526" kind="class" language="C++" prot="public">
    <compoundname>castor3d::FrameListener</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Named</basecompoundref>
    <includes local="no">FrameListener.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d9/d76/a02526_1a9af77d499ee6abb82b349492bc87f759" prot="protected" static="no" mutable="no">
        <type>std::array&lt; CpuFrameEventPtrArray, size_t(<ref refid="de/d13/a01473_1ad442bf3c1ba8a06ac36f710ba30b2870ae558bb69fadec037d9eae46601a4df8e" kindref="member">EventType::eCount</ref>) &gt;</type>
        <definition>std::array&lt; CpuFrameEventPtrArray, size_t( EventType::eCount ) &gt; castor3d::FrameListener::m_cpuEvents</definition>
        <argsstring></argsstring>
        <name>m_cpuEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The CPU events arrays. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="106" column="1" bodyfile="Event/Frame/FrameListener.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d76/a02526_1a72f1425020cf11f3bbb31b88926ddd6c" prot="protected" static="no" mutable="no">
        <type>std::array&lt; GpuFrameEventPtrArray, size_t(<ref refid="de/d13/a01473_1ad442bf3c1ba8a06ac36f710ba30b2870ae558bb69fadec037d9eae46601a4df8e" kindref="member">EventType::eCount</ref>) &gt;</type>
        <definition>std::array&lt; GpuFrameEventPtrArray, size_t( EventType::eCount ) &gt; castor3d::FrameListener::m_gpuEvents</definition>
        <argsstring></argsstring>
        <name>m_gpuEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The GPU events arrays. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="109" column="1" bodyfile="Event/Frame/FrameListener.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d76/a02526_1a93e737a2b96c7055ff61d5693760645e" prot="protected" static="no" mutable="no">
        <type>std::recursive_mutex</type>
        <definition>std::recursive_mutex castor3d::FrameListener::m_mutex</definition>
        <argsstring></argsstring>
        <name>m_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mutex to make this class thread safe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="112" column="1" bodyfile="Event/Frame/FrameListener.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d76/a02526_1a64b32864fdc87929f37bf48346c227e7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::FrameListener::FrameListener</definition>
        <argsstring>(castor::String const &amp;name)</argsstring>
        <name>FrameListener</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener&apos;s name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d76/a02526_1a4447d77062c5b6fc46d83aca47406f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::FrameListener::~FrameListener</definition>
        <argsstring>()</argsstring>
        <name>~FrameListener</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d76/a02526_1a658666c30883ca63d72257bf78aea02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::FrameListener::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <briefdescription>
<para>Empties the event lists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d76/a02526_1a2c62573911a7ed3c2149fd37a7de9df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::FrameListener::postEvent</definition>
        <argsstring>(CpuFrameEventUPtr event)</argsstring>
        <name>postEvent</name>
        <param>
          <type>CpuFrameEventUPtr</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Puts an event in the corresponding array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to put. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d76/a02526_1ab787d573e00427a919f198f7ddab4be2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::FrameListener::postEvent</definition>
        <argsstring>(GpuFrameEventUPtr event)</argsstring>
        <name>postEvent</name>
        <param>
          <type>GpuFrameEventUPtr</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Puts an event in the corresponding array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to put. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d76/a02526_1acbec6c2f66576af08570d08a57c4b304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::FrameListener::fireEvents</definition>
        <argsstring>(EventType type, RenderDevice const &amp;device)</argsstring>
        <name>fireEvents</name>
        <param>
          <type><ref refid="de/d13/a01473_1ad442bf3c1ba8a06ac36f710ba30b2870" kindref="member">EventType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="d8/d4c/a04506" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Applies all events of a given type, then discards them. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of events to fire. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si tous les évènements se sont exécutés sans erreur. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d76/a02526_1a92434ace05937d07300e2180cb7e997d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::FrameListener::fireEvents</definition>
        <argsstring>(EventType type)</argsstring>
        <name>fireEvents</name>
        <param>
          <type><ref refid="de/d13/a01473_1ad442bf3c1ba8a06ac36f710ba30b2870" kindref="member">EventType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Applies all events of a given type, then discards them. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of events to fire. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si tous les évènements se sont exécutés sans erreur. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d76/a02526_1a2a54c785e4fc7043a3045f85e866c09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::FrameListener::flushEvents</definition>
        <argsstring>(EventType type)</argsstring>
        <name>flushEvents</name>
        <param>
          <type><ref refid="de/d13/a01473_1ad442bf3c1ba8a06ac36f710ba30b2870" kindref="member">EventType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Discards all events of a given type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of events to fire. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d9/d76/a02526_1a89005d31cf015a87d21e0742d742bb7b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::FrameListener::doFlush</definition>
        <argsstring>()</argsstring>
        <name>doFlush</name>
        <briefdescription>
<para>Empties the event lists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameListener.hpp" line="101" column="1" bodyfile="Event/Frame/FrameListener.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1211">
        <label>Named</label>
      </node>
      <node id="1210">
        <label>castor3d::FrameListener</label>
        <link refid="d9/d76/a02526"/>
        <childnode refid="1211" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1216">
        <label>T</label>
      </node>
      <node id="1215">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="1216" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1214">
        <label>std::array&lt; CpuFrameEventPtrArray, size_t(EventType::eCount) &gt;</label>
        <childnode refid="1215" relation="template-instance">
          <edgelabel>&lt; CpuFrameEventPtrArray, size_t(EventType::eCount) &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1213">
        <label>Named</label>
      </node>
      <node id="1212">
        <label>castor3d::FrameListener</label>
        <link refid="d9/d76/a02526"/>
        <childnode refid="1213" relation="public-inheritance">
        </childnode>
        <childnode refid="1214" relation="usage">
          <edgelabel>m_cpuEvents</edgelabel>
        </childnode>
        <childnode refid="1217" relation="usage">
          <edgelabel>m_gpuEvents</edgelabel>
        </childnode>
      </node>
      <node id="1217">
        <label>std::array&lt; GpuFrameEventPtrArray, size_t(EventType::eCount) &gt;</label>
        <childnode refid="1215" relation="template-instance">
          <edgelabel>&lt; GpuFrameEventPtrArray, size_t(EventType::eCount) &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Event/Frame/FrameListener.hpp" line="16" column="1" bodyfile="Event/Frame/FrameListener.hpp" bodystart="14" bodyend="113"/>
    <listofallmembers>
      <member refid="d9/d76/a02526_1a89005d31cf015a87d21e0742d742bb7b" prot="protected" virt="virtual"><scope>castor3d::FrameListener</scope><name>doFlush</name></member>
      <member refid="d9/d76/a02526_1acbec6c2f66576af08570d08a57c4b304" prot="public" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>fireEvents</name></member>
      <member refid="d9/d76/a02526_1a92434ace05937d07300e2180cb7e997d" prot="public" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>fireEvents</name></member>
      <member refid="d9/d76/a02526_1a658666c30883ca63d72257bf78aea02b" prot="public" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>flush</name></member>
      <member refid="d9/d76/a02526_1a2a54c785e4fc7043a3045f85e866c09f" prot="public" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>flushEvents</name></member>
      <member refid="d9/d76/a02526_1a64b32864fdc87929f37bf48346c227e7" prot="public" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>FrameListener</name></member>
      <member refid="d9/d76/a02526_1a9af77d499ee6abb82b349492bc87f759" prot="protected" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>m_cpuEvents</name></member>
      <member refid="d9/d76/a02526_1a72f1425020cf11f3bbb31b88926ddd6c" prot="protected" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>m_gpuEvents</name></member>
      <member refid="d9/d76/a02526_1a93e737a2b96c7055ff61d5693760645e" prot="protected" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>m_mutex</name></member>
      <member refid="d9/d76/a02526_1a2c62573911a7ed3c2149fd37a7de9df0" prot="public" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>postEvent</name></member>
      <member refid="d9/d76/a02526_1ab787d573e00427a919f198f7ddab4be2" prot="public" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>postEvent</name></member>
      <member refid="d9/d76/a02526_1a4447d77062c5b6fc46d83aca47406f74" prot="public" virt="non-virtual"><scope>castor3d::FrameListener</scope><name>~FrameListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
