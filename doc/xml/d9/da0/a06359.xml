<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d9/da0/a06359" kind="struct" language="C++" prot="public">
    <compoundname>castor3d::PipelineFlags</compoundname>
    <basecompoundref refid="d9/d28/a06351" prot="public" virt="non-virtual">castor3d::PipelineHiHashDetails</basecompoundref>
    <basecompoundref refid="d2/de6/a06355" prot="public" virt="non-virtual">castor3d::PipelineLoHashDetails</basecompoundref>
    <includes local="no">PipelineFlags.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Textures</header>
      <memberdef kind="variable" id="d9/da0/a06359_1a1dfad853886ec783dc12f49701632150" prot="public" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
        <definition>SceneFlags castor3d::PipelineFlags::m_sceneFlags</definition>
        <argsstring></argsstring>
        <name>m_sceneFlags</name>
        <qualifiedname>castor3d::PipelineFlags::m_sceneFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="356" column="12" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="356" bodyend="-1"/>
        <referencedby refid="d9/da0/a06359_1af92c5221dcf89edafa486eb68e730fc4" compoundref="d7/daf/a01169" startline="301" endline="304">getGlobalIlluminationFlags</referencedby>
        <referencedby refid="d9/da0/a06359_1a008af19d250cf618bfe9bdb403eef3c7" compoundref="d7/daf/a01169" startline="296" endline="299">getShadowFlags</referencedby>
        <referencedby refid="d9/da0/a06359_1ae882a746fb72641f080e374d3254ca0f" compoundref="d7/daf/a01169" startline="306" endline="309">hasDiffuseGI</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/da0/a06359_1aab051b1ee46ace763681dfea200198d2" prot="public" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
        <definition>BlendMode castor3d::PipelineFlags::colourBlendMode</definition>
        <argsstring></argsstring>
        <name>colourBlendMode</name>
        <qualifiedname>castor3d::PipelineFlags::colourBlendMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="357" column="11" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/da0/a06359_1a0831b5262611024fcac18f42f7a29f92" prot="public" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
        <definition>BlendMode castor3d::PipelineFlags::alphaBlendMode</definition>
        <argsstring></argsstring>
        <name>alphaBlendMode</name>
        <qualifiedname>castor3d::PipelineFlags::alphaBlendMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="358" column="11" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/da0/a06359_1a98434d111c8a331f820f9e1366c15ca8" prot="public" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref></type>
        <definition>RenderPassTypeID castor3d::PipelineFlags::renderPassType</definition>
        <argsstring></argsstring>
        <name>renderPassType</name>
        <qualifiedname>castor3d::PipelineFlags::renderPassType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="359" column="18" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/da0/a06359_1a82e267d99f0d0f3103eb76e4ab1a22b2" prot="public" static="no" mutable="no">
        <type>VkPrimitiveTopology</type>
        <definition>VkPrimitiveTopology castor3d::PipelineFlags::topology</definition>
        <argsstring></argsstring>
        <name>topology</name>
        <qualifiedname>castor3d::PipelineFlags::topology</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="360" column="21" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/da0/a06359_1a0d59a3d9de048c7a8b6a9c6e3b1f49ca" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::PipelineFlags::patchVertices</definition>
        <argsstring></argsstring>
        <name>patchVertices</name>
        <qualifiedname>castor3d::PipelineFlags::patchVertices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="361" column="10" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a8ffbcde0651a02ed73bcf79145e7761e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::hasMap</definition>
        <argsstring>(PassComponentTextureFlag flag) const noexcept</argsstring>
        <name>hasMap</name>
        <qualifiedname>castor3d::PipelineFlags::hasMap</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a0940e712754880ad51d00a19855eab42" kindref="member">PassComponentTextureFlag</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="352" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a6f596872434ec3845546f41cfadd808c" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::enableTexcoord</definition>
        <argsstring>(SubmeshData data) const noexcept</argsstring>
        <name>enableTexcoord</name>
        <qualifiedname>castor3d::PipelineFlags::enableTexcoord</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a4faec35d0640cd94dc3530998e445ff0" kindref="member">SubmeshData</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="364" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1ab619a8d16bdf05b8643e83d1c4b7d79c" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::enableNonTexcoord</definition>
        <argsstring>(SubmeshData data) const noexcept</argsstring>
        <name>enableNonTexcoord</name>
        <qualifiedname>castor3d::PipelineFlags::enableNonTexcoord</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a4faec35d0640cd94dc3530998e445ff0" kindref="member">SubmeshData</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="365" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a82cc16086a9d81fd903aa1dfe4f528fd" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::hasSubmeshData</definition>
        <argsstring>(SubmeshData data) const noexcept</argsstring>
        <name>hasSubmeshData</name>
        <qualifiedname>castor3d::PipelineFlags::hasSubmeshData</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a4faec35d0640cd94dc3530998e445ff0" kindref="member">SubmeshData</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="366" column="6"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>ShaderFlags</header>
      <memberdef kind="function" id="d9/da0/a06359_1a2d742b1e2ef9db5578697cbc81e5829d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::usesWorldSpace</definition>
        <argsstring>() const noexcept</argsstring>
        <name>usesWorldSpace</name>
        <qualifiedname>castor3d::PipelineFlags::usesWorldSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="217" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="217" bodyend="220"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45ad2b5722680c0d6238d583746bb8b698d">castor3d::eWorldSpace</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a340f5bc05873d62be4953020f7e9b558" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::usesViewSpace</definition>
        <argsstring>() const noexcept</argsstring>
        <name>usesViewSpace</name>
        <qualifiedname>castor3d::PipelineFlags::usesViewSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="222" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="222" bodyend="225"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45a347c31380f35ea049138b555e6e0d8a8">castor3d::eViewSpace</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1ae02196f9e6c9e4230a461b1aa2f64d56" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::usesGeometry</definition>
        <argsstring>() const noexcept</argsstring>
        <name>usesGeometry</name>
        <qualifiedname>castor3d::PipelineFlags::usesGeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="227" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="227" bodyend="230"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45a602580dcfaed9d9ddf07cad7276c3103">castor3d::eGeometry</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a3af7c248febed9f22a50a37b4cfd087b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::usesTessellation</definition>
        <argsstring>() const noexcept</argsstring>
        <name>usesTessellation</name>
        <qualifiedname>castor3d::PipelineFlags::usesTessellation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="232" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="232" bodyend="235"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45a0fb3bd0563d917f4b478bee4bd901580">castor3d::eTessellation</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a31f8d7939d1e6d136b575842dfd77406" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::usesColour</definition>
        <argsstring>() const noexcept</argsstring>
        <name>usesColour</name>
        <qualifiedname>castor3d::PipelineFlags::usesColour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="237" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="237" bodyend="240"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45a933e146a34d99e16a319642574089a34">castor3d::eColour</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a613171a2acd52485847f15c2b5cc64a2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::usesOpacity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>usesOpacity</name>
        <qualifiedname>castor3d::PipelineFlags::usesOpacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="242" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="242" bodyend="245"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45aa3a957357b758bcbb55d221bf975b545">castor3d::eOpacity</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a7467bd4710c7f4879e7ad1e8044c897d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::forceTexCoords</definition>
        <argsstring>() const noexcept</argsstring>
        <name>forceTexCoords</name>
        <qualifiedname>castor3d::PipelineFlags::forceTexCoords</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="247" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="247" bodyend="250"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45afe0e95a2600ebf3539396ba07998b96a">castor3d::eForceTexCoords</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a3cf0412e75a50744441a7701752e8399" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::writeEnvironmentMap</definition>
        <argsstring>() const noexcept</argsstring>
        <name>writeEnvironmentMap</name>
        <qualifiedname>castor3d::PipelineFlags::writeEnvironmentMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="252" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="252" bodyend="255"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45abe4173784548d4708cd1322d33bf6a26">castor3d::eEnvironmentMapping</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a6f5db81de55a36b401ce830a4b3eab3e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::writeShadowMap</definition>
        <argsstring>() const noexcept</argsstring>
        <name>writeShadowMap</name>
        <qualifiedname>castor3d::PipelineFlags::writeShadowMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="257" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="257" bodyend="262"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45aeb723f851d718b4b5a20b9753f5c9f30">castor3d::eShadowMapDirectional</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45af2c66955d3cd06ca2dc76347feeb7c9a">castor3d::eShadowMapPoint</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45a65500600404fff625f48587c511e4227">castor3d::eShadowMapSpot</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a623df4c62223759acf42e6cd27f5b8bd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::writeShadowVSM</definition>
        <argsstring>() const noexcept</argsstring>
        <name>writeShadowVSM</name>
        <qualifiedname>castor3d::PipelineFlags::writeShadowVSM</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="264" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="264" bodyend="267"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45a8ad4cc1078329899aab2c6db3d3192a7">castor3d::eVsmShadowMap</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a7f565898aadf535c753a335ec208bc89" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::writeShadowRSM</definition>
        <argsstring>() const noexcept</argsstring>
        <name>writeShadowRSM</name>
        <qualifiedname>castor3d::PipelineFlags::writeShadowRSM</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="269" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="269" bodyend="272"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45a5f3d543551c7bea0c052c11524157fe0">castor3d::eRsmShadowMap</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1aaf9b42071050adc2bf7a5282ee2074a1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::writeVelocity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>writeVelocity</name>
        <qualifiedname>castor3d::PipelineFlags::writeVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="274" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="274" bodyend="277"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45ab2c25b5cef640a0733b40b4ded88d091">castor3d::eVelocity</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a6679d033f1044c954d7cd11c6f0fdee3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::writeVisibility</definition>
        <argsstring>() const noexcept</argsstring>
        <name>writeVisibility</name>
        <qualifiedname>castor3d::PipelineFlags::writeVisibility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="279" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="279" bodyend="282"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45ae8e6f14417dffd0d30f3c6aa069b04fb">castor3d::eVisibility</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a3090905b1bb03f4ad746bd23335ec6a1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::writeDepth</definition>
        <argsstring>() const noexcept</argsstring>
        <name>writeDepth</name>
        <qualifiedname>castor3d::PipelineFlags::writeDepth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="284" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="284" bodyend="287"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45a2a37044e2d0bed7cbb63527176543d73">castor3d::eDepth</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a333b33e0571ab053980cc7d6e8f049f1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::writePicking</definition>
        <argsstring>() const noexcept</argsstring>
        <name>writePicking</name>
        <qualifiedname>castor3d::PipelineFlags::writePicking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="289" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="289" bodyend="292"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45ad87941418fd9e2238ccb07af845ae4a2">castor3d::ePicking</references>
        <references refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" compoundref="d7/daf/a01169" startline="71" endline="71">castor3d::PipelineHiHashDetails::m_shaderFlags</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>SceneFlags</header>
      <memberdef kind="function" id="d9/da0/a06359_1a008af19d250cf618bfe9bdb403eef3c7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
        <definition>SceneFlags castor3d::PipelineFlags::getShadowFlags</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getShadowFlags</name>
        <qualifiedname>castor3d::PipelineFlags::getShadowFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="296" column="12" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="296" bodyend="299"/>
        <references refid="d9/dba/a02278_1a0282168ae87222228c5a154c419deb51afc9a4467a136023d484aa192809023b1">castor3d::eShadowAny</references>
        <references refid="d9/da0/a06359_1a1dfad853886ec783dc12f49701632150" compoundref="d7/daf/a01169" startline="356">m_sceneFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1af92c5221dcf89edafa486eb68e730fc4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
        <definition>SceneFlags castor3d::PipelineFlags::getGlobalIlluminationFlags</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getGlobalIlluminationFlags</name>
        <qualifiedname>castor3d::PipelineFlags::getGlobalIlluminationFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="301" column="12" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="301" bodyend="304"/>
        <references refid="d9/dba/a02278_1a0282168ae87222228c5a154c419deb51ab290c1fcaac8fdba845e6725e59cf211">castor3d::eGIAny</references>
        <references refid="d9/da0/a06359_1a1dfad853886ec783dc12f49701632150" compoundref="d7/daf/a01169" startline="356">m_sceneFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1ae882a746fb72641f080e374d3254ca0f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::hasDiffuseGI</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasDiffuseGI</name>
        <qualifiedname>castor3d::PipelineFlags::hasDiffuseGI</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="306" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="306" bodyend="309"/>
        <references refid="d9/dba/a02278_1a0282168ae87222228c5a154c419deb51ab290c1fcaac8fdba845e6725e59cf211">castor3d::eGIAny</references>
        <references refid="d9/dba/a02278_1a77300ce1912b533c6630218c9bf746a6">castor3d::hasAny</references>
        <references refid="d9/da0/a06359_1a1dfad853886ec783dc12f49701632150" compoundref="d7/daf/a01169" startline="356">m_sceneFlags</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>SubmeshComponents</header>
      <memberdef kind="function" id="d9/da0/a06359_1a63e4392acf581c0972fa6ccb6c80eaf4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::hasWorldPosInputs</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasWorldPosInputs</name>
        <qualifiedname>castor3d::PipelineFlags::hasWorldPosInputs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="313" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="313" bodyend="316"/>
        <references refid="d1/db0/a05447_1a8483b849e6becb88b2bb6005ae88b97b" compoundref="dc/d76/a11678" startline="48" endline="48">castor3d::SubmeshComponentCombine::hasVelocityFlag</references>
        <references refid="d9/d28/a06351_1a8a69feec9c575bd0b7d8ab604a22e42f" compoundref="d7/daf/a01169" startline="62" endline="62">castor3d::PipelineHiHashDetails::submesh</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1ad782262d636f0af682770975eb5cebbf" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::hasSkinData</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasSkinData</name>
        <qualifiedname>castor3d::PipelineFlags::hasSkinData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="318" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="318" bodyend="321"/>
        <references refid="d1/db0/a05447_1a8b178de5f82de1382874d19a47ec5f4d" compoundref="dc/d76/a11678" startline="45" endline="45">castor3d::SubmeshComponentCombine::hasSkinFlag</references>
        <references refid="d9/d28/a06351_1a8a69feec9c575bd0b7d8ab604a22e42f" compoundref="d7/daf/a01169" startline="62" endline="62">castor3d::PipelineHiHashDetails::submesh</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>ProgramFlags</header>
      <memberdef kind="function" id="d9/da0/a06359_1a761c0f424fb0960d586c916167f1e735" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::isBillboard</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isBillboard</name>
        <qualifiedname>castor3d::PipelineFlags::isBillboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="325" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="325" bodyend="328"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1a936ab837f9d458e7c234bb1ef4061cabaa7242bffc1057f5048a657a799909415">castor3d::eBillboards</references>
        <references refid="d9/d28/a06351_1a62d5a49b36d90f5d0f4cb8ef2333f6f7" compoundref="d7/daf/a01169" startline="70" endline="70">castor3d::PipelineHiHashDetails::m_programFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a8fdff9692b28c5274e922d9a9c15fd17" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::isFrontCulled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isFrontCulled</name>
        <qualifiedname>castor3d::PipelineFlags::isFrontCulled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="330" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="330" bodyend="333"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1a936ab837f9d458e7c234bb1ef4061cabaaede87a391a845c500a213235b1ec1fe">castor3d::eFrontCulled</references>
        <references refid="d9/d28/a06351_1a62d5a49b36d90f5d0f4cb8ef2333f6f7" compoundref="d7/daf/a01169" startline="70" endline="70">castor3d::PipelineHiHashDetails::m_programFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a6f6bd40d83737eb45228e6595341a314" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::usesMesh</definition>
        <argsstring>() const noexcept</argsstring>
        <name>usesMesh</name>
        <qualifiedname>castor3d::PipelineFlags::usesMesh</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="335" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="335" bodyend="338"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1a936ab837f9d458e7c234bb1ef4061cabaec84e1d87320c8e306d51f02c81142b9">castor3d::eHasMesh</references>
        <references refid="d9/d28/a06351_1a62d5a49b36d90f5d0f4cb8ef2333f6f7" compoundref="d7/daf/a01169" startline="70" endline="70">castor3d::PipelineHiHashDetails::m_programFlags</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a70b8ed8bf1a47331d6d88fdad5794af5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::PipelineFlags::usesTask</definition>
        <argsstring>() const noexcept</argsstring>
        <name>usesTask</name>
        <qualifiedname>castor3d::PipelineFlags::usesTask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="340" column="6" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="340" bodyend="343"/>
        <references refid="d9/dba/a02278_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d9/dba/a02278_1a936ab837f9d458e7c234bb1ef4061caba56f930c82b2339c938dbc8df25498dfc">castor3d::eHasTask</references>
        <references refid="d9/d28/a06351_1a62d5a49b36d90f5d0f4cb8ef2333f6f7" compoundref="d7/daf/a01169" startline="70" endline="70">castor3d::PipelineHiHashDetails::m_programFlags</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Components</header>
      <memberdef kind="function" id="d9/da0/a06359_1aac770d160c4be71f926a1d9393a04fcd" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::hasPassFlag</definition>
        <argsstring>(PassComponentFlag flag) const noexcept</argsstring>
        <name>hasPassFlag</name>
        <qualifiedname>castor3d::PipelineFlags::hasPassFlag</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1ad77e61bf7d7ca8d88ae3f528ed7ef891" kindref="member">PassComponentFlag</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="347" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a5202f4540ec8b11b52eb1e47c1499c90" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::hasSubmeshFlag</definition>
        <argsstring>(SubmeshComponentFlag flag) const noexcept</argsstring>
        <name>hasSubmeshFlag</name>
        <qualifiedname>castor3d::PipelineFlags::hasSubmeshFlag</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1af0f2b6cb91a8d84eb40f3d6d11c054d4" kindref="member">SubmeshComponentFlag</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="348" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/da0/a06359_1a88f960eb8d2582856bd80f65002c2e34" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::PipelineFlags::PipelineFlags</definition>
        <argsstring>(PipelineHiHashDetails hiDetails, PipelineLoHashDetails loDetails=PipelineLoHashDetails{}, SceneFlags sceneFlags=SceneFlag::eNone, BlendMode colourBlendMode=BlendMode::eNoBlend, BlendMode alphaBlendMode=BlendMode::eNoBlend, RenderPassTypeID renderPassType=0u, VkPrimitiveTopology ptopology=VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST, uint32_t ppatchVertices=3u) noexcept</argsstring>
        <name>PipelineFlags</name>
        <qualifiedname>castor3d::PipelineFlags::PipelineFlags</qualifiedname>
        <param>
          <type><ref refid="d9/d28/a06351" kindref="compound">PipelineHiHashDetails</ref></type>
          <declname>hiDetails</declname>
        </param>
        <param>
          <type><ref refid="d2/de6/a06355" kindref="compound">PipelineLoHashDetails</ref></type>
          <declname>loDetails</declname>
          <defval><ref refid="d2/de6/a06355" kindref="compound">PipelineLoHashDetails</ref>{}</defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
          <declname>sceneFlags</declname>
          <defval><ref refid="d9/dba/a02278_1a0282168ae87222228c5a154c419deb51abe988781e4e1de1c6a36fb698afbbe1f" kindref="member">SceneFlag::eNone</ref></defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>colourBlendMode</declname>
          <defval><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27da12c10e6e0388d587340cfbe98b5045ae" kindref="member">BlendMode::eNoBlend</ref></defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>alphaBlendMode</declname>
          <defval><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27da12c10e6e0388d587340cfbe98b5045ae" kindref="member">BlendMode::eNoBlend</ref></defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref></type>
          <declname>renderPassType</declname>
          <defval>0u</defval>
        </param>
        <param>
          <type>VkPrimitiveTopology</type>
          <declname>ptopology</declname>
          <defval>VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ppatchVertices</declname>
          <defval>3u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="102" column="10" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="102" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a3061380bb2bf46751022c009ebce77ac" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::PipelineFlags::PipelineFlags</definition>
        <argsstring>(PassComponentCombine ppassComponents, SubmeshComponentCombine psubmeshComponents, LightingModelID plightingModelId, BackgroundModelID pbackgroundModelId, BlendMode pcolourBlendMode=BlendMode::eNoBlend, BlendMode palphaBlendMode=BlendMode::eNoBlend, RenderPassTypeID prenderPassType=0u, ProgramFlags pprogramFlags=ProgramFlag::eNone, SceneFlags psceneFlags=SceneFlag::eNone, ShaderFlags pshaderFlags=ShaderFlag::eNone, VkPrimitiveTopology ptopology=VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST, uint32_t ppatchVertices=3u, VkCompareOp palphaFunc=VK_COMPARE_OP_ALWAYS, TextureCombine textures={}, uint32_t ppassLayerIndex={}, VkDeviceSize pmorphTargetsOffset={}, SubmeshRenderData const *psubmeshData={}, bool pisStatic=false) noexcept</argsstring>
        <name>PipelineFlags</name>
        <qualifiedname>castor3d::PipelineFlags::PipelineFlags</qualifiedname>
        <param>
          <type><ref refid="d1/dc1/a04099" kindref="compound">PassComponentCombine</ref></type>
          <declname>ppassComponents</declname>
        </param>
        <param>
          <type><ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref></type>
          <declname>psubmeshComponents</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
          <declname>plightingModelId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>pbackgroundModelId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>pcolourBlendMode</declname>
          <defval><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27da12c10e6e0388d587340cfbe98b5045ae" kindref="member">BlendMode::eNoBlend</ref></defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>palphaBlendMode</declname>
          <defval><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27da12c10e6e0388d587340cfbe98b5045ae" kindref="member">BlendMode::eNoBlend</ref></defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref></type>
          <declname>prenderPassType</declname>
          <defval>0u</defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref></type>
          <declname>pprogramFlags</declname>
          <defval><ref refid="d9/dba/a02278_1a936ab837f9d458e7c234bb1ef4061cababe988781e4e1de1c6a36fb698afbbe1f" kindref="member">ProgramFlag::eNone</ref></defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
          <declname>psceneFlags</declname>
          <defval><ref refid="d9/dba/a02278_1a0282168ae87222228c5a154c419deb51abe988781e4e1de1c6a36fb698afbbe1f" kindref="member">SceneFlag::eNone</ref></defval>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1ab570f77ed4b8ad316f3ea34ae87476dd" kindref="member">ShaderFlags</ref></type>
          <declname>pshaderFlags</declname>
          <defval><ref refid="d9/dba/a02278_1af2b45637ae87ee95eb6b6641d9415d45abe988781e4e1de1c6a36fb698afbbe1f" kindref="member">ShaderFlag::eNone</ref></defval>
        </param>
        <param>
          <type>VkPrimitiveTopology</type>
          <declname>ptopology</declname>
          <defval>VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ppatchVertices</declname>
          <defval>3u</defval>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>palphaFunc</declname>
          <defval>VK_COMPARE_OP_ALWAYS</defval>
        </param>
        <param>
          <type><ref refid="d9/d0d/a03995" kindref="compound">TextureCombine</ref></type>
          <declname>textures</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ppassLayerIndex</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>pmorphTargetsOffset</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="d6/d66/a05595" kindref="compound">SubmeshRenderData</ref> const *</type>
          <declname>psubmeshData</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>pisStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="122" column="10" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="122" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a11779af7e3e81893e7020805513d1043" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::PipelineFlags::PipelineFlags</definition>
        <argsstring>(PassComponentCombine ppassComponents, SubmeshComponentCombine psubmeshComponents, LightingModelID lightingModelId, BackgroundModelID pbackgroundModelId, ProgramFlags programFlags, TextureCombine textures, ShaderFlags shaderFlags, VkCompareOp alphaFunc, uint32_t passLayerIndex=0u)</argsstring>
        <name>PipelineFlags</name>
        <qualifiedname>castor3d::PipelineFlags::PipelineFlags</qualifiedname>
        <param>
          <type><ref refid="d1/dc1/a04099" kindref="compound">PassComponentCombine</ref></type>
          <declname>ppassComponents</declname>
        </param>
        <param>
          <type><ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref></type>
          <declname>psubmeshComponents</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
          <declname>lightingModelId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>pbackgroundModelId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref></type>
          <declname>programFlags</declname>
        </param>
        <param>
          <type><ref refid="d9/d0d/a03995" kindref="compound">TextureCombine</ref></type>
          <declname>textures</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1ab570f77ed4b8ad316f3ea34ae87476dd" kindref="member">ShaderFlags</ref></type>
          <declname>shaderFlags</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>alphaFunc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>passLayerIndex</declname>
          <defval>0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="161" column="1" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="161" bodyend="188"/>
        <references refid="df/dd8/a01943_1a7db41dab6f93d75339a43575590ee196" compoundref="df/dd8/a01943" startline="49">CU_Require</references>
        <references refid="d9/d28/a06351_1aa18c7092b9c6c4394a6edfeb185f2114" compoundref="d7/daf/a01169" startline="64" endline="64">castor3d::PipelineHiHashDetails::lightingModelId</references>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a0503e203a670ea8fbb5b42932b9fbab0" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableTexcoords</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableTexcoords</name>
        <qualifiedname>castor3d::PipelineFlags::enableTexcoords</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="191" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a93912551a5b5789a8e2de005d0c3f967" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableVertexInput</definition>
        <argsstring>(SubmeshData data) const noexcept</argsstring>
        <name>enableVertexInput</name>
        <qualifiedname>castor3d::PipelineFlags::enableVertexInput</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a4faec35d0640cd94dc3530998e445ff0" kindref="member">SubmeshData</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="192" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a6966c61a1f6c90919690829654e020a0" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableIndices</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableIndices</name>
        <qualifiedname>castor3d::PipelineFlags::enableIndices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="193" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a7c5602c6fab0cfeeada868a412a4e8c0" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enablePosition</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enablePosition</name>
        <qualifiedname>castor3d::PipelineFlags::enablePosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="194" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a82b4b8c3c8eaa1363ca79e3e31560c3a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableNormal</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableNormal</name>
        <qualifiedname>castor3d::PipelineFlags::enableNormal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="195" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1ad51e215fa9ef2e114b6d495255db3f4d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableTangentSpace</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableTangentSpace</name>
        <qualifiedname>castor3d::PipelineFlags::enableTangentSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="196" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1ad8a8c3efee9c6ade7f445276c5356c80" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableBitangent</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableBitangent</name>
        <qualifiedname>castor3d::PipelineFlags::enableBitangent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="197" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a59f94f08bb832b45185e4d3e0ed4af9b" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableColours</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableColours</name>
        <qualifiedname>castor3d::PipelineFlags::enableColours</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="198" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a9ac3b97e73f59408032dc6a0d9186b7d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enablePassMasks</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enablePassMasks</name>
        <qualifiedname>castor3d::PipelineFlags::enablePassMasks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="199" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a9393b4c7bfd65cdebce8d04a8c3b7fd9" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableTexcoord0</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableTexcoord0</name>
        <qualifiedname>castor3d::PipelineFlags::enableTexcoord0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="200" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1adcd255078ce014613bfbf0752c8c151c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableTexcoord1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableTexcoord1</name>
        <qualifiedname>castor3d::PipelineFlags::enableTexcoord1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="201" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1ac81e021a830326c5526cf38fc8a78230" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableTexcoord2</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableTexcoord2</name>
        <qualifiedname>castor3d::PipelineFlags::enableTexcoord2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="202" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1abb9399a641455e517a7d2effe11bb597" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableTexcoord3</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableTexcoord3</name>
        <qualifiedname>castor3d::PipelineFlags::enableTexcoord3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="203" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a5ed80c1484e5c27f3fe6f6bdaf9f295a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableTextures</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableTextures</name>
        <qualifiedname>castor3d::PipelineFlags::enableTextures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="205" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a555d96719c2379a4e588333f01c0ae21" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableVertexID</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableVertexID</name>
        <qualifiedname>castor3d::PipelineFlags::enableVertexID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="206" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a4d93dd5e3b29a555f3429f031609751e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableMeshletID</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableMeshletID</name>
        <qualifiedname>castor3d::PipelineFlags::enableMeshletID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="207" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1afca07a0979e5441d00a6dcd93a082bc0" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableInstantiation</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableInstantiation</name>
        <qualifiedname>castor3d::PipelineFlags::enableInstantiation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="208" column="14"/>
        <referencedby refid="da/d68/a02280_1a554ea3ab05d061504fc488a339331ead" compoundref="d9/d0d/a01748" startline="59" endline="71">castor3d::shader::getNodeId</referencedby>
        <referencedby refid="da/d68/a02280_1a9f9433592cae920aa0a8aefc788d47b3" compoundref="d9/d0d/a01748" startline="73" endline="85">castor3d::shader::getNodeId</referencedby>
        <referencedby refid="da/d68/a02280_1a25f4ccf9006816abe02076f6f4a18be5" compoundref="d9/d0d/a01748" startline="41" endline="53">castor3d::shader::getNodeId</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1afb8c9a1ee2c61c13ccbd2ddee0c22c5a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableParallaxOcclusionMapping</definition>
        <argsstring>(PassComponentRegister const &amp;passComponents) const noexcept</argsstring>
        <name>enableParallaxOcclusionMapping</name>
        <qualifiedname>castor3d::PipelineFlags::enableParallaxOcclusionMapping</qualifiedname>
        <param>
          <type><ref refid="d4/d10/a04839" kindref="compound">PassComponentRegister</ref> const &amp;</type>
          <declname>passComponents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="209" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a7820c4229b9bc190ac7b0c8eff2181d3" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableParallaxOcclusionMappingOne</definition>
        <argsstring>(PassComponentRegister const &amp;passComponents) const noexcept</argsstring>
        <name>enableParallaxOcclusionMappingOne</name>
        <qualifiedname>castor3d::PipelineFlags::enableParallaxOcclusionMappingOne</qualifiedname>
        <param>
          <type><ref refid="d4/d10/a04839" kindref="compound">PassComponentRegister</ref> const &amp;</type>
          <declname>passComponents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="210" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1a2ce54ec1c394ac9993a71f6abe656671" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::enableVelocity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>enableVelocity</name>
        <qualifiedname>castor3d::PipelineFlags::enableVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="211" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/da0/a06359_1ad209d81c3a5ef04844c2cf2d56ee1edf" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::PipelineFlags::hasFog</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasFog</name>
        <qualifiedname>castor3d::PipelineFlags::hasFog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/PipelineFlags.hpp" line="213" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Indicateurs de pipeline. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::PipelineFlags</label>
        <link refid="d9/da0/a06359"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::PipelineHiHashDetails</label>
        <link refid="d9/d28/a06351"/>
      </node>
      <node id="3">
        <label>castor3d::PipelineLoHashDetails</label>
        <link refid="d2/de6/a06355"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>castor::FlagCombination&lt; ProgramFlag &gt;</label>
        <link refid="dd/dbb/a08207"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; ProgramFlag &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>castor::FlagCombination&lt; SceneFlag &gt;</label>
        <link refid="dd/dbb/a08207"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; SceneFlag &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>castor::FlagCombination&lt; ShaderFlag &gt;</label>
        <link refid="dd/dbb/a08207"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; ShaderFlag &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::PassComponentCombine</label>
        <link refid="d1/dc1/a04099"/>
      </node>
      <node id="1">
        <label>castor3d::PipelineFlags</label>
        <link refid="d9/da0/a06359"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_sceneFlags</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::PipelineHiHashDetails</label>
        <link refid="d9/d28/a06351"/>
        <childnode refid="3" relation="usage">
          <edgelabel>pass</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>submesh</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>textures</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_programFlags</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_shaderFlags</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>castor3d::PipelineLoHashDetails</label>
        <link refid="d2/de6/a06355"/>
        <childnode refid="10" relation="usage">
          <edgelabel>submeshData</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::SubmeshComponentCombine</label>
        <link refid="d1/db0/a05447"/>
      </node>
      <node id="10">
        <label>castor3d::SubmeshRenderData</label>
        <link refid="d6/d66/a05595"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>castor3d::SubmeshSubComponent</label>
        <link refid="d0/d52/a05583"/>
      </node>
      <node id="5">
        <label>castor3d::TextureCombine</label>
        <link refid="d9/d0d/a03995"/>
      </node>
      <node id="7">
        <label>castor::FlagCombination&lt; FlagType &gt;</label>
        <link refid="dd/dbb/a08207"/>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Render/PipelineFlags.hpp" line="98" column="1" bodyfile="Castor3D/Render/PipelineFlags.hpp" bodystart="101" bodyend="367"/>
    <listofallmembers>
      <member refid="d9/da0/a06359_1a0831b5262611024fcac18f42f7a29f92" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>alphaBlendMode</name></member>
      <member refid="d9/d28/a06351_1ae1caa64c9d99c801e3cbb0336c100b85" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>alphaFunc</name></member>
      <member refid="d9/d28/a06351_1a16bc14310598132de6aa647403b0fad5" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>backgroundModelId</name></member>
      <member refid="d9/da0/a06359_1aab051b1ee46ace763681dfea200198d2" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>colourBlendMode</name></member>
      <member refid="d9/da0/a06359_1ad8a8c3efee9c6ade7f445276c5356c80" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableBitangent</name></member>
      <member refid="d9/da0/a06359_1a59f94f08bb832b45185e4d3e0ed4af9b" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableColours</name></member>
      <member refid="d9/da0/a06359_1a6966c61a1f6c90919690829654e020a0" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableIndices</name></member>
      <member refid="d9/da0/a06359_1afca07a0979e5441d00a6dcd93a082bc0" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableInstantiation</name></member>
      <member refid="d9/da0/a06359_1a4d93dd5e3b29a555f3429f031609751e" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableMeshletID</name></member>
      <member refid="d9/da0/a06359_1ab619a8d16bdf05b8643e83d1c4b7d79c" prot="private" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableNonTexcoord</name></member>
      <member refid="d9/da0/a06359_1a82b4b8c3c8eaa1363ca79e3e31560c3a" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableNormal</name></member>
      <member refid="d9/da0/a06359_1afb8c9a1ee2c61c13ccbd2ddee0c22c5a" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableParallaxOcclusionMapping</name></member>
      <member refid="d9/da0/a06359_1a7820c4229b9bc190ac7b0c8eff2181d3" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableParallaxOcclusionMappingOne</name></member>
      <member refid="d9/da0/a06359_1a9ac3b97e73f59408032dc6a0d9186b7d" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enablePassMasks</name></member>
      <member refid="d9/da0/a06359_1a7c5602c6fab0cfeeada868a412a4e8c0" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enablePosition</name></member>
      <member refid="d9/da0/a06359_1ad51e215fa9ef2e114b6d495255db3f4d" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableTangentSpace</name></member>
      <member refid="d9/da0/a06359_1a6f596872434ec3845546f41cfadd808c" prot="private" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableTexcoord</name></member>
      <member refid="d9/da0/a06359_1a9393b4c7bfd65cdebce8d04a8c3b7fd9" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableTexcoord0</name></member>
      <member refid="d9/da0/a06359_1adcd255078ce014613bfbf0752c8c151c" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableTexcoord1</name></member>
      <member refid="d9/da0/a06359_1ac81e021a830326c5526cf38fc8a78230" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableTexcoord2</name></member>
      <member refid="d9/da0/a06359_1abb9399a641455e517a7d2effe11bb597" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableTexcoord3</name></member>
      <member refid="d9/da0/a06359_1a0503e203a670ea8fbb5b42932b9fbab0" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableTexcoords</name></member>
      <member refid="d9/da0/a06359_1a5ed80c1484e5c27f3fe6f6bdaf9f295a" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableTextures</name></member>
      <member refid="d9/da0/a06359_1a2ce54ec1c394ac9993a71f6abe656671" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableVelocity</name></member>
      <member refid="d9/da0/a06359_1a555d96719c2379a4e588333f01c0ae21" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableVertexID</name></member>
      <member refid="d9/da0/a06359_1a93912551a5b5789a8e2de005d0c3f967" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>enableVertexInput</name></member>
      <member refid="d9/da0/a06359_1a7467bd4710c7f4879e7ad1e8044c897d" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>forceTexCoords</name></member>
      <member refid="d9/da0/a06359_1af92c5221dcf89edafa486eb68e730fc4" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>getGlobalIlluminationFlags</name></member>
      <member refid="d9/da0/a06359_1a008af19d250cf618bfe9bdb403eef3c7" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>getShadowFlags</name></member>
      <member refid="d9/da0/a06359_1ae882a746fb72641f080e374d3254ca0f" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>hasDiffuseGI</name></member>
      <member refid="d9/da0/a06359_1ad209d81c3a5ef04844c2cf2d56ee1edf" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>hasFog</name></member>
      <member refid="d9/da0/a06359_1a8ffbcde0651a02ed73bcf79145e7761e" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>hasMap</name></member>
      <member refid="d9/da0/a06359_1aac770d160c4be71f926a1d9393a04fcd" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>hasPassFlag</name></member>
      <member refid="d9/da0/a06359_1ad782262d636f0af682770975eb5cebbf" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>hasSkinData</name></member>
      <member refid="d9/da0/a06359_1a82cc16086a9d81fd903aa1dfe4f528fd" prot="private" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>hasSubmeshData</name></member>
      <member refid="d9/da0/a06359_1a5202f4540ec8b11b52eb1e47c1499c90" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>hasSubmeshFlag</name></member>
      <member refid="d9/da0/a06359_1a63e4392acf581c0972fa6ccb6c80eaf4" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>hasWorldPosInputs</name></member>
      <member refid="d9/da0/a06359_1a761c0f424fb0960d586c916167f1e735" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>isBillboard</name></member>
      <member refid="d9/da0/a06359_1a8fdff9692b28c5274e922d9a9c15fd17" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>isFrontCulled</name></member>
      <member refid="d9/d28/a06351_1a07a81da9280a940ca96b345fd75cc814" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>isStatic</name></member>
      <member refid="d9/d28/a06351_1aa18c7092b9c6c4394a6edfeb185f2114" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>lightingModelId</name></member>
      <member refid="d9/d28/a06351_1a62d5a49b36d90f5d0f4cb8ef2333f6f7" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>m_programFlags</name></member>
      <member refid="d9/da0/a06359_1a1dfad853886ec783dc12f49701632150" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>m_sceneFlags</name></member>
      <member refid="d9/d28/a06351_1a8e1dc2ee4bc6e7f843caf6a6cf8e0191" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>m_shaderFlags</name></member>
      <member refid="d2/de6/a06355_1aee7ca1762b576e2c122e6e526a12192a" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>morphTargetsOffset</name></member>
      <member refid="d9/d28/a06351_1a66ba2d3a7bb37875aa9431060a2700b9" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>pass</name></member>
      <member refid="d9/d28/a06351_1acbd79cf0102ba557c72f5f917619a68f" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>passLayerIndex</name></member>
      <member refid="d9/da0/a06359_1a0d59a3d9de048c7a8b6a9c6e3b1f49ca" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>patchVertices</name></member>
      <member refid="d9/da0/a06359_1a88f960eb8d2582856bd80f65002c2e34" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>PipelineFlags</name></member>
      <member refid="d9/da0/a06359_1a3061380bb2bf46751022c009ebce77ac" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>PipelineFlags</name></member>
      <member refid="d9/da0/a06359_1a11779af7e3e81893e7020805513d1043" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>PipelineFlags</name></member>
      <member refid="d9/d28/a06351_1a843d2e2e6c0d6fe35376ded2a6b3316f" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>PipelineHiHashDetails</name></member>
      <member refid="d2/de6/a06355_1a235debefa0f618bf2bf66b3233237e10" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>PipelineLoHashDetails</name></member>
      <member refid="d9/da0/a06359_1a98434d111c8a331f820f9e1366c15ca8" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>renderPassType</name></member>
      <member refid="d9/d28/a06351_1a8a69feec9c575bd0b7d8ab604a22e42f" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>submesh</name></member>
      <member refid="d2/de6/a06355_1ac8900b7c06bace8c835760065279e164" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>submeshData</name></member>
      <member refid="d9/d28/a06351_1afc8e9ffb9b9b27b929f3e83f2cb1d672" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>submeshDataBindings</name></member>
      <member refid="d9/d28/a06351_1a41047dbde3b9b3a4368e76b012bc491b" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>textures</name></member>
      <member refid="d9/da0/a06359_1a82e267d99f0d0f3103eb76e4ab1a22b2" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>topology</name></member>
      <member refid="d9/da0/a06359_1a31f8d7939d1e6d136b575842dfd77406" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>usesColour</name></member>
      <member refid="d9/da0/a06359_1ae02196f9e6c9e4230a461b1aa2f64d56" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>usesGeometry</name></member>
      <member refid="d9/da0/a06359_1a6f6bd40d83737eb45228e6595341a314" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>usesMesh</name></member>
      <member refid="d9/da0/a06359_1a613171a2acd52485847f15c2b5cc64a2" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>usesOpacity</name></member>
      <member refid="d9/da0/a06359_1a70b8ed8bf1a47331d6d88fdad5794af5" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>usesTask</name></member>
      <member refid="d9/da0/a06359_1a3af7c248febed9f22a50a37b4cfd087b" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>usesTessellation</name></member>
      <member refid="d9/da0/a06359_1a340f5bc05873d62be4953020f7e9b558" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>usesViewSpace</name></member>
      <member refid="d9/da0/a06359_1a2d742b1e2ef9db5578697cbc81e5829d" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>usesWorldSpace</name></member>
      <member refid="d9/da0/a06359_1a3090905b1bb03f4ad746bd23335ec6a1" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>writeDepth</name></member>
      <member refid="d9/da0/a06359_1a3cf0412e75a50744441a7701752e8399" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>writeEnvironmentMap</name></member>
      <member refid="d9/da0/a06359_1a333b33e0571ab053980cc7d6e8f049f1" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>writePicking</name></member>
      <member refid="d9/da0/a06359_1a6f5db81de55a36b401ce830a4b3eab3e" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>writeShadowMap</name></member>
      <member refid="d9/da0/a06359_1a7f565898aadf535c753a335ec208bc89" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>writeShadowRSM</name></member>
      <member refid="d9/da0/a06359_1a623df4c62223759acf42e6cd27f5b8bd" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>writeShadowVSM</name></member>
      <member refid="d9/da0/a06359_1aaf9b42071050adc2bf7a5282ee2074a1" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>writeVelocity</name></member>
      <member refid="d9/da0/a06359_1a6679d033f1044c954d7cd11c6f0fdee3" prot="public" virt="non-virtual"><scope>castor3d::PipelineFlags</scope><name>writeVisibility</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
