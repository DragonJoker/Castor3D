<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="df/d90/a06587" kind="class" language="C++" prot="public">
    <compoundname>castor3d::RenderTechniqueNodesPass</compoundname>
    <basecompoundref refid="d5/d96/a06531" prot="public" virt="non-virtual">castor3d::RenderNodesPass</basecompoundref>
    <basecompoundref refid="da/d07/a06583" prot="public" virt="non-virtual">castor3d::RenderTechniquePass</basecompoundref>
    <derivedcompoundref refid="d8/dcb/a06367" prot="public" virt="non-virtual">castor3d::DepthPass</derivedcompoundref>
    <derivedcompoundref refid="da/d78/a06259" prot="public" virt="non-virtual">castor3d::ForwardRenderTechniquePass</derivedcompoundref>
    <derivedcompoundref refid="d1/d96/a06787" prot="public" virt="non-virtual">castor3d::TransparentPass</derivedcompoundref>
    <derivedcompoundref refid="dc/d1d/a06379" prot="public" virt="non-virtual">castor3d::VisibilityPass</derivedcompoundref>
    <includes local="no">RenderTechniquePass.hpp</includes>
    <sectiondef kind="user-defined">
      <memberdef kind="function" id="df/d90/a06587_1a2d8669138c0a4afe55bae1207a2b181a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d8/d4f/a03703" kindref="compound">Engine</ref> *</type>
        <definition>Engine * castor3d::RenderTechniqueNodesPass::getEngine</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getEngine</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::getEngine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Accesseurs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="360" column="9" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="360" bodyend="363"/>
        <references refid="da/d07/a06583_1a60745668e77f3a101568329c0dae63ad">castor3d::RenderTechniquePass::getEngine</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1ad25148ab272e79c3831fde6d4e94197a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/dc2/a07135" kindref="compound">Scene</ref> const &amp;</type>
        <definition>Scene const  &amp; castor3d::RenderTechniqueNodesPass::getScene</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getScene</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::getScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="365" column="14" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="365" bodyend="368"/>
        <references refid="da/d07/a06583_1a6ba2094bb67a628c7f4119b332ceda8c" compoundref="d8/ddf/a01238" startline="223" endline="226">castor3d::RenderTechniquePass::getScene</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1ac5f47aa03eeafd5718aedbeb70968c7e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d8/dd8/a06575" kindref="compound">RenderTechnique</ref> const &amp;</type>
        <definition>RenderTechnique const  &amp; castor3d::RenderTechniqueNodesPass::getTechnique</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTechnique</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::getTechnique</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="370" column="24" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="370" bodyend="373"/>
        <references refid="da/d07/a06583_1a112ccf5e3799e769363d5442397d4493" compoundref="d8/ddf/a01238" startline="233" endline="236">castor3d::RenderTechniquePass::getTechnique</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1adc3c8b7201636e87c2892b42a562861d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/db4/a03695" kindref="compound">DebugConfig</ref> &amp;</type>
        <definition>DebugConfig &amp; castor3d::RenderTechniqueNodesPass::getDebugConfig</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDebugConfig</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::getDebugConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="375" column="14" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="375" bodyend="378"/>
        <references refid="da/d07/a06583_1a08fa9497873f113e40605e975c7b5117">castor3d::RenderTechniquePass::getDebugConfig</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a740871227a3e33ffc18a7d2f78453e97" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type><ref refid="db/da7/a05911" kindref="compound">ClustersConfig</ref> const *</type>
        <definition>ClustersConfig const  * castor3d::RenderTechniqueNodesPass::getClustersConfig</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>getClustersConfig</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::getClustersConfig</qualifiedname>
        <reimplements refid="da/d07/a06583_1a4b39c4f2753817b4d126451cb80f05e3">getClustersConfig</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="380" column="23" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="380" bodyend="383"/>
        <references refid="df/d90/a06587_1a11741651404b6ce5cee65d13a8eb27f1" compoundref="d8/ddf/a01238" startline="431" endline="431">m_clustersConfig</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a2102e35d08111ec0ab9e012315008a91" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderTechniqueNodesPass::hasSsao</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>hasSsao</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::hasSsao</qualifiedname>
        <reimplements refid="da/d07/a06583_1a503e1f7d3dc179da0b7be27a53dd9e14">hasSsao</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="385" column="6" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="385" bodyend="388"/>
        <references refid="dd/daa/a06683_1a6e7398a8f5b1db7a06abccc148a2ed37" compoundref="d8/d0d/a01280" startline="25" endline="25">castor3d::SsaoConfig::enabled</references>
        <references refid="df/d90/a06587_1a08b3ae729506a1519db28fedb72d4ffc" compoundref="d8/ddf/a01238" startline="429" endline="429">m_ssao</references>
        <references refid="df/d90/a06587_1a4fec806e2bbe79cff353c1eb31f9df98" compoundref="d8/ddf/a01238" startline="428" endline="428">m_ssaoConfig</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a2ef961d2747018a20f5d27ce02ea020d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderTechniqueNodesPass::areDebugTargetsEnabled</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>areDebugTargetsEnabled</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::areDebugTargetsEnabled</qualifiedname>
        <reimplements refid="d5/d96/a06531_1a4b46cd261a69c9e9a06436d5d6960520">areDebugTargetsEnabled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="390" column="6" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="390" bodyend="393"/>
        <references refid="da/d07/a06583_1adf86161a59bc8f4f67e5f03cf2781ef6">castor3d::RenderTechniquePass::areDebugTargetsEnabled</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="df/d90/a06587_1afbe825590c3e35ef7c75b237f333a106" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/dc3/a06951" kindref="compound">Camera</ref> *</type>
        <definition>Camera* castor3d::RenderTechniqueNodesPass::m_camera</definition>
        <argsstring></argsstring>
        <name>m_camera</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::m_camera</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="426" column="9" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="426" bodyend="426"/>
      </memberdef>
      <memberdef kind="variable" id="df/d90/a06587_1aee5609f0b4a4a96e1d9d0f770dc08dc0" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1ab570f77ed4b8ad316f3ea34ae87476dd" kindref="member">ShaderFlags</ref></type>
        <definition>ShaderFlags castor3d::RenderTechniqueNodesPass::m_shaderFlags</definition>
        <argsstring></argsstring>
        <name>m_shaderFlags</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::m_shaderFlags</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="427" column="13" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="427" bodyend="427"/>
        <referencedby refid="df/d90/a06587_1ab6319421d389ebf2f17c5c199625525d" compoundref="d8/ddf/a01238" startline="326" endline="329">getShaderFlags</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/d90/a06587_1a4fec806e2bbe79cff353c1eb31f9df98" prot="protected" static="no" mutable="no">
        <type><ref refid="dd/daa/a06683" kindref="compound">SsaoConfig</ref> const  *</type>
        <definition>SsaoConfig const* castor3d::RenderTechniqueNodesPass::m_ssaoConfig</definition>
        <argsstring></argsstring>
        <name>m_ssaoConfig</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::m_ssaoConfig</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="428" column="19" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="428" bodyend="428"/>
        <referencedby refid="df/d90/a06587_1a2102e35d08111ec0ab9e012315008a91" compoundref="d8/ddf/a01238" startline="385" endline="388">hasSsao</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/d90/a06587_1a08b3ae729506a1519db28fedb72d4ffc" prot="protected" static="no" mutable="no">
        <type><ref refid="d1/d95/a06703" kindref="compound">Texture</ref> const  *</type>
        <definition>Texture const* castor3d::RenderTechniqueNodesPass::m_ssao</definition>
        <argsstring></argsstring>
        <name>m_ssao</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::m_ssao</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="429" column="16" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="429" bodyend="429"/>
        <referencedby refid="df/d90/a06587_1a2102e35d08111ec0ab9e012315008a91" compoundref="d8/ddf/a01238" startline="385" endline="388">hasSsao</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/d90/a06587_1ae2e44664c1136e22071e1bd833860307" prot="protected" static="no" mutable="no">
        <type><ref refid="dd/d3d/a05967" kindref="compound">IndirectLightingData</ref></type>
        <definition>IndirectLightingData castor3d::RenderTechniqueNodesPass::m_indirectLighting</definition>
        <argsstring></argsstring>
        <name>m_indirectLighting</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::m_indirectLighting</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="430" column="22" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d90/a06587_1a11741651404b6ce5cee65d13a8eb27f1" prot="protected" static="no" mutable="no">
        <type><ref refid="db/da7/a05911" kindref="compound">ClustersConfig</ref> const  *</type>
        <definition>ClustersConfig const* castor3d::RenderTechniqueNodesPass::m_clustersConfig</definition>
        <argsstring></argsstring>
        <name>m_clustersConfig</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::m_clustersConfig</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="431" column="23" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="431" bodyend="431"/>
        <referencedby refid="df/d90/a06587_1a740871227a3e33ffc18a7d2f78453e97" compoundref="d8/ddf/a01238" startline="380" endline="383">getClustersConfig</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="df/d90/a06587_1a243fd7dd0b0579a9bcca25af943c039e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::RenderTechniqueNodesPass::RenderTechniqueNodesPass</definition>
        <argsstring>(RenderTechnique *parent, crg::FramePass const &amp;pass, crg::GraphContext &amp;context, crg::RunnableGraph &amp;graph, RenderDevice const &amp;device, castor::String const &amp;typeName, crg::ImageViewIdArray targetImage, crg::ImageViewIdArray targetDepth, RenderNodesPassDesc const &amp;renderPassDesc, RenderTechniquePassDesc const &amp;techniquePassDesc)</argsstring>
        <name>RenderTechniqueNodesPass</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::RenderTechniqueNodesPass</qualifiedname>
        <param>
          <type><ref refid="d8/dd8/a06575" kindref="compound">RenderTechnique</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>crg::FramePass const &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>crg::GraphContext &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>crg::RunnableGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>crg::ImageViewIdArray</type>
          <declname>targetImage</declname>
        </param>
        <param>
          <type>crg::ImageViewIdArray</type>
          <declname>targetDepth</declname>
        </param>
        <param>
          <type><ref refid="db/d35/a06527" kindref="compound">RenderNodesPassDesc</ref> const &amp;</type>
          <declname>renderPassDesc</declname>
        </param>
        <param>
          <type><ref refid="de/d5f/a06579" kindref="compound">RenderTechniquePassDesc</ref> const &amp;</type>
          <declname>techniquePassDesc</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parent</parametername>
</parameternamelist>
<parameterdescription>
<para>La technique parente. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>La frame pass parente. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Le contexte de rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">graph</parametername>
</parameternamelist>
<parameterdescription>
<para>Le runnable graph. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>Le device GPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom du type de la passe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">targetImage</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;image dans laquelle cette passe fait son rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">targetDepth</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;image de profondeur dans laquelle cette passe fait son rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">renderPassDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données de construction de passe de rendu de scène. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">techniquePassDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données de construction de passe de rendu de technique. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="283" column="9"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1aea65dbdf092631033fd092587ef5c593" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::doAccept</definition>
        <argsstring>(castor3d::RenderTechniqueVisitor &amp;visitor) override</argsstring>
        <name>doAccept</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAccept</qualifiedname>
        <reimplements refid="da/d07/a06583_1ae3878cfc303a971a68902886fc11db7e">doAccept</reimplements>
        <param>
          <type><ref refid="d1/d7f/a06591" kindref="compound">castor3d::RenderTechniqueVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;acceptation de visiteur.   </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>Le ... visiteur.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="397" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a70f74851f1447085b9dd9e7a2ffcc8b2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref></type>
        <definition>C3D_API ProgramFlags castor3d::RenderTechniqueNodesPass::doAdjustProgramFlags</definition>
        <argsstring>(ProgramFlags flags) const override</argsstring>
        <name>doAdjustProgramFlags</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAdjustProgramFlags</qualifiedname>
        <reimplements refid="d5/d96/a06531_1ad8c1a88c258efc8678041251077c101a">doAdjustProgramFlags</reimplements>
        <param>
          <type><ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="398" column="22"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a469e206a1f08ee5f74a7f5cb28b64348" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
        <definition>C3D_API SceneFlags castor3d::RenderTechniqueNodesPass::doAdjustSceneFlags</definition>
        <argsstring>(SceneFlags flags) const override</argsstring>
        <name>doAdjustSceneFlags</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAdjustSceneFlags</qualifiedname>
        <reimplements refid="d5/d96/a06531_1ac1a751301d940ffa1f049b1192581f5b">doAdjustSceneFlags</reimplements>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="399" column="20"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1afcb7fd111b1e67add4404feb39b53268" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::doAddEnvBindings</definition>
        <argsstring>(ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, uint32_t &amp;index) const</argsstring>
        <name>doAddEnvBindings</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAddEnvBindings</qualifiedname>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="400" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1af9ca6a7465fa273e533811c3085c1ef4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::doAddGIBindings</definition>
        <argsstring>(ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, uint32_t &amp;index) const</argsstring>
        <name>doAddGIBindings</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAddGIBindings</qualifiedname>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="402" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1ad23c7ed1442581a622443452f1931dd2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::doAddPassSpecificsBindings</definition>
        <argsstring>(ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, uint32_t &amp;index) const</argsstring>
        <name>doAddPassSpecificsBindings</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAddPassSpecificsBindings</qualifiedname>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="404" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a86e01cee1dcbf221310745a2618b2f50" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::doAddEnvDescriptor</definition>
        <argsstring>(ashes::WriteDescriptorSetArray &amp;descriptorWrites, uint32_t &amp;index) const</argsstring>
        <name>doAddEnvDescriptor</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAddEnvDescriptor</qualifiedname>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="406" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1afb1cccfaf08300ab20ea186aaedf58ed" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::doAddGIDescriptor</definition>
        <argsstring>(ashes::WriteDescriptorSetArray &amp;descriptorWrites, uint32_t &amp;index) const</argsstring>
        <name>doAddGIDescriptor</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAddGIDescriptor</qualifiedname>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="408" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a2a2d6038c5b58c420b3e04d08585ed8f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::doAddPassSpecificsDescriptor</definition>
        <argsstring>(ashes::WriteDescriptorSetArray &amp;descriptorWrites, uint32_t &amp;index) const</argsstring>
        <name>doAddPassSpecificsDescriptor</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doAddPassSpecificsDescriptor</qualifiedname>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="410" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d90/a06587_1a6c855afb6d9815e0b336f529bbd1c3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::accept</definition>
        <argsstring>(RenderTechniqueVisitor &amp;visitor) override</argsstring>
        <name>accept</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::accept</qualifiedname>
        <reimplements refid="da/d07/a06583_1a4c9d269118ce29a21fdb17eabd6e9070">accept</reimplements>
        <reimplementedby refid="dc/d1d/a06379_1a541ee6756f5e5c1fa35430c5dfbe6853">accept</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1a005f7ca342ce8a283f4cee773fd42a30">accept</reimplementedby>
        <param>
          <type><ref refid="d1/d7f/a06591" kindref="compound">RenderTechniqueVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;acceptation de visiteur.   </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>Le ... visiteur.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="298" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a39bd7dead3abc23c3214264386eca235" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::update</definition>
        <argsstring>(CpuUpdater &amp;updater) override</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::update</qualifiedname>
        <reimplements refid="d5/d96/a06531_1a63e0a2137b063c8eb22eb7043d4edc2b">update</reimplements>
        <param>
          <type><ref refid="dc/d23/a06511" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Met à jour la passe de rendu, au niveau CPU.   </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données d&apos;update.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="302" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1ab2fe0baeee06fefc299368c0d5f9a3c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref></type>
        <definition>C3D_API PipelineFlags castor3d::RenderTechniqueNodesPass::createPipelineFlags</definition>
        <argsstring>(PassComponentCombine const &amp;passComponents, SubmeshComponentCombine const &amp;submeshComponents, BlendMode colourBlendMode, BlendMode alphaBlendMode, RenderPassTypeID renderPassTypeId, LightingModelID lightingModelId, BackgroundModelID backgroundModelId, VkCompareOp alphaFunc, VkCompareOp blendAlphaFunc, TextureCombine const &amp;textures, ProgramFlags const &amp;programFlags, SceneFlags const &amp;sceneFlags, VkPrimitiveTopology topology, bool isFrontCulled, uint32_t passLayerIndex, GpuBufferOffsetT&lt; castor::Point4f &gt; const &amp;morphTargets, SubmeshRenderData *submeshData) const override</argsstring>
        <name>createPipelineFlags</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::createPipelineFlags</qualifiedname>
        <reimplements refid="da/d07/a06583_1a5b21a3584dc629f8314fdda2b065f83a">createPipelineFlags</reimplements>
        <param>
          <type><ref refid="d1/dc1/a04099" kindref="compound">PassComponentCombine</ref> const &amp;</type>
          <declname>passComponents</declname>
        </param>
        <param>
          <type><ref refid="d1/db0/a05447" kindref="compound">SubmeshComponentCombine</ref> const &amp;</type>
          <declname>submeshComponents</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>colourBlendMode</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2ec340d0748bbfd3b7d9f067f949b27d" kindref="member">BlendMode</ref></type>
          <declname>alphaBlendMode</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1afb9303568da281f04daae1254eca2870" kindref="member">RenderPassTypeID</ref></type>
          <declname>renderPassTypeId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a2f2cd84840221bf55c29f1919a0cae4e" kindref="member">LightingModelID</ref></type>
          <declname>lightingModelId</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a326a2edfed57262c18e7993c9bd9feee" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>alphaFunc</declname>
        </param>
        <param>
          <type>VkCompareOp</type>
          <declname>blendAlphaFunc</declname>
        </param>
        <param>
          <type><ref refid="d9/d0d/a03995" kindref="compound">TextureCombine</ref> const &amp;</type>
          <declname>textures</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1af5a65b91a7a6659a75e289b1fdc8822e" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>programFlags</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1ab99114b4423d4510b6ad76df8f6eec2a" kindref="member">SceneFlags</ref> const &amp;</type>
          <declname>sceneFlags</declname>
        </param>
        <param>
          <type>VkPrimitiveTopology</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFrontCulled</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>passLayerIndex</declname>
        </param>
        <param>
          <type><ref refid="d7/d76/a03451" kindref="compound">GpuBufferOffsetT</ref>&lt; castor::Point4f &gt; const &amp;</type>
          <declname>morphTargets</declname>
        </param>
        <param>
          <type><ref refid="d6/d66/a05595" kindref="compound">SubmeshRenderData</ref> *</type>
          <declname>submeshData</declname>
        </param>
        <briefdescription>
<para>Crée les indicateurs de pipeline pour la configuration donnée.   </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">passComponents</parametername>
</parameternamelist>
<parameterdescription>
<para>La combinaison de composants de passe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submeshComponents</parametername>
</parameternamelist>
<parameterdescription>
<para>La combinaison de composants de submesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">colourBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de mélange de couleurs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaBlendMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Le mode de mélange de l&apos;alpha </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">renderPassTypeId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du type de render pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lightingModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du modèle d&apos;éclairage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;ID du modèle de fond. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alphaFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>La fonction de comparaison de l&apos;alpha (pour les noeuds opaques). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blendAlphaFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>La fonction de comparaison de l&apos;alpha (pour les noeuds transparents). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">textures</parametername>
</parameternamelist>
<parameterdescription>
<para>La configuration des textures. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">programFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Une combinaison de ProgramFlag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sceneFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs relatifs à la scène. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">topology</parametername>
</parameternamelist>
<parameterdescription>
<para>La topologie de rendu. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isFrontCulled</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> pour front face culling, <computeroutput>false</computeroutput> pour back face culling. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">passLayerIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;indice de la couche de la passe de matériau. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">morphTargets</parametername>
</parameternamelist>
<parameterdescription>
<para>Le buffer de morph targets. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submeshData</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données de rendu du submesh, s&apos;il en a.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="306" column="23"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1ab6319421d389ebf2f17c5c199625525d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d9/dba/a02278_1ab570f77ed4b8ad316f3ea34ae87476dd" kindref="member">ShaderFlags</ref></type>
        <definition>C3D_API ShaderFlags castor3d::RenderTechniqueNodesPass::getShaderFlags</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>getShaderFlags</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::getShaderFlags</qualifiedname>
        <reimplements refid="d5/d96/a06531_1aec5e83d0453393c6f5515d65aacf892a">getShaderFlags</reimplements>
        <reimplementedby refid="dc/d1d/a06379_1afd1ebc446fc4cd027eac8943126b52b5">getShaderFlags</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="326" column="21" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="326" bodyend="329"/>
        <references refid="df/d90/a06587_1aee5609f0b4a4a96e1d9d0f770dc08dc0" compoundref="d8/ddf/a01238" startline="427" endline="427">m_shaderFlags</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1aed27aa874e94c2eff7254317919fe48c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechniqueNodesPass::countNodes</definition>
        <argsstring>(RenderInfo &amp;info) const noexcept override</argsstring>
        <name>countNodes</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::countNodes</qualifiedname>
        <reimplements refid="da/d07/a06583_1aa7ea9068fa2b66188daf800608c73bfe">countNodes</reimplements>
        <param>
          <type><ref refid="d3/d9c/a06419" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Enregistre les comptes de noeuds dans le <ref refid="d3/d9c/a06419" kindref="compound">RenderInfo</ref> donné.   </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les comptes.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="333" column="14" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="333" bodyend="336"/>
        <references refid="d5/d96/a06531_1a5a30b41e9d2d94465c894df550a9d43c">castor3d::RenderNodesPass::countNodes</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1acb96dc761bd7c12361bb79a02776c4a5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderTechniqueNodesPass::areValidPassFlags</definition>
        <argsstring>(PassComponentCombine const &amp;passFlags) const noexcept override</argsstring>
        <name>areValidPassFlags</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::areValidPassFlags</qualifiedname>
        <reimplements refid="da/d07/a06583_1a5ba1bdd5b73ed3f33b0139fa3a8d334b">areValidPassFlags</reimplements>
        <param>
          <type><ref refid="d1/dc1/a04099" kindref="compound">PassComponentCombine</ref> const &amp;</type>
          <declname>passFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Accesseurs.   </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="340" column="14" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="340" bodyend="343"/>
        <references refid="d5/d96/a06531_1af2bce197fda484e731721797d152aa6c">castor3d::RenderNodesPass::areValidPassFlags</references>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1abf6a5401c10771676dba9361ce352c6d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderTechniqueNodesPass::isPassEnabled</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>isPassEnabled</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::isPassEnabled</qualifiedname>
        <reimplements refid="d5/d96/a06531_1aa42510e405f5f5ce10867c6d4c064f0a">isPassEnabled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="347" column="14" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="347" bodyend="350"/>
        <references refid="d5/d96/a06531_1aa42510e405f5f5ce10867c6d4c064f0a">castor3d::RenderNodesPass::isPassEnabled</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="df/d90/a06587_1a38c83e1905fd89fa17654ebbf9b7ab86" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechniqueNodesPass::doFillAdditionalBindings</definition>
        <argsstring>(PipelineFlags const &amp;flags, ashes::VkDescriptorSetLayoutBindingArray &amp;bindings) const override</argsstring>
        <name>doFillAdditionalBindings</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doFillAdditionalBindings</qualifiedname>
        <reimplements refid="d5/d96/a06531_1aba7e200b7926ceddaef34bff547f7337">doFillAdditionalBindings</reimplements>
        <reimplementedby refid="dc/d1d/a06379_1a4e5ec0f89f342f1c9d03d9959f222dc0">doFillAdditionalBindings</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1ab2abd3ba498309c50ec568de3a59ee5d">doFillAdditionalBindings</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <briefdescription>
<para>Remplit les attaches de layout de descripteurs spécifiques à une passe de rendu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les attaches additionnelles. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="416" column="6"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a4739eb57e85af513a6bb3e6a33cd5fe6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechniqueNodesPass::doFillAdditionalDescriptor</definition>
        <argsstring>(PipelineFlags const &amp;flags, ashes::WriteDescriptorSetArray &amp;descriptorWrites, ShadowMapLightTypeArray const &amp;shadowMaps, ShadowBuffer const *shadowBuffer) override</argsstring>
        <name>doFillAdditionalDescriptor</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doFillAdditionalDescriptor</qualifiedname>
        <reimplements refid="d5/d96/a06531_1a0963f2ac554b8367cfe1dbbb54a2e6df">doFillAdditionalDescriptor</reimplements>
        <reimplementedby refid="d1/d96/a06787_1a0118a6b6da80c63742d7c8e11beabbe8">doFillAdditionalDescriptor</reimplementedby>
        <reimplementedby refid="dc/d1d/a06379_1a83ee2c93e356bc9842170396e1b9486f">doFillAdditionalDescriptor</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a1e0853cf26ea6ce64763fa7f60d50b00" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type><ref refid="d2/dab/a07363" kindref="compound">ShadowBuffer</ref> const *</type>
          <declname>shadowBuffer</declname>
        </param>
        <briefdescription>
<para>Initialise l&apos;ensemble de descripteurs additionnels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">descriptorWrites</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les descriptor writes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowMaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Les shadow maps. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Le buffer contenant les données de configuration des ombres. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="418" column="6"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a719cc90715a348ed3a0a99fca93ca0ef" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ashes::PipelineDepthStencilStateCreateInfo</type>
        <definition>ashes::PipelineDepthStencilStateCreateInfo castor3d::RenderTechniqueNodesPass::doCreateDepthStencilState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doCreateDepthStencilState</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doCreateDepthStencilState</qualifiedname>
        <reimplements refid="d5/d96/a06531_1a57b12814d0acb734bd8dde18c00c8677">doCreateDepthStencilState</reimplements>
        <reimplementedby refid="dc/d1d/a06379_1a9933119a6c802349646cabb3d81b33dc">doCreateDepthStencilState</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1a66a1193830371815c6449cac35756345">doCreateDepthStencilState</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Crée l&apos;état de profondeur et stencil. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="422" column="44"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1abb20a657226949e0aa95085dbc747017" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ashes::PipelineColorBlendStateCreateInfo</type>
        <definition>ashes::PipelineColorBlendStateCreateInfo castor3d::RenderTechniqueNodesPass::doCreateBlendState</definition>
        <argsstring>(PipelineFlags const &amp;flags) const override</argsstring>
        <name>doCreateBlendState</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::doCreateBlendState</qualifiedname>
        <reimplements refid="d5/d96/a06531_1a282a48ba3376468aa2d6145f15dc916f">doCreateBlendState</reimplements>
        <reimplementedby refid="dc/d1d/a06379_1a8a11ab062d5d7c78baf65043c46bf7d5">doCreateBlendState</reimplementedby>
        <reimplementedby refid="d1/d96/a06787_1a1bdbac2bc43c236e3ee53f13dfc85194">doCreateBlendState</reimplementedby>
        <param>
          <type><ref refid="d9/da0/a06359" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Crée l&apos;état de mélange des couleurs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Les indicateurs de pipeline. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="423" column="42"/>
      </memberdef>
      <memberdef kind="function" id="df/d90/a06587_1a63e0a2137b063c8eb22eb7043d4edc2b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::RenderNodesPass::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::RenderTechniqueNodesPass::update</qualifiedname>
        <reimplements refid="d5/d96/a06531_1a63e0a2137b063c8eb22eb7043d4edc2b">update</reimplements>
        <param>
          <type><ref refid="dc/d23/a06511" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Met à jour la passe de rendu, au niveau CPU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>Les données d&apos;update. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Render/RenderTechniquePass.hpp" line="414" column="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>RenderQueueHolder</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="6">
        <label>SceneCullerHolder</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="10">
        <label>castor3d::DepthPass</label>
        <link refid="d8/dcb/a06367"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>castor3d::ForwardRenderTechniquePass</label>
        <link refid="da/d78/a06259"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::RenderNodesPass</label>
        <link refid="d5/d96/a06531"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="private-inheritance">
        </childnode>
        <childnode refid="7" relation="private-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::RenderTechniqueNodesPass</label>
        <link refid="df/d90/a06587"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>castor3d::RenderTechniquePass</label>
        <link refid="da/d07/a06583"/>
      </node>
      <node id="12">
        <label>castor3d::TransparentPass</label>
        <link refid="d1/d96/a06787"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>castor3d::VisibilityPass</label>
        <link refid="dc/d1d/a06379"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="8">
        <label>crg::RenderPass</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="35">
        <label>Animable</label>
        <link refid="d2/d7a/a03115"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
        <childnode refid="37" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>castor::ChangeTrackedT&lt; castor::RangedValue&lt; uint32_t &gt; &gt;</label>
        <link refid="d2/def/a08159"/>
        <childnode refid="47" relation="template-instance">
          <edgelabel>&lt; castor::RangedValue&lt; uint32_t &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>castor::Coords&lt; uint32_t, 2 &gt;</label>
        <link refid="d9/d6a/a09103"/>
        <childnode refid="23" relation="template-instance">
          <edgelabel>&lt; uint32_t, 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>castor::DataHolderT&lt; SizeData &gt;</label>
        <link refid="da/d50/a08167"/>
        <childnode refid="21" relation="template-instance">
          <edgelabel>&lt; SizeData &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>castor::FlagCombination&lt; ComponentModeFlag &gt;</label>
        <link refid="dd/dbb/a08207"/>
        <childnode refid="18" relation="template-instance">
          <edgelabel>&lt; ComponentModeFlag &gt;</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>castor::FlagCombination&lt; RenderFilter &gt;</label>
        <link refid="dd/dbb/a08207"/>
        <childnode refid="18" relation="template-instance">
          <edgelabel>&lt; RenderFilter &gt;</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>castor::FlagCombination&lt; ShaderFlag &gt;</label>
        <link refid="dd/dbb/a08207"/>
        <childnode refid="18" relation="template-instance">
          <edgelabel>&lt; ShaderFlag &gt;</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>castor3d::GBufferT&lt; LpvTexture &gt;</label>
        <link refid="d0/d22/a05963"/>
        <childnode refid="56" relation="private-inheritance">
        </childnode>
        <childnode refid="57" relation="template-instance">
          <edgelabel>&lt; LpvTexture &gt;</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>castor::GroupChangeTrackedT&lt; ClusterSplitScheme &gt;</label>
        <link refid="d2/d4c/a08211"/>
        <childnode refid="60" relation="template-instance">
          <edgelabel>&lt; ClusterSplitScheme &gt;</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>castor::GroupChangeTrackedT&lt; bool &gt;</label>
        <link refid="d2/d4c/a08211"/>
        <childnode refid="60" relation="template-instance">
          <edgelabel>&lt; bool &gt;</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>castor::GroupChangeTrackedT&lt; float &gt;</label>
        <link refid="d2/d4c/a08211"/>
        <childnode refid="60" relation="template-instance">
          <edgelabel>&lt; float &gt;</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>castor::OwnedBy&lt; AnimableHandlerT &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; AnimableHandlerT &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>castor::OwnedBy&lt; Scene &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Scene &gt;</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>castor::RangedValue&lt; int32_t &gt;</label>
        <link refid="d8/de9/a09211"/>
        <childnode refid="45" relation="template-instance">
          <edgelabel>&lt; int32_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>castor::RangedValue&lt; uint32_t &gt;</label>
        <link refid="d8/de9/a09211"/>
        <childnode refid="45" relation="template-instance">
          <edgelabel>&lt; uint32_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>RenderQueueHolder</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="6">
        <label>SceneCullerHolder</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="30">
        <label>castor::SignalT&lt; BackgroundChangedFunc &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; BackgroundChangedFunc &gt;</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>castor::SignalT&lt; OnCameraChangedFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; OnCameraChangedFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>castor::SignalT&lt; OnSceneNodeReparentFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; OnSceneNodeReparentFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>castor::SignalT&lt; OnSceneUpdateFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; OnSceneUpdateFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>castor::SignalT&lt; RenderNodesPassChangeSignalFunction &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; RenderNodesPassChangeSignalFunction &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::basic_string&lt; xchar &gt;</label>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; xchar &gt;</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>castor3d::AnimableT&lt; AnimableHandlerT &gt;</label>
        <link refid="d2/d7a/a03115"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>castor3d::Camera</label>
        <link refid="d2/dc3/a06951"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>onGpuChanged</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>castor3d::CameraUbo</label>
        <link refid="d1/ddf/a07743"/>
      </node>
      <node id="58">
        <label>castor3d::ClustersConfig</label>
        <link refid="db/da7/a05911"/>
        <childnode refid="59" relation="usage">
          <edgelabel>enableBVHWarpOptimisation</edgelabel>
          <edgelabel>enablePostAssignSort</edgelabel>
          <edgelabel>enableReduceWarpOptimisation</edgelabel>
          <edgelabel>limitClustersToLightsAABB</edgelabel>
          <edgelabel>parseDepthBuffer</edgelabel>
          <edgelabel>sortLights</edgelabel>
          <edgelabel>useLightsBVH</edgelabel>
          <edgelabel>useSpotBoundingCone</edgelabel>
          <edgelabel>useSpotTightBoundingBox</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>splitScheme</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>bias</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>castor3d::GBufferBase</label>
        <link refid="d8/d33/a05959"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_device</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>castor3d::GBufferT&lt; TextureEnumT &gt;</label>
        <link refid="d0/d22/a05963"/>
        <childnode refid="56" relation="private-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>castor3d::IndirectLightingData</label>
        <link refid="dd/d3d/a05967"/>
        <childnode refid="51" relation="usage">
          <edgelabel>lpvConfigUbo</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>llpvConfigUbo</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>vctConfigUbo</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>lpvResult</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>vctFirstBounce</edgelabel>
          <edgelabel>vctSecondaryBounce</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>castor3d::LayeredLpvGridConfigUbo</label>
        <link refid="d6/d47/a07775"/>
      </node>
      <node id="54">
        <label>castor3d::LightVolumePassResult</label>
        <link refid="dc/d72/a06019"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>castor3d::LpvGridConfigUbo</label>
        <link refid="da/dff/a07783"/>
      </node>
      <node id="32">
        <label>castor3d::MovableObject</label>
        <link refid="da/d09/a07047"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_sceneNode</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>m_notifyIndex</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>castor3d::RenderDevice</label>
        <link refid="dc/d32/a06415"/>
        <childnode refid="13" relation="usage">
          <edgelabel>renderSystem</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::RenderNodesPass</label>
        <link refid="d5/d96/a06531"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="private-inheritance">
        </childnode>
        <childnode refid="7" relation="private-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>onSortNodes</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_device</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_renderSystem</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_cameraUbo</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_category</edgelabel>
          <edgelabel>m_typeName</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_filters</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_size</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_sceneUbo</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_componentsMask</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>castor3d::RenderSystem</label>
        <link refid="d5/d4e/a06559"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>castor3d::RenderTechnique</label>
        <link refid="d8/dd8/a06575"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::RenderTechniqueNodesPass</label>
        <link refid="df/d90/a06587"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_camera</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_shaderFlags</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_ssaoConfig</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_ssao</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_indirectLighting</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_clustersConfig</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>castor3d::RenderTechniquePass</label>
        <link refid="da/d07/a06583"/>
        <childnode refid="27" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_scene</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>castor3d::Scene</label>
        <link refid="dc/dc2/a07135"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>onUpdate</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>onSetBackground</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>CameraRootNode</edgelabel>
          <edgelabel>ObjectRootNode</edgelabel>
          <edgelabel>RootNode</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>castor3d::SceneNode</label>
        <link refid="d4/dc4/a07255"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>onParentChanged</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>castor3d::SceneUbo</label>
        <link refid="d5/de1/a07827"/>
      </node>
      <node id="43">
        <label>castor3d::SsaoConfig</label>
        <link refid="dd/daa/a06683"/>
        <childnode refid="44" relation="usage">
          <edgelabel>logMaxOffset</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>blurRadius</edgelabel>
          <edgelabel>blurStepSize</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>bendStepCount</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>castor3d::Texture</label>
        <link refid="d1/d95/a06703"/>
        <childnode refid="12" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>castor3d::VoxelizerUbo</label>
        <link refid="d0/d63/a07931"/>
      </node>
      <node id="47">
        <label>castor::ChangeTrackedT&lt; ValueT, ControlT &gt;</label>
        <link refid="d2/def/a08159"/>
      </node>
      <node id="40">
        <label>castor::ConnectionT&lt; MySignalT &gt;</label>
        <link refid="d4/ddb/a08183"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>castor::Coords&lt; T, Count &gt;</label>
        <link refid="d9/d6a/a09103"/>
      </node>
      <node id="21">
        <label>castor::DataHolderT&lt; Data, Index &gt;</label>
        <link refid="da/d50/a08167"/>
      </node>
      <node id="18">
        <label>castor::FlagCombination&lt; FlagType &gt;</label>
        <link refid="dd/dbb/a08207"/>
      </node>
      <node id="60">
        <label>castor::GroupChangeTrackedT&lt; ValueT, ControlT &gt;</label>
        <link refid="d2/d4c/a08211"/>
      </node>
      <node id="5">
        <label>castor::Named</label>
        <link refid="d5/d3c/a08223"/>
      </node>
      <node id="10">
        <label>castor::NonCopyable</label>
        <link refid="da/d36/a08315"/>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="36">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
      <node id="45">
        <label>castor::RangedValue&lt; T &gt;</label>
        <link refid="d8/de9/a09211"/>
      </node>
      <node id="11">
        <label>castor::SignalT&lt; Function &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>castor::Size</label>
        <link refid="d4/dd6/a09023"/>
        <childnode refid="20" relation="private-inheritance">
        </childnode>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>crg::RenderPass</label>
      </node>
      <node id="16">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Render/RenderTechniquePass.hpp" line="252" column="1" bodyfile="Castor3D/Render/RenderTechniquePass.hpp" bodystart="255" bodyend="432"/>
    <listofallmembers>
      <member refid="df/d90/a06587_1a6c855afb6d9815e0b336f529bbd1c3ef" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>accept</name></member>
      <member refid="d5/d96/a06531_1a414f84c6045877572abf26d3f453a25e" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addBackgroundBindings</name></member>
      <member refid="d5/d96/a06531_1a175187d3a21718b8b763004d80632081" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addBackgroundDescriptor</name></member>
      <member refid="d5/d96/a06531_1a6246f2ddd55511dc65da0357a4fad267" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addClusteredLightingBindings</name></member>
      <member refid="d5/d96/a06531_1a13dacc48c77bfd913c884ececb9ac7ed" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addClusteredLightingDescriptor</name></member>
      <member refid="d5/d96/a06531_1a04c87ec305b5b800088426907342d0ab" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addGIBindings</name></member>
      <member refid="d5/d96/a06531_1a07d93177bb80fb20c5a5d6b24482537f" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addGIDescriptor</name></member>
      <member refid="d5/d96/a06531_1ae630118cbb17cf8c473ba78e1143e8a2" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addShadowBindings</name></member>
      <member refid="d5/d96/a06531_1a71b985381d1383869c5b1fd6a5294c9c" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addShadowBindings</name></member>
      <member refid="d5/d96/a06531_1a162892ee16c6b21392c0148cb3c503d4" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addShadowDescriptor</name></member>
      <member refid="d5/d96/a06531_1a8c65d8809633914687f80a4ade0da304" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>addShadowDescriptor</name></member>
      <member refid="d5/d96/a06531_1a6512b8ee2afd3fd8a42f2036bf2ae1fc" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1a4ac67e954c117995f57d4564c640f3f3" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1ae7c0725098dbbcaf8ee541543783ef9f" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1a8ae3e04cfcf1b985f40506be53ca5df5" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1a53c9a4847c006814c4df955b6f644cf0" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>adjustFlags</name></member>
      <member refid="d5/d96/a06531_1a1d742836cc8acca4cffa4f133a59d7ea" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>allowClusteredLighting</name></member>
      <member refid="df/d90/a06587_1a2ef961d2747018a20f5d27ce02ea020d" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>areDebugTargetsEnabled</name></member>
      <member refid="df/d90/a06587_1acb96dc761bd7c12361bb79a02776c4a5" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>areValidPassFlags</name></member>
      <member refid="d5/d96/a06531_1a502117a53706318de843396e33070ac1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>cleanupPipelines</name></member>
      <member refid="df/d90/a06587_1aed27aa874e94c2eff7254317919fe48c" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>countNodes</name></member>
      <member refid="d5/d96/a06531_1a670b6db34472ea0bd4228c3ae86a1865" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>createBlendState</name></member>
      <member refid="df/d90/a06587_1ab2fe0baeee06fefc299368c0d5f9a3c2" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>createPipelineFlags</name></member>
      <member refid="d5/d96/a06531_1a79cb6d7ae1f83f67d907ccccc493aa51" prot="public" virt="non-virtual" ambiguityscope="castor3d::RenderNodesPass::"><scope>castor3d::RenderTechniqueNodesPass</scope><name>createPipelineFlags</name></member>
      <member refid="d5/d96/a06531_1a0b604614f6aad12c3390a315b7ef7893" prot="public" virt="non-virtual" ambiguityscope="castor3d::RenderNodesPass::"><scope>castor3d::RenderTechniqueNodesPass</scope><name>createPipelineFlags</name></member>
      <member refid="df/d90/a06587_1aea65dbdf092631033fd092587ef5c593" prot="protected" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAccept</name></member>
      <member refid="d5/d96/a06531_1a95a4620da11c5d138dd318a204922df0" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddBackgroundBindings</name></member>
      <member refid="d5/d96/a06531_1a181bf9378c81a058ba983f4c4467077c" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddBackgroundDescriptor</name></member>
      <member refid="d5/d96/a06531_1ab5b35cf256705a232880eaab76b05e94" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddClusteredLightingBindings</name></member>
      <member refid="d5/d96/a06531_1afc4117b7e3bd55c3bd89f8d7e8bcbe26" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddClusteredLightingDescriptor</name></member>
      <member refid="df/d90/a06587_1afcb7fd111b1e67add4404feb39b53268" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddEnvBindings</name></member>
      <member refid="df/d90/a06587_1a86e01cee1dcbf221310745a2618b2f50" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddEnvDescriptor</name></member>
      <member refid="df/d90/a06587_1af9ca6a7465fa273e533811c3085c1ef4" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddGIBindings</name></member>
      <member refid="df/d90/a06587_1afb1cccfaf08300ab20ea186aaedf58ed" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddGIDescriptor</name></member>
      <member refid="df/d90/a06587_1ad23c7ed1442581a622443452f1931dd2" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddPassSpecificsBindings</name></member>
      <member refid="df/d90/a06587_1a2a2d6038c5b58c420b3e04d08585ed8f" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddPassSpecificsDescriptor</name></member>
      <member refid="d5/d96/a06531_1ac0a58902f8754c6e9fe2afaf7fdc4ce1" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddShadowBindings</name></member>
      <member refid="d5/d96/a06531_1aafabe87e12777941f0c888d54bcd5bde" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAddShadowDescriptor</name></member>
      <member refid="df/d90/a06587_1a70f74851f1447085b9dd9e7a2ffcc8b2" prot="protected" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAdjustProgramFlags</name></member>
      <member refid="df/d90/a06587_1a469e206a1f08ee5f74a7f5cb28b64348" prot="protected" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAdjustSceneFlags</name></member>
      <member refid="d5/d96/a06531_1a1263b6f23e8f2ad82ec140e46891099b" prot="protected" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doAdjustSubmeshComponents</name></member>
      <member refid="df/d90/a06587_1abb20a657226949e0aa95085dbc747017" prot="private" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doCreateBlendState</name></member>
      <member refid="df/d90/a06587_1a719cc90715a348ed3a0a99fca93ca0ef" prot="private" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doCreateDepthStencilState</name></member>
      <member refid="df/d90/a06587_1a38c83e1905fd89fa17654ebbf9b7ab86" prot="private" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doFillAdditionalBindings</name></member>
      <member refid="df/d90/a06587_1a4739eb57e85af513a6bb3e6a33cd5fe6" prot="private" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doFillAdditionalDescriptor</name></member>
      <member refid="d5/d96/a06531_1a9e7d96d2aa5d3c3cec8e97cbea443fb2" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doGetProgram</name></member>
      <member refid="d5/d96/a06531_1ad57f4d26855d8750d9df582d5bd9d859" prot="protected" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doIsValidPass</name></member>
      <member refid="d5/d96/a06531_1a18caa441e8929a13f0858375f207d41e" prot="protected" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doIsValidRenderable</name></member>
      <member refid="d5/d96/a06531_1abfb05246334007ec0cafb80ca96645b8" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doUpdateFlags</name></member>
      <member refid="d5/d96/a06531_1a6fa640d927538884f1f380391f418efe" prot="protected" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>doUpdateUbos</name></member>
      <member refid="d5/d96/a06531_1a1765f464a9e83d13c2b2b593b039a57a" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>filtersNonStatic</name></member>
      <member refid="d5/d96/a06531_1a814ea959eeafe107a1a3dbec20ec8be1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>filtersStatic</name></member>
      <member refid="d5/d96/a06531_1a315239954b7b5cfcb48091098885aaf1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>forceAdjustFlags</name></member>
      <member refid="d5/d96/a06531_1a544c3a9960a83220c9138cfd99ed1538" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>forceTwoSided</name></member>
      <member refid="d5/d96/a06531_1aefacacfc759f56e03f3159f5fa198e68" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getBillboardNodes</name></member>
      <member refid="df/d90/a06587_1a740871227a3e33ffc18a7d2f78453e97" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getClustersConfig</name></member>
      <member refid="d5/d96/a06531_1a3ebb33c26f82f60d29593b7f6906cde4" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getComponentsMask</name></member>
      <member refid="d5/d96/a06531_1a2e2a95a6c5f4416897fddfb72f828af7" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getCuller</name></member>
      <member refid="df/d90/a06587_1adc3c8b7201636e87c2892b42a562861d" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getDebugConfig</name></member>
      <member refid="d5/d96/a06531_1ab7b2f152311c81ba7e40e929768a323c" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getDeferredLightingFilter</name></member>
      <member refid="d5/d96/a06531_1a45731387c01aff7c27e3745e409b95c3" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getDrawCallsCount</name></member>
      <member refid="df/d90/a06587_1a2d8669138c0a4afe55bae1207a2b181a" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getEngine</name></member>
      <member refid="d5/d96/a06531_1abfe57d089df21849467f5986b55747bb" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getIgnoredNode</name></member>
      <member refid="da/d07/a06583_1afe44ea7fd2da3532363a632992513571" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getIndirectLighting</name></member>
      <member refid="d5/d96/a06531_1a342f76bbd2a2d93f8767d505d1d29c1d" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getInstancedSubmeshNodes</name></member>
      <member refid="d5/d96/a06531_1a50a70e8b9cce71d14a4608816f79ecc1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getMatrixUbo</name></member>
      <member refid="d5/d96/a06531_1a4734af0eeeaada8645b51388a9dbcf52" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getMaxPipelineId</name></member>
      <member refid="d5/d3c/a08223_1abc1fa9ec1a50d2023373baa4d4c79519" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getName</name></member>
      <member refid="d6/da8/a08227_1ae200b1c3bde17ab092b0d0b37095ff76" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getOwner</name></member>
      <member refid="d5/d96/a06531_1acf787d1ba248a445b050059b684036a5" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getParallaxOcclusionFilter</name></member>
      <member refid="d5/d96/a06531_1a0796814a0755654f0cc104d6662eae35" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getPassPipelineNodes</name></member>
      <member refid="d5/d96/a06531_1a1d8bb6a81baa2e51664f9b0664ccdf16" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getPipelineNodesIndex</name></member>
      <member refid="d5/d96/a06531_1a7f9b1b50772eaf791e55948402baca7e" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getPipelinesCount</name></member>
      <member refid="d5/d96/a06531_1aafa91460eb128c5ba6a3aaa22a2866b6" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getPixelShaderSource</name></member>
      <member refid="d5/d96/a06531_1af1b6d51420a8619e01e78b0461a7c695" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getRenderFilters</name></member>
      <member refid="d5/d96/a06531_1ace7bc19e7a5bfeca3bf92be92a4e8ff9" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getRenderQueue</name></member>
      <member refid="df/d90/a06587_1ad25148ab272e79c3831fde6d4e94197a" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getScene</name></member>
      <member refid="da/d07/a06583_1a6ba2094bb67a628c7f4119b332ceda8c" prot="public" virt="non-virtual" ambiguityscope="castor3d::RenderTechniquePass::"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getScene</name></member>
      <member refid="df/d90/a06587_1ab6319421d389ebf2f17c5c199625525d" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getShaderFlags</name></member>
      <member refid="d5/d96/a06531_1a0921b805792510d5db80402f6b7f211b" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getSubmeshNodes</name></member>
      <member refid="d5/d96/a06531_1a06aecd34c3102ad274663e1a7435bb6c" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getSubmeshShaderSource</name></member>
      <member refid="df/d90/a06587_1ac5f47aa03eeafd5718aedbeb70968c7e" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getTechnique</name></member>
      <member refid="d5/d96/a06531_1a56908fd9eecc10c13f260dc8b4fbbeda" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getTypeID</name></member>
      <member refid="d5/d96/a06531_1aec8320461db2e82022829685730ad3b3" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getTypeName</name></member>
      <member refid="d5/d96/a06531_1a3623cbeff1e438d6d5d75f5efe84019d" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>getVisibleCounts</name></member>
      <member refid="d5/d96/a06531_1a513d00ebae0f33d194d2850fd955df96" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>handleStatic</name></member>
      <member refid="d5/d96/a06531_1aaa523fa00c569df52987cea35ed62a3e" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>hasNodes</name></member>
      <member refid="df/d90/a06587_1a2102e35d08111ec0ab9e012315008a91" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>hasSsao</name></member>
      <member refid="d5/d96/a06531_1a056e3b27b2a07a99002eccae51b15b03" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>initialiseAdditionalDescriptor</name></member>
      <member refid="d5/d96/a06531_1afaa56fab8c657f9787ca749ee0749fa0" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>isDirty</name></member>
      <member refid="d5/d96/a06531_1a336767d660d1fb33ed7ea1b55e03ea9e" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>isMeshShading</name></member>
      <member refid="d5/d96/a06531_1a755dd770f27422e825b64332cd4475e1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>isOrderIndependent</name></member>
      <member refid="df/d90/a06587_1abf6a5401c10771676dba9361ce352c6d" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>isPassEnabled</name></member>
      <member refid="d5/d96/a06531_1a1fc6229eddc94e26ca7862a090f2500c" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>isValidNode</name></member>
      <member refid="d5/d96/a06531_1aec2397ea54ec6154e12706ade0a77583" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>isValidPass</name></member>
      <member refid="d5/d96/a06531_1aa193e2fe28d00dfdd2452702a404899e" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>isValidRenderable</name></member>
      <member refid="d5/d96/a06531_1a513801c9cde3771b93ba7f6d23e583f7" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_allowClusteredLighting</name></member>
      <member refid="df/d90/a06587_1afbe825590c3e35ef7c75b237f333a106" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_camera</name></member>
      <member refid="d5/d96/a06531_1afcdf81e5e73989734d00aa99e39d250b" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_cameraUbo</name></member>
      <member refid="d5/d96/a06531_1a6d6c070855ebca54019a12e7f3490220" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_category</name></member>
      <member refid="df/d90/a06587_1a11741651404b6ce5cee65d13a8eb27f1" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_clustersConfig</name></member>
      <member refid="d5/d96/a06531_1abb50286bb743024a7ce458049fa15d4d" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_componentsMask</name></member>
      <member refid="d5/d96/a06531_1a0e6f60c6661dd007ab6d1ea759e15391" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_deferredLightingFilter</name></member>
      <member refid="d5/d96/a06531_1a7869b4d26567e9de01eb5cc2a497f8b6" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_device</name></member>
      <member refid="da/d07/a06583_1a1a0a94cfc40698bf297f549001114b81" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_drawCalls</name></member>
      <member refid="d5/d96/a06531_1a99bd721ed2680d641fa3b8a8fa97c14d" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_filters</name></member>
      <member refid="d5/d96/a06531_1a00e35214ad070e24c4d6781acdafe33e" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_forceTwoSided</name></member>
      <member refid="d5/d96/a06531_1a28210092a913c861c434b78a358abb33" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_handleStatic</name></member>
      <member refid="d5/d96/a06531_1aec485b6959629cdeafb0888f752837a5" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_index</name></member>
      <member refid="df/d90/a06587_1ae2e44664c1136e22071e1bd833860307" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_indirectLighting</name></member>
      <member refid="d5/d96/a06531_1a506d22126296803c8096b5897c506d22" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_isDirty</name></member>
      <member refid="d5/d96/a06531_1a3f4ae4d22173cd2ecd9200c7a1ca4ea6" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_meshShading</name></member>
      <member refid="d5/d3c/a08223_1a869b429a7190ecf614d8221b270e6dca" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_name</name></member>
      <member refid="d5/d96/a06531_1aacaa3131286df41ac9f40abe4de8846a" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_oit</name></member>
      <member refid="da/d07/a06583_1a906a326de4abb619e1188e8e98942e0b" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_outputScattering</name></member>
      <member refid="d5/d96/a06531_1aba7a52b88df493895c62950013b343ed" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_parallaxOcclusionFilter</name></member>
      <member refid="da/d07/a06583_1abf3258a90360bca1bb9fd1269356e883" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_parent</name></member>
      <member refid="d5/d96/a06531_1a1894fb32c0494abfeae9cddc6eecb402" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_renderSystem</name></member>
      <member refid="d5/d96/a06531_1abe9ae7c14c7abfe881a52f22fecbc9d0" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_safeBand</name></member>
      <member refid="da/d07/a06583_1a97ef9757bc87714bf0d7f61594a10dc1" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_scene</name></member>
      <member refid="d5/d96/a06531_1ac8c58dbac580ea7726e03c4cd8f4d978" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_sceneUbo</name></member>
      <member refid="df/d90/a06587_1aee5609f0b4a4a96e1d9d0f770dc08dc0" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_shaderFlags</name></member>
      <member refid="d5/d96/a06531_1a916bbd8f5333ca63b34f1815753b477b" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_size</name></member>
      <member refid="df/d90/a06587_1a08b3ae729506a1519db28fedb72d4ffc" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_ssao</name></member>
      <member refid="df/d90/a06587_1a4fec806e2bbe79cff353c1eb31f9df98" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_ssaoConfig</name></member>
      <member refid="d5/d96/a06531_1ac4c97f4603740198e6692ba3969093d5" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_targetDepth</name></member>
      <member refid="d5/d96/a06531_1ae14dd1b28e5921d4b57e57e3c158eb19" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_targetImage</name></member>
      <member refid="d5/d96/a06531_1ad5b1bf0dbc1d04d7f0d78780b7aee2b6" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_typeID</name></member>
      <member refid="d5/d96/a06531_1af1e2549069672c4b478b76e8c039e4a2" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>m_typeName</name></member>
      <member refid="d5/d3c/a08223_1a4a6e4748603541685b04f95fb91efb26" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>NamedBaseT</name></member>
      <member refid="d5/d96/a06531_1a3b7652edc0ab92e892fa4ceb49187718" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>onSortNodes</name></member>
      <member refid="d6/da8/a08227_1a5efafa99a79dd1036a6ae3f3242a366b" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>OwnedBy</name></member>
      <member refid="d5/d96/a06531_1a14fa4038b2be656cabe30eec2ea582fd" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>prepareBackPipeline</name></member>
      <member refid="d5/d96/a06531_1ad135f3236bae3b299bfb7da40a137a36" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>prepareFrontPipeline</name></member>
      <member refid="d5/d3c/a08223_1a2d62ce1925efead03c4e0842c06b3e11" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>rename</name></member>
      <member refid="d5/d96/a06531_1a7d11ed92a0ef46d617aadaffc5ec06e1" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>RenderNodesPass</name></member>
      <member refid="df/d90/a06587_1a243fd7dd0b0579a9bcca25af943c039e" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>RenderTechniqueNodesPass</name></member>
      <member refid="da/d07/a06583_1a8a5ed135cbe6345e82fffc1226210135" prot="protected" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>RenderTechniquePass</name></member>
      <member refid="d5/d96/a06531_1aefaeb0db8236eae2d8c2a5e1549e4cc0" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>setIgnoredNode</name></member>
      <member refid="df/d90/a06587_1a39bd7dead3abc23c3214264386eca235" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>update</name></member>
      <member refid="df/d90/a06587_1a63e0a2137b063c8eb22eb7043d4edc2b" prot="private" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>update</name></member>
      <member refid="d5/d96/a06531_1ab57af373bc7f2601fd4338ccb73ccd72" prot="public" virt="non-virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>~RenderNodesPass</name></member>
      <member refid="da/d07/a06583_1a4e929e2aa44f777d74576ded4e416d20" prot="public" virt="virtual"><scope>castor3d::RenderTechniqueNodesPass</scope><name>~RenderTechniquePass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
