<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="df/d28/a09459" kind="class" language="C++" prot="public">
    <compoundname>castor::WorkerThread</compoundname>
    <basecompoundref refid="da/d87/a08319" prot="public" virt="non-virtual">castor::NonMovable</basecompoundref>
    <includes local="no">WorkerThread.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="df/d28/a09459_1a3d9c7f1ff45805829d5547ed965f61a6" prot="public" static="no">
        <type><ref refid="d2/dd2/a02279_1a171f0ae06cbbe361277eaab9ed92ec74" kindref="member">castor::Function</ref>&lt; void() &gt;</type>
        <definition>using castor::WorkerThread::Job =  castor::Function&lt; void() &gt;</definition>
        <argsstring></argsstring>
        <name>Job</name>
        <qualifiedname>castor::WorkerThread::Job</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="26" column="1" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d28/a09459_1ac2eb4c419aee496af36fcf0d9582724d" prot="public" static="no">
        <type><ref refid="dc/d79/a08267" kindref="compound">SignalT</ref>&lt; <ref refid="d2/dd2/a02279_1a171f0ae06cbbe361277eaab9ed92ec74" kindref="member">castor::Function</ref>&lt; void(<ref refid="df/d28/a09459" kindref="compound">WorkerThread</ref> const &amp;) &gt; &gt;</type>
        <definition>using castor::WorkerThread::OnEnded =  SignalT&lt; castor::Function&lt; void( WorkerThread const &amp; ) &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>OnEnded</name>
        <qualifiedname>castor::WorkerThread::OnEnded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="27" column="1" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="df/d28/a09459_1aa6902d0dea7145ea246f2049ad084736" prot="public" static="no" mutable="no">
        <type><ref refid="df/d28/a09459_1ac2eb4c419aee496af36fcf0d9582724d" kindref="member">OnEnded</ref></type>
        <definition>OnEnded castor::WorkerThread::onEnded</definition>
        <argsstring></argsstring>
        <name>onEnded</name>
        <qualifiedname>castor::WorkerThread::onEnded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le signal lancé quand le worker a fini sa tâche. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="77" column="9" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d28/a09459_1af55fb81f0aafc940d53b5f5218c91480" prot="private" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread castor::WorkerThread::m_thread</definition>
        <argsstring></argsstring>
        <name>m_thread</name>
        <qualifiedname>castor::WorkerThread::m_thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="89" column="13" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d28/a09459_1aa7647e1268e94e9187c8985f4230e2c5" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dd2/a02279_1aac3763b795438810958473f0b84908fb" kindref="member">castor::Mutex</ref></type>
        <definition>castor::Mutex castor::WorkerThread::m_mutex</definition>
        <argsstring></argsstring>
        <name>m_mutex</name>
        <qualifiedname>castor::WorkerThread::m_mutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="90" column="15" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d28/a09459_1a1f76d0de92fa24dd1e5803e099ec7ca8" prot="private" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool castor::WorkerThread::m_start</definition>
        <argsstring></argsstring>
        <name>m_start</name>
        <qualifiedname>castor::WorkerThread::m_start</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="91" column="18" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="variable" id="df/d28/a09459_1a53c13745866917ae7bdcbff6dc9ccf39" prot="private" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool castor::WorkerThread::m_terminate</definition>
        <argsstring></argsstring>
        <name>m_terminate</name>
        <qualifiedname>castor::WorkerThread::m_terminate</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="92" column="18" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="variable" id="df/d28/a09459_1a07d745d311fa90aea23b3b81d589a8fc" prot="private" static="no" mutable="no">
        <type><ref refid="df/d28/a09459_1a3d9c7f1ff45805829d5547ed965f61a6" kindref="member">Job</ref></type>
        <definition>Job castor::WorkerThread::m_currentJob</definition>
        <argsstring></argsstring>
        <name>m_currentJob</name>
        <qualifiedname>castor::WorkerThread::m_currentJob</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="93" column="5" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d28/a09459_1afa46731e166c6313d1532445cbd7c678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d31/a01811_1a85ca3bafa261a7f2ece738b559d8bbb7" kindref="member">CU_API</ref></type>
        <definition>CU_API castor::WorkerThread::WorkerThread</definition>
        <argsstring>()</argsstring>
        <name>WorkerThread</name>
        <qualifiedname>castor::WorkerThread::WorkerThread</qualifiedname>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="36" column="8"/>
      </memberdef>
      <memberdef kind="function" id="df/d28/a09459_1a29b9d8e79f5d571773ea5f0dff577a12" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d2/d31/a01811_1a85ca3bafa261a7f2ece738b559d8bbb7" kindref="member">CU_API</ref></type>
        <definition>CU_API castor::WorkerThread::~WorkerThread</definition>
        <argsstring>() noexcept</argsstring>
        <name>~WorkerThread</name>
        <qualifiedname>castor::WorkerThread::~WorkerThread</qualifiedname>
        <briefdescription>
<para>Destructeur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="43" column="8"/>
      </memberdef>
      <memberdef kind="function" id="df/d28/a09459_1ae87538922bf710013adbde6effefca78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d31/a01811_1a85ca3bafa261a7f2ece738b559d8bbb7" kindref="member">CU_API</ref> void</type>
        <definition>CU_API void castor::WorkerThread::feed</definition>
        <argsstring>(Job job)</argsstring>
        <name>feed</name>
        <qualifiedname>castor::WorkerThread::feed</qualifiedname>
        <param>
          <type><ref refid="df/d28/a09459_1a3d9c7f1ff45805829d5547ed965f61a6" kindref="member">Job</ref></type>
          <declname>job</declname>
        </param>
        <briefdescription>
<para>Lance la tâche donnée. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">job</parametername>
</parameternamelist>
<parameterdescription>
<para>La tâche. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="52" column="13"/>
      </memberdef>
      <memberdef kind="function" id="df/d28/a09459_1abf5b728dc71033a48bac0cd730bcaa17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d31/a01811_1a85ca3bafa261a7f2ece738b559d8bbb7" kindref="member">CU_API</ref> bool</type>
        <definition>CU_API bool castor::WorkerThread::isEnded</definition>
        <argsstring>() const</argsstring>
        <name>isEnded</name>
        <qualifiedname>castor::WorkerThread::isEnded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> si la tâche est terminàe. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="59" column="13"/>
      </memberdef>
      <memberdef kind="function" id="df/d28/a09459_1a3ab08295eae16f092aec3d284062527f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d31/a01811_1a85ca3bafa261a7f2ece738b559d8bbb7" kindref="member">CU_API</ref> bool</type>
        <definition>CU_API bool castor::WorkerThread::wait</definition>
        <argsstring>(Milliseconds const &amp;timeout) const</argsstring>
        <name>wait</name>
        <qualifiedname>castor::WorkerThread::wait</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1a9bbae2d5d564fa58ccbb16ec1d0ed7a1" kindref="member">Milliseconds</ref> const &amp;</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Attend la fin de la tâche pour un temps donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Le temps maximal à attendre. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si la tâche est terminée. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="70" column="13"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="df/d28/a09459_1aeb8857ae706a3dedd57925156d5ee680" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor::WorkerThread::doRun</definition>
        <argsstring>()</argsstring>
        <name>doRun</name>
        <qualifiedname>castor::WorkerThread::doRun</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>La boucle du thread. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="86" column="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor::NonMovable</label>
        <link refid="da/d87/a08319"/>
      </node>
      <node id="1">
        <label>castor::WorkerThread</label>
        <link refid="df/d28/a09459"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>castor::SignalT&lt; castor::Function&lt; void(WorkerThread const &amp;) &gt; &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; castor::Function&lt; void(WorkerThread const &amp;) &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>castor::NonCopyable</label>
        <link refid="da/d36/a08315"/>
      </node>
      <node id="2">
        <label>castor::NonMovable</label>
        <link refid="da/d87/a08319"/>
      </node>
      <node id="5">
        <label>castor::SignalT&lt; Function &gt;</label>
        <link refid="dc/d79/a08267"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor::WorkerThread</label>
        <link refid="df/d28/a09459"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>onEnded</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CastorUtils/Multithreading/WorkerThread.hpp" line="22" column="1" bodyfile="CastorUtils/Multithreading/WorkerThread.hpp" bodystart="24" bodyend="94"/>
    <listofallmembers>
      <member refid="df/d28/a09459_1aeb8857ae706a3dedd57925156d5ee680" prot="private" virt="non-virtual"><scope>castor::WorkerThread</scope><name>doRun</name></member>
      <member refid="df/d28/a09459_1ae87538922bf710013adbde6effefca78" prot="public" virt="non-virtual"><scope>castor::WorkerThread</scope><name>feed</name></member>
      <member refid="df/d28/a09459_1abf5b728dc71033a48bac0cd730bcaa17" prot="public" virt="non-virtual"><scope>castor::WorkerThread</scope><name>isEnded</name></member>
      <member refid="df/d28/a09459_1a3d9c7f1ff45805829d5547ed965f61a6" prot="public" virt="non-virtual"><scope>castor::WorkerThread</scope><name>Job</name></member>
      <member refid="df/d28/a09459_1a07d745d311fa90aea23b3b81d589a8fc" prot="private" virt="non-virtual"><scope>castor::WorkerThread</scope><name>m_currentJob</name></member>
      <member refid="df/d28/a09459_1aa7647e1268e94e9187c8985f4230e2c5" prot="private" virt="non-virtual"><scope>castor::WorkerThread</scope><name>m_mutex</name></member>
      <member refid="df/d28/a09459_1a1f76d0de92fa24dd1e5803e099ec7ca8" prot="private" virt="non-virtual"><scope>castor::WorkerThread</scope><name>m_start</name></member>
      <member refid="df/d28/a09459_1a53c13745866917ae7bdcbff6dc9ccf39" prot="private" virt="non-virtual"><scope>castor::WorkerThread</scope><name>m_terminate</name></member>
      <member refid="df/d28/a09459_1af55fb81f0aafc940d53b5f5218c91480" prot="private" virt="non-virtual"><scope>castor::WorkerThread</scope><name>m_thread</name></member>
      <member refid="da/d87/a08319_1a96b2c94661bcced223d0eb013a82d7f9" prot="protected" virt="non-virtual"><scope>castor::WorkerThread</scope><name>NonMovable</name></member>
      <member refid="df/d28/a09459_1ac2eb4c419aee496af36fcf0d9582724d" prot="public" virt="non-virtual"><scope>castor::WorkerThread</scope><name>OnEnded</name></member>
      <member refid="df/d28/a09459_1aa6902d0dea7145ea246f2049ad084736" prot="public" virt="non-virtual"><scope>castor::WorkerThread</scope><name>onEnded</name></member>
      <member refid="df/d28/a09459_1a3ab08295eae16f092aec3d284062527f" prot="public" virt="non-virtual"><scope>castor::WorkerThread</scope><name>wait</name></member>
      <member refid="df/d28/a09459_1afa46731e166c6313d1532445cbd7c678" prot="public" virt="non-virtual"><scope>castor::WorkerThread</scope><name>WorkerThread</name></member>
      <member refid="da/d87/a08319_1a299bc742afd9bf89f64eb2b59e2ae216" prot="protected" virt="non-virtual"><scope>castor::WorkerThread</scope><name>~NonMovable</name></member>
      <member refid="df/d28/a09459_1a29b9d8e79f5d571773ea5f0dff577a12" prot="public" virt="non-virtual"><scope>castor::WorkerThread</scope><name>~WorkerThread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
