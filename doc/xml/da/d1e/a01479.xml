<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="da/d1e/a01479" kind="namespace" language="C++">
    <compoundname>castor3d</compoundname>
    <innerclass refid="d7/db2/a02036" prot="public">castor3d::AnimableT</innerclass>
    <innerclass refid="db/df9/a05044" prot="public">castor3d::AnimatedMesh</innerclass>
    <innerclass refid="d0/d8b/a05048" prot="public">castor3d::AnimatedObject</innerclass>
    <innerclass refid="d1/dc4/a05052" prot="public">castor3d::AnimatedObjectGroup</innerclass>
    <innerclass refid="d2/d9d/a05056" prot="public">castor3d::AnimatedSkeleton</innerclass>
    <innerclass refid="dc/d96/a05060" prot="public">castor3d::AnimatedTexture</innerclass>
    <innerclass refid="d2/d8c/a05064" prot="public">castor3d::AnimationInstance</innerclass>
    <innerclass refid="d9/db6/a02056" prot="public">castor3d::AnimationInstanceT</innerclass>
    <innerclass refid="d8/d22/a02044" prot="public">castor3d::AnimationKeyFrame</innerclass>
    <innerclass refid="d4/ddd/a02040" prot="public">castor3d::AnimationT</innerclass>
    <innerclass refid="dc/dcb/a02648" prot="public">castor3d::ArrayView</innerclass>
    <innerclass refid="d0/d7d/a05120" prot="public">castor3d::BackgroundTextWriter</innerclass>
    <innerclass refid="db/d5a/a05136" prot="public">castor3d::BackgroundVisitor</innerclass>
    <innerclass refid="d3/dc0/a05140" prot="public">castor3d::BillboardBase</innerclass>
    <innerclass refid="d4/dc5/a05148" prot="public">castor3d::BillboardList</innerclass>
    <innerclass refid="dd/deb/a04304" prot="public">castor3d::BillboardRenderNode</innerclass>
    <innerclass refid="d4/dac/a05456" prot="public">castor3d::BillboardUbo</innerclass>
    <innerclass refid="d5/d8d/a05556" prot="public">castor3d::BillboardUboConfiguration</innerclass>
    <innerclass refid="d1/d8c/a02364" prot="public">castor3d::BillboardUboPools</innerclass>
    <innerclass refid="d8/dd8/a02108" prot="public">castor3d::BinaryChunk</innerclass>
    <innerclass refid="df/d28/a02152" prot="public">castor3d::BinaryParser</innerclass>
    <innerclass refid="d6/d0c/a02080" prot="public">castor3d::BinaryParser&lt; Animation &gt;</innerclass>
    <innerclass refid="d4/de0/a02092" prot="public">castor3d::BinaryParser&lt; Bone &gt;</innerclass>
    <innerclass refid="d8/d72/a02104" prot="public">castor3d::BinaryParser&lt; BonesComponent &gt;</innerclass>
    <innerclass refid="d3/d23/a02120" prot="public">castor3d::BinaryParser&lt; Mesh &gt;</innerclass>
    <innerclass refid="dd/d07/a02132" prot="public">castor3d::BinaryParser&lt; MeshAnimation &gt;</innerclass>
    <innerclass refid="dc/d29/a02144" prot="public">castor3d::BinaryParser&lt; MeshAnimationKeyFrame &gt;</innerclass>
    <innerclass refid="dd/d09/a02180" prot="public">castor3d::BinaryParser&lt; Skeleton &gt;</innerclass>
    <innerclass refid="dc/da6/a02192" prot="public">castor3d::BinaryParser&lt; SkeletonAnimation &gt;</innerclass>
    <innerclass refid="df/d4a/a02204" prot="public">castor3d::BinaryParser&lt; SkeletonAnimationBone &gt;</innerclass>
    <innerclass refid="d8/d5f/a02216" prot="public">castor3d::BinaryParser&lt; SkeletonAnimationKeyFrame &gt;</innerclass>
    <innerclass refid="de/dfd/a02228" prot="public">castor3d::BinaryParser&lt; SkeletonAnimationNode &gt;</innerclass>
    <innerclass refid="dc/d35/a02240" prot="public">castor3d::BinaryParser&lt; SkeletonAnimationObject &gt;</innerclass>
    <innerclass refid="d7/d70/a02252" prot="public">castor3d::BinaryParser&lt; Submesh &gt;</innerclass>
    <innerclass refid="d2/d08/a02148" prot="public">castor3d::BinaryParserBase</innerclass>
    <innerclass refid="dc/d25/a02160" prot="public">castor3d::BinaryWriter</innerclass>
    <innerclass refid="db/d87/a02076" prot="public">castor3d::BinaryWriter&lt; Animation &gt;</innerclass>
    <innerclass refid="d7/db5/a02088" prot="public">castor3d::BinaryWriter&lt; Bone &gt;</innerclass>
    <innerclass refid="de/dd1/a02100" prot="public">castor3d::BinaryWriter&lt; BonesComponent &gt;</innerclass>
    <innerclass refid="dc/d29/a02116" prot="public">castor3d::BinaryWriter&lt; Mesh &gt;</innerclass>
    <innerclass refid="d1/d60/a02128" prot="public">castor3d::BinaryWriter&lt; MeshAnimation &gt;</innerclass>
    <innerclass refid="de/d81/a02140" prot="public">castor3d::BinaryWriter&lt; MeshAnimationKeyFrame &gt;</innerclass>
    <innerclass refid="d6/d34/a02176" prot="public">castor3d::BinaryWriter&lt; Skeleton &gt;</innerclass>
    <innerclass refid="dc/d3c/a02188" prot="public">castor3d::BinaryWriter&lt; SkeletonAnimation &gt;</innerclass>
    <innerclass refid="dd/dce/a02200" prot="public">castor3d::BinaryWriter&lt; SkeletonAnimationBone &gt;</innerclass>
    <innerclass refid="d6/dd1/a02212" prot="public">castor3d::BinaryWriter&lt; SkeletonAnimationKeyFrame &gt;</innerclass>
    <innerclass refid="db/da6/a02224" prot="public">castor3d::BinaryWriter&lt; SkeletonAnimationNode &gt;</innerclass>
    <innerclass refid="de/d1f/a02236" prot="public">castor3d::BinaryWriter&lt; SkeletonAnimationObject &gt;</innerclass>
    <innerclass refid="dc/de2/a02248" prot="public">castor3d::BinaryWriter&lt; Submesh &gt;</innerclass>
    <innerclass refid="dd/d3f/a02156" prot="public">castor3d::BinaryWriterBase</innerclass>
    <innerclass refid="d7/dcb/a04028" prot="public">castor3d::Bone</innerclass>
    <innerclass refid="d8/d9a/a03924" prot="public">castor3d::BonesComponent</innerclass>
    <innerclass refid="dd/df7/a03928" prot="public">castor3d::BonesInstantiationComponent</innerclass>
    <innerclass refid="d5/dbe/a04060" prot="public">castor3d::BorderPanelOverlay</innerclass>
    <innerclass refid="dd/d3b/a04468" prot="public">castor3d::BrdfPrefilter</innerclass>
    <innerclass refid="da/d75/a02372" prot="public">castor3d::Cache</innerclass>
    <innerclass refid="da/db4/a02348" prot="public">castor3d::Cache&lt; AnimatedObjectGroup, castor::String &gt;</innerclass>
    <innerclass refid="d1/df5/a02496" prot="public">castor3d::Cache&lt; Overlay, castor::String &gt;</innerclass>
    <innerclass refid="d9/de2/a02508" prot="public">castor3d::Cache&lt; Plugin, castor::String &gt;</innerclass>
    <innerclass refid="df/d46/a02376" prot="public">castor3d::CacheBase</innerclass>
    <innerclass refid="d8/d30/a02380" prot="public">castor3d::CacheTraits</innerclass>
    <innerclass refid="d2/d11/a02384" prot="public">castor3d::CacheTraits&lt; AnimatedObjectGroup, KeyType &gt;</innerclass>
    <innerclass refid="db/d3b/a02388" prot="public">castor3d::CacheTraits&lt; FrameListener, KeyType &gt;</innerclass>
    <innerclass refid="d5/df1/a02392" prot="public">castor3d::CacheTraits&lt; Material, KeyType &gt;</innerclass>
    <innerclass refid="d5/d10/a02396" prot="public">castor3d::CacheTraits&lt; Mesh, KeyType &gt;</innerclass>
    <innerclass refid="d4/d41/a02400" prot="public">castor3d::CacheTraits&lt; Overlay, KeyType &gt;</innerclass>
    <innerclass refid="db/db1/a02404" prot="public">castor3d::CacheTraits&lt; Plugin, KeyType &gt;</innerclass>
    <innerclass refid="d4/d2d/a02408" prot="public">castor3d::CacheTraits&lt; RenderTechnique, KeyType &gt;</innerclass>
    <innerclass refid="d0/da6/a02412" prot="public">castor3d::CacheTraits&lt; RenderWindow, KeyType &gt;</innerclass>
    <innerclass refid="d1/da0/a02416" prot="public">castor3d::CacheTraits&lt; Sampler, KeyType &gt;</innerclass>
    <innerclass refid="d5/d2b/a02420" prot="public">castor3d::CacheTraits&lt; Scene, KeyType &gt;</innerclass>
    <innerclass refid="d5/de6/a02424" prot="public">castor3d::CacheView</innerclass>
    <innerclass refid="d5/d9c/a05152" prot="public">castor3d::Camera</innerclass>
    <innerclass refid="dc/d18/a02260" prot="public">castor3d::ChunkParser</innerclass>
    <innerclass refid="dd/d76/a02268" prot="public">castor3d::ChunkParser&lt; castor::Path &gt;</innerclass>
    <innerclass refid="d7/dc8/a02264" prot="public">castor3d::ChunkParser&lt; castor::String &gt;</innerclass>
    <innerclass refid="de/dc3/a02256" prot="public">castor3d::ChunkParserBase</innerclass>
    <innerclass refid="d7/daf/a02164" prot="public">castor3d::ChunkTyper</innerclass>
    <innerclass refid="de/d9d/a02072" prot="public">castor3d::ChunkTyper&lt; Animation &gt;</innerclass>
    <innerclass refid="da/dbe/a02084" prot="public">castor3d::ChunkTyper&lt; Bone &gt;</innerclass>
    <innerclass refid="dd/d77/a02096" prot="public">castor3d::ChunkTyper&lt; BonesComponent &gt;</innerclass>
    <innerclass refid="d8/d84/a02112" prot="public">castor3d::ChunkTyper&lt; Mesh &gt;</innerclass>
    <innerclass refid="db/d0e/a02124" prot="public">castor3d::ChunkTyper&lt; MeshAnimation &gt;</innerclass>
    <innerclass refid="db/ddd/a02136" prot="public">castor3d::ChunkTyper&lt; MeshAnimationKeyFrame &gt;</innerclass>
    <innerclass refid="d9/d03/a02172" prot="public">castor3d::ChunkTyper&lt; Skeleton &gt;</innerclass>
    <innerclass refid="d5/ddd/a02184" prot="public">castor3d::ChunkTyper&lt; SkeletonAnimation &gt;</innerclass>
    <innerclass refid="d8/db0/a02196" prot="public">castor3d::ChunkTyper&lt; SkeletonAnimationBone &gt;</innerclass>
    <innerclass refid="d8/d1e/a02208" prot="public">castor3d::ChunkTyper&lt; SkeletonAnimationKeyFrame &gt;</innerclass>
    <innerclass refid="d5/de0/a02220" prot="public">castor3d::ChunkTyper&lt; SkeletonAnimationNode &gt;</innerclass>
    <innerclass refid="db/d14/a02232" prot="public">castor3d::ChunkTyper&lt; SkeletonAnimationObject &gt;</innerclass>
    <innerclass refid="d8/d51/a02244" prot="public">castor3d::ChunkTyper&lt; Submesh &gt;</innerclass>
    <innerclass refid="d2/d81/a02276" prot="public">castor3d::ChunkWriter</innerclass>
    <innerclass refid="d3/d81/a02284" prot="public">castor3d::ChunkWriter&lt; castor::Path &gt;</innerclass>
    <innerclass refid="da/d68/a02280" prot="public">castor3d::ChunkWriter&lt; castor::String &gt;</innerclass>
    <innerclass refid="d5/dc0/a02272" prot="public">castor3d::ChunkWriterBase</innerclass>
    <innerclass refid="dc/d1a/a02288" prot="public">castor3d::CmshImporter</innerclass>
    <innerclass refid="d0/dbf/a05124" prot="public">castor3d::ColourBackground</innerclass>
    <innerclass refid="d1/d13/a04368" prot="public">castor3d::CombinePass</innerclass>
    <innerclass refid="d0/de0/a04376" prot="public">castor3d::CombinePassBuilder</innerclass>
    <innerclass refid="d3/dd1/a04364" prot="public">castor3d::CombinePassConfigT</innerclass>
    <innerclass refid="d1/da6/a04380" prot="public">castor3d::CommandsSemaphore</innerclass>
    <innerclass refid="d9/dff/a05196" prot="public">castor3d::ComputeParticleSystem</innerclass>
    <innerclass refid="d0/de0/a03868" prot="public">castor3d::Cone</innerclass>
    <innerclass refid="de/dec/a02524" prot="public">castor3d::CpuFrameEvent</innerclass>
    <innerclass refid="d8/d65/a02528" prot="public">castor3d::CpuFunctorEvent</innerclass>
    <innerclass refid="d6/d3f/a05204" prot="public">castor3d::CpuParticleSystem</innerclass>
    <innerclass refid="dc/d0d/a04588" prot="public">castor3d::CpuUpdater</innerclass>
    <innerclass refid="d0/d84/a03872" prot="public">castor3d::Cube</innerclass>
    <innerclass refid="da/d26/a02644" prot="public">castor3d::CubeView</innerclass>
    <innerclass refid="d4/d29/a04228" prot="public">castor3d::CulledBillboard</innerclass>
    <innerclass refid="d0/d39/a04224" prot="public">castor3d::CulledSubmesh</innerclass>
    <innerclass refid="d4/dfc/a03876" prot="public">castor3d::Cylinder</innerclass>
    <innerclass refid="d0/d9f/a02672" prot="public">castor3d::DebugCallbacks</innerclass>
    <innerclass refid="db/d6b/a05460" prot="public">castor3d::DebugConfig</innerclass>
    <innerclass refid="dc/ddd/a04064" prot="public">castor3d::DebugOverlays</innerclass>
    <innerclass refid="d4/deb/a04728" prot="public">castor3d::DeferredRendering</innerclass>
    <innerclass refid="d2/d7a/a04384" prot="public">castor3d::DepthPass</innerclass>
    <innerclass refid="df/d18/a05168" prot="public">castor3d::DirectionalLight</innerclass>
    <innerclass refid="d9/dab/a05164" prot="public">castor3d::DirectionalLightCascade</innerclass>
    <innerclass refid="d7/deb/a04732" prot="public">castor3d::DirectionalLightPass</innerclass>
    <innerclass refid="d4/d46/a04312" prot="public">castor3d::DistanceRenderNode</innerclass>
    <innerclass refid="de/d12/a04308" prot="public">castor3d::DistanceRenderNodeBase</innerclass>
    <innerclass refid="dc/d72/a04172" prot="public">castor3d::DividerPlugin</innerclass>
    <innerclass refid="d6/d5c/a04388" prot="public">castor3d::DownscalePass</innerclass>
    <innerclass refid="d4/d1c/a04208" prot="public">castor3d::DummyCuller</innerclass>
    <innerclass refid="d3/d19/a02464" prot="public">castor3d::ElementProducer</innerclass>
    <innerclass refid="d2/d35/a02468" prot="public">castor3d::ElementProducer&lt; RenderTarget, KeyType &gt;</innerclass>
    <innerclass refid="d9/ded/a02472" prot="public">castor3d::ElementProducer&lt; ShaderProgram, KeyType &gt;</innerclass>
    <innerclass refid="d1/d94/a05224" prot="public">castor3d::ElementTyper</innerclass>
    <innerclass refid="dc/dbb/a02520" prot="public">castor3d::Engine</innerclass>
    <innerclass refid="dc/d32/a04240" prot="public">castor3d::EnvironmentMap</innerclass>
    <innerclass refid="d2/d98/a04244" prot="public">castor3d::EnvironmentMapPass</innerclass>
    <innerclass refid="df/dfb/a04472" prot="public">castor3d::EnvironmentPrefilter</innerclass>
    <innerclass refid="d1/dc6/a04964" prot="public">castor3d::EquirectangularToCube</innerclass>
    <innerclass refid="d1/df6/a02544" prot="public">castor3d::EventHandler</innerclass>
    <innerclass refid="de/dce/a03932" prot="public">castor3d::Face</innerclass>
    <innerclass refid="d0/d60/a03936" prot="public">castor3d::FaceIndices</innerclass>
    <innerclass refid="de/d26/a03940" prot="public">castor3d::FaceInfos</innerclass>
    <innerclass refid="d7/d13/a05156" prot="public">castor3d::Fog</innerclass>
    <innerclass refid="de/df2/a04096" prot="public">castor3d::FontTexture</innerclass>
    <innerclass refid="d2/dd5/a04724" prot="public">castor3d::ForwardRenderTechniquePass</innerclass>
    <innerclass refid="d2/d08/a02532" prot="public">castor3d::FrameListener</innerclass>
    <innerclass refid="d7/d04/a04248" prot="public">castor3d::Frustum</innerclass>
    <innerclass refid="d3/d6f/a04212" prot="public">castor3d::FrustumCuller</innerclass>
    <innerclass refid="dd/d8e/a04392" prot="public">castor3d::GaussianBlur</innerclass>
    <innerclass refid="dc/de4/a04252" prot="public">castor3d::GBufferBase</innerclass>
    <innerclass refid="d8/dc6/a04256" prot="public">castor3d::GBufferT</innerclass>
    <innerclass refid="d2/d38/a04176" prot="public">castor3d::GeneratorPlugin</innerclass>
    <innerclass refid="d6/dea/a04180" prot="public">castor3d::GenericPlugin</innerclass>
    <innerclass refid="df/df0/a05160" prot="public">castor3d::Geometry</innerclass>
    <innerclass refid="d7/d67/a02308" prot="public">castor3d::GeometryBuffers</innerclass>
    <innerclass refid="dc/dca/a04260" prot="public">castor3d::GeometryInjectionPass</innerclass>
    <innerclass refid="d1/d22/a05464" prot="public">castor3d::GpInfoUbo</innerclass>
    <innerclass refid="d9/d3f/a05560" prot="public">castor3d::GpInfoUboConfiguration</innerclass>
    <innerclass refid="df/d73/a02312" prot="public">castor3d::GpuBuffer</innerclass>
    <innerclass refid="d3/d01/a02316" prot="public">castor3d::GpuBufferBuddyAllocatorTraits</innerclass>
    <innerclass refid="d4/d8c/a02292" prot="public">castor3d::GpuBufferOffsetT</innerclass>
    <innerclass refid="dd/d6e/a02324" prot="public">castor3d::GpuBufferPool</innerclass>
    <innerclass refid="d6/d24/a02536" prot="public">castor3d::GpuFrameEvent</innerclass>
    <innerclass refid="d4/db0/a02540" prot="public">castor3d::GpuFunctorEvent</innerclass>
    <innerclass refid="df/d97/a02676" prot="public">castor3d::GpuInformations</innerclass>
    <innerclass refid="d5/d6a/a02680" prot="public">castor3d::GpuObjectTracker</innerclass>
    <innerclass refid="da/d34/a04592" prot="public">castor3d::GpuUpdater</innerclass>
    <innerclass refid="d3/d41/a05068" prot="public">castor3d::GroupAnimation</innerclass>
    <innerclass refid="dc/d32/a02556" prot="public">castor3d::HandlerEvent</innerclass>
    <innerclass refid="d2/ddb/a04952" prot="public">castor3d::HdrConfig</innerclass>
    <innerclass refid="d1/d06/a05468" prot="public">castor3d::HdrConfigUbo</innerclass>
    <innerclass refid="d0/d0c/a04484" prot="public">castor3d::IblTextures</innerclass>
    <innerclass refid="df/d0d/a03880" prot="public">castor3d::Icosahedron</innerclass>
    <innerclass refid="d8/d2c/a05128" prot="public">castor3d::ImageBackground</innerclass>
    <innerclass refid="d1/dd9/a04184" prot="public">castor3d::ImporterPlugin</innerclass>
    <innerclass refid="d3/d4a/a03948" prot="public">castor3d::IndexMapping</innerclass>
    <innerclass refid="da/df2/a04216" prot="public">castor3d::InstantiatedDummyCuller</innerclass>
    <innerclass refid="dc/d5e/a04220" prot="public">castor3d::InstantiatedFrustumCuller</innerclass>
    <innerclass refid="d3/d8f/a03956" prot="public">castor3d::InstantiationComponent</innerclass>
    <innerclass refid="d3/d70/a03952" prot="public">castor3d::InstantiationData</innerclass>
    <innerclass refid="d9/def/a04004" prot="public">castor3d::InterleavedVertexT</innerclass>
    <innerclass refid="d7/d6d/a04584" prot="public">castor3d::IntermediateView</innerclass>
    <innerclass refid="d1/d39/a02048" prot="public">castor3d::Interpolator</innerclass>
    <innerclass refid="d3/df9/a02052" prot="public">castor3d::InterpolatorT</innerclass>
    <innerclass refid="df/dfb/a02068" prot="public">castor3d::InterpolatorT&lt; castor::Quaternion, InterpolatorType::eLinear &gt;</innerclass>
    <innerclass refid="de/def/a02064" prot="public">castor3d::InterpolatorT&lt; DataT, InterpolatorType::eLinear &gt;</innerclass>
    <innerclass refid="d5/d8b/a02060" prot="public">castor3d::InterpolatorT&lt; DataT, InterpolatorType::eNearest &gt;</innerclass>
    <innerclass refid="d1/d03/a02560" prot="public">castor3d::KeyboardEvent</innerclass>
    <innerclass refid="d9/de7/a02572" prot="public">castor3d::KeyboardState</innerclass>
    <innerclass refid="d7/deb/a04264" prot="public">castor3d::LayeredLightPropagationVolumesBase</innerclass>
    <innerclass refid="d3/df5/a04272" prot="public">castor3d::LayeredLightPropagationVolumesT</innerclass>
    <innerclass refid="de/d75/a04852" prot="public">castor3d::LayeredLightVolumeGIPass</innerclass>
    <innerclass refid="d4/db7/a05476" prot="public">castor3d::LayeredLpvGridConfigUbo</innerclass>
    <innerclass refid="d3/d7c/a05572" prot="public">castor3d::LayeredLpvGridConfigUboConfiguration</innerclass>
    <innerclass refid="d8/de4/a05172" prot="public">castor3d::Light</innerclass>
    <innerclass refid="d3/dd2/a05176" prot="public">castor3d::LightCategory</innerclass>
    <innerclass refid="d7/d64/a05180" prot="public">castor3d::LightFactory</innerclass>
    <innerclass refid="db/d08/a04848" prot="public">castor3d::LightingPass</innerclass>
    <innerclass refid="d4/d45/a04276" prot="public">castor3d::LightInjectionPass</innerclass>
    <innerclass refid="d8/dfa/a04756" prot="public">castor3d::LightPass</innerclass>
    <innerclass refid="da/d0e/a04752" prot="public">castor3d::LightPassConfig</innerclass>
    <innerclass refid="da/dea/a04864" prot="public">castor3d::LightPassLayeredVolumePropagationShadowT</innerclass>
    <innerclass refid="db/dde/a04856" prot="public">castor3d::LightPassLayeredVolumePropagationShadowT&lt; LightType::eDirectional &gt;</innerclass>
    <innerclass refid="db/d9e/a04892" prot="public">castor3d::LightPassReflectiveShadow</innerclass>
    <innerclass refid="db/d2a/a04776" prot="public">castor3d::LightPassResult</innerclass>
    <innerclass refid="dc/d42/a04748" prot="public">castor3d::LightPassShadow</innerclass>
    <innerclass refid="d8/d0e/a04744" prot="public">castor3d::LightPassShadowTraits</innerclass>
    <innerclass refid="d6/db2/a04780" prot="public">castor3d::LightPassShadowTraits&lt; LightType::eDirectional &gt;</innerclass>
    <innerclass refid="d2/d13/a04784" prot="public">castor3d::LightPassShadowTraits&lt; LightType::ePoint &gt;</innerclass>
    <innerclass refid="d2/d5c/a04788" prot="public">castor3d::LightPassShadowTraits&lt; LightType::eSpot &gt;</innerclass>
    <innerclass refid="d1/dda/a04860" prot="public">castor3d::LightPassVolumePropagationShadowT</innerclass>
    <innerclass refid="d3/d45/a04280" prot="public">castor3d::LightPropagationPass</innerclass>
    <innerclass refid="dd/ddf/a04284" prot="public">castor3d::LightPropagationVolumesBase</innerclass>
    <innerclass refid="d3/d31/a04292" prot="public">castor3d::LightPropagationVolumesT</innerclass>
    <innerclass refid="de/d6f/a04872" prot="public">castor3d::LightVolumeGIPass</innerclass>
    <innerclass refid="d7/de4/a04296" prot="public">castor3d::LightVolumePassResult</innerclass>
    <innerclass refid="db/dc8/a03964" prot="public">castor3d::Line</innerclass>
    <innerclass refid="d5/dbb/a04408" prot="public">castor3d::LineariseDepthPass</innerclass>
    <innerclass refid="db/de8/a03968" prot="public">castor3d::LineIndices</innerclass>
    <innerclass refid="de/d6f/a03972" prot="public">castor3d::LinesMapping</innerclass>
    <innerclass refid="d4/dfe/a02688" prot="public">castor3d::log</innerclass>
    <innerclass refid="d9/d2b/a04300" prot="public">castor3d::LpvConfig</innerclass>
    <innerclass refid="db/d15/a05484" prot="public">castor3d::LpvGridConfigUbo</innerclass>
    <innerclass refid="d7/d1c/a05564" prot="public">castor3d::LpvGridConfigUboConfiguration</innerclass>
    <innerclass refid="de/d62/a05492" prot="public">castor3d::LpvLightConfigUbo</innerclass>
    <innerclass refid="db/d7d/a05568" prot="public">castor3d::LpvLightConfigUboConfiguration</innerclass>
    <innerclass refid="d7/d61/a04868" prot="public">castor3d::LpvLightPassConfigT</innerclass>
    <innerclass refid="dc/d28/a02584" prot="public">castor3d::Material</innerclass>
    <innerclass refid="d6/d57/a02488" prot="public">castor3d::MaterialCache</innerclass>
    <innerclass refid="d2/d0e/a05496" prot="public">castor3d::MatrixUbo</innerclass>
    <innerclass refid="d7/d33/a05576" prot="public">castor3d::MatrixUboConfiguration</innerclass>
    <innerclass refid="db/d77/a02304" prot="public">castor3d::MemChunk</innerclass>
    <innerclass refid="dc/dce/a03908" prot="public">castor3d::Mesh</innerclass>
    <innerclass refid="d3/d10/a03856" prot="public">castor3d::MeshAnimation</innerclass>
    <innerclass refid="d3/d96/a05072" prot="public">castor3d::MeshAnimationInstance</innerclass>
    <innerclass refid="d1/ddd/a05076" prot="public">castor3d::MeshAnimationInstanceSubmesh</innerclass>
    <innerclass refid="db/d62/a03860" prot="public">castor3d::MeshAnimationKeyFrame</innerclass>
    <innerclass refid="d5/d6a/a03864" prot="public">castor3d::MeshAnimationSubmesh</innerclass>
    <innerclass refid="d5/d11/a03912" prot="public">castor3d::MeshFactory</innerclass>
    <innerclass refid="d2/d05/a03916" prot="public">castor3d::MeshGenerator</innerclass>
    <innerclass refid="d8/da1/a03900" prot="public">castor3d::MeshImporter</innerclass>
    <innerclass refid="dd/d2e/a03904" prot="public">castor3d::MeshImporterFactory</innerclass>
    <innerclass refid="d8/dc6/a04796" prot="public">castor3d::MeshLightPass</innerclass>
    <innerclass refid="d7/d01/a03920" prot="public">castor3d::MeshSubdivider</innerclass>
    <innerclass refid="df/d65/a05264" prot="public">castor3d::MetallicRoughnessPassBuffer</innerclass>
    <innerclass refid="d1/df5/a02592" prot="public">castor3d::MetallicRoughnessPbrPass</innerclass>
    <innerclass refid="dd/d5f/a02640" prot="public">castor3d::MipView</innerclass>
    <innerclass refid="da/de2/a05500" prot="public">castor3d::ModelInstancesUbo</innerclass>
    <innerclass refid="d4/d33/a05580" prot="public">castor3d::ModelInstancesUboConfiguration</innerclass>
    <innerclass refid="d2/d81/a05504" prot="public">castor3d::ModelMatrixUbo</innerclass>
    <innerclass refid="da/d9f/a05584" prot="public">castor3d::ModelMatrixUboConfiguration</innerclass>
    <innerclass refid="d7/d56/a05508" prot="public">castor3d::ModelUbo</innerclass>
    <innerclass refid="d0/d38/a05588" prot="public">castor3d::ModelUboConfiguration</innerclass>
    <innerclass refid="d1/df0/a03976" prot="public">castor3d::MorphComponent</innerclass>
    <innerclass refid="de/d38/a04316" prot="public">castor3d::MorphingRenderNode</innerclass>
    <innerclass refid="d9/ddd/a05512" prot="public">castor3d::MorphingUbo</innerclass>
    <innerclass refid="dd/d8d/a05592" prot="public">castor3d::MorphingUboConfiguration</innerclass>
    <innerclass refid="db/d44/a02564" prot="public">castor3d::MouseEvent</innerclass>
    <innerclass refid="de/d48/a02552" prot="public">castor3d::MouseEventHandler</innerclass>
    <innerclass refid="d0/df5/a02576" prot="public">castor3d::MouseState</innerclass>
    <innerclass refid="d9/d4a/a05192" prot="public">castor3d::MovableObject</innerclass>
    <innerclass refid="da/dc4/a02548" prot="public">castor3d::NonClientEventHandler</innerclass>
    <innerclass refid="d4/d81/a04556" prot="public">castor3d::NonTexturedCube</innerclass>
    <innerclass refid="d6/dad/a04540" prot="public">castor3d::NonTexturedQuad</innerclass>
    <innerclass refid="da/d5c/a02432" prot="public">castor3d::ObjectCache</innerclass>
    <innerclass refid="d3/d35/a02360" prot="public">castor3d::ObjectCache&lt; BillboardList, castor::String &gt;</innerclass>
    <innerclass refid="d4/d0c/a02476" prot="public">castor3d::ObjectCache&lt; Geometry, castor::String &gt;</innerclass>
    <innerclass refid="de/d4e/a02484" prot="public">castor3d::ObjectCache&lt; Light, castor::String &gt;</innerclass>
    <innerclass refid="d5/d04/a02428" prot="public">castor3d::ObjectCacheBase</innerclass>
    <innerclass refid="dd/d0a/a02436" prot="public">castor3d::ObjectCacheTraits</innerclass>
    <innerclass refid="db/d5f/a02440" prot="public">castor3d::ObjectCacheTraits&lt; BillboardList, KeyType &gt;</innerclass>
    <innerclass refid="d4/da8/a02444" prot="public">castor3d::ObjectCacheTraits&lt; Camera, KeyType &gt;</innerclass>
    <innerclass refid="d0/dbb/a02448" prot="public">castor3d::ObjectCacheTraits&lt; Geometry, KeyType &gt;</innerclass>
    <innerclass refid="da/d23/a02452" prot="public">castor3d::ObjectCacheTraits&lt; Light, KeyType &gt;</innerclass>
    <innerclass refid="d5/dcb/a02456" prot="public">castor3d::ObjectCacheTraits&lt; ParticleSystem, KeyType &gt;</innerclass>
    <innerclass refid="d9/d04/a02460" prot="public">castor3d::ObjectCacheTraits&lt; SceneNode, KeyType &gt;</innerclass>
    <innerclass refid="df/da8/a04320" prot="public">castor3d::ObjectRenderNode</innerclass>
    <innerclass refid="d1/dce/a02168" prot="public">castor3d::OldInterleavedVertexT</innerclass>
    <innerclass refid="d9/d27/a04876" prot="public">castor3d::OpaquePass</innerclass>
    <innerclass refid="d1/dcd/a04880" prot="public">castor3d::OpaquePassResult</innerclass>
    <innerclass refid="dc/d32/a04884" prot="public">castor3d::OpaqueResolvePass</innerclass>
    <innerclass refid="d1/da3/a04100" prot="public">castor3d::Overlay</innerclass>
    <innerclass refid="d5/dd9/a04104" prot="public">castor3d::OverlayCategory</innerclass>
    <innerclass refid="d6/d90/a02492" prot="public">castor3d::OverlayCategorySort</innerclass>
    <innerclass refid="d5/d8b/a04112" prot="public">castor3d::OverlayFactory</innerclass>
    <innerclass refid="db/da3/a04116" prot="public">castor3d::OverlayRenderer</innerclass>
    <innerclass refid="d3/dd7/a05516" prot="public">castor3d::OverlayUbo</innerclass>
    <innerclass refid="d8/d23/a05596" prot="public">castor3d::OverlayUboConfiguration</innerclass>
    <innerclass refid="dc/d9e/a04148" prot="public">castor3d::OverlayVisitor</innerclass>
    <innerclass refid="d3/db3/a04152" prot="public">castor3d::PanelOverlay</innerclass>
    <innerclass refid="d0/d8e/a03828" prot="public">castor3d::ParametersT</innerclass>
    <innerclass refid="df/dfd/a05208" prot="public">castor3d::Particle</innerclass>
    <innerclass refid="d4/d61/a05212" prot="public">castor3d::ParticleDeclaration</innerclass>
    <innerclass refid="df/d2e/a05216" prot="public">castor3d::ParticleElementDeclaration</innerclass>
    <innerclass refid="dd/d2d/a05220" prot="public">castor3d::ParticleEmitter</innerclass>
    <innerclass refid="de/df4/a04188" prot="public">castor3d::ParticlePlugin</innerclass>
    <innerclass refid="d6/dd5/a05228" prot="public">castor3d::ParticleSystem</innerclass>
    <innerclass refid="d5/d8b/a05232" prot="public">castor3d::ParticleSystemImpl</innerclass>
    <innerclass refid="dd/d1a/a05236" prot="public">castor3d::ParticleUpdater</innerclass>
    <innerclass refid="df/d5d/a02596" prot="public">castor3d::Pass</innerclass>
    <innerclass refid="d1/d54/a05272" prot="public">castor3d::PassBuffer</innerclass>
    <innerclass refid="d4/d85/a04324" prot="public">castor3d::PassRenderNode</innerclass>
    <innerclass refid="d1/d88/a02600" prot="public">castor3d::PassTyper</innerclass>
    <innerclass refid="db/d34/a02608" prot="public">castor3d::PassTyper&lt; MaterialType::eMetallicRoughness &gt;</innerclass>
    <innerclass refid="d7/d13/a02604" prot="public">castor3d::PassTyper&lt; MaterialType::ePhong &gt;</innerclass>
    <innerclass refid="d6/dfc/a02612" prot="public">castor3d::PassTyper&lt; MaterialType::eSpecularGlossiness &gt;</innerclass>
    <innerclass refid="d6/d6e/a03832" prot="public">castor3d::Pattern</innerclass>
    <innerclass refid="d6/dca/a02616" prot="public">castor3d::PhongPass</innerclass>
    <innerclass refid="d0/d11/a05288" prot="public">castor3d::PhongPassBuffer</innerclass>
    <innerclass refid="d1/d55/a04496" prot="public">castor3d::PickingPass</innerclass>
    <innerclass refid="db/d2d/a05520" prot="public">castor3d::PickingUbo</innerclass>
    <innerclass refid="d9/dcd/a05600" prot="public">castor3d::PickingUboConfiguration</innerclass>
    <innerclass refid="dd/db6/a04580" prot="public">castor3d::PipelineFlags</innerclass>
    <innerclass refid="dd/d4d/a03844" prot="public">castor3d::PipelineVisitor</innerclass>
    <innerclass refid="d5/d73/a03836" prot="public">castor3d::PipelineVisitorBase</innerclass>
    <innerclass refid="d6/db7/a03884" prot="public">castor3d::Plane</innerclass>
    <innerclass refid="db/d33/a04192" prot="public">castor3d::Plugin</innerclass>
    <innerclass refid="d4/dd4/a04196" prot="public">castor3d::PluginException</innerclass>
    <innerclass refid="dc/ded/a05184" prot="public">castor3d::PointLight</innerclass>
    <innerclass refid="d5/dc9/a04804" prot="public">castor3d::PointLightPass</innerclass>
    <innerclass refid="db/d83/a02328" prot="public">castor3d::PoolUniformBuffer</innerclass>
    <innerclass refid="da/d6e/a04500" prot="public">castor3d::PostEffect</innerclass>
    <innerclass refid="de/da6/a04504" prot="public">castor3d::PostEffectSurface</innerclass>
    <innerclass refid="df/d5c/a04200" prot="public">castor3d::PostFxPlugin</innerclass>
    <innerclass refid="d6/d74/a03888" prot="public">castor3d::Projection</innerclass>
    <innerclass refid="de/d37/a04488" prot="public">castor3d::RadianceComputer</innerclass>
    <innerclass refid="dd/d8c/a04508" prot="public">castor3d::Ray</innerclass>
    <innerclass refid="d9/d2e/a04900" prot="public">castor3d::ReflectiveShadowMapping</innerclass>
    <innerclass refid="d3/d49/a04972" prot="public">castor3d::RenderCube</innerclass>
    <innerclass refid="da/d4c/a04980" prot="public">castor3d::RenderDepthQuad</innerclass>
    <innerclass refid="d1/def/a04512" prot="public">castor3d::RenderDevice</innerclass>
    <innerclass refid="d5/d47/a05240" prot="public">castor3d::RenderedObject</innerclass>
    <innerclass refid="dd/d4b/a04432" prot="public">castor3d::RenderGrid</innerclass>
    <innerclass refid="d6/d11/a04436" prot="public">castor3d::RenderGridBuilder</innerclass>
    <innerclass refid="dc/d7e/a04424" prot="public">castor3d::RenderGridBuilderT</innerclass>
    <innerclass refid="d5/d91/a04516" prot="public">castor3d::RenderInfo</innerclass>
    <innerclass refid="d3/d83/a04520" prot="public">castor3d::RenderLoop</innerclass>
    <innerclass refid="d1/ddc/a04532" prot="public">castor3d::RenderLoopAsync</innerclass>
    <innerclass refid="d7/da8/a04536" prot="public">castor3d::RenderLoopSync</innerclass>
    <innerclass refid="dc/d81/a04344" prot="public">castor3d::RenderNodesT</innerclass>
    <innerclass refid="d7/dc4/a04612" prot="public">castor3d::RenderPassTimer</innerclass>
    <innerclass refid="d3/dba/a04608" prot="public">castor3d::RenderPassTimerBlock</innerclass>
    <innerclass refid="de/dfb/a04616" prot="public">castor3d::RenderPipeline</innerclass>
    <innerclass refid="d4/d45/a04456" prot="public">castor3d::RenderQuad</innerclass>
    <innerclass refid="d0/ddf/a04460" prot="public">castor3d::RenderQuadBuilder</innerclass>
    <innerclass refid="de/dc4/a04428" prot="public">castor3d::RenderQuadBuilderT</innerclass>
    <innerclass refid="d2/dfe/a04620" prot="public">castor3d::RenderQueue</innerclass>
    <innerclass refid="d9/d38/a04624" prot="public">castor3d::RenderSystem</innerclass>
    <innerclass refid="d3/d6e/a04628" prot="public">castor3d::RenderTarget</innerclass>
    <innerclass refid="d2/dab/a02516" prot="public">castor3d::RenderTargetCache</innerclass>
    <innerclass refid="da/d05/a04920" prot="public">castor3d::RenderTechnique</innerclass>
    <innerclass refid="d1/db7/a04924" prot="public">castor3d::RenderTechniquePass</innerclass>
    <innerclass refid="db/d15/a04928" prot="public">castor3d::RenderTechniqueVisitor</innerclass>
    <innerclass refid="d4/d6d/a04636" prot="public">castor3d::RenderWindow</innerclass>
    <innerclass refid="df/d8c/a04904" prot="public">castor3d::RsmConfig</innerclass>
    <innerclass refid="d7/d66/a05524" prot="public">castor3d::RsmConfigUbo</innerclass>
    <innerclass refid="da/db8/a04908" prot="public">castor3d::RsmGIPass</innerclass>
    <innerclass refid="dc/d52/a04912" prot="public">castor3d::RsmInterpolatePass</innerclass>
    <innerclass refid="d2/d1f/a04896" prot="public">castor3d::RsmLightPassConfig</innerclass>
    <innerclass refid="dd/dd4/a05604" prot="public">castor3d::RsmUboConfiguration</innerclass>
    <innerclass refid="dd/dc4/a02632" prot="public">castor3d::Sampler</innerclass>
    <innerclass refid="d5/d76/a05244" prot="public">castor3d::Scene</innerclass>
    <innerclass refid="d0/d47/a05104" prot="public">castor3d::SceneBackground</innerclass>
    <innerclass refid="da/d16/a04336" prot="public">castor3d::SceneCulledRenderNodes</innerclass>
    <innerclass refid="d4/d4b/a04232" prot="public">castor3d::SceneCuller</innerclass>
    <innerclass refid="df/d8e/a05248" prot="public">castor3d::SceneFileContext</innerclass>
    <innerclass refid="d9/df0/a05252" prot="public">castor3d::SceneFileParser</innerclass>
    <innerclass refid="da/d44/a05256" prot="public">castor3d::SceneNode</innerclass>
    <innerclass refid="d9/dd1/a04340" prot="public">castor3d::SceneRenderNode</innerclass>
    <innerclass refid="d2/d56/a04348" prot="public">castor3d::SceneRenderNodes</innerclass>
    <innerclass refid="d8/d25/a04596" prot="public">castor3d::SceneRenderPass</innerclass>
    <innerclass refid="df/d63/a05528" prot="public">castor3d::SceneUbo</innerclass>
    <innerclass refid="d8/d10/a05608" prot="public">castor3d::SceneUboConfiguration</innerclass>
    <innerclass refid="d6/d72/a05308" prot="public">castor3d::ShaderBuffer</innerclass>
    <innerclass refid="d7/d32/a05312" prot="public">castor3d::ShaderModule</innerclass>
    <innerclass refid="dc/da0/a05304" prot="public">castor3d::ShaderProgram</innerclass>
    <innerclass refid="db/da2/a02512" prot="public">castor3d::ShaderProgramCache</innerclass>
    <innerclass refid="d3/dc5/a05260" prot="public">castor3d::ShadowConfig</innerclass>
    <innerclass refid="d5/d62/a04648" prot="public">castor3d::ShadowMap</innerclass>
    <innerclass refid="df/d42/a04656" prot="public">castor3d::ShadowMapDirectional</innerclass>
    <innerclass refid="d1/d62/a04664" prot="public">castor3d::ShadowMapPass</innerclass>
    <innerclass refid="d5/d43/a04668" prot="public">castor3d::ShadowMapPassDirectional</innerclass>
    <innerclass refid="d7/d94/a04672" prot="public">castor3d::ShadowMapPassPoint</innerclass>
    <innerclass refid="d5/def/a04676" prot="public">castor3d::ShadowMapPassSpot</innerclass>
    <innerclass refid="d5/dfd/a04680" prot="public">castor3d::ShadowMapPoint</innerclass>
    <innerclass refid="d9/dcf/a04692" prot="public">castor3d::ShadowMapResult</innerclass>
    <innerclass refid="d7/d11/a04696" prot="public">castor3d::ShadowMapSpot</innerclass>
    <innerclass refid="d4/de3/a05532" prot="public">castor3d::ShadowMapUbo</innerclass>
    <innerclass refid="df/d16/a05612" prot="public">castor3d::ShadowMapUboConfiguration</innerclass>
    <innerclass refid="db/d13/a04032" prot="public">castor3d::Skeleton</innerclass>
    <innerclass refid="d0/d36/a04008" prot="public">castor3d::SkeletonAnimation</innerclass>
    <innerclass refid="d4/d26/a04012" prot="public">castor3d::SkeletonAnimationBone</innerclass>
    <innerclass refid="de/d0b/a05080" prot="public">castor3d::SkeletonAnimationInstance</innerclass>
    <innerclass refid="d5/d56/a05084" prot="public">castor3d::SkeletonAnimationInstanceBone</innerclass>
    <innerclass refid="d3/d82/a05088" prot="public">castor3d::SkeletonAnimationInstanceKeyFrame</innerclass>
    <innerclass refid="d9/d2c/a05092" prot="public">castor3d::SkeletonAnimationInstanceNode</innerclass>
    <innerclass refid="db/d29/a05096" prot="public">castor3d::SkeletonAnimationInstanceObject</innerclass>
    <innerclass refid="d9/d97/a04016" prot="public">castor3d::SkeletonAnimationKeyFrame</innerclass>
    <innerclass refid="df/d49/a04020" prot="public">castor3d::SkeletonAnimationNode</innerclass>
    <innerclass refid="d4/d9a/a04024" prot="public">castor3d::SkeletonAnimationObject</innerclass>
    <innerclass refid="d8/d58/a05536" prot="public">castor3d::SkinningData</innerclass>
    <innerclass refid="db/d20/a04356" prot="public">castor3d::SkinningRenderNode</innerclass>
    <innerclass refid="d9/df0/a05540" prot="public">castor3d::SkinningUbo</innerclass>
    <innerclass refid="df/d70/a05616" prot="public">castor3d::SkinningUboConfiguration</innerclass>
    <innerclass refid="d9/d4c/a05132" prot="public">castor3d::SkyboxBackground</innerclass>
    <innerclass refid="d2/d5a/a02652" prot="public">castor3d::SliceView</innerclass>
    <innerclass refid="d0/d27/a05296" prot="public">castor3d::SpecularGlossinessPassBuffer</innerclass>
    <innerclass refid="dc/d64/a02620" prot="public">castor3d::SpecularGlossinessPbrPass</innerclass>
    <innerclass refid="db/dc1/a03892" prot="public">castor3d::Sphere</innerclass>
    <innerclass refid="d8/df6/a05316" prot="public">castor3d::SpirVShader</innerclass>
    <innerclass refid="d6/d8c/a05188" prot="public">castor3d::SpotLight</innerclass>
    <innerclass refid="d1/daa/a04816" prot="public">castor3d::SpotLightPass</innerclass>
    <innerclass refid="d2/d88/a04704" prot="public">castor3d::SsaoBlurPass</innerclass>
    <innerclass refid="db/dcc/a04712" prot="public">castor3d::SsaoConfig</innerclass>
    <innerclass refid="df/d64/a05544" prot="public">castor3d::SsaoConfigUbo</innerclass>
    <innerclass refid="d1/d58/a04916" prot="public">castor3d::SsaoPass</innerclass>
    <innerclass refid="df/d38/a04716" prot="public">castor3d::SsaoRawAOPass</innerclass>
    <innerclass refid="d5/dad/a04360" prot="public">castor3d::StaticRenderNode</innerclass>
    <innerclass refid="df/d25/a04464" prot="public">castor3d::StencilPass</innerclass>
    <innerclass refid="dc/d0e/a05320" prot="public">castor3d::StructuredShaderBuffer</innerclass>
    <innerclass refid="d9/d0c/a03992" prot="public">castor3d::Submesh</innerclass>
    <innerclass refid="d3/d4a/a03996" prot="public">castor3d::SubmeshAnimationBufferT</innerclass>
    <innerclass refid="dd/d78/a03980" prot="public">castor3d::SubmeshComponent</innerclass>
    <innerclass refid="d6/d02/a03988" prot="public">castor3d::SubmeshComponentAdder</innerclass>
    <innerclass refid="d7/d02/a04000" prot="public">castor3d::SubmeshUtils</innerclass>
    <innerclass refid="d4/d3a/a04056" prot="public">castor3d::SubmeshVertex</innerclass>
    <innerclass refid="d8/d09/a02624" prot="public">castor3d::SubsurfaceScattering</innerclass>
    <innerclass refid="df/da2/a04828" prot="public">castor3d::SubsurfaceScatteringPass</innerclass>
    <innerclass refid="d3/db2/a04156" prot="public">castor3d::TextOverlay</innerclass>
    <innerclass refid="d5/d6e/a04988" prot="public">castor3d::Texture3DTo2D</innerclass>
    <innerclass refid="d8/d36/a04984" prot="public">castor3d::Texture3DTo2DData</innerclass>
    <innerclass refid="d4/d7d/a02628" prot="public">castor3d::TextureAnimation</innerclass>
    <innerclass refid="d6/da5/a05100" prot="public">castor3d::TextureAnimationInstance</innerclass>
    <innerclass refid="dd/d32/a02636" prot="public">castor3d::TextureConfiguration</innerclass>
    <innerclass refid="d9/d21/a05448" prot="public">castor3d::TextureConfigurationBuffer</innerclass>
    <innerclass refid="dd/d7a/a04568" prot="public">castor3d::TexturedCube</innerclass>
    <innerclass refid="dd/d61/a04548" prot="public">castor3d::TexturedQuad</innerclass>
    <innerclass refid="dc/d0f/a03824" prot="public">castor3d::TextureFactors</innerclass>
    <innerclass refid="d4/d61/a02588" prot="public">castor3d::TextureFlagsId</innerclass>
    <innerclass refid="d2/d7d/a02656" prot="public">castor3d::TextureLayout</innerclass>
    <innerclass refid="dd/dc9/a04996" prot="public">castor3d::TextureProjection</innerclass>
    <innerclass refid="de/d7d/a05000" prot="public">castor3d::TextureProjectionToCube</innerclass>
    <innerclass refid="de/d7b/a02660" prot="public">castor3d::TextureSource</innerclass>
    <innerclass refid="d6/dfa/a05552" prot="public">castor3d::TexturesUbo</innerclass>
    <innerclass refid="d3/d9a/a05620" prot="public">castor3d::TexturesUboConfiguration</innerclass>
    <innerclass refid="d6/d18/a02664" prot="public">castor3d::TextureUnit</innerclass>
    <innerclass refid="d9/d5b/a02668" prot="public">castor3d::TextureView</innerclass>
    <innerclass refid="d7/de6/a04956" prot="public">castor3d::ToneMapping</innerclass>
    <innerclass refid="db/d9d/a04204" prot="public">castor3d::ToneMappingPlugin</innerclass>
    <innerclass refid="d6/d0f/a04960" prot="public">castor3d::ToneMappingVisitor</innerclass>
    <innerclass refid="d1/dba/a03896" prot="public">castor3d::Torus</innerclass>
    <innerclass refid="d5/df2/a04932" prot="public">castor3d::TransparentPass</innerclass>
    <innerclass refid="dc/de0/a04936" prot="public">castor3d::TransparentPassResult</innerclass>
    <innerclass refid="d7/d3f/a04944" prot="public">castor3d::TransparentResolvePass</innerclass>
    <innerclass refid="da/d94/a04940" prot="public">castor3d::TransparentResolveProgram</innerclass>
    <innerclass refid="d9/da3/a03984" prot="public">castor3d::TriFaceMapping</innerclass>
    <innerclass refid="d1/d03/a02332" prot="public">castor3d::UniformBufferBase</innerclass>
    <innerclass refid="d1/d47/a02300" prot="public">castor3d::UniformBufferOffsetT</innerclass>
    <innerclass refid="d3/d9c/a02336" prot="public">castor3d::UniformBufferPool</innerclass>
    <innerclass refid="d6/d71/a02344" prot="public">castor3d::UniformBufferPools</innerclass>
    <innerclass refid="d8/d9a/a02296" prot="public">castor3d::UniformBufferT</innerclass>
    <innerclass refid="dc/d81/a02568" prot="public">castor3d::UserInputEvent</innerclass>
    <innerclass refid="d7/d66/a02580" prot="public">castor3d::UserInputListener</innerclass>
    <innerclass refid="de/de6/a03848" prot="public">castor3d::Version</innerclass>
    <innerclass refid="d8/d80/a03852" prot="public">castor3d::VersionException</innerclass>
    <innerclass refid="dc/d1f/a04036" prot="public">castor3d::VertexBoneData</innerclass>
    <innerclass refid="d6/df3/a05008" prot="public">castor3d::Viewport</innerclass>
    <innerclass refid="d2/dba/a02692" prot="public">castor3d::VkTypeTraits</innerclass>
    <innerclass refid="d5/d74/a03596" prot="public">castor3d::VkTypeTraits&lt; VkAccelerationStructureCreateInfoNV &gt;</innerclass>
    <innerclass refid="d3/d50/a03632" prot="public">castor3d::VkTypeTraits&lt; VkAccelerationStructureInfoNV &gt;</innerclass>
    <innerclass refid="d0/da2/a03620" prot="public">castor3d::VkTypeTraits&lt; VkAccelerationStructureMemoryRequirementsInfoNV &gt;</innerclass>
    <innerclass refid="d8/dec/a03164" prot="public">castor3d::VkTypeTraits&lt; VkAcquireNextImageInfoKHR &gt;</innerclass>
    <innerclass refid="d8/da6/a02696" prot="public">castor3d::VkTypeTraits&lt; VkApplicationInfo &gt;</innerclass>
    <innerclass refid="d0/d06/a03368" prot="public">castor3d::VkTypeTraits&lt; VkAttachmentDescription2KHR &gt;</innerclass>
    <innerclass refid="d0/db9/a03372" prot="public">castor3d::VkTypeTraits&lt; VkAttachmentReference2KHR &gt;</innerclass>
    <innerclass refid="d1/d43/a03612" prot="public">castor3d::VkTypeTraits&lt; VkBindAccelerationStructureMemoryInfoNV &gt;</innerclass>
    <innerclass refid="da/dad/a02928" prot="public">castor3d::VkTypeTraits&lt; VkBindBufferMemoryDeviceGroupInfo &gt;</innerclass>
    <innerclass refid="d4/d04/a02888" prot="public">castor3d::VkTypeTraits&lt; VkBindBufferMemoryInfo &gt;</innerclass>
    <innerclass refid="d2/d0c/a02932" prot="public">castor3d::VkTypeTraits&lt; VkBindImageMemoryDeviceGroupInfo &gt;</innerclass>
    <innerclass refid="d7/d07/a02892" prot="public">castor3d::VkTypeTraits&lt; VkBindImageMemoryInfo &gt;</innerclass>
    <innerclass refid="d8/d08/a03160" prot="public">castor3d::VkTypeTraits&lt; VkBindImageMemorySwapchainInfoKHR &gt;</innerclass>
    <innerclass refid="d4/d90/a03056" prot="public">castor3d::VkTypeTraits&lt; VkBindImagePlaneMemoryInfo &gt;</innerclass>
    <innerclass refid="d7/deb/a02724" prot="public">castor3d::VkTypeTraits&lt; VkBindSparseInfo &gt;</innerclass>
    <innerclass refid="d5/dc7/a02744" prot="public">castor3d::VkTypeTraits&lt; VkBufferCreateInfo &gt;</innerclass>
    <innerclass refid="dd/dbc/a03800" prot="public">castor3d::VkTypeTraits&lt; VkBufferDeviceAddressCreateInfoEXT &gt;</innerclass>
    <innerclass refid="dc/ddb/a03796" prot="public">castor3d::VkTypeTraits&lt; VkBufferDeviceAddressInfoEXT &gt;</innerclass>
    <innerclass refid="d9/dcc/a02872" prot="public">castor3d::VkTypeTraits&lt; VkBufferMemoryBarrier &gt;</innerclass>
    <innerclass refid="d3/d8d/a02944" prot="public">castor3d::VkTypeTraits&lt; VkBufferMemoryRequirementsInfo2 &gt;</innerclass>
    <innerclass refid="d0/d1f/a02748" prot="public">castor3d::VkTypeTraits&lt; VkBufferViewCreateInfo &gt;</innerclass>
    <innerclass refid="d9/d94/a03676" prot="public">castor3d::VkTypeTraits&lt; VkCalibratedTimestampInfoEXT &gt;</innerclass>
    <innerclass refid="d3/d6c/a03744" prot="public">castor3d::VkTypeTraits&lt; VkCheckpointDataNV &gt;</innerclass>
    <innerclass refid="d6/dbc/a02856" prot="public">castor3d::VkTypeTraits&lt; VkCommandBufferAllocateInfo &gt;</innerclass>
    <innerclass refid="da/d47/a02864" prot="public">castor3d::VkTypeTraits&lt; VkCommandBufferBeginInfo &gt;</innerclass>
    <innerclass refid="d6/d25/a03284" prot="public">castor3d::VkTypeTraits&lt; VkCommandBufferInheritanceConditionalRenderingInfoEXT &gt;</innerclass>
    <innerclass refid="dc/dac/a02860" prot="public">castor3d::VkTypeTraits&lt; VkCommandBufferInheritanceInfo &gt;</innerclass>
    <innerclass refid="da/de8/a02852" prot="public">castor3d::VkTypeTraits&lt; VkCommandPoolCreateInfo &gt;</innerclass>
    <innerclass refid="d1/d19/a02812" prot="public">castor3d::VkTypeTraits&lt; VkComputePipelineCreateInfo &gt;</innerclass>
    <innerclass refid="d7/d52/a03292" prot="public">castor3d::VkTypeTraits&lt; VkConditionalRenderingBeginInfoEXT &gt;</innerclass>
    <innerclass refid="d9/d53/a03816" prot="public">castor3d::VkTypeTraits&lt; VkCooperativeMatrixPropertiesNV &gt;</innerclass>
    <innerclass refid="d9/d4d/a02840" prot="public">castor3d::VkTypeTraits&lt; VkCopyDescriptorSet &gt;</innerclass>
    <innerclass refid="d6/d75/a03204" prot="public">castor3d::VkTypeTraits&lt; VkDebugMarkerMarkerInfoEXT &gt;</innerclass>
    <innerclass refid="dc/ddd/a03196" prot="public">castor3d::VkTypeTraits&lt; VkDebugMarkerObjectNameInfoEXT &gt;</innerclass>
    <innerclass refid="de/d3a/a03200" prot="public">castor3d::VkTypeTraits&lt; VkDebugMarkerObjectTagInfoEXT &gt;</innerclass>
    <innerclass refid="da/dfb/a03188" prot="public">castor3d::VkTypeTraits&lt; VkDebugReportCallbackCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d2/d29/a03448" prot="public">castor3d::VkTypeTraits&lt; VkDebugUtilsLabelEXT &gt;</innerclass>
    <innerclass refid="df/d0f/a03452" prot="public">castor3d::VkTypeTraits&lt; VkDebugUtilsMessengerCallbackDataEXT &gt;</innerclass>
    <innerclass refid="d6/d36/a03456" prot="public">castor3d::VkTypeTraits&lt; VkDebugUtilsMessengerCreateInfoEXT &gt;</innerclass>
    <innerclass refid="df/d89/a03440" prot="public">castor3d::VkTypeTraits&lt; VkDebugUtilsObjectNameInfoEXT &gt;</innerclass>
    <innerclass refid="dd/ddc/a03444" prot="public">castor3d::VkTypeTraits&lt; VkDebugUtilsObjectTagInfoEXT &gt;</innerclass>
    <innerclass refid="df/d1e/a03212" prot="public">castor3d::VkTypeTraits&lt; VkDedicatedAllocationBufferCreateInfoNV &gt;</innerclass>
    <innerclass refid="d6/d1a/a03208" prot="public">castor3d::VkTypeTraits&lt; VkDedicatedAllocationImageCreateInfoNV &gt;</innerclass>
    <innerclass refid="d5/d2f/a03216" prot="public">castor3d::VkTypeTraits&lt; VkDedicatedAllocationMemoryAllocateInfoNV &gt;</innerclass>
    <innerclass refid="d2/d4c/a02828" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorPoolCreateInfo &gt;</innerclass>
    <innerclass refid="d8/dbb/a03480" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorPoolInlineUniformBlockCreateInfoEXT &gt;</innerclass>
    <innerclass refid="dd/d9b/a02832" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorSetAllocateInfo &gt;</innerclass>
    <innerclass refid="d3/df0/a03556" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorSetLayoutBindingFlagsCreateInfoEXT &gt;</innerclass>
    <innerclass refid="dd/dfa/a02824" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorSetLayoutCreateInfo &gt;</innerclass>
    <innerclass refid="dc/d28/a03136" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorSetLayoutSupport &gt;</innerclass>
    <innerclass refid="dc/d29/a03568" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorSetVariableDescriptorCountAllocateInfoEXT &gt;</innerclass>
    <innerclass refid="d8/db0/a03572" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorSetVariableDescriptorCountLayoutSupportEXT &gt;</innerclass>
    <innerclass refid="dd/d7c/a03072" prot="public">castor3d::VkTypeTraits&lt; VkDescriptorUpdateTemplateCreateInfo &gt;</innerclass>
    <innerclass refid="d7/d73/a02708" prot="public">castor3d::VkTypeTraits&lt; VkDeviceCreateInfo &gt;</innerclass>
    <innerclass refid="df/daa/a03316" prot="public">castor3d::VkTypeTraits&lt; VkDeviceEventInfoEXT &gt;</innerclass>
    <innerclass refid="d9/dc5/a02924" prot="public">castor3d::VkTypeTraits&lt; VkDeviceGroupBindSparseInfo &gt;</innerclass>
    <innerclass refid="d6/dd2/a02916" prot="public">castor3d::VkTypeTraits&lt; VkDeviceGroupCommandBufferBeginInfo &gt;</innerclass>
    <innerclass refid="de/db0/a02940" prot="public">castor3d::VkTypeTraits&lt; VkDeviceGroupDeviceCreateInfo &gt;</innerclass>
    <innerclass refid="d0/d9f/a03152" prot="public">castor3d::VkTypeTraits&lt; VkDeviceGroupPresentCapabilitiesKHR &gt;</innerclass>
    <innerclass refid="d8/d87/a03168" prot="public">castor3d::VkTypeTraits&lt; VkDeviceGroupPresentInfoKHR &gt;</innerclass>
    <innerclass refid="dd/d3f/a02912" prot="public">castor3d::VkTypeTraits&lt; VkDeviceGroupRenderPassBeginInfo &gt;</innerclass>
    <innerclass refid="d1/d77/a02920" prot="public">castor3d::VkTypeTraits&lt; VkDeviceGroupSubmitInfo &gt;</innerclass>
    <innerclass refid="db/dc1/a03172" prot="public">castor3d::VkTypeTraits&lt; VkDeviceGroupSwapchainCreateInfoKHR &gt;</innerclass>
    <innerclass refid="d1/d24/a03684" prot="public">castor3d::VkTypeTraits&lt; VkDeviceMemoryOverallocationCreateInfoAMD &gt;</innerclass>
    <innerclass refid="d4/d9d/a02704" prot="public">castor3d::VkTypeTraits&lt; VkDeviceQueueCreateInfo &gt;</innerclass>
    <innerclass refid="d6/da5/a03652" prot="public">castor3d::VkTypeTraits&lt; VkDeviceQueueGlobalPriorityCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d7/d98/a03044" prot="public">castor3d::VkTypeTraits&lt; VkDeviceQueueInfo2 &gt;</innerclass>
    <innerclass refid="db/d69/a03320" prot="public">castor3d::VkTypeTraits&lt; VkDisplayEventInfoEXT &gt;</innerclass>
    <innerclass refid="df/d0d/a03176" prot="public">castor3d::VkTypeTraits&lt; VkDisplayModeCreateInfoKHR &gt;</innerclass>
    <innerclass refid="d5/d6b/a03428" prot="public">castor3d::VkTypeTraits&lt; VkDisplayModeProperties2KHR &gt;</innerclass>
    <innerclass refid="d4/d87/a03436" prot="public">castor3d::VkTypeTraits&lt; VkDisplayPlaneCapabilities2KHR &gt;</innerclass>
    <innerclass refid="de/df8/a03432" prot="public">castor3d::VkTypeTraits&lt; VkDisplayPlaneInfo2KHR &gt;</innerclass>
    <innerclass refid="dc/dc7/a03424" prot="public">castor3d::VkTypeTraits&lt; VkDisplayPlaneProperties2KHR &gt;</innerclass>
    <innerclass refid="dc/de8/a03312" prot="public">castor3d::VkTypeTraits&lt; VkDisplayPowerInfoEXT &gt;</innerclass>
    <innerclass refid="d0/d08/a03184" prot="public">castor3d::VkTypeTraits&lt; VkDisplayPresentInfoKHR &gt;</innerclass>
    <innerclass refid="d1/d8b/a03420" prot="public">castor3d::VkTypeTraits&lt; VkDisplayProperties2KHR &gt;</innerclass>
    <innerclass refid="d6/da1/a03180" prot="public">castor3d::VkTypeTraits&lt; VkDisplaySurfaceCreateInfoKHR &gt;</innerclass>
    <innerclass refid="d0/d61/a03528" prot="public">castor3d::VkTypeTraits&lt; VkDrmFormatModifierPropertiesListEXT &gt;</innerclass>
    <innerclass refid="da/dd3/a02736" prot="public">castor3d::VkTypeTraits&lt; VkEventCreateInfo &gt;</innerclass>
    <innerclass refid="d8/d96/a03116" prot="public">castor3d::VkTypeTraits&lt; VkExportFenceCreateInfo &gt;</innerclass>
    <innerclass refid="da/dc0/a03104" prot="public">castor3d::VkTypeTraits&lt; VkExportMemoryAllocateInfo &gt;</innerclass>
    <innerclass refid="d1/dfa/a03244" prot="public">castor3d::VkTypeTraits&lt; VkExportMemoryAllocateInfoNV &gt;</innerclass>
    <innerclass refid="d3/d45/a03120" prot="public">castor3d::VkTypeTraits&lt; VkExportSemaphoreCreateInfo &gt;</innerclass>
    <innerclass refid="dd/d50/a03088" prot="public">castor3d::VkTypeTraits&lt; VkExternalBufferProperties &gt;</innerclass>
    <innerclass refid="de/dd1/a03112" prot="public">castor3d::VkTypeTraits&lt; VkExternalFenceProperties &gt;</innerclass>
    <innerclass refid="d1/d7a/a03080" prot="public">castor3d::VkTypeTraits&lt; VkExternalImageFormatProperties &gt;</innerclass>
    <innerclass refid="de/d98/a03096" prot="public">castor3d::VkTypeTraits&lt; VkExternalMemoryBufferCreateInfo &gt;</innerclass>
    <innerclass refid="d5/d3a/a03100" prot="public">castor3d::VkTypeTraits&lt; VkExternalMemoryImageCreateInfo &gt;</innerclass>
    <innerclass refid="d9/de5/a03240" prot="public">castor3d::VkTypeTraits&lt; VkExternalMemoryImageCreateInfoNV &gt;</innerclass>
    <innerclass refid="db/d6b/a03128" prot="public">castor3d::VkTypeTraits&lt; VkExternalSemaphoreProperties &gt;</innerclass>
    <innerclass refid="db/d59/a02728" prot="public">castor3d::VkTypeTraits&lt; VkFenceCreateInfo &gt;</innerclass>
    <innerclass refid="dc/da7/a03404" prot="public">castor3d::VkTypeTraits&lt; VkFenceGetFdInfoKHR &gt;</innerclass>
    <innerclass refid="d6/d62/a03648" prot="public">castor3d::VkTypeTraits&lt; VkFilterCubicImageViewImageFormatPropertiesEXT &gt;</innerclass>
    <innerclass refid="d0/daf/a02972" prot="public">castor3d::VkTypeTraits&lt; VkFormatProperties2 &gt;</innerclass>
    <innerclass refid="df/de1/a02844" prot="public">castor3d::VkTypeTraits&lt; VkFramebufferCreateInfo &gt;</innerclass>
    <innerclass refid="d3/dce/a03608" prot="public">castor3d::VkTypeTraits&lt; VkGeometryAABBNV &gt;</innerclass>
    <innerclass refid="df/d81/a03600" prot="public">castor3d::VkTypeTraits&lt; VkGeometryNV &gt;</innerclass>
    <innerclass refid="d9/dbd/a03604" prot="public">castor3d::VkTypeTraits&lt; VkGeometryTrianglesNV &gt;</innerclass>
    <innerclass refid="d1/dd0/a02808" prot="public">castor3d::VkTypeTraits&lt; VkGraphicsPipelineCreateInfo &gt;</innerclass>
    <innerclass refid="d4/dd6/a03364" prot="public">castor3d::VkTypeTraits&lt; VkHdrMetadataEXT &gt;</innerclass>
    <innerclass refid="dc/d3d/a02752" prot="public">castor3d::VkTypeTraits&lt; VkImageCreateInfo &gt;</innerclass>
    <innerclass refid="dd/dd7/a03540" prot="public">castor3d::VkTypeTraits&lt; VkImageDrmFormatModifierExplicitCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d1/dfd/a03536" prot="public">castor3d::VkTypeTraits&lt; VkImageDrmFormatModifierListCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d6/d02/a03544" prot="public">castor3d::VkTypeTraits&lt; VkImageDrmFormatModifierPropertiesEXT &gt;</innerclass>
    <innerclass refid="dd/d5d/a03504" prot="public">castor3d::VkTypeTraits&lt; VkImageFormatListCreateInfoKHR &gt;</innerclass>
    <innerclass refid="d3/dff/a02976" prot="public">castor3d::VkTypeTraits&lt; VkImageFormatProperties2 &gt;</innerclass>
    <innerclass refid="d7/d65/a02876" prot="public">castor3d::VkTypeTraits&lt; VkImageMemoryBarrier &gt;</innerclass>
    <innerclass refid="d2/d9c/a02948" prot="public">castor3d::VkTypeTraits&lt; VkImageMemoryRequirementsInfo2 &gt;</innerclass>
    <innerclass refid="d7/db8/a03060" prot="public">castor3d::VkTypeTraits&lt; VkImagePlaneMemoryRequirementsInfo &gt;</innerclass>
    <innerclass refid="d6/d8e/a02952" prot="public">castor3d::VkTypeTraits&lt; VkImageSparseMemoryRequirementsInfo2 &gt;</innerclass>
    <innerclass refid="d7/d50/a03804" prot="public">castor3d::VkTypeTraits&lt; VkImageStencilUsageCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d7/da0/a03156" prot="public">castor3d::VkTypeTraits&lt; VkImageSwapchainCreateInfoKHR &gt;</innerclass>
    <innerclass refid="d7/d44/a03252" prot="public">castor3d::VkTypeTraits&lt; VkImageViewASTCDecodeModeEXT &gt;</innerclass>
    <innerclass refid="dc/d80/a02756" prot="public">castor3d::VkTypeTraits&lt; VkImageViewCreateInfo &gt;</innerclass>
    <innerclass refid="d8/dbd/a03008" prot="public">castor3d::VkTypeTraits&lt; VkImageViewUsageCreateInfo &gt;</innerclass>
    <innerclass refid="d2/d9b/a03400" prot="public">castor3d::VkTypeTraits&lt; VkImportFenceFdInfoKHR &gt;</innerclass>
    <innerclass refid="d1/dda/a03260" prot="public">castor3d::VkTypeTraits&lt; VkImportMemoryFdInfoKHR &gt;</innerclass>
    <innerclass refid="d0/d99/a03660" prot="public">castor3d::VkTypeTraits&lt; VkImportMemoryHostPointerInfoEXT &gt;</innerclass>
    <innerclass refid="d4/d1c/a03272" prot="public">castor3d::VkTypeTraits&lt; VkImportSemaphoreFdInfoKHR &gt;</innerclass>
    <innerclass refid="dd/dee/a02700" prot="public">castor3d::VkTypeTraits&lt; VkInstanceCreateInfo &gt;</innerclass>
    <innerclass refid="d5/d95/a02720" prot="public">castor3d::VkTypeTraits&lt; VkMappedMemoryRange &gt;</innerclass>
    <innerclass refid="df/dfc/a02908" prot="public">castor3d::VkTypeTraits&lt; VkMemoryAllocateFlagsInfo &gt;</innerclass>
    <innerclass refid="db/d1d/a02716" prot="public">castor3d::VkTypeTraits&lt; VkMemoryAllocateInfo &gt;</innerclass>
    <innerclass refid="d7/d35/a02880" prot="public">castor3d::VkTypeTraits&lt; VkMemoryBarrier &gt;</innerclass>
    <innerclass refid="d8/d05/a02904" prot="public">castor3d::VkTypeTraits&lt; VkMemoryDedicatedAllocateInfo &gt;</innerclass>
    <innerclass refid="d3/d5d/a02900" prot="public">castor3d::VkTypeTraits&lt; VkMemoryDedicatedRequirements &gt;</innerclass>
    <innerclass refid="d4/d1a/a03264" prot="public">castor3d::VkTypeTraits&lt; VkMemoryFdPropertiesKHR &gt;</innerclass>
    <innerclass refid="d4/dcb/a03268" prot="public">castor3d::VkTypeTraits&lt; VkMemoryGetFdInfoKHR &gt;</innerclass>
    <innerclass refid="dc/d4c/a03664" prot="public">castor3d::VkTypeTraits&lt; VkMemoryHostPointerPropertiesEXT &gt;</innerclass>
    <innerclass refid="d4/d6e/a03784" prot="public">castor3d::VkTypeTraits&lt; VkMemoryPriorityAllocateInfoEXT &gt;</innerclass>
    <innerclass refid="d5/d6c/a02956" prot="public">castor3d::VkTypeTraits&lt; VkMemoryRequirements2 &gt;</innerclass>
    <innerclass refid="d8/d63/a03500" prot="public">castor3d::VkTypeTraits&lt; VkMultisamplePropertiesEXT &gt;</innerclass>
    <innerclass refid="de/dd8/a02896" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDevice16BitStorageFeatures &gt;</innerclass>
    <innerclass refid="d7/df2/a03656" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDevice8BitStorageFeaturesKHR &gt;</innerclass>
    <innerclass refid="d3/d55/a03256" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceASTCDecodeFeaturesEXT &gt;</innerclass>
    <innerclass refid="db/d09/a03508" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT &gt;</innerclass>
    <innerclass refid="dd/d25/a03512" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT &gt;</innerclass>
    <innerclass refid="dc/d8b/a03792" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceBufferAddressFeaturesEXT &gt;</innerclass>
    <innerclass refid="d5/d35/a03716" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceComputeShaderDerivativesFeaturesNV &gt;</innerclass>
    <innerclass refid="db/de4/a03288" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceConditionalRenderingFeaturesEXT &gt;</innerclass>
    <innerclass refid="dd/d68/a03348" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceConservativeRasterizationPropertiesEXT &gt;</innerclass>
    <innerclass refid="d0/dd4/a03812" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceCooperativeMatrixFeaturesNV &gt;</innerclass>
    <innerclass refid="d5/db0/a03820" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceCooperativeMatrixPropertiesNV &gt;</innerclass>
    <innerclass refid="d5/de9/a03236" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceCornerSampledImageFeaturesNV &gt;</innerclass>
    <innerclass refid="d0/db5/a03788" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV &gt;</innerclass>
    <innerclass refid="d2/deb/a03356" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceDepthClipEnableFeaturesEXT &gt;</innerclass>
    <innerclass refid="dc/d0d/a03708" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceDepthStencilResolvePropertiesKHR &gt;</innerclass>
    <innerclass refid="d5/dda/a03560" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceDescriptorIndexingFeaturesEXT &gt;</innerclass>
    <innerclass refid="d9/d79/a03564" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceDescriptorIndexingPropertiesEXT &gt;</innerclass>
    <innerclass refid="d2/d5b/a03340" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceDiscardRectanglePropertiesEXT &gt;</innerclass>
    <innerclass refid="d4/d43/a03700" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceDriverPropertiesKHR &gt;</innerclass>
    <innerclass refid="d3/d4a/a03740" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceExclusiveScissorFeaturesNV &gt;</innerclass>
    <innerclass refid="dc/de6/a03084" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceExternalBufferInfo &gt;</innerclass>
    <innerclass refid="da/dcd/a03108" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceExternalFenceInfo &gt;</innerclass>
    <innerclass refid="d5/d83/a03076" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceExternalImageFormatInfo &gt;</innerclass>
    <innerclass refid="d9/d9a/a03668" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceExternalMemoryHostPropertiesEXT &gt;</innerclass>
    <innerclass refid="d6/d1e/a03124" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceExternalSemaphoreInfo &gt;</innerclass>
    <innerclass refid="db/db9/a02964" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceFeatures2 &gt;</innerclass>
    <innerclass refid="d2/d76/a03296" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceFloat16Int8FeaturesKHR &gt;</innerclass>
    <innerclass refid="d7/da2/a03704" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceFloatControlsPropertiesKHR &gt;</innerclass>
    <innerclass refid="df/d1a/a03760" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceFragmentDensityMapFeaturesEXT &gt;</innerclass>
    <innerclass refid="d2/d87/a03764" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceFragmentDensityMapPropertiesEXT &gt;</innerclass>
    <innerclass refid="d3/d3b/a03728" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV &gt;</innerclass>
    <innerclass refid="d0/d08/a02936" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceGroupProperties &gt;</innerclass>
    <innerclass refid="d5/d37/a03092" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceIDProperties &gt;</innerclass>
    <innerclass refid="d5/d54/a03532" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceImageDrmFormatModifierInfoEXT &gt;</innerclass>
    <innerclass refid="d6/db9/a02980" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceImageFormatInfo2 &gt;</innerclass>
    <innerclass refid="db/dde/a03644" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceImageViewImageFormatInfoEXT &gt;</innerclass>
    <innerclass refid="db/db5/a03468" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceInlineUniformBlockFeaturesEXT &gt;</innerclass>
    <innerclass refid="d6/d49/a03472" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceInlineUniformBlockPropertiesEXT &gt;</innerclass>
    <innerclass refid="df/dbf/a03132" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMaintenance3Properties &gt;</innerclass>
    <innerclass refid="df/df7/a03776" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMemoryBudgetPropertiesEXT &gt;</innerclass>
    <innerclass refid="dd/d5a/a03780" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMemoryPriorityFeaturesEXT &gt;</innerclass>
    <innerclass refid="d8/d7d/a02988" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMemoryProperties2 &gt;</innerclass>
    <innerclass refid="d8/dcc/a03720" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMeshShaderFeaturesNV &gt;</innerclass>
    <innerclass refid="d7/d0c/a03724" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMeshShaderPropertiesNV &gt;</innerclass>
    <innerclass refid="de/dec/a03020" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMultiviewFeatures &gt;</innerclass>
    <innerclass refid="d6/d83/a03332" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX &gt;</innerclass>
    <innerclass refid="d4/dc8/a03024" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceMultiviewProperties &gt;</innerclass>
    <innerclass refid="d1/d5d/a03756" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDevicePCIBusInfoPropertiesEXT &gt;</innerclass>
    <innerclass refid="dd/d6f/a03000" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDevicePointClippingProperties &gt;</innerclass>
    <innerclass refid="d0/d7b/a02968" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceProperties2 &gt;</innerclass>
    <innerclass refid="d5/d7f/a03036" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceProtectedMemoryFeatures &gt;</innerclass>
    <innerclass refid="de/d0b/a03040" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceProtectedMemoryProperties &gt;</innerclass>
    <innerclass refid="de/d7f/a03280" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDevicePushDescriptorPropertiesKHR &gt;</innerclass>
    <innerclass refid="d9/d82/a03624" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceRayTracingPropertiesNV &gt;</innerclass>
    <innerclass refid="da/d9f/a03636" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV &gt;</innerclass>
    <innerclass refid="d4/d5b/a03496" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceSampleLocationsPropertiesEXT &gt;</innerclass>
    <innerclass refid="dc/d18/a03460" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT &gt;</innerclass>
    <innerclass refid="de/d38/a03064" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceSamplerYcbcrConversionFeatures &gt;</innerclass>
    <innerclass refid="d7/d3a/a03772" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceScalarBlockLayoutFeaturesEXT &gt;</innerclass>
    <innerclass refid="d7/df6/a03672" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceShaderAtomicInt64FeaturesKHR &gt;</innerclass>
    <innerclass refid="df/d98/a03680" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceShaderCorePropertiesAMD &gt;</innerclass>
    <innerclass refid="da/d72/a03140" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceShaderDrawParameterFeatures &gt;</innerclass>
    <innerclass refid="d3/d86/a03732" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceShaderImageFootprintFeaturesNV &gt;</innerclass>
    <innerclass refid="dc/dca/a03580" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceShadingRateImageFeaturesNV &gt;</innerclass>
    <innerclass refid="dd/dda/a03584" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceShadingRateImagePropertiesNV &gt;</innerclass>
    <innerclass refid="d3/d8b/a02996" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceSparseImageFormatInfo2 &gt;</innerclass>
    <innerclass refid="d8/d93/a02884" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceSubgroupProperties &gt;</innerclass>
    <innerclass refid="d2/d2e/a03408" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceSurfaceInfo2KHR &gt;</innerclass>
    <innerclass refid="da/df5/a03220" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceTransformFeedbackFeaturesEXT &gt;</innerclass>
    <innerclass refid="d7/de1/a03224" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceTransformFeedbackPropertiesEXT &gt;</innerclass>
    <innerclass refid="de/dae/a03028" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceVariablePointerFeatures &gt;</innerclass>
    <innerclass refid="df/d9f/a03696" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT &gt;</innerclass>
    <innerclass refid="d3/dfc/a03688" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT &gt;</innerclass>
    <innerclass refid="d0/dbc/a03752" prot="public">castor3d::VkTypeTraits&lt; VkPhysicalDeviceVulkanMemoryModelFeaturesKHR &gt;</innerclass>
    <innerclass refid="df/d25/a02764" prot="public">castor3d::VkTypeTraits&lt; VkPipelineCacheCreateInfo &gt;</innerclass>
    <innerclass refid="d1/dc3/a03516" prot="public">castor3d::VkTypeTraits&lt; VkPipelineColorBlendAdvancedStateCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d9/dd1/a02800" prot="public">castor3d::VkTypeTraits&lt; VkPipelineColorBlendStateCreateInfo &gt;</innerclass>
    <innerclass refid="dc/d98/a03524" prot="public">castor3d::VkTypeTraits&lt; VkPipelineCoverageModulationStateCreateInfoNV &gt;</innerclass>
    <innerclass refid="d4/db4/a03520" prot="public">castor3d::VkTypeTraits&lt; VkPipelineCoverageToColorStateCreateInfoNV &gt;</innerclass>
    <innerclass refid="d3/dac/a02796" prot="public">castor3d::VkTypeTraits&lt; VkPipelineDepthStencilStateCreateInfo &gt;</innerclass>
    <innerclass refid="da/dcf/a03344" prot="public">castor3d::VkTypeTraits&lt; VkPipelineDiscardRectangleStateCreateInfoEXT &gt;</innerclass>
    <innerclass refid="df/dd0/a02804" prot="public">castor3d::VkTypeTraits&lt; VkPipelineDynamicStateCreateInfo &gt;</innerclass>
    <innerclass refid="d5/dba/a02776" prot="public">castor3d::VkTypeTraits&lt; VkPipelineInputAssemblyStateCreateInfo &gt;</innerclass>
    <innerclass refid="d4/d97/a02816" prot="public">castor3d::VkTypeTraits&lt; VkPipelineLayoutCreateInfo &gt;</innerclass>
    <innerclass refid="de/db6/a02792" prot="public">castor3d::VkTypeTraits&lt; VkPipelineMultisampleStateCreateInfo &gt;</innerclass>
    <innerclass refid="d2/d66/a03352" prot="public">castor3d::VkTypeTraits&lt; VkPipelineRasterizationConservativeStateCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d6/da3/a03360" prot="public">castor3d::VkTypeTraits&lt; VkPipelineRasterizationDepthClipStateCreateInfoEXT &gt;</innerclass>
    <innerclass refid="dd/dbf/a02788" prot="public">castor3d::VkTypeTraits&lt; VkPipelineRasterizationStateCreateInfo &gt;</innerclass>
    <innerclass refid="d8/d2a/a03192" prot="public">castor3d::VkTypeTraits&lt; VkPipelineRasterizationStateRasterizationOrderAMD &gt;</innerclass>
    <innerclass refid="d6/d63/a03228" prot="public">castor3d::VkTypeTraits&lt; VkPipelineRasterizationStateStreamCreateInfoEXT &gt;</innerclass>
    <innerclass refid="dc/d8f/a03640" prot="public">castor3d::VkTypeTraits&lt; VkPipelineRepresentativeFragmentTestStateCreateInfoNV &gt;</innerclass>
    <innerclass refid="d8/d3d/a03492" prot="public">castor3d::VkTypeTraits&lt; VkPipelineSampleLocationsStateCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d3/d7e/a02768" prot="public">castor3d::VkTypeTraits&lt; VkPipelineShaderStageCreateInfo &gt;</innerclass>
    <innerclass refid="d5/d99/a03012" prot="public">castor3d::VkTypeTraits&lt; VkPipelineTessellationDomainOriginStateCreateInfo &gt;</innerclass>
    <innerclass refid="df/de4/a02780" prot="public">castor3d::VkTypeTraits&lt; VkPipelineTessellationStateCreateInfo &gt;</innerclass>
    <innerclass refid="d6/d1c/a03692" prot="public">castor3d::VkTypeTraits&lt; VkPipelineVertexInputDivisorStateCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d9/d4a/a02772" prot="public">castor3d::VkTypeTraits&lt; VkPipelineVertexInputStateCreateInfo &gt;</innerclass>
    <innerclass refid="de/d51/a03588" prot="public">castor3d::VkTypeTraits&lt; VkPipelineViewportCoarseSampleOrderStateCreateInfoNV &gt;</innerclass>
    <innerclass refid="d7/d7e/a03736" prot="public">castor3d::VkTypeTraits&lt; VkPipelineViewportExclusiveScissorStateCreateInfoNV &gt;</innerclass>
    <innerclass refid="db/d83/a03576" prot="public">castor3d::VkTypeTraits&lt; VkPipelineViewportShadingRateImageStateCreateInfoNV &gt;</innerclass>
    <innerclass refid="d0/d5a/a02784" prot="public">castor3d::VkTypeTraits&lt; VkPipelineViewportStateCreateInfo &gt;</innerclass>
    <innerclass refid="d1/d24/a03336" prot="public">castor3d::VkTypeTraits&lt; VkPipelineViewportSwizzleStateCreateInfoNV &gt;</innerclass>
    <innerclass refid="d2/d14/a03304" prot="public">castor3d::VkTypeTraits&lt; VkPipelineViewportWScalingStateCreateInfoNV &gt;</innerclass>
    <innerclass refid="d0/dcc/a03148" prot="public">castor3d::VkTypeTraits&lt; VkPresentInfoKHR &gt;</innerclass>
    <innerclass refid="d0/d7c/a03300" prot="public">castor3d::VkTypeTraits&lt; VkPresentRegionsKHR &gt;</innerclass>
    <innerclass refid="d3/d5d/a03328" prot="public">castor3d::VkTypeTraits&lt; VkPresentTimesInfoGOOGLE &gt;</innerclass>
    <innerclass refid="d1/d60/a03032" prot="public">castor3d::VkTypeTraits&lt; VkProtectedSubmitInfo &gt;</innerclass>
    <innerclass refid="da/d20/a02740" prot="public">castor3d::VkTypeTraits&lt; VkQueryPoolCreateInfo &gt;</innerclass>
    <innerclass refid="d6/db4/a03748" prot="public">castor3d::VkTypeTraits&lt; VkQueueFamilyCheckpointPropertiesNV &gt;</innerclass>
    <innerclass refid="dd/d7e/a02984" prot="public">castor3d::VkTypeTraits&lt; VkQueueFamilyProperties2 &gt;</innerclass>
    <innerclass refid="d8/d1b/a03592" prot="public">castor3d::VkTypeTraits&lt; VkRayTracingPipelineCreateInfoNV &gt;</innerclass>
    <innerclass refid="db/d88/a03628" prot="public">castor3d::VkTypeTraits&lt; VkRayTracingShaderGroupCreateInfoNV &gt;</innerclass>
    <innerclass refid="d9/df0/a02868" prot="public">castor3d::VkTypeTraits&lt; VkRenderPassBeginInfo &gt;</innerclass>
    <innerclass refid="d6/dbe/a02848" prot="public">castor3d::VkTypeTraits&lt; VkRenderPassCreateInfo &gt;</innerclass>
    <innerclass refid="d7/d22/a03384" prot="public">castor3d::VkTypeTraits&lt; VkRenderPassCreateInfo2KHR &gt;</innerclass>
    <innerclass refid="df/dcb/a03768" prot="public">castor3d::VkTypeTraits&lt; VkRenderPassFragmentDensityMapCreateInfoEXT &gt;</innerclass>
    <innerclass refid="da/d96/a03004" prot="public">castor3d::VkTypeTraits&lt; VkRenderPassInputAttachmentAspectCreateInfo &gt;</innerclass>
    <innerclass refid="d0/d9d/a03016" prot="public">castor3d::VkTypeTraits&lt; VkRenderPassMultiviewCreateInfo &gt;</innerclass>
    <innerclass refid="d8/db3/a03488" prot="public">castor3d::VkTypeTraits&lt; VkRenderPassSampleLocationsBeginInfoEXT &gt;</innerclass>
    <innerclass refid="de/df6/a03484" prot="public">castor3d::VkTypeTraits&lt; VkSampleLocationsInfoEXT &gt;</innerclass>
    <innerclass refid="d8/deb/a02820" prot="public">castor3d::VkTypeTraits&lt; VkSamplerCreateInfo &gt;</innerclass>
    <innerclass refid="d4/d4b/a03464" prot="public">castor3d::VkTypeTraits&lt; VkSamplerReductionModeCreateInfoEXT &gt;</innerclass>
    <innerclass refid="dc/d92/a03048" prot="public">castor3d::VkTypeTraits&lt; VkSamplerYcbcrConversionCreateInfo &gt;</innerclass>
    <innerclass refid="da/d5d/a03068" prot="public">castor3d::VkTypeTraits&lt; VkSamplerYcbcrConversionImageFormatProperties &gt;</innerclass>
    <innerclass refid="d4/d15/a03052" prot="public">castor3d::VkTypeTraits&lt; VkSamplerYcbcrConversionInfo &gt;</innerclass>
    <innerclass refid="d7/d1c/a02732" prot="public">castor3d::VkTypeTraits&lt; VkSemaphoreCreateInfo &gt;</innerclass>
    <innerclass refid="d0/ded/a03276" prot="public">castor3d::VkTypeTraits&lt; VkSemaphoreGetFdInfoKHR &gt;</innerclass>
    <innerclass refid="d3/d55/a02760" prot="public">castor3d::VkTypeTraits&lt; VkShaderModuleCreateInfo &gt;</innerclass>
    <innerclass refid="d1/d6e/a03552" prot="public">castor3d::VkTypeTraits&lt; VkShaderModuleValidationCacheCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d3/dc2/a03396" prot="public">castor3d::VkTypeTraits&lt; VkSharedPresentSurfaceCapabilitiesKHR &gt;</innerclass>
    <innerclass refid="d6/d5d/a02992" prot="public">castor3d::VkTypeTraits&lt; VkSparseImageFormatProperties2 &gt;</innerclass>
    <innerclass refid="db/d1b/a02960" prot="public">castor3d::VkTypeTraits&lt; VkSparseImageMemoryRequirements2 &gt;</innerclass>
    <innerclass refid="df/dc7/a02712" prot="public">castor3d::VkTypeTraits&lt; VkSubmitInfo &gt;</innerclass>
    <innerclass refid="d6/d8d/a03388" prot="public">castor3d::VkTypeTraits&lt; VkSubpassBeginInfoKHR &gt;</innerclass>
    <innerclass refid="d0/d57/a03380" prot="public">castor3d::VkTypeTraits&lt; VkSubpassDependency2KHR &gt;</innerclass>
    <innerclass refid="d7/d4f/a03376" prot="public">castor3d::VkTypeTraits&lt; VkSubpassDescription2KHR &gt;</innerclass>
    <innerclass refid="d8/d23/a03712" prot="public">castor3d::VkTypeTraits&lt; VkSubpassDescriptionDepthStencilResolveKHR &gt;</innerclass>
    <innerclass refid="d2/d21/a03392" prot="public">castor3d::VkTypeTraits&lt; VkSubpassEndInfoKHR &gt;</innerclass>
    <innerclass refid="d0/de4/a03308" prot="public">castor3d::VkTypeTraits&lt; VkSurfaceCapabilities2EXT &gt;</innerclass>
    <innerclass refid="d4/d57/a03412" prot="public">castor3d::VkTypeTraits&lt; VkSurfaceCapabilities2KHR &gt;</innerclass>
    <innerclass refid="df/df7/a03416" prot="public">castor3d::VkTypeTraits&lt; VkSurfaceFormat2KHR &gt;</innerclass>
    <innerclass refid="df/d3e/a03324" prot="public">castor3d::VkTypeTraits&lt; VkSwapchainCounterCreateInfoEXT &gt;</innerclass>
    <innerclass refid="d2/d19/a03144" prot="public">castor3d::VkTypeTraits&lt; VkSwapchainCreateInfoKHR &gt;</innerclass>
    <innerclass refid="d0/d77/a03232" prot="public">castor3d::VkTypeTraits&lt; VkTextureLODGatherFormatPropertiesAMD &gt;</innerclass>
    <innerclass refid="d8/d2e/a03548" prot="public">castor3d::VkTypeTraits&lt; VkValidationCacheCreateInfoEXT &gt;</innerclass>
    <innerclass refid="df/d71/a03808" prot="public">castor3d::VkTypeTraits&lt; VkValidationFeaturesEXT &gt;</innerclass>
    <innerclass refid="d9/d01/a03248" prot="public">castor3d::VkTypeTraits&lt; VkValidationFlagsEXT &gt;</innerclass>
    <innerclass refid="d2/ddb/a02836" prot="public">castor3d::VkTypeTraits&lt; VkWriteDescriptorSet &gt;</innerclass>
    <innerclass refid="d9/ddd/a03616" prot="public">castor3d::VkTypeTraits&lt; VkWriteDescriptorSetAccelerationStructureNV &gt;</innerclass>
    <innerclass refid="dd/d74/a03476" prot="public">castor3d::VkTypeTraits&lt; VkWriteDescriptorSetInlineUniformBlockEXT &gt;</innerclass>
    <innerclass refid="d4/d79/a05020" prot="public">castor3d::Voxel</innerclass>
    <innerclass refid="db/dd9/a05012" prot="public">castor3d::VoxelBufferToTexture</innerclass>
    <innerclass refid="d7/d17/a05024" prot="public">castor3d::VoxelizePass</innerclass>
    <innerclass refid="dc/d61/a05028" prot="public">castor3d::Voxelizer</innerclass>
    <innerclass refid="dd/da7/a05632" prot="public">castor3d::VoxelizerUbo</innerclass>
    <innerclass refid="d3/d0c/a05628" prot="public">castor3d::VoxelizerUboConfiguration</innerclass>
    <innerclass refid="de/dff/a05032" prot="public">castor3d::VoxelSceneData</innerclass>
    <innerclass refid="d8/d09/a05036" prot="public">castor3d::VoxelSecondaryBounce</innerclass>
    <innerclass refid="de/d1b/a04948" prot="public">castor3d::WeightedBlendRendering</innerclass>
    <innernamespace refid="d1/de4/a01481">castor3d::details</innernamespace>
    <innernamespace refid="d1/d38/a01480">castor3d::lpv</innernamespace>
    <innernamespace refid="d2/dc4/a01483">castor3d::rq</innernamespace>
    <innernamespace refid="d2/d21/a01484">castor3d::shader</innernamespace>
      <sectiondef kind="user-defined">
      <header>Animation</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a2405dedd7ac8a7be93c2a8c1f8848e04" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>AnimationState</name>
        <enumvalue id="da/d1e/a01479_1a2405dedd7ac8a7be93c2a8c1f8848e04ae376aebe4202bd798c792b0ccb7145a6" prot="public">
          <name>ePlaying</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Playing animation state. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a2405dedd7ac8a7be93c2a8c1f8848e04a018b60c4ea3e0441c86b65daf5b82b5f" prot="public">
          <name>eStopped</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stopped animation state. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a2405dedd7ac8a7be93c2a8c1f8848e04ae26e34f6779a62b9542a743a2985c755" prot="public">
          <name>ePaused</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Paused animation state. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a2405dedd7ac8a7be93c2a8c1f8848e04ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a2405dedd7ac8a7be93c2a8c1f8848e04abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  ePlaying</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a2405dedd7ac8a7be93c2a8c1f8848e04a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Animation State Enumerator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="26" column="1" bodyfile="Animation/AnimationModule.hpp" bodystart="24" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>AnimationType</name>
        <enumvalue id="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5afc96a8a552ecfebdd53505dc3ee6be2f" prot="public">
          <name>eMovable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d5/d76/a05244" kindref="compound">Scene</ref> node animation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5adc5e27f91e7e90419aa4f7f8578b69ff" prot="public">
          <name>eSkeleton</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="db/d13/a04032" kindref="compound">Skeleton</ref> animation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5a5be756330a0600dde9db6b9fdb5e16a2" prot="public">
          <name>eMesh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> animation (morphing). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5ac9e394bbf95e981b8642e652f30aa3d6" prot="public">
          <name>eTexture</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Texture animation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eMovable</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Animation types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="49" column="1" bodyfile="Animation/AnimationModule.hpp" bodystart="47" bodyend="63"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1ad38387ab8e17377a42314bc21c171ab0" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>InterpolatorType</name>
        <enumvalue id="da/d1e/a01479_1ad38387ab8e17377a42314bc21c171ab0a6d4cace607e544346702a204c5e524c8" prot="public">
          <name>eNearest</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No interpolation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad38387ab8e17377a42314bc21c171ab0ab4f471e7b4231c34ab95df36681e7a86" prot="public">
          <name>eLinear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Linear mode. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad38387ab8e17377a42314bc21c171ab0ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad38387ab8e17377a42314bc21c171ab0abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eNearest</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad38387ab8e17377a42314bc21c171ab0a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Interpolation modes enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="75" column="1" bodyfile="Animation/AnimationModule.hpp" bodystart="73" bodyend="83"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a4ccddcb70b38afea893045790fbf502a" prot="public" static="no">
        <type><ref refid="d1/d39/a02048" kindref="compound">Interpolator</ref>&lt; castor::Point3f &gt;</type>
        <definition>using castor3d::Point3rInterpolator = typedef Interpolator&lt; castor::Point3f &gt;</definition>
        <argsstring></argsstring>
        <name>Point3rInterpolator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="149" column="1" bodyfile="Animation/AnimationModule.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ad21c6111dee4cb1652624e8476b41d6e" prot="public" static="no">
        <type><ref refid="d1/d39/a02048" kindref="compound">Interpolator</ref>&lt; castor::Quaternion &gt;</type>
        <definition>using castor3d::QuaternionInterpolator = typedef Interpolator&lt; castor::Quaternion &gt;</definition>
        <argsstring></argsstring>
        <name>QuaternionInterpolator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="150" column="1" bodyfile="Animation/AnimationModule.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a92187eb8d7e755bee4831b5471b43bde" prot="public" static="no">
        <type>castor::SpeedT&lt; castor::Angle, castor::Seconds &gt;</type>
        <definition>using castor3d::TextureRotateSpeed = typedef castor::SpeedT&lt; castor::Angle, castor::Seconds &gt;</definition>
        <argsstring></argsstring>
        <name>TextureRotateSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/Animation/TextureAnimationModule.hpp" line="24" column="1" bodyfile="Material/Texture/Animation/TextureAnimationModule.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a5aa3b4d77e7d3ca4b10277b46eb4b565" prot="public" static="no">
        <type>castor::SpeedT&lt; castor::Point2f, castor::Seconds &gt;</type>
        <definition>using castor3d::TextureTranslateSpeed = typedef castor::SpeedT&lt; castor::Point2f, castor::Seconds &gt;</definition>
        <argsstring></argsstring>
        <name>TextureTranslateSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/Animation/TextureAnimationModule.hpp" line="25" column="1" bodyfile="Material/Texture/Animation/TextureAnimationModule.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a345feac530a0e84424ae686c68e3c82b" prot="public" static="no">
        <type>std::map&lt; castor::String, <ref refid="d3/d41/a05068" kindref="compound">GroupAnimation</ref> &gt;</type>
        <definition>using castor3d::GroupAnimationMap = typedef std::map&lt; castor::String, GroupAnimation &gt;</definition>
        <argsstring></argsstring>
        <name>GroupAnimationMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="90" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ae349901e9355e69bf2d373ad681698a5" prot="public" static="no">
        <type><ref refid="d7/db2/a02036" kindref="compound">AnimableT</ref>&lt; <ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> &gt;</type>
        <definition>using castor3d::Animable = typedef AnimableT&lt; Engine &gt;</definition>
        <argsstring></argsstring>
        <name>Animable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="92" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a8b18030cabc04d1bc6651049b78e9874" prot="public" static="no">
        <type><ref refid="d4/ddd/a02040" kindref="compound">AnimationT</ref>&lt; <ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> &gt;</type>
        <definition>using castor3d::Animation = typedef AnimationT&lt; Engine &gt;</definition>
        <argsstring></argsstring>
        <name>Animation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="93" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a67942304e2cc5676ab5406e153b760c7" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d1/dc4/a05052" kindref="compound">AnimatedObjectGroup</ref> const &amp;, <ref refid="d2/d9d/a05056" kindref="compound">AnimatedSkeleton</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnAnimatedSkeletonChangeFunction = typedef std::function&lt; void( AnimatedObjectGroup const &amp;, AnimatedSkeleton const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnAnimatedSkeletonChangeFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="113" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a69b0dcdc0a2e55c86289b6818b9b4965" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a67942304e2cc5676ab5406e153b760c7" kindref="member">OnAnimatedSkeletonChangeFunction</ref> &gt;</type>
        <definition>using castor3d::OnAnimatedSkeletonChange = typedef castor::Signal&lt; OnAnimatedSkeletonChangeFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnAnimatedSkeletonChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="114" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aebaefc320e5cf87d5c39f25f9a374375" prot="public" static="no">
        <type>OnAnimatedSkeletonChange::connection</type>
        <definition>using castor3d::OnAnimatedSkeletonChangeConnection = typedef OnAnimatedSkeletonChange::connection</definition>
        <argsstring></argsstring>
        <name>OnAnimatedSkeletonChangeConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="115" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a9a4a718afa3bedfb79300c7625799432" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d1/dc4/a05052" kindref="compound">AnimatedObjectGroup</ref> const &amp;, <ref refid="db/df9/a05044" kindref="compound">AnimatedMesh</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnAnimatedMeshChangeFunction = typedef std::function&lt; void( AnimatedObjectGroup const &amp;, AnimatedMesh const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnAnimatedMeshChangeFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="117" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a5c2882db6065d576831945c6aeaf7d64" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a9a4a718afa3bedfb79300c7625799432" kindref="member">OnAnimatedMeshChangeFunction</ref> &gt;</type>
        <definition>using castor3d::OnAnimatedMeshChange = typedef castor::Signal&lt; OnAnimatedMeshChangeFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnAnimatedMeshChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="118" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ad1f98fead9156ea44ede80dc6238725c" prot="public" static="no">
        <type>OnAnimatedMeshChange::connection</type>
        <definition>using castor3d::OnAnimatedMeshChangeConnection = typedef OnAnimatedMeshChange::connection</definition>
        <argsstring></argsstring>
        <name>OnAnimatedMeshChangeConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="119" column="1" bodyfile="Scene/Animation/AnimationModule.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5691da845a89609231c90071fccdfc20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(AnimationState value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a2405dedd7ac8a7be93c2a8c1f8848e04" kindref="member">AnimationState</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="38" column="1"/>
        <referencedby refid="dc/de4/a04252_1aeed340f667006bcc6998c5da50b235f5" compoundref="dc/df2/a00656" startline="71" endline="98">castor3d::GBufferBase::doCreateTextures</referencedby>
        <referencedby refid="d1/dda/a04860_1acdec4fd9c33cd4120e3b29c5b27e6a43" compoundref="d3/dd1/a00914" startline="68" endline="95">castor3d::LightPassVolumePropagationShadowT&lt; LtType &gt;::initialise</referencedby>
        <referencedby refid="db/dde/a04856_1af814242db43e907782b507b85c1a0194" compoundref="d7/d12/a00911" startline="72" endline="97">castor3d::LightPassLayeredVolumePropagationShadowT&lt; LightType::eDirectional &gt;::initialise</referencedby>
        <referencedby refid="da/d1e/a01479_1abdd887e9655c5efc778c7921523d39c5" compoundref="d9/d31/a01208" startline="243" endline="260">makeShaderState</referencedby>
        <referencedby refid="de/d7b/a02660_1a4220bf29f250bd837ec9c82d7893138a" compoundref="dd/db5/a00365" startline="60" endline="63">castor3d::TextureSource::toString</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a776eee9dec9335b1bc3a6d44aff8cec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(AnimationType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5" kindref="member">AnimationType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afe3381d66f12634540c9bc70587b28c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(InterpolatorType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad38387ab8e17377a42314bc21c171ab0" kindref="member">InterpolatorType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5bb606f642e13b63992f3b29d8a5a2fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(AnimationKeyFrame)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d8/d22/a02044" kindref="compound">AnimationKeyFrame</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a896ade86ef9e4742e7569cf4d7127a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(AnimationKeyFrameUPtr, AnimationKeyFrame)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>AnimationKeyFrameUPtr</type>
        </param>
        <param>
          <type><ref refid="d8/d22/a02044" kindref="compound">AnimationKeyFrame</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/AnimationModule.hpp" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae8ed0ad6b3f05c489c488c757cd49dd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureAnimation)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d4/d7d/a02628" kindref="compound">TextureAnimation</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/Animation/TextureAnimationModule.hpp" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac9d5963e0d550cd5df1fc891ca0ee9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshAnimation)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d3/d10/a03856" kindref="compound">MeshAnimation</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Animation/MeshAnimationModule.hpp" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a59c08f80f4afacddae3994dc8e3bf458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshAnimationKeyFrame)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/d62/a03860" kindref="compound">MeshAnimationKeyFrame</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Animation/MeshAnimationModule.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa1d08fa69adbaa119b8ee37f3082e778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshAnimationSubmesh)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d5/d6a/a03864" kindref="compound">MeshAnimationSubmesh</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Animation/MeshAnimationModule.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aeac38f2f3b6cf0c43c77f1f575764d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(MeshAnimationSubmesh, MeshAnimationSubmesh)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="d5/d6a/a03864" kindref="compound">MeshAnimationSubmesh</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d6a/a03864" kindref="compound">MeshAnimationSubmesh</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Animation/MeshAnimationModule.hpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a88b47c3ff3e34da29ace17b302b46ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Animable)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ae349901e9355e69bf2d373ad681698a5" kindref="member">Animable</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae41027ee88e8b176ebc08d9e7cabac69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(AnimatedObjectGroup)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/dc4/a05052" kindref="compound">AnimatedObjectGroup</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3c6b66c07d42f3e01cc89a4f15b8e341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(AnimatedMesh)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/df9/a05044" kindref="compound">AnimatedMesh</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8275956697049911e04a9f9b55d26cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(AnimatedObject)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d0/d8b/a05048" kindref="compound">AnimatedObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5f23abd2b077b022ca3ad6ac9cbdddd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(AnimatedSkeleton)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d2/d9d/a05056" kindref="compound">AnimatedSkeleton</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abd7451d61a55113fe4b4e0cc6b18298b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Animation)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a8b18030cabc04d1bc6651049b78e9874" kindref="member">Animation</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adb2ff263c18fc12a88e75c628819e7b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(AnimationInstance)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d2/d8c/a05064" kindref="compound">AnimationInstance</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a60a8de8e69b258d328e523267c83609b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, AnimatedObjectGroupSPtr, AnimatedObjectGroupPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>AnimatedObjectGroupSPtr</type>
        </param>
        <param>
          <type>AnimatedObjectGroupPtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="d1/dc4/a05052" kindref="compound">AnimatedObjectGroup</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af00d4105f4af7a26c400f9dba02e73f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, AnimatedObjectSPtr, AnimatedObjectPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>AnimatedObjectSPtr</type>
        </param>
        <param>
          <type>AnimatedObjectPtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="d0/d8b/a05048" kindref="compound">AnimatedObject</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1affff0f56c0f06657a31013b6363a86d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, AnimationInstanceUPtr, AnimationInstancePtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>AnimationInstanceUPtr</type>
        </param>
        <param>
          <type>AnimationInstancePtrStr</type>
        </param>
        <briefdescription>
<para>Animation pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab6f037c94393d9e1226e338ae58f6caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, AnimationSPtr, AnimationPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>AnimationSPtr</type>
        </param>
        <param>
          <type>AnimationPtrStr</type>
        </param>
        <briefdescription>
<para>Animation pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/AnimationModule.hpp" line="110" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Buffer</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1a54ddb7ebcb71f3fcdceb077ce8507175" prot="public" static="no">
        <type>castor::BuddyAllocatorT&lt; <ref refid="d3/d01/a02316" kindref="compound">GpuBufferBuddyAllocatorTraits</ref> &gt;</type>
        <definition>using castor3d::GpuBufferBuddyAllocator = typedef castor::BuddyAllocatorT&lt; GpuBufferBuddyAllocatorTraits &gt;</definition>
        <argsstring></argsstring>
        <name>GpuBufferBuddyAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="136" column="1" bodyfile="Buffer/BufferModule.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aee21c295015a80813431c9bae20b6ad1" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="da/d1e/a01479_1a54ddb7ebcb71f3fcdceb077ce8507175" kindref="member">GpuBufferBuddyAllocator</ref> &gt;</type>
        <definition>using castor3d::GpuBufferBuddyAllocatorUPtr = typedef std::unique_ptr&lt; GpuBufferBuddyAllocator &gt;</definition>
        <argsstring></argsstring>
        <name>GpuBufferBuddyAllocatorUPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="137" column="1" bodyfile="Buffer/BufferModule.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1912350fd6019644e02f517a625386db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(GpuBufferPool)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dd/d6e/a02324" kindref="compound">GpuBufferPool</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abdcd03645639d3e35252cc00080a1312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(UniformBufferBase)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/d03/a02332" kindref="compound">UniformBufferBase</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aea5183b2ddb15c7bd772a639207fd035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(UniformBufferPools)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/d71/a02344" kindref="compound">UniformBufferPools</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5a91c4fc6e9f4974a13ebf1f8f5524ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(PoolUniformBuffer)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/d83/a02328" kindref="compound">PoolUniformBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afe5265a014177f983eb9cd63b9c63ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(UniformBufferPool)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d3/d9c/a02336" kindref="compound">UniformBufferPool</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4eeef8f2efc5836fdd5a3d853eadaeba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareTemplateSmartPtr</definition>
        <argsstring>(UniformBuffer)</argsstring>
        <name>CU_DeclareTemplateSmartPtr</name>
        <param>
          <type>UniformBuffer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3283783fefa9a54a9caa19451d521bc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator&lt;</definition>
        <argsstring>(MemChunk const &amp;lhs, MemChunk const &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="db/d77/a02304" kindref="compound">MemChunk</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="db/d77/a02304" kindref="compound">MemChunk</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/BufferModule.hpp" line="152" column="1" bodyfile="Buffer/BufferModule.hpp" bodystart="152" bodyend="156"/>
        <references refid="db/d77/a02304_1ae4819cf2e478269cde2e24ff1e187765" compoundref="d7/d9a/a00152" startline="148">castor3d::MemChunk::offset</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cache</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1af40a7bd1adde19b724dfe6d6b21ff7f5" prot="public" static="no">
        <type><ref refid="da/d5c/a02432" kindref="compound">ObjectCache</ref>&lt; <ref refid="d4/dc5/a05148" kindref="compound">BillboardList</ref>, castor::String &gt;</type>
        <definition>typedef ObjectCache&lt; BillboardList, castor::String &gt; castor3d::BillboardListCache</definition>
        <argsstring></argsstring>
        <name>BillboardListCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/BillboardCache.hpp" line="166" column="1" bodyfile="Cache/BillboardCache.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a2c8a46389d1ccec823efc418fe4b6ad4" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
        </templateparamlist>
        <type>std::function&lt; void(std::shared_ptr&lt; ElementType &gt;) &gt;</type>
        <definition>using castor3d::ElementInitialiser = typedef std::function&lt; void( std::shared_ptr&lt; ElementType &gt; ) &gt;</definition>
        <argsstring></argsstring>
        <name>ElementInitialiser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="493" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a35dc9312b15caba5ee045ddb7204ad74" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
        </templateparamlist>
        <type>std::function&lt; void(std::shared_ptr&lt; ElementType &gt;) &gt;</type>
        <definition>using castor3d::ElementCleaner = typedef std::function&lt; void( std::shared_ptr&lt; ElementType &gt; ) &gt;</definition>
        <argsstring></argsstring>
        <name>ElementCleaner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="496" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a632dacb3bbc234979e170e5e8766ef7b" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
          <param>
            <type>typename KeyType</type>
          </param>
        </templateparamlist>
        <type>std::function&lt; void(<ref refid="df/d46/a02376" kindref="compound">CacheBase</ref>&lt; ElementType, KeyType &gt; const &amp;, castor::Collection&lt; ElementType, KeyType &gt; &amp;, std::shared_ptr&lt; ElementType &gt;) &gt;</type>
        <definition>using castor3d::ElementMerger = typedef std::function&lt; void( CacheBase&lt; ElementType, KeyType &gt; const &amp;, castor::Collection&lt; ElementType, KeyType &gt; &amp;, std::shared_ptr&lt; ElementType &gt; ) &gt;</definition>
        <argsstring></argsstring>
        <name>ElementMerger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="499" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ac7d2928603e3d29246115f215f1deb05" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
        </templateparamlist>
        <type>std::function&lt; void(std::shared_ptr&lt; ElementType &gt;, <ref refid="da/d44/a05256" kindref="compound">SceneNode</ref> &amp;, SceneNodeSPtr, SceneNodeSPtr, SceneNodeSPtr) &gt;</type>
        <definition>using castor3d::ElementAttacher = typedef std::function&lt; void( std::shared_ptr&lt; ElementType &gt;, SceneNode &amp;, SceneNodeSPtr, SceneNodeSPtr, SceneNodeSPtr ) &gt;</definition>
        <argsstring></argsstring>
        <name>ElementAttacher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="502" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a3aa434d7a4346a597f32d372cbf557cd" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
        </templateparamlist>
        <type>std::function&lt; void(std::shared_ptr&lt; ElementType &gt;) &gt;</type>
        <definition>using castor3d::ElementDetacher = typedef std::function&lt; void( std::shared_ptr&lt; ElementType &gt; ) &gt;</definition>
        <argsstring></argsstring>
        <name>ElementDetacher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="505" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a15cfe8c978fd65b8affd74d2e78229b2" prot="public" static="no">
        <type>std::function&lt; void() &gt;</type>
        <definition>using castor3d::OnCacheChangedFunction = typedef std::function&lt; void() &gt;</definition>
        <argsstring></argsstring>
        <name>OnCacheChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="507" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a3fb05f815296967cd2a326c37889117a" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a15cfe8c978fd65b8affd74d2e78229b2" kindref="member">OnCacheChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnCacheChanged = typedef castor::Signal &lt; OnCacheChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnCacheChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="508" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a4b11d3b47aef0309a9d64812f9db8a8d" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="d1/dc4/a05052" kindref="compound">AnimatedObjectGroup</ref>, castor::String &gt;</type>
        <definition>using castor3d::AnimatedObjectGroupCache = typedef Cache&lt; AnimatedObjectGroup, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>AnimatedObjectGroupCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="511" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a5ff5129097bd5199120eb145cf4dff7c" prot="public" static="no">
        <type><ref refid="da/d5c/a02432" kindref="compound">ObjectCache</ref>&lt; <ref refid="d5/d9c/a05152" kindref="compound">Camera</ref>, castor::String &gt;</type>
        <definition>using castor3d::CameraCache = typedef ObjectCache&lt; Camera, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>CameraCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="513" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1af80d1e19e33f2619207406d86fa25873" prot="public" static="no">
        <type><ref refid="da/d5c/a02432" kindref="compound">ObjectCache</ref>&lt; <ref refid="df/df0/a05160" kindref="compound">Geometry</ref>, castor::String &gt;</type>
        <definition>using castor3d::GeometryCache = typedef ObjectCache&lt; Geometry, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>GeometryCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="514" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a563d137a64a10483b6a4ba4b5174d05d" prot="public" static="no">
        <type><ref refid="da/d5c/a02432" kindref="compound">ObjectCache</ref>&lt; <ref refid="d8/de4/a05172" kindref="compound">Light</ref>, castor::String &gt;</type>
        <definition>using castor3d::LightCache = typedef ObjectCache&lt; Light, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>LightCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="515" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a8a331da2a26e8f8631ebbaa31af52fd8" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="d2/d08/a02532" kindref="compound">FrameListener</ref>, castor::String &gt;</type>
        <definition>using castor3d::FrameListenerCache = typedef Cache&lt; FrameListener, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>FrameListenerCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="516" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a828873a6c46ff01b4f649ea9ac974709" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="dc/dce/a03908" kindref="compound">Mesh</ref>, castor::String &gt;</type>
        <definition>using castor3d::MeshCache = typedef Cache&lt; Mesh, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>MeshCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="518" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ad78a6a1185b47fc82bf9bfc3c4c18319" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="d1/da3/a04100" kindref="compound">Overlay</ref>, castor::String &gt;</type>
        <definition>using castor3d::OverlayCache = typedef Cache&lt; Overlay, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>OverlayCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="519" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a9e1943413b7de78312e90967e6bb7f87" prot="public" static="no">
        <type><ref refid="da/d5c/a02432" kindref="compound">ObjectCache</ref>&lt; <ref refid="d6/dd5/a05228" kindref="compound">ParticleSystem</ref>, castor::String &gt;</type>
        <definition>using castor3d::ParticleSystemCache = typedef ObjectCache&lt; ParticleSystem, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>ParticleSystemCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="520" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a52c8393b17e84e1cb76d8d94d7bf7a41" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="db/d33/a04192" kindref="compound">Plugin</ref>, castor::String &gt;</type>
        <definition>using castor3d::PluginCache = typedef Cache&lt; Plugin, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>PluginCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="521" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a16f5cc271fe96b4f50aff2ddf93f4f89" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="dd/dc4/a02632" kindref="compound">Sampler</ref>, castor::String &gt;</type>
        <definition>using castor3d::SamplerCache = typedef Cache&lt; Sampler, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>SamplerCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="522" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a822072e1957c1b9701fc5242449ac6fd" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="d5/d76/a05244" kindref="compound">Scene</ref>, castor::String &gt;</type>
        <definition>using castor3d::SceneCache = typedef Cache&lt; Scene, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>SceneCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="523" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a21b3a2b12a3e12a0e15ca5a1ae59d890" prot="public" static="no">
        <type><ref refid="da/d5c/a02432" kindref="compound">ObjectCache</ref>&lt; <ref refid="da/d44/a05256" kindref="compound">SceneNode</ref>, castor::String &gt;</type>
        <definition>using castor3d::SceneNodeCache = typedef ObjectCache&lt; SceneNode, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>SceneNodeCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="524" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1abd124d17dab8b4a3379c78d515a71b24" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="da/d05/a04920" kindref="compound">RenderTechnique</ref>, castor::String &gt;</type>
        <definition>using castor3d::RenderTechniqueCache = typedef Cache&lt; RenderTechnique, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>RenderTechniqueCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="526" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a7835eef3a89d95c643fa85785294c315" prot="public" static="no">
        <type><ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; <ref refid="d4/d6d/a04636" kindref="compound">RenderWindow</ref>, castor::String &gt;</type>
        <definition>using castor3d::RenderWindowCache = typedef Cache&lt; RenderWindow, castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>RenderWindowCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="527" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1afac1e60fa99d3d75e0f331a4aa7f17a6" prot="public" static="yes" mutable="no">
        <type>const xchar *</type>
        <definition>const xchar* castor3d::InfoCacheCreatedObject</definition>
        <argsstring></argsstring>
        <name>InfoCacheCreatedObject</name>
        <initializer>= cuT( &quot;Cache::create - Created &quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="25" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="25" bodyend="-1"/>
        <referencedby refid="df/d46/a02376_1a40ce560883d2d3bc4e948cbd0a47b569" compoundref="d3/db1/a00200" startline="382" endline="388">castor3d::CacheBase&lt; Overlay, castor::String &gt;::doReportCreation</referencedby>
        <referencedby refid="d5/d04/a02428_1ab405bfd99e69c230efc69ab4b095d540" compoundref="d6/de1/a00233" startline="434" endline="440">castor3d::ObjectCacheBase&lt; BillboardList, castor::String &gt;::doReportCreation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1a986bed9024f19acb5a0d61a6a1573088" prot="public" static="yes" mutable="no">
        <type>const xchar *</type>
        <definition>const xchar* castor3d::WarningCacheDuplicateObject</definition>
        <argsstring></argsstring>
        <name>WarningCacheDuplicateObject</name>
        <initializer>= cuT( &quot;Cache::create - Duplicate &quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="26" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="26" bodyend="-1"/>
        <referencedby refid="df/d46/a02376_1adb2613cc9082f6d3ecb0639c0726201e" compoundref="d3/db1/a00200" startline="390" endline="396">castor3d::CacheBase&lt; Overlay, castor::String &gt;::doReportDuplicate</referencedby>
        <referencedby refid="d5/d04/a02428_1ade6b95376020032814e329727ac80f99" compoundref="d6/de1/a00233" startline="442" endline="448">castor3d::ObjectCacheBase&lt; BillboardList, castor::String &gt;::doReportDuplicate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1af51e9dca234ffa6c0f250b7d11bb1280" prot="public" static="yes" mutable="no">
        <type>const xchar *</type>
        <definition>const xchar* castor3d::WarningCacheNullObject</definition>
        <argsstring></argsstring>
        <name>WarningCacheNullObject</name>
        <initializer>= cuT( &quot;Cache::Insert - nullptr &quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="27" column="1" bodyfile="Cache/CacheModule.hpp" bodystart="27" bodyend="-1"/>
        <referencedby refid="df/d46/a02376_1af3cd6aabd6e0a4eda8177f0edf4ce18e" compoundref="d3/db1/a00200" startline="398" endline="402">castor3d::CacheBase&lt; Overlay, castor::String &gt;::doReportNull</referencedby>
        <referencedby refid="d5/d04/a02428_1a4237b4fb13d344ea69cfb591cf56f503" compoundref="d6/de1/a00233" startline="450" endline="454">castor3d::ObjectCacheBase&lt; BillboardList, castor::String &gt;::doReportNull</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9d20b6bde439da2bd29a460279f77f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(BillboardListCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1af40a7bd1adde19b724dfe6d6b21ff7f5" kindref="member">BillboardListCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/BillboardCache.hpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae5f6de0ebb7490c391200b0110b89516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(AnimatedObjectGroupCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a4b11d3b47aef0309a9d64812f9db8a8d" kindref="member">AnimatedObjectGroupCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7b0d2a2afd30efa18fb5624cb4fb4149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(BillboardUboPools)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/d8c/a02364" kindref="compound">BillboardUboPools</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad7d87fe57aaa42a88fd50f8c1471ab9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(CameraCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a5ff5129097bd5199120eb145cf4dff7c" kindref="member">CameraCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a56926805e6ece1db9fb13ef0837f0f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(GeometryCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1af80d1e19e33f2619207406d86fa25873" kindref="member">GeometryCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a668252f219b89f1e9c00bbaec29a0e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(LightCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a563d137a64a10483b6a4ba4b5174d05d" kindref="member">LightCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="535" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac1d980515aa8868577758d421121b393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(FrameListenerCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a8a331da2a26e8f8631ebbaa31af52fd8" kindref="member">FrameListenerCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9a551319c87d92c32bf988d598ea7aa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MaterialCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/d57/a02488" kindref="compound">MaterialCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae4cecc6cb4e7f3255f547ab4910bb62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(OverlayCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad78a6a1185b47fc82bf9bfc3c4c18319" kindref="member">OverlayCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae5eccacc869ba94559f7df46760d84d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(PluginCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a52c8393b17e84e1cb76d8d94d7bf7a41" kindref="member">PluginCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="541" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad31699723558612fd849b1263100a85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(RenderTargetCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d2/dab/a02516" kindref="compound">RenderTargetCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0593f439cd5ed6a192f27fa4679b48c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ShaderProgramCache)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/da2/a02512" kindref="compound">ShaderProgramCache</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/CacheModule.hpp" line="548" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Frame</header>
      <memberdef kind="enum" id="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>EventType</name>
        <enumvalue id="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870acbc7558471e9ec703d7240df431df7df" prot="public">
          <name>ePreRender</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This kind of event happens before any render, device context is active (so be fast !!). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870a650456d72476d9dfd1a0b1231e81ffe6" prot="public">
          <name>eQueueRender</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This kind of event happens after the render, before buffers&apos; swap. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870a34f9c5527e4bec73dc4510c65ad7744f" prot="public">
          <name>ePostRender</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This kind of event happens after the buffer&apos; swap. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  ePreRender</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Frame Event Type enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="26" column="1" bodyfile="Event/Frame/FrameEventModule.hpp" bodystart="24" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a028d2c3584f0b822a93c477c2638cffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(EventType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870" kindref="member">EventType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5110f50b81844e8c7d2c92b7189cafdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(CpuFrameEvent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="de/dec/a02524" kindref="compound">CpuFrameEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a301b04d7b39d0e0d5ad3c46bf4f9e9f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(FrameListener)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d2/d08/a02532" kindref="compound">FrameListener</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a50798ce85f817d05368524f2f236e0db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(GpuFrameEvent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/d24/a02536" kindref="compound">GpuFrameEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9fce6d62dd1e2f4f9d4ad0fbebd4285b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(CpuFunctorEvent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d8/d65/a02528" kindref="compound">CpuFunctorEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a60532a8947ea43564e788623cc5506a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(GpuFunctorEvent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d4/db0/a02540" kindref="compound">GpuFunctorEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aca45472bce6721b459dcb15f9b83e819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(CpuFrameEventUPtr, CpuFrameEventPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>CpuFrameEventUPtr</type>
        </param>
        <param>
          <type>CpuFrameEventPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a80a83e74e7e77ecd0ef0b1e5b53493db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(GpuFrameEventUPtr, GpuFrameEventPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>GpuFrameEventUPtr</type>
        </param>
        <param>
          <type>GpuFrameEventPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7359382079486fe9264fc2dcda7c077b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, FrameListenerSPtr, FrameListenerPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>FrameListenerSPtr</type>
        </param>
        <param>
          <type>FrameListenerPtrStr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/FrameEventModule.hpp" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>UserInput</header>
      <memberdef kind="enum" id="da/d1e/a01479_1abdf15c31ed466fee351daf42b2b45ad5" prot="public" static="no" strong="yes">
        <type></type>
        <name>UserInputEventType</name>
        <enumvalue id="da/d1e/a01479_1abdf15c31ed466fee351daf42b2b45ad5ad8962f641d3f9ae6a95e6d6ec3d800da" prot="public">
          <name>eMouse</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mouse event type. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abdf15c31ed466fee351daf42b2b45ad5a94367f202738af3ba279dbcd33c328c2" prot="public">
          <name>eKeyboard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Keyboard event type. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abdf15c31ed466fee351daf42b2b45ad5a17f345f51ad179e6811fb83bfe25f057" prot="public">
          <name>eHandler</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Handle event type. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abdf15c31ed466fee351daf42b2b45ad5ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abdf15c31ed466fee351daf42b2b45ad5abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eMouse</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abdf15c31ed466fee351daf42b2b45ad5a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Supported events types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="29" column="1" bodyfile="Event/UserInput/UserInputEventModule.hpp" bodystart="28" bodyend="40"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>MouseEventType</name>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578a5175cd668606a02b5f53f9ab8b873fd5" prot="public">
          <name>eMove</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The mouse moves. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578adb9b98d61dc7fd361b583a10bb05b55f" prot="public">
          <name>eEnter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The mouse enters an handler&apos;s zone. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578a49814cf348a68d7ed96988ce0171eb60" prot="public">
          <name>eHover</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The mouse remains still in an handler&apos;s zone during hover time. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578aec78346eb83e2b63319505bb747b3056" prot="public">
          <name>eLeave</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The mouse leaves an handler&apos;s zone. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578a54239af817da92b25f67fd8b119b95f7" prot="public">
          <name>ePushed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>One mouse button is pushed. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578a2510f1b02122481a64dbc59a183fc29d" prot="public">
          <name>eReleased</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>One mouse button is released. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578a76523a5594b29db09bfd2e2f221262f7" prot="public">
          <name>eWheel</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>One mouse wheel is rolled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eMove</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3c153b6d827714e22164290af1839578a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of supported mouse events. </para>
        </briefdescription>
        <detaileddescription>
<para>Enumération des évènement de souris supportés. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="52" column="1" bodyfile="Event/UserInput/UserInputEventModule.hpp" bodystart="50" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a1fb074d51d95c6d176d6227ff879a4dc" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>KeyboardEventType</name>
        <enumvalue id="da/d1e/a01479_1a1fb074d51d95c6d176d6227ff879a4dca54239af817da92b25f67fd8b119b95f7" prot="public">
          <name>ePushed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A key is pushed. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a1fb074d51d95c6d176d6227ff879a4dca2510f1b02122481a64dbc59a183fc29d" prot="public">
          <name>eReleased</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A key is released. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a1fb074d51d95c6d176d6227ff879a4dcaafb782cc71140479cad0e7d90215202b" prot="public">
          <name>eChar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A displayable char key is stroked. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a1fb074d51d95c6d176d6227ff879a4dcae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a1fb074d51d95c6d176d6227ff879a4dcabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  ePushed</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a1fb074d51d95c6d176d6227ff879a4dca66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of supported keyboard events. </para>
        </briefdescription>
        <detaileddescription>
<para>Enumération des évènement clavier supportés. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="87" column="1" bodyfile="Event/UserInput/UserInputEventModule.hpp" bodystart="85" bodyend="98"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1ad02e1e0fa1e7f38c3bd24f851e63355b" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>HandlerEventType</name>
        <enumvalue id="da/d1e/a01479_1ad02e1e0fa1e7f38c3bd24f851e63355ba577dcb34b932807211f5fcd972f767e0" prot="public">
          <name>eActivate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Handler activated. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad02e1e0fa1e7f38c3bd24f851e63355ba17f2dea63245494ccd3a41fa8d476a11" prot="public">
          <name>eDeactivate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Handler deactivated. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad02e1e0fa1e7f38c3bd24f851e63355bae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad02e1e0fa1e7f38c3bd24f851e63355babd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eActivate</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad02e1e0fa1e7f38c3bd24f851e63355ba66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of supported handler events. </para>
        </briefdescription>
        <detaileddescription>
<para>Enumération des évènements de gestionnaire supportées. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="110" column="1" bodyfile="Event/UserInput/UserInputEventModule.hpp" bodystart="108" bodyend="118"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a087f824502cd45431879fc5c96607682" prot="public" static="no" strong="yes">
        <type></type>
        <name>MouseButton</name>
        <enumvalue id="da/d1e/a01479_1a087f824502cd45431879fc5c96607682a97d352658db7b34c35502f9cd535e48b" prot="public">
          <name>eLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Left mouse button. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a087f824502cd45431879fc5c96607682ae0a327a72dd412c145feab665456b326" prot="public">
          <name>eMiddle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Middle mouse button. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a087f824502cd45431879fc5c96607682af47864efb86f863a0080026825b1303d" prot="public">
          <name>eRight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Right mouse button. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a087f824502cd45431879fc5c96607682ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a087f824502cd45431879fc5c96607682abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eLeft</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a087f824502cd45431879fc5c96607682a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Mouse buttons enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="129" column="1" bodyfile="Event/UserInput/UserInputEventModule.hpp" bodystart="128" bodyend="140"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7" prot="public" static="no" strong="yes">
        <type></type>
        <name>KeyboardKey</name>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7abe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7aa6678a358c55df18cf59da348aa0a556" prot="public">
          <name>eBackspace</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7aceae40230d2f0a107913c0a91afb4857" prot="public">
          <name>eTab</name>
          <initializer>= 0x0A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a2c091d8da97909917032da33ccc65e68" prot="public">
          <name>eReturn</name>
          <initializer>= 0x0D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7abac65ad2365fb7e108767e040d20eb63" prot="public">
          <name>eEscape</name>
          <initializer>= 0x1B</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7abbf977b55bd3701863e3adc69358426e" prot="public">
          <name>eSpace</name>
          <initializer>= 0x20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7adc483630592ca5333ad2e2bb7880256e" prot="public">
          <name>eDelete</name>
          <initializer>= 0x7F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a524b44eaa7970ff1451525cff91205a3" prot="public">
          <name>eStart</name>
          <initializer>= 0x100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a337c4979634b28df98534f99755f1a8d" prot="public">
          <name>eLButton</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a1ef8f7a483cbe11b2e7daf3dc13dc3b2" prot="public">
          <name>eRButton</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7afa517a41eb0fc0c836791ecd5d902b50" prot="public">
          <name>eCancel</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a1f7ac1a1dec4649b10d682f55a1243a7" prot="public">
          <name>eMButton</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a12d2d1d414af06fb57fe78152689fb6d" prot="public">
          <name>eClear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a9e62f71ce009d65471fccb01fdb3245d" prot="public">
          <name>eShift</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a449749529584a602aedac2269581bd74" prot="public">
          <name>eAlt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ae234b7ec5d85953adbeb894cccb72987" prot="public">
          <name>eControl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ae4f654dd61c2a97e0da4843c590b96a8" prot="public">
          <name>eMenu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7aedf03b0280a340c11186b6981a490903" prot="public">
          <name>ePause</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a377ca0e428c2ec4cd69b35f51b5a5ad0" prot="public">
          <name>eCapital</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7abcc187cb95316db4a37190acdecb7e50" prot="public">
          <name>eEnd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a528d11fa2db53949ee332e3e41ec3af4" prot="public">
          <name>eHome</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a97d352658db7b34c35502f9cd535e48b" prot="public">
          <name>eLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ade2a1951a10731843b364fde00833a23" prot="public">
          <name>eUp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7af47864efb86f863a0080026825b1303d" prot="public">
          <name>eRight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a37d8dcdda38e6ef3b6acbbacb8bf6d4e" prot="public">
          <name>edown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a4f8ec1fd49d3d259ab7ccd4ca711855c" prot="public">
          <name>eSelect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a5e846818304c7ba7394f80ac0bd336c0" prot="public">
          <name>ePrint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ad1bca66a3c46509e4ae9c28f9dbfb8a3" prot="public">
          <name>eExecute</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a12799aa1f8d598582cab06cbed4c28c2" prot="public">
          <name>eSnapshot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a04ae3e5dd67f2eb8376107c00dbb5adf" prot="public">
          <name>eInsert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a6716b9a96fcedcea37d21e7f1cba9741" prot="public">
          <name>eHelp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ae1eec543909db6931a903143afe7bf8b" prot="public">
          <name>eNumpad0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7abcc8097bbc17e136eb42cebfdec0335f" prot="public">
          <name>eNumpad1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a50086cc3646c960d1f5c960ea8117b53" prot="public">
          <name>eNumpad2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7addc2ea73d8b5bdc3f624341316f03083" prot="public">
          <name>eNumpad3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ab302857de24cb4ab9aad0bca59ca3d7a" prot="public">
          <name>eNumpad4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a9b812877fffcafaa5ecdb1d4b017463d" prot="public">
          <name>eNumpad5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7accb44cc9e46f7f4b3c7825be0b79062b" prot="public">
          <name>eNumpad6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a78438275958f002d6a7270925d94d098" prot="public">
          <name>eNumpad7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a442775db4a8c1087b7424468b21edda8" prot="public">
          <name>eNumpad8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ad2cd681b75bdaaeb7b85a46f8567fe1d" prot="public">
          <name>eNumpad9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a39b0e9c724d187849ea906a8d4cec3dd" prot="public">
          <name>eMultiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7af66bc36295aa880e68eda0fea125e579" prot="public">
          <name>eAdd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a7409277debcc6bf71fd12753cbff3696" prot="public">
          <name>eSeparator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a471fd71ac691d5a2df55502eaa7d8eb9" prot="public">
          <name>eSubtract</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a4bb7f5dcd2e5290e8ffa03e732916d28" prot="public">
          <name>eDecimal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ab810ea5e4669ce9cd4b0b7a614852654" prot="public">
          <name>eDivide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a3c398e549bb226459373d9406b883465" prot="public">
          <name>eF1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a71745a2f92f5b0fcf3d04d68826912f8" prot="public">
          <name>eF2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ac74b1fed69261f2bf52d81945e210f33" prot="public">
          <name>eF3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a651c5fa81a83ff975a169da776819530" prot="public">
          <name>eF4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a1f21e427c8a02981586087c31289c268" prot="public">
          <name>eF5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ad07e3252aa1ab535250d861e4ae8aed7" prot="public">
          <name>eF6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7aaa8f0a114c0b48dbdd042a07381b2840" prot="public">
          <name>eF7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a4b6d8cd7151c00674e1e0a7d6bc89595" prot="public">
          <name>eF8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a10d74d9a61e7072a7c415319f0fd719d" prot="public">
          <name>eF9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7abf4a171a8b0bd7ed6bc1a847324d1727" prot="public">
          <name>eF10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a35424be4c797534f2d07ae6c7051bfc5" prot="public">
          <name>eF11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a494c91c4cc3b84fa3809700bce11eb0a" prot="public">
          <name>eF12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7aaa15a8cdc38e9700c32cc855553b209d" prot="public">
          <name>eF13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a009470128c9e4d72527c34ce279474a7" prot="public">
          <name>eF14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a536c1152e8d4a04c247ed6ef7ca0d457" prot="public">
          <name>eF15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7af5615041f04e90613ac3009a02ff457a" prot="public">
          <name>eF16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7adb7177c6af7fd835a2f46e09f587ff12" prot="public">
          <name>eF17</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a2fb8f8d622b6f982c0c9da08f85482bc" prot="public">
          <name>eF18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a1f5a6df1d833a5dc8cf6d3aebe3b6246" prot="public">
          <name>eF19</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a947a26f3f828e44db197f81392aa9c35" prot="public">
          <name>eF20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7acaacfe86fb6919e6ddc131064b1fd819" prot="public">
          <name>eF21</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a798cba67a96e195aa1d6976fa3e8b2a5" prot="public">
          <name>eF22</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a9e75e1943152f059a45ff7adbc961391" prot="public">
          <name>eF23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a4c8304dece44017c460079c4b4f2155f" prot="public">
          <name>eF24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a33737403595e3f4ea027509188f21555" prot="public">
          <name>eNumlock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a5545304b83f07c1afc2b54903a20898e" prot="public">
          <name>eScroll</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a7e60fa5ac0a63018a7db7f7ba7232f8f" prot="public">
          <name>ePageUp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a18fb3a0b50a3af341e5854c07428e6f5" prot="public">
          <name>ePageDown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a1656196718bd27b5fc8f3e2f9e416b64" prot="public">
          <name>eNumpadSpace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a444741cbd630ca3d66cadcf0052aa723" prot="public">
          <name>eNumpadTab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7af41a1271e9316ae709dabd8cb13a0f18" prot="public">
          <name>eNumpadEnter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ae77d1db8c059f09ddea7efbd4600c99a" prot="public">
          <name>eNumpadF1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a48c4e9052e2795081f14fe5a528c579f" prot="public">
          <name>eNumpadF2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a28ca72f1e1e02506ea8507432a55a664" prot="public">
          <name>eNumpadF3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a4071df5d7fc67c1489fdf7a6f6606e5b" prot="public">
          <name>eNumpadF4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a02e6465f0e727cfa3ab2f80e1948dbe7" prot="public">
          <name>eNumpadHome</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a7dc57d17b5105da2aa01d61901e3340a" prot="public">
          <name>eNumpadLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a016c4ba77b3ee9209424f24a8161b9fb" prot="public">
          <name>eNumpadUp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7aba72bec7891d1f34b8c03e5cfe379edf" prot="public">
          <name>eNumpadRight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a357d6453fd284fa58dbd9868ebadb629" prot="public">
          <name>eNumpadDown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a31250a09801c662d6c6bc1daebecd45a" prot="public">
          <name>eNumpadPageUp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a24a612e1510c09a973edc4bbf377baad" prot="public">
          <name>eNumpadPageDown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a9cf7e554daf04ded92a4e295ab9897b1" prot="public">
          <name>eNumpadEnd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a628802a297606bbf257fa62c46efe0e1" prot="public">
          <name>eNumpadBegin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ae265fbfc2b6823a71d8df0c2bbd61837" prot="public">
          <name>eNumpadInsert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a167ee7b9da71e61ddc2225355b6cbc65" prot="public">
          <name>eNumpadDelete</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7aa9a3770406cd72e54dd5f73f19f002cc" prot="public">
          <name>eNumpadEqual</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ac034dbaa0b92e8f7bf79e3ab63d94c82" prot="public">
          <name>eNumpadMultiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7ae23d0c28e5ddb250958800fa74bd89ad" prot="public">
          <name>eNumpadAdd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a88252f0df5f7f79a61c8fbb5678ef035" prot="public">
          <name>eNumpadSeparator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7aa40237f78562faa10014fa854bb1a5d9" prot="public">
          <name>eNumpadSubtract</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a87518b5c3d0c8cc7fb20ed76e11b939d" prot="public">
          <name>eNumpadDecimal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad372dd0cc65f28ad7f558f07c78becb7a366d538cfaf23dafec21d569df1855bf" prot="public">
          <name>eNumpadDivide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Keyboard keys enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="151" column="1" bodyfile="Event/UserInput/UserInputEventModule.hpp" bodystart="150" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9bb9470455fdcab80364d0ebb86da5b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(UserInputEventType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1abdf15c31ed466fee351daf42b2b45ad5" kindref="member">UserInputEventType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adfde1ff0eb88219e61ebecd37462cddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(MouseEventType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a3c153b6d827714e22164290af1839578" kindref="member">MouseEventType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8b3b1829dcbe65d5c33ae8568ec5d3e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(KeyboardEventType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a1fb074d51d95c6d176d6227ff879a4dc" kindref="member">KeyboardEventType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a38b65e197977b939dc24b90e6d38bc1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(HandlerEventType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad02e1e0fa1e7f38c3bd24f851e63355b" kindref="member">HandlerEventType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2f71bf14086239c3bd93c1875e8b9352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(MouseButton value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a087f824502cd45431879fc5c96607682" kindref="member">MouseButton</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a55b5b6ab6dd1aa4c599fd770f0256ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(EventHandler)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/df6/a02544" kindref="compound">EventHandler</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1f786c34647baa408eb22f2f1ec7a354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(UserInputEvent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/d81/a02568" kindref="compound">UserInputEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af4f304cbc696fa2992fed161eb46e6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(KeyboardEvent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/d03/a02560" kindref="compound">KeyboardEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2b2389500549a8d6900035f8c27afffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MouseEvent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/d44/a02564" kindref="compound">MouseEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a89fe8fcd664f6b4ded69da23a5ded8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(HandlerEvent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/d32/a02556" kindref="compound">HandlerEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8e5960c84a249b255affbf4bedf467b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(UserInputListener)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d7/d66/a02580" kindref="compound">UserInputListener</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/UserInput/UserInputEventModule.hpp" line="384" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Material</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7a" prot="public" static="no" strong="yes">
        <type></type>
        <name>MaterialType</name>
        <enumvalue id="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7aae24e2ceb8935bc97009d91183e8e1d4a" prot="public">
          <name>ePhong</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Phong (non PBR). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7aa070a8071cbe82751a559d66b7cc85024" prot="public">
          <name>eMetallicRoughness</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Metallic/Roughness PBR. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7aa338e6b5b6307b7010d733957a7bdd4e9" prot="public">
          <name>eSpecularGlossiness</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specular/Glossiness PBR. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7aae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7aabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  ePhong</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7aa66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Supported material types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="25" column="1" bodyfile="Material/MaterialModule.hpp" bodystart="24" bodyend="36"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742" prot="public" static="no" strong="yes">
        <type>uint16_t</type>
        <name>TextureFlag</name>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742abe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No texture. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742a3761036d7c3160ec232daf68c2954151" prot="public">
          <name>eHeight</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Height map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742aa3a957357b758bcbb55d221bf975b545" prot="public">
          <name>eOpacity</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Opacity map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742ab4f88a7e09f780f6246448ebb0f6a44b" prot="public">
          <name>eNormal</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Normal map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742affa860c82cbc36d9b98677787f8b250c" prot="public">
          <name>eEmissive</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Emissive map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742a44d60a032c3058ba73d192d2caac51aa" prot="public">
          <name>eOcclusion</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Occlusion map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742a3d90465aca21d547a7640dc26592f050" prot="public">
          <name>eTransmittance</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d8/de4/a05172" kindref="compound">Light</ref> transmittance map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742a32997c8a5f76ab8215ad2ef2e093418a" prot="public">
          <name>eDiffuse</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Diffuse map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742ab217ed1793a407e18f52c4491f20b4c1" prot="public">
          <name>eAlbedo</name>
          <initializer>= eDiffuse</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Albedo map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742aff5c79b4447f084037c3a309bb0154a7" prot="public">
          <name>eSpecular</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specular map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742af42928970588685c2c66854a6dc3e8e0" prot="public">
          <name>eMetalness</name>
          <initializer>= eSpecular</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Metalness map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742aa98371b1fb1b8c716974b4541c8dd516" prot="public">
          <name>eGlossiness</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Glossiness map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742afaf5e1c1cc0d3d1e6e89f86d82847a00" prot="public">
          <name>eShininess</name>
          <initializer>= eGlossiness</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shininess map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742a34ff1b4954999035b0b1999d42ad8a7a" prot="public">
          <name>eRoughness</name>
          <initializer>= eGlossiness</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Roughness map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742a205a605c9a22391af5e09fa60fe30678" prot="public">
          <name>eAll</name>
          <initializer>= 0x1FF</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for all the texture channels. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742a1f9247320532faa706af15f0c08b7fb3" prot="public">
          <name>eAllButOpacity</name>
          <initializer>= eAll &amp; ~( eOpacity )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for all the texture channels except for opacity. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742a502ba1849091b060daca66fd267408e0" prot="public">
          <name>eAllButColourAndOpacity</name>
          <initializer>= eAllButOpacity &amp; ~( eDiffuse )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for all the texture channels except for opacity and colour. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742ae1dcf9bfcd9a97836f5a113defda520a" prot="public">
          <name>eAllButNormalAndOpacity</name>
          <initializer>= eAllButOpacity &amp; ~( eNormal )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for all the texture channels except for opacity and normal. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Texture channels flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="48" column="1" bodyfile="Material/MaterialModule.hpp" bodystart="46" bodyend="103"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a3b9e457486b668463148ebc06850f3ac" prot="public" static="no">
        <type>castor::FlagCombination&lt; <ref refid="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742" kindref="member">TextureFlag</ref> &gt;</type>
        <definition>using castor3d::TextureFlags = typedef castor::FlagCombination&lt; TextureFlag &gt;</definition>
        <argsstring></argsstring>
        <name>TextureFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="104" column="1" bodyfile="Material/MaterialModule.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1afa51b269ca00eaeff4f95f361bf2208f" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d4/d61/a02588" kindref="compound">TextureFlagsId</ref> &gt;</type>
        <definition>using castor3d::TextureFlagsArray = typedef std::vector&lt; TextureFlagsId &gt;</definition>
        <argsstring></argsstring>
        <name>TextureFlagsArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="113" column="1" bodyfile="Material/MaterialModule.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1af622fe4186b12c4595e1c3c6052e7b46" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="dc/d28/a02584" kindref="compound">Material</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnMaterialChangedFunction = typedef std::function&lt; void( Material const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnMaterialChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="137" column="1" bodyfile="Material/MaterialModule.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a1b974f5f177fb1d55d0747c49a60ebd1" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1af622fe4186b12c4595e1c3c6052e7b46" kindref="member">OnMaterialChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnMaterialChanged = typedef castor::Signal&lt; OnMaterialChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnMaterialChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="138" column="1" bodyfile="Material/MaterialModule.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a6e8f04f616511ce6c63410c7c04d6965" prot="public" static="no">
        <type>OnMaterialChanged::connection</type>
        <definition>using castor3d::OnMaterialChangedConnection = typedef OnMaterialChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnMaterialChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="139" column="1" bodyfile="Material/MaterialModule.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac87135d4366e56f32f962bf6f22c9b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(MaterialType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7a" kindref="member">MaterialType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af97fe4599cbf5929e188f5d5bcd062bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(TextureFlag value, MaterialType material)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742" kindref="member">TextureFlag</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a90306964da63b9bbc97f4e205ecc5b7a" kindref="member">MaterialType</ref></type>
          <declname>material</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac7f0bbbd51ef75d0185581adc5e92f86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator==</definition>
        <argsstring>(TextureFlagsId const &amp;lhs, TextureFlagsId const &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="d4/d61/a02588" kindref="compound">TextureFlagsId</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="d4/d61/a02588" kindref="compound">TextureFlagsId</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2d2b3957138f2bc76d96794c9986d8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Material)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/d28/a02584" kindref="compound">Material</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a08e837303a0356c991754465f3eb7561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(MaterialSPtr, MaterialPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>MaterialSPtr</type>
        </param>
        <param>
          <type>MaterialPtr</type>
        </param>
        <briefdescription>
<para><ref refid="dc/d28/a02584" kindref="compound">Material</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a305b0484592964a58b9bdbf77d20e5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, MaterialSPtr, MaterialPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>MaterialSPtr</type>
        </param>
        <param>
          <type>MaterialPtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="dc/d28/a02584" kindref="compound">Material</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4931bc50f71f6cd9c0f1de8e892ab63a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(uint32_t, MaterialSPtr, MaterialPtrUInt)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>uint32_t</type>
        </param>
        <param>
          <type>MaterialSPtr</type>
        </param>
        <param>
          <type>MaterialPtrUInt</type>
        </param>
        <briefdescription>
<para><ref refid="dc/d28/a02584" kindref="compound">Material</ref> pointer map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa3963d1fef0407476d5876192f88b7b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> VkFormat</type>
        <definition>C3D_API VkFormat castor3d::convert</definition>
        <argsstring>(castor::PixelFormat format)</argsstring>
        <name>convert</name>
        <param>
          <type>castor::PixelFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a064de9e25a2410e61be74c141db9bada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::PixelFormat</type>
        <definition>C3D_API castor::PixelFormat castor3d::convert</definition>
        <argsstring>(VkFormat format)</argsstring>
        <name>convert</name>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/MaterialModule.hpp" line="142" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Pass</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a808c81c0da4ffd2515292e95b6b4c124" prot="public" static="no" strong="yes">
        <type></type>
        <name>ParallaxOcclusionMode</name>
        <enumvalue id="da/d1e/a01479_1a808c81c0da4ffd2515292e95b6b4c124abe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a808c81c0da4ffd2515292e95b6b4c124a14e829df2f6aded577b1326558cec415" prot="public">
          <name>eOne</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a808c81c0da4ffd2515292e95b6b4c124a63a63e3fefbb6e5459aa2e951740c277" prot="public">
          <name>eRepeat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a808c81c0da4ffd2515292e95b6b4c124ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a808c81c0da4ffd2515292e95b6b4c124abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eNone</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a808c81c0da4ffd2515292e95b6b4c124a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Parallax occlusion modes enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="27" column="1" bodyfile="Material/Pass/PassModule.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90fa" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>BlendMode</name>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faa12c10e6e0388d587340cfbe98b5045ae" prot="public">
          <name>eNoBlend</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Order dependent blending. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faa0b80141c50fc5876012b5102b1fcb1f7" prot="public">
          <name>eAdditive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Order independent, add the components. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faa2cc14c82df3b5270ab26c49615c482e0" prot="public">
          <name>eMultiplicative</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Order independent, multiply the components. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faaa4e85c2fb91498174c36601adcf73ecc" prot="public">
          <name>eInterpolative</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Order dependent, interpolate the components. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faad9393a6717aac3d9eaddfcf8f3756f1d" prot="public">
          <name>eABuffer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Order independent, using A-buffer, not implemented yet. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faa39d868e3a5a9e88224a09a4261d6dd38" prot="public">
          <name>eDepthPeeling</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Order independent, using depth peeling, not implemented yet. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eNoBlend</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90faa66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Blending modes enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="44" column="1" bodyfile="Material/Pass/PassModule.hpp" bodystart="42" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70" prot="public" static="no" strong="yes">
        <type>uint16_t</type>
        <name>PassFlag</name>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70abe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
<para>No flag. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70ae5e77b3edc9ed33970628e4e728f6fd2" prot="public">
          <name>eAlphaBlending</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
<para>Shader using alpha blending. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70aea407def15794b188d6f372aa0f68fb5" prot="public">
          <name>eAlphaTest</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
<para>Shader using alpha test. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70a070a8071cbe82751a559d66b7cc85024" prot="public">
          <name>eMetallicRoughness</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
<para>Shader for Metallic/Roughness PBR material (if not set, will use phong material code). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70a338e6b5b6307b7010d733957a7bdd4e9" prot="public">
          <name>eSpecularGlossiness</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
<para>Shader for Specular/Glossiness PBR material (if not set, will use phong material code). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70ae5ecc06beb78c6d10266c1300fc8ca9c" prot="public">
          <name>eSubsurfaceScattering</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
<para>Shader for Subsurface Scattering. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70a881fe79f5a5f48a4d0fa573e2a64084b" prot="public">
          <name>eDistanceBasedTransmittance</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
<para>Shader using distance based transmittance when computing Subsurface Scattering. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70a25a594e1089909d809208217ff1a9a61" prot="public">
          <name>eParallaxOcclusionMappingOne</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
<para>Shader using parallax occlusion mapping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70a377c872177b0bdcb0293a77685da6f24" prot="public">
          <name>eParallaxOcclusionMappingRepeat</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
<para>Shader using parallax occlusion mapping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70a49372576420361b2038ec90fd3f0c8ea" prot="public">
          <name>eReflection</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reflection map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70afbec80e794f5343bd4aa64902f433ede" prot="public">
          <name>eRefraction</name>
          <initializer>= 0x0200</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Refraction map. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70a205a605c9a22391af5e09fa60fe30678" prot="public">
          <name>eAll</name>
          <initializer>= 0x03FF</initializer>
          <briefdescription>
<para>All flags. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="df/d5d/a02596" kindref="compound">Pass</ref> specific flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="76" column="1" bodyfile="Material/Pass/PassModule.hpp" bodystart="74" bodyend="113"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a69e89af11c4c9247dce7ee99a21090fc" prot="public" static="no">
        <type>castor::FlagCombination&lt; <ref refid="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70" kindref="member">PassFlag</ref> &gt;</type>
        <definition>using castor3d::PassFlags = typedef castor::FlagCombination&lt; PassFlag &gt;</definition>
        <argsstring></argsstring>
        <name>PassFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="114" column="1" bodyfile="Material/Pass/PassModule.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a21bf4d4fe0de4815ca6a0af040d943bf" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="df/d5d/a02596" kindref="compound">Pass</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnPassChangedFunction = typedef std::function&lt; void( Pass const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnPassChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="243" column="1" bodyfile="Material/Pass/PassModule.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a8f41976f3fab2b68a985555b1b88523e" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a21bf4d4fe0de4815ca6a0af040d943bf" kindref="member">OnPassChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnPassChanged = typedef castor::Signal&lt; OnPassChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnPassChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="244" column="1" bodyfile="Material/Pass/PassModule.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a53125ebeccd59c39556a280b619e42cc" prot="public" static="no">
        <type>OnPassChanged::connection</type>
        <definition>using castor3d::OnPassChangedConnection = typedef OnPassChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnPassChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="245" column="1" bodyfile="Material/Pass/PassModule.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a44f68a395b44f9cd50e3d2e2a12d6e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(ParallaxOcclusionMode value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a808c81c0da4ffd2515292e95b6b4c124" kindref="member">ParallaxOcclusionMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a35386236fd76d4248d54147346d4bc53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(BlendMode value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a840ab6fd50c1a08fcc1b6dc3f98d90fa" kindref="member">BlendMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab4a5a0bd520c837c5cd8396e73eb78ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(PassFlag value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a043cb84a97fa62d2b78e9f4ec3238f70" kindref="member">PassFlag</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae122523e74e13effe07b6ce269d2d513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Pass)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="df/d5d/a02596" kindref="compound">Pass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9147f8a779b83367d34925a9ccbd79ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(PhongPass)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/dca/a02616" kindref="compound">PhongPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab18439975b7846220f18091f870bf8c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MetallicRoughnessPbrPass)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/df5/a02592" kindref="compound">MetallicRoughnessPbrPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0a0ad2ab5a559bd141c5c65cf2c2cf0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SpecularGlossinessPbrPass)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/d64/a02620" kindref="compound">SpecularGlossinessPbrPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0a6b2cd81bad9e780d004c0d3b651d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SubsurfaceScattering)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d8/d09/a02624" kindref="compound">SubsurfaceScattering</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a04ac47935a3173c9302903d5974c90a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(Pass, Pass)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="df/d5d/a02596" kindref="compound">Pass</ref></type>
        </param>
        <param>
          <type><ref refid="df/d5d/a02596" kindref="compound">Pass</ref></type>
        </param>
        <briefdescription>
<para><ref refid="df/d5d/a02596" kindref="compound">Pass</ref> array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7bed0d44c757730f7e98c1a0709b9bee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(PassSPtr, PassPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>PassSPtr</type>
        </param>
        <param>
          <type>PassPtr</type>
        </param>
        <briefdescription>
<para><ref refid="df/d5d/a02596" kindref="compound">Pass</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/PassModule.hpp" line="241" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Texture</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066fa" prot="public" static="no" strong="yes">
        <type>uint16_t</type>
        <name>TextureSpace</name>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faa191d0b2eb45d7d9a428f016bd34a7912" prot="public">
          <name>eNormalised</name>
          <initializer>= 0x0001 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Modifier: Normalized value (Colour in [-1, 1] range, depth in [0, 1] range). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faab794695689d4ee74046ab3f02915112c" prot="public">
          <name>eYInverted</name>
          <initializer>= 0x0001 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Modifier: Y inverted space. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faa933e146a34d99e16a319642574089a34" prot="public">
          <name>eColour</name>
          <initializer>= 0x0001 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Colour texture in R. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faa2a37044e2d0bed7cbb63527176543d73" prot="public">
          <name>eDepth</name>
          <initializer>= 0x0001 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Depth in [near, far] range. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faa86b9748dc9ef62c95bc512169ea28e42" prot="public">
          <name>eTangentSpace</name>
          <initializer>= 0x0001 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Tangent space data. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faa13ae4e59eecd70c7bbd1e04bcaf4972a" prot="public">
          <name>eObjectSpace</name>
          <initializer>= 0x0001 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Object space data. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faad2b5722680c0d6238d583746bb8b698d" prot="public">
          <name>eWorldSpace</name>
          <initializer>= 0x0001 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>World space data. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faa347c31380f35ea049138b555e6e0d8a8" prot="public">
          <name>eViewSpace</name>
          <initializer>= 0x0001 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>View space data. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faabaa95c8eaac4fe07302026061d195867" prot="public">
          <name>eClipSpace</name>
          <initializer>= 0x0001 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clip space data. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066faa4432dfcffbc353a6a91b14e435a86939" prot="public">
          <name>eStencil</name>
          <initializer>= 0x0001 &lt;&lt; 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stencil data. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Lists the possible spaces for a texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="28" column="1" bodyfile="Material/Texture/TextureModule.hpp" bodystart="26" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5b" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>CubeMapFace</name>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5bacc59047f06837f8c0db9cd429f1c5c08" prot="public">
          <name>ePositiveX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="de/dce/a03932" kindref="compound">Face</ref> on positive X </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5ba754412e7036bfe01a7d10fe981b68efc" prot="public">
          <name>eNegativeX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="de/dce/a03932" kindref="compound">Face</ref> on negative X </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5ba3de4abe6181dc68f01f4febd66e945b2" prot="public">
          <name>ePositiveY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="de/dce/a03932" kindref="compound">Face</ref> on positive Y </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5bacd7e053a41aa341d11f813d1a98d8d18" prot="public">
          <name>eNegativeY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="de/dce/a03932" kindref="compound">Face</ref> on negative Y </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5ba4d5452e14115db09d7130b9c7fea2ba0" prot="public">
          <name>ePositiveZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="de/dce/a03932" kindref="compound">Face</ref> on positive Z </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5ba895f179887a3a8ebc53bd0490d9c89d0" prot="public">
          <name>eNegativeZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="de/dce/a03932" kindref="compound">Face</ref> on negative Z </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5bae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5babd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  ePositiveX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5ba66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d0/d84/a03872" kindref="compound">Cube</ref> map faces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="73" column="1" bodyfile="Material/Texture/TextureModule.hpp" bodystart="71" bodyend="93"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1afe549172d005d19fc59b15fe55459188" prot="public" static="no">
        <type>castor::FlagCombination&lt; <ref refid="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066fa" kindref="member">TextureSpace</ref> &gt;</type>
        <definition>using castor3d::TextureSpaces = typedef castor::FlagCombination&lt; TextureSpace &gt;</definition>
        <argsstring></argsstring>
        <name>TextureSpaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="60" column="1" bodyfile="Material/Texture/TextureModule.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a44079b868e0c963d2e4f986fd3974da4" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnTextureUnitChangedFunction = typedef std::function&lt; void( TextureUnit const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnTextureUnitChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="171" column="1" bodyfile="Material/Texture/TextureModule.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a34f09b46e81326dad2a93e46662879c2" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a44079b868e0c963d2e4f986fd3974da4" kindref="member">OnTextureUnitChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnTextureUnitChanged = typedef castor::Signal&lt; OnTextureUnitChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnTextureUnitChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="172" column="1" bodyfile="Material/Texture/TextureModule.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a6ae7d77dc89074ad35509a3b144cb04d" prot="public" static="no">
        <type>OnTextureUnitChanged::connection</type>
        <definition>using castor3d::OnTextureUnitChangedConnection = typedef OnTextureUnitChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnTextureUnitChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="173" column="1" bodyfile="Material/Texture/TextureModule.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afea474fb8bcc3f7ccb0d86fd74076fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(TextureSpace value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a25bb1f0235e1c248f89ec5430ef066fa" kindref="member">TextureSpace</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa19e04e7eb9b05a8f669a5c93ffa207b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(TextureSpaces value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afe549172d005d19fc59b15fe55459188" kindref="member">TextureSpaces</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a92937540614728e0e13b4fbe37cada87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(CubeMapFace value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8eeda0d3e5d4155fd7a49762d2e31f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Sampler)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dd/dc4/a02632" kindref="compound">Sampler</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa6a173ce3fbda2b78b06bd8ed8b08eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureLayout)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d2/d7d/a02656" kindref="compound">TextureLayout</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab2323658582028d4dbb47f9a24140b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureSource)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="de/d7b/a02660" kindref="compound">TextureSource</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a153987cfe5bae3fbbcd36642901405a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureUnit)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a150cc785538446d2b789c00b5b72c9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureView)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/d5b/a02668" kindref="compound">TextureView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a869bf046504587ed3d2e23600ff38fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(TextureUnit, TextureUnit)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref></type>
        </param>
        <param>
          <type><ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref></type>
        </param>
        <briefdescription>
<para><ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref> array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad830f982613bf97f3d80557bbc793d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(TextureUnitSPtr, TextureUnitPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>TextureUnitSPtr</type>
        </param>
        <param>
          <type>TextureUnitPtr</type>
        </param>
        <briefdescription>
<para><ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9a7c2e4c5e43a2b355f15cf40df02a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(std::reference_wrapper&lt; TextureUnit &gt;, DepthMap)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>std::reference_wrapper&lt; <ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref> &gt;</type>
        </param>
        <param>
          <type>DepthMap</type>
        </param>
        <briefdescription>
<para><ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref> reference array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a60828ba4923f2ce055e38d4fefe81efb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, TextureLayout const &amp;layout)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="d2/d7d/a02656" kindref="compound">TextureLayout</ref> const &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureModule.hpp" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abe43d9cc2695a772cc07c6d07aae107e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureAnimationInstance)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/da5/a05100" kindref="compound">TextureAnimationInstance</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Texture/TextureAnimationModule.hpp" line="28" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="da/d1e/a01479_1aecef3f04669a851895a9254e74ff91fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator==</definition>
        <argsstring>(TextureConfiguration const &amp;lhs, TextureConfiguration const &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="dd/d32/a02636" kindref="compound">TextureConfiguration</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="dd/d32/a02636" kindref="compound">TextureConfiguration</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Comparison operators. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureConfiguration.hpp" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8a465798a2305988e318f4c554507bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator!=</definition>
        <argsstring>(TextureConfiguration const &amp;lhs, TextureConfiguration const &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="dd/d32/a02636" kindref="compound">TextureConfiguration</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="dd/d32/a02636" kindref="compound">TextureConfiguration</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureConfiguration.hpp" line="124" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a592ae630c434fe2af95c3eefcc900698" prot="public" static="no" strong="yes">
        <type>uint32_t</type>
        <name>GpuFeature</name>
        <enumvalue id="da/d1e/a01479_1a592ae630c434fe2af95c3eefcc900698ad427bacfb2917febdb3d7159276612e0" prot="public">
          <name>eStereoRendering</name>
          <initializer>= 0x00000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Tells whether or not the selected render API supports stereographic rendering. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a592ae630c434fe2af95c3eefcc900698aceb457852896087c2fd755b19274b164" prot="public">
          <name>eShaderStorageBuffers</name>
          <initializer>= 0x00000002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Tells whether or not the selected render API supports shader stoarage buffers. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>All supported GPU feature flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/MiscellaneousModule.hpp" line="24" column="1" bodyfile="Miscellaneous/MiscellaneousModule.hpp" bodystart="22" bodyend="31"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6" prot="public" static="no" strong="yes">
        <type>uint32_t</type>
        <name>GpuMax</name>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6acd4095365ebc389b0fe1d413469900c0" prot="public">
          <name>eTexture1DSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a339584c12c18a18265ec95beb6f5f176" prot="public">
          <name>eTexture2DSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a3a2d0395d7c4daf8e985ebc5b38aa60b" prot="public">
          <name>eTexture3DSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a5bbc40da5e8ce63cd05a9fc884965020" prot="public">
          <name>eTextureCubeSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a77bd8dbce9c1a209f84119050993c0d8" prot="public">
          <name>eTextureLayers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6af3317420066b2634177bf716958a67a8" prot="public">
          <name>eSamplerLodBias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a1621abda3b80157790e505405d09539b" prot="public">
          <name>eClipDistances</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6aadadb1b67e6e043cd7057ba46d3377bf" prot="public">
          <name>eFramebufferWidth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a31b8fcd31fbc77783725396e698bca68" prot="public">
          <name>eFramebufferHeight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a516e076a5ef681929b507e1978cefe66" prot="public">
          <name>eFramebufferLayers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a4b20819f6525fed998e85ea7d399564b" prot="public">
          <name>eFramebufferSamples</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6aec64edcb26770a020d76b49e3b87e87a" prot="public">
          <name>eTexelBufferSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a317122f405c9b014c1f3f5a051ec0560" prot="public">
          <name>eUniformBufferSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a0734813a821a46986110602aa45b25d0" prot="public">
          <name>eStorageBufferSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a29ce762a899a250a944ed2e8d8bddf53" prot="public">
          <name>eViewportWidth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6abc9c4b888946596853a7236a9ca38c33" prot="public">
          <name>eViewportHeight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a135313f4b9b9d201e5e48a13e0ede08b" prot="public">
          <name>eViewports</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eTexture1DSize</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aa8db7fdfd75692716c162f6d6c1b9cb6a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>All supported GPU feature flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/MiscellaneousModule.hpp" line="43" column="1" bodyfile="Miscellaneous/MiscellaneousModule.hpp" bodystart="41" bodyend="62"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a5a9b5f4cf020bb0542dcb66762b8f3ef" prot="public" static="no">
        <type>castor::FlagCombination&lt; <ref refid="da/d1e/a01479_1a592ae630c434fe2af95c3eefcc900698" kindref="member">GpuFeature</ref> &gt;</type>
        <definition>using castor3d::GpuFeatures = typedef castor::FlagCombination&lt; GpuFeature &gt;</definition>
        <argsstring></argsstring>
        <name>GpuFeatures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/MiscellaneousModule.hpp" line="32" column="1" bodyfile="Miscellaneous/MiscellaneousModule.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1acd099f112fdafb8d7d06ba8dc9cf4a47" prot="public" static="no">
        <type><ref refid="d0/d8e/a03828" kindref="compound">ParametersT</ref>&lt; castor::String &gt;</type>
        <definition>using castor3d::Parameters = typedef ParametersT&lt; castor::String &gt;</definition>
        <argsstring></argsstring>
        <name>Parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/MiscellaneousModule.hpp" line="189" column="1" bodyfile="Miscellaneous/MiscellaneousModule.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a893875a9355f4e42558fb115eab3c078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::DeviceMemoryPtr</type>
        <definition>C3D_API ashes::DeviceMemoryPtr castor3d::setupMemory</definition>
        <argsstring>(ashes::Device const &amp;device, VkMemoryRequirements const &amp;requirements, VkMemoryPropertyFlags flags, std::string const &amp;name)</argsstring>
        <name>setupMemory</name>
        <param>
          <type>ashes::Device const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkMemoryRequirements const &amp;</type>
          <declname>requirements</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/MiscellaneousModule.hpp" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a49e073a034b3359695492b4c466aa58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::DeviceMemoryPtr</type>
        <definition>C3D_API ashes::DeviceMemoryPtr castor3d::setupMemory</definition>
        <argsstring>(RenderDevice const &amp;device, VkMemoryRequirements const &amp;requirements, VkMemoryPropertyFlags flags, std::string const &amp;name)</argsstring>
        <name>setupMemory</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkMemoryRequirements const &amp;</type>
          <declname>requirements</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/MiscellaneousModule.hpp" line="196" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Model</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1a0fd1d0e91104369d815dacc20c10f0b4" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="d9/def/a04004" kindref="compound">InterleavedVertexT</ref>&lt; T &gt; &gt;</type>
        <definition>using castor3d::InterleavedVertexTArray = typedef std::vector&lt; InterleavedVertexT&lt; T &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>InterleavedVertexTArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/ModelModule.hpp" line="39" column="1" bodyfile="Model/ModelModule.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1abe36058ac642536d26cfcc7f2931e62c" prot="public" static="no">
        <type><ref refid="d9/def/a04004" kindref="compound">InterleavedVertexT</ref>&lt; float &gt;</type>
        <definition>using castor3d::InterleavedVertex = typedef InterleavedVertexT&lt; float &gt;</definition>
        <argsstring></argsstring>
        <name>InterleavedVertex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/ModelModule.hpp" line="41" column="1" bodyfile="Model/ModelModule.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1acc83a5f6efdad2c69d185e0595e52b4d" prot="public" static="no">
        <type><ref refid="da/d1e/a01479_1a0fd1d0e91104369d815dacc20c10f0b4" kindref="member">InterleavedVertexTArray</ref>&lt; float &gt;</type>
        <definition>using castor3d::InterleavedVertexArray = typedef InterleavedVertexTArray&lt; float &gt;</definition>
        <argsstring></argsstring>
        <name>InterleavedVertexArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/ModelModule.hpp" line="42" column="1" bodyfile="Model/ModelModule.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2cbcb97cc3b52da785026949c5ad805f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(SubmeshVertex, SubmeshVertex)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="d4/d3a/a04056" kindref="compound">SubmeshVertex</ref></type>
        </param>
        <param>
          <type><ref refid="d4/d3a/a04056" kindref="compound">SubmeshVertex</ref></type>
        </param>
        <briefdescription>
<para><ref refid="d4/d3a/a04056" kindref="compound">SubmeshVertex</ref> array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/ModelModule.hpp" line="36" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Mesh</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1a4a51cb6a3099a7bec1f37adc2519667d" prot="public" static="no">
        <type>castor::Factory&lt; <ref refid="d7/d01/a03920" kindref="compound">MeshSubdivider</ref>, castor::String, std::unique_ptr&lt; <ref refid="d7/d01/a03920" kindref="compound">MeshSubdivider</ref> &gt; &gt;</type>
        <definition>using castor3d::MeshSubdividerFactory = typedef castor::Factory&lt; MeshSubdivider, castor::String, std::unique_ptr&lt; MeshSubdivider &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MeshSubdividerFactory</name>
        <briefdescription>
<para>The subdivider factory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="88" column="1" bodyfile="Model/Mesh/MeshModule.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7e4a4530ab9de4f13ec7a2ad70c485d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Mesh)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/dce/a03908" kindref="compound">Mesh</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0c785b5dcee2a1c61d45d98289256db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshFactory)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d5/d11/a03912" kindref="compound">MeshFactory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a038786a8b960f008f1e4ad72ab8611ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshGenerator)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d2/d05/a03916" kindref="compound">MeshGenerator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3d11e9071cb659d6c62588b35296bd88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshImporter)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d8/da1/a03900" kindref="compound">MeshImporter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a22d19595d1bf9ffbe30eb5b8e2fd59cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshImporterFactory)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dd/d2e/a03904" kindref="compound">MeshImporterFactory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a075fe2a0bafcdbd02b701477a82f73af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshSubdivider)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d7/d01/a03920" kindref="compound">MeshSubdivider</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7f750f70dee71abaed0b9f14cff8fbad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshSubdividerFactory)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a4a51cb6a3099a7bec1f37adc2519667d" kindref="member">MeshSubdividerFactory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abcfcc6f14a1be98852225ba96cc8fd13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, MeshSPtr, MeshPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>MeshSPtr</type>
        </param>
        <param>
          <type>MeshPtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="dc/dce/a03908" kindref="compound">Mesh</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/MeshModule.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a46f116a587ce32ce16a086f56147e929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MeshAnimationInstance)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">MeshAnimationInstance</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Mesh/MeshAnimationModule.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac4dfc53d2f6f95cacaf7b7adf030a22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(uint32_t, MeshAnimationInstanceSubmesh, MeshAnimationInstanceSubmesh)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>uint32_t</type>
        </param>
        <param>
          <type><ref refid="d1/ddd/a05076" kindref="compound">MeshAnimationInstanceSubmesh</ref></type>
        </param>
        <param>
          <type><ref refid="d1/ddd/a05076" kindref="compound">MeshAnimationInstanceSubmesh</ref></type>
        </param>
        <briefdescription>
<para><ref refid="d1/ddd/a05076" kindref="compound">MeshAnimationInstanceSubmesh</ref> map, sorted by submesh ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Mesh/MeshAnimationModule.hpp" line="44" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Generator</header>
      <memberdef kind="function" id="da/d1e/a01479_1af331f1ab8ad51617f30fd58f509cf4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Cone)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d0/de0/a03868" kindref="compound">Cone</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/MeshGeneratorModule.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9bf70301c1770783242ddd2ef5c85913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Cylinder)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d4/dfc/a03876" kindref="compound">Cylinder</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/MeshGeneratorModule.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab049cbf1e3c65de7eb6551b7f0b57f3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Icosahedron)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="df/d0d/a03880" kindref="compound">Icosahedron</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/MeshGeneratorModule.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a68315a0c518202cfde4b1aae5fe9a0d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Cube)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d0/d84/a03872" kindref="compound">Cube</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/MeshGeneratorModule.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a95ab6abad1602105e5f8b329b7da66da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Plane)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/db7/a03884" kindref="compound">Plane</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/MeshGeneratorModule.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a063f0269855b2c4b30a561c741cd6276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Projection)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/d74/a03888" kindref="compound">Projection</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/MeshGeneratorModule.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abe90cb8a586cba108b17b68a8c69dc0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Sphere)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/dc1/a03892" kindref="compound">Sphere</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/MeshGeneratorModule.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a85ebdf81f92bf05170845473de4b82e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Torus)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/dba/a03896" kindref="compound">Torus</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/MeshGeneratorModule.hpp" line="100" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Submesh</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1a7d6fd2a01463ef8c95009031d6ae98a1" prot="public" static="no">
        <type><ref refid="d3/d4a/a03996" kindref="compound">SubmeshAnimationBufferT</ref>&lt; float &gt;</type>
        <definition>using castor3d::SubmeshAnimationBuffer = typedef SubmeshAnimationBufferT&lt; float &gt;</definition>
        <argsstring></argsstring>
        <name>SubmeshAnimationBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshModule.hpp" line="45" column="1" bodyfile="Model/Mesh/Submesh/SubmeshModule.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ac45304de9c80b94acff3cef7b03302ba" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> const *, castor::BoundingBox &gt; &gt;</type>
        <definition>using castor3d::SubmeshBoundingBoxList = typedef std::vector&lt; std::pair&lt; Submesh const *, castor::BoundingBox &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>SubmeshBoundingBoxList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshModule.hpp" line="55" column="1" bodyfile="Model/Mesh/Submesh/SubmeshModule.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2901d463a7a21516253d06f8f8efb8b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Submesh)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshModule.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac58636b04f5ce576aef3a3da9acca0fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(SubmeshSPtr, SubmeshPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>SubmeshSPtr</type>
        </param>
        <param>
          <type>SubmeshPtr</type>
        </param>
        <briefdescription>
<para><ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshModule.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3c23b729c2c8450b5c9ef64ee8e49882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, SubmeshSPtr, SubmeshPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>SubmeshSPtr</type>
        </param>
        <param>
          <type>SubmeshPtrStr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshModule.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3cec3be3f17ec3d0652ba64827c9bc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(Submesh const *, castor::BoundingBox, SubmeshBoundingBox)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type><ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> const *</type>
        </param>
        <param>
          <type>castor::BoundingBox</type>
        </param>
        <param>
          <type>SubmeshBoundingBox</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshModule.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa5aee25a53ede69721e0fd7e26cb070a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(Submesh const *, castor::BoundingSphere, SubmeshBoundingSphere)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type><ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> const *</type>
        </param>
        <param>
          <type>castor::BoundingSphere</type>
        </param>
        <param>
          <type>SubmeshBoundingSphere</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshModule.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a641171676f85c726b5f77956392e6bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(uint32_t, SubmeshAnimationBuffer, SubmeshAnimationBuffer)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>uint32_t</type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a7d6fd2a01463ef8c95009031d6ae98a1" kindref="member">SubmeshAnimationBuffer</ref></type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a7d6fd2a01463ef8c95009031d6ae98a1" kindref="member">SubmeshAnimationBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/SubmeshModule.hpp" line="54" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Component</header>
      <memberdef kind="function" id="da/d1e/a01479_1a413fbf932ebfea0bc53945a44feda485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(BonesInstantiationComponent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dd/df7/a03928" kindref="compound">BonesInstantiationComponent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0f9bb655091154f24d1ba674d60074ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Face)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="de/dce/a03932" kindref="compound">Face</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aba26aea503d9280de6a3253e58940bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(IndexMapping)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d3/d4a/a03948" kindref="compound">IndexMapping</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac03695ed5208917599a158776746eb0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(InstantiationComponent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d3/d8f/a03956" kindref="compound">InstantiationComponent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa2765f1d36f1b113c170f359820dac87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MorphComponent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/df0/a03976" kindref="compound">MorphComponent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6440f59b0fc15b938e0d4e70a8c47d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SubmeshComponent)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dd/d78/a03980" kindref="compound">SubmeshComponent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4598c71a9bdc71dbedfd0ddccb03d83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TriFaceMapping)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/da3/a03984" kindref="compound">TriFaceMapping</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abbc13dfe628e5881814f03fce4ee97d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(Face, Face)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="de/dce/a03932" kindref="compound">Face</ref></type>
        </param>
        <param>
          <type><ref refid="de/dce/a03932" kindref="compound">Face</ref></type>
        </param>
        <briefdescription>
<para><ref refid="de/dce/a03932" kindref="compound">Face</ref> array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adb38a35ce62d4945ba19732eb388a6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(FaceSPtr, FacePtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>FaceSPtr</type>
        </param>
        <param>
          <type>FacePtr</type>
        </param>
        <briefdescription>
<para><ref refid="de/dce/a03932" kindref="compound">Face</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6d586c6f5e986ab5d802f17009c6c1b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, SubmeshComponentSPtr, SubmeshComponentStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>SubmeshComponentSPtr</type>
        </param>
        <param>
          <type>SubmeshComponentStr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/ComponentModule.hpp" line="133" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Skeleton</header>
      <memberdef kind="enum" id="da/d1e/a01479_1ae6581300eaf7bd9334dd9e6a3df479fb" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>SkeletonAnimationObjectType</name>
        <enumvalue id="da/d1e/a01479_1ae6581300eaf7bd9334dd9e6a3df479fba540edeff695f0af70e9bc41bb35297dd" prot="public">
          <name>eNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node objects. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae6581300eaf7bd9334dd9e6a3df479fba45abae4a10e92b00b83715888de3ef15" prot="public">
          <name>eBone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d7/dcb/a04028" kindref="compound">Bone</ref> objects. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae6581300eaf7bd9334dd9e6a3df479fbae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae6581300eaf7bd9334dd9e6a3df479fbabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eNode</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ae6581300eaf7bd9334dd9e6a3df479fba66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Class which represents the moving things. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Sylvain DOREMUS </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>09/02/2010</para>
</simplesect>
<simplesect kind="remark"><para>Manages translation, scaling, rotation of the thing. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="33" column="1" bodyfile="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" bodystart="31" bodyend="41"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a069c737bce75302ddfc6420276e1912c" prot="public" static="no">
        <type>std::pair&lt; <ref refid="d4/d9a/a04024" kindref="compound">SkeletonAnimationObject</ref> *, castor::Matrix4x4f &gt;</type>
        <definition>using castor3d::ObjectTransform = typedef std::pair&lt; SkeletonAnimationObject *, castor::Matrix4x4f &gt;</definition>
        <argsstring></argsstring>
        <name>ObjectTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="94" column="1" bodyfile="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a0d57085ee198493b9c2d11fff22b1892" prot="public" static="no">
        <type>std::vector&lt; <ref refid="da/d1e/a01479_1a069c737bce75302ddfc6420276e1912c" kindref="member">ObjectTransform</ref> &gt;</type>
        <definition>using castor3d::TransformArray = typedef std::vector&lt; ObjectTransform &gt;</definition>
        <argsstring></argsstring>
        <name>TransformArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="95" column="1" bodyfile="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1a646fc2f48009177447cb9476d791b0e8" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t castor3d::MaxBonesPerVertex</definition>
        <argsstring></argsstring>
        <name>MaxBonesPerVertex</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/SkeletonModule.hpp" line="16" column="1" bodyfile="Model/Skeleton/SkeletonModule.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aec02f51072a412763c4bcb76f40f94e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(SkeletonAnimationObjectType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ae6581300eaf7bd9334dd9e6a3df479fb" kindref="member">SkeletonAnimationObjectType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5ba06618f5be357d9410118ef8416fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimation)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d0/d36/a04008" kindref="compound">SkeletonAnimation</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a710707df69242b86b9b82a99117593f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimationKeyFrame)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/d97/a04016" kindref="compound">SkeletonAnimationKeyFrame</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a471ea966d0f00f8be4668af7356ea296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimationObject)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d4/d9a/a04024" kindref="compound">SkeletonAnimationObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad3f81dbd34be5e05133aed7bc453c2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimationBone)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d4/d26/a04012" kindref="compound">SkeletonAnimationBone</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a01c080e7a7821f11ae5209aab77e3497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimationNode)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="df/d49/a04020" kindref="compound">SkeletonAnimationNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2377f7080fa2d56de3a3314a7222615f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, SkeletonAnimationObjectSPtr, SkeletonAnimationObjectPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>SkeletonAnimationObjectSPtr</type>
        </param>
        <param>
          <type>SkeletonAnimationObjectPtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="d4/d9a/a04024" kindref="compound">SkeletonAnimationObject</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adaa00059691368deaaae2177c3c8cc48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(SkeletonAnimationObjectSPtr, SkeletonAnimationObjectPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>SkeletonAnimationObjectSPtr</type>
        </param>
        <param>
          <type>SkeletonAnimationObjectPtr</type>
        </param>
        <briefdescription>
<para><ref refid="d4/d9a/a04024" kindref="compound">SkeletonAnimationObject</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/Animation/SkeletonAnimationModule.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa52e8efdd1325494c73e5ec3d462ab6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Bone)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d7/dcb/a04028" kindref="compound">Bone</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/SkeletonModule.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a888ee9a9f4c596c217ca5767da18975f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Skeleton)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/d13/a04032" kindref="compound">Skeleton</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/SkeletonModule.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af5864106300bfd8f21d53613cfa7ec35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(VertexBoneData, VertexBoneData)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="dc/d1f/a04036" kindref="compound">VertexBoneData</ref></type>
        </param>
        <param>
          <type><ref refid="dc/d1f/a04036" kindref="compound">VertexBoneData</ref></type>
        </param>
        <briefdescription>
<para>Skinned vertex data array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/SkeletonModule.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7513060c7421fdfa388385d7ce06f5dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(BoneSPtr, BonePtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>BoneSPtr</type>
        </param>
        <param>
          <type>BonePtr</type>
        </param>
        <briefdescription>
<para><ref refid="d7/dcb/a04028" kindref="compound">Bone</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/SkeletonModule.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a128ed98f2148600dd8815851230b6417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, BoneSPtr, BonePtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>BoneSPtr</type>
        </param>
        <param>
          <type>BonePtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="d7/dcb/a04028" kindref="compound">Bone</ref> pointer map sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Skeleton/SkeletonModule.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1e98f333cbfa25229431872cb7506c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimationInstance)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="de/d0b/a05080" kindref="compound">SkeletonAnimationInstance</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Skeleton/SkeletonAnimationModule.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a91a3d05e5b36ddef4ff3056b8897d183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimationInstanceBone)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d5/d56/a05084" kindref="compound">SkeletonAnimationInstanceBone</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Skeleton/SkeletonAnimationModule.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a667d8078da2bda5af5bfdd9af71152af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimationInstanceNode)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/d2c/a05092" kindref="compound">SkeletonAnimationInstanceNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Skeleton/SkeletonAnimationModule.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0c526735f29d7c16b49c2554b050aafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SkeletonAnimationInstanceObject)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/d29/a05096" kindref="compound">SkeletonAnimationInstanceObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Skeleton/SkeletonAnimationModule.hpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a58058ac832e3acd0b2c8073c25b41d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, SkeletonAnimationInstanceObjectSPtr, SkeletonAnimationInstanceObjectPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>SkeletonAnimationInstanceObjectSPtr</type>
        </param>
        <param>
          <type>SkeletonAnimationInstanceObjectPtrStr</type>
        </param>
        <briefdescription>
<para>MovingObject pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Skeleton/SkeletonAnimationModule.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7197ec85fc61194e39937ed20ab53e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(SkeletonAnimationInstanceObjectSPtr, SkeletonAnimationInstanceObjectPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>SkeletonAnimationInstanceObjectSPtr</type>
        </param>
        <param>
          <type>SkeletonAnimationInstanceObjectPtr</type>
        </param>
        <briefdescription>
<para><ref refid="db/d29/a05096" kindref="compound">SkeletonAnimationInstanceObject</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Skeleton/SkeletonAnimationModule.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a817de71d630c50aca3c3825a9f02fc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(std::reference_wrapper&lt; SkeletonAnimationInstance &gt;, SkeletonAnimationInstance)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>std::reference_wrapper&lt; <ref refid="de/d0b/a05080" kindref="compound">SkeletonAnimationInstance</ref> &gt;</type>
        </param>
        <param>
          <type><ref refid="de/d0b/a05080" kindref="compound">SkeletonAnimationInstance</ref></type>
        </param>
        <briefdescription>
<para><ref refid="db/d13/a04032" kindref="compound">Skeleton</ref> animation instance pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Skeleton/SkeletonAnimationModule.hpp" line="86" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Overlay</header>
      <memberdef kind="enum" id="da/d1e/a01479_1ad72150fb2c652b19d0d79b9ea4289a5c" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>OverlayType</name>
        <enumvalue id="da/d1e/a01479_1ad72150fb2c652b19d0d79b9ea4289a5ca82eeda867c147d65f843c022b81b76fb" prot="public">
          <name>ePanel</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad72150fb2c652b19d0d79b9ea4289a5ca7f1eda6a2a33298d242ee124fea8bdf0" prot="public">
          <name>eBorderPanel</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad72150fb2c652b19d0d79b9ea4289a5ca8c15e6038102a3065760b26043b9c162" prot="public">
          <name>eText</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad72150fb2c652b19d0d79b9ea4289a5cae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad72150fb2c652b19d0d79b9ea4289a5cabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  ePanel</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad72150fb2c652b19d0d79b9ea4289a5ca66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d1/da3/a04100" kindref="compound">Overlay</ref> types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="24" column="1" bodyfile="Overlay/OverlayModule.hpp" bodystart="22" bodyend="29"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a0589990d8ef06cfe12058a892f79e25c" prot="public" static="no" strong="yes">
        <type></type>
        <name>TextWrappingMode</name>
        <enumvalue id="da/d1e/a01479_1a0589990d8ef06cfe12058a892f79e25cabe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The text is cut. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0589990d8ef06cfe12058a892f79e25ca42d84b58836e76c864b650ea436003d5" prot="public">
          <name>eBreak</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The text jumps to next line. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0589990d8ef06cfe12058a892f79e25ca4abed463d89f4e0b202992544a56b310" prot="public">
          <name>eBreakWords</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The text jumps to next line without cutting words. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0589990d8ef06cfe12058a892f79e25cae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0589990d8ef06cfe12058a892f79e25cabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eNone</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0589990d8ef06cfe12058a892f79e25ca66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Text wrapping modes, handles the way text is cut when it overflows the overlay width. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="40" column="1" bodyfile="Overlay/OverlayModule.hpp" bodystart="39" bodyend="51"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a02593db145d41e373b98df0e4e0f5561" prot="public" static="no" strong="yes">
        <type></type>
        <name>TextTexturingMode</name>
        <enumvalue id="da/d1e/a01479_1a02593db145d41e373b98df0e4e0f5561aac611151d348d13ef4fbffe307a9746c" prot="public">
          <name>eLetter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The texture is repeated on each character of the text. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a02593db145d41e373b98df0e4e0f5561a8c15e6038102a3065760b26043b9c162" prot="public">
          <name>eText</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The texture is applied on the whole text. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a02593db145d41e373b98df0e4e0f5561ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a02593db145d41e373b98df0e4e0f5561abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eLetter</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a02593db145d41e373b98df0e4e0f5561a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Text texturing modes, handles the way textures are appied to text overlays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="62" column="1" bodyfile="Overlay/OverlayModule.hpp" bodystart="61" bodyend="70"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1abd7f1f735abf0b76cd2014b1c184fabe" prot="public" static="no" strong="yes">
        <type></type>
        <name>TextLineSpacingMode</name>
        <enumvalue id="da/d1e/a01479_1abd7f1f735abf0b76cd2014b1c184fabeac58b8ce83977e7cf127f5423cfd12779" prot="public">
          <name>eOwnHeight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The height of each line is its own height. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abd7f1f735abf0b76cd2014b1c184fabea9543596fae480871cff308c63523bf46" prot="public">
          <name>eMaxLineHeight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The height of the lines is the maximum height between them. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abd7f1f735abf0b76cd2014b1c184fabeab2744b3f43a60844336deecfe1e8c748" prot="public">
          <name>eMaxFontHeight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The height of the lines is the maximum height from the font&apos;s characters. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abd7f1f735abf0b76cd2014b1c184fabeae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abd7f1f735abf0b76cd2014b1c184fabeabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eOwnHeight</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abd7f1f735abf0b76cd2014b1c184fabea66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Text line spacing modes, handles the way lines are spaced, which each other, inside one <ref refid="d3/db2/a04156" kindref="compound">TextOverlay</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="81" column="1" bodyfile="Overlay/OverlayModule.hpp" bodystart="80" bodyend="92"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1ab0160e68f657e06de22817b952f53e3a" prot="public" static="no" strong="yes">
        <type></type>
        <name>HAlign</name>
        <enumvalue id="da/d1e/a01479_1ab0160e68f657e06de22817b952f53e3aa97d352658db7b34c35502f9cd535e48b" prot="public">
          <name>eLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Aligned on the left. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ab0160e68f657e06de22817b952f53e3aa220067f8b2018584c34a90d950f9bd9c" prot="public">
          <name>eCenter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Centered horizontally. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ab0160e68f657e06de22817b952f53e3aaf47864efb86f863a0080026825b1303d" prot="public">
          <name>eRight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Aligned on the right. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ab0160e68f657e06de22817b952f53e3aae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ab0160e68f657e06de22817b952f53e3aabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eLeft</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ab0160e68f657e06de22817b952f53e3aa66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Horizontal alignments for text overlays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="103" column="1" bodyfile="Overlay/OverlayModule.hpp" bodystart="102" bodyend="114"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a334ae87f0ec7477bc21783203aad9762" prot="public" static="no" strong="yes">
        <type></type>
        <name>VAlign</name>
        <enumvalue id="da/d1e/a01479_1a334ae87f0ec7477bc21783203aad9762ae64af3a3ced78854860e9eccf0322873" prot="public">
          <name>eTop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Aligned on the top. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a334ae87f0ec7477bc21783203aad9762a220067f8b2018584c34a90d950f9bd9c" prot="public">
          <name>eCenter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Centered vertically. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a334ae87f0ec7477bc21783203aad9762a776f50b8d2af1233e8900eb42f93adab" prot="public">
          <name>eBottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Aligned on the bottom. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a334ae87f0ec7477bc21783203aad9762ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a334ae87f0ec7477bc21783203aad9762abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eTop</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a334ae87f0ec7477bc21783203aad9762a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Vertical alignments for text overlays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="125" column="1" bodyfile="Overlay/OverlayModule.hpp" bodystart="124" bodyend="136"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1afef993d7e09be06482361f88ef4e3bf3" prot="public" static="no" strong="yes">
        <type></type>
        <name>BorderPosition</name>
        <enumvalue id="da/d1e/a01479_1afef993d7e09be06482361f88ef4e3bf3a1d6f3cc9dc70728ba67b45b7cf3ce20d" prot="public">
          <name>eInternal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The border is outside the overlay. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afef993d7e09be06482361f88ef4e3bf3ae0a327a72dd412c145feab665456b326" prot="public">
          <name>eMiddle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The border is middle outside and middle inside the overlay. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afef993d7e09be06482361f88ef4e3bf3a18a35710bdf1d325f4543d5888772f9c" prot="public">
          <name>eExternal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The border is outside the overlay. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afef993d7e09be06482361f88ef4e3bf3ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afef993d7e09be06482361f88ef4e3bf3abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eInternal</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afef993d7e09be06482361f88ef4e3bf3a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Text wrapping modes, handles the way text is cut when it overflows the overlay width. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="147" column="1" bodyfile="Overlay/OverlayModule.hpp" bodystart="146" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a31b4e0d1cd09e6d5321894f712c5880a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(OverlayType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad72150fb2c652b19d0d79b9ea4289a5c" kindref="member">OverlayType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a25b0710f3e868d17279872a5c23da990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(TextWrappingMode value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a0589990d8ef06cfe12058a892f79e25c" kindref="member">TextWrappingMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a689b4d88c759a0449459afb2154896b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(TextTexturingMode value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a02593db145d41e373b98df0e4e0f5561" kindref="member">TextTexturingMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a66303b6ce8b15651c7cddb1686a213b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(TextLineSpacingMode value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1abd7f1f735abf0b76cd2014b1c184fabe" kindref="member">TextLineSpacingMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afb1bf2b0907b06fc791663da931f2192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(HAlign value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ab0160e68f657e06de22817b952f53e3a" kindref="member">HAlign</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae21dae4d5abfa882edbc04dbe04cb014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(VAlign value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a334ae87f0ec7477bc21783203aad9762" kindref="member">VAlign</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a53aa26c27086a7f34673319f50f29338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(BorderPosition value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afef993d7e09be06482361f88ef4e3bf3" kindref="member">BorderPosition</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a831f5578ce8a596a02377ae5a8e99d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, BorderPanelOverlay, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d5/dbe/a04060" kindref="compound">BorderPanelOverlay</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3a68ced8a795c5cc4c874656a4389772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, DebugOverlays, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="dc/ddd/a04064" kindref="compound">DebugOverlays</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab778c5f773ab88e5d52df530ac8d9ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, FontTexture, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="de/df2/a04096" kindref="compound">FontTexture</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a96d1928079b99499c1bc8bcf7636cf4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, Overlay, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d1/da3/a04100" kindref="compound">Overlay</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a16c31735d3054cae391ca41746a37b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, OverlayCategory, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d5/dd9/a04104" kindref="compound">OverlayCategory</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae685f1fad04e97f1786b482a6f7c1d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, OverlayFactory, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d5/d8b/a04112" kindref="compound">OverlayFactory</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a75d3c4b998d23781e53cfc2a22e89078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, OverlayRenderer, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="db/da3/a04116" kindref="compound">OverlayRenderer</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7663d5ec257b14dbea0711de5d24ddc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, PanelOverlay, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d3/db3/a04152" kindref="compound">PanelOverlay</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a78d8d26a8ee395094960691bdc230cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, TextOverlay, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d3/db2/a04156" kindref="compound">TextOverlay</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab067bcc503677ceeaa0cb661afc5f589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(OverlaySPtr, OverlayPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>OverlaySPtr</type>
        </param>
        <param>
          <type>OverlayPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0016ce8e5abe09140e28773c5dd0b2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, OverlaySPtr, OverlayPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>OverlaySPtr</type>
        </param>
        <param>
          <type>OverlayPtrStr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Overlay/OverlayModule.hpp" line="276" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Plugin</header>
      <memberdef kind="enum" id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>PluginType</name>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67a9db2478afc0b6cd916b8d3e784e92e06" prot="public">
          <name>eImporter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Importer plug-in. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67ad0f2b607af72bdb927b63124396ab3a9" prot="public">
          <name>eDivider</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="dc/dce/a03908" kindref="compound">Mesh</ref> Divider plug-in. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67a4a7730b0ef464dc847d27504eadced82" prot="public">
          <name>eGenerator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Procedural generator. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67a85e134f1e400e7be8070c6c5679a5d86" prot="public">
          <name>eToneMapping</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Tone mapping plug-in. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67a3da12cda0135e5b11759bd13757b295c" prot="public">
          <name>ePostEffect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Post effect plug-in. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67aa4b8ab5cdae56cdd29bf58b29baa4ffb" prot="public">
          <name>eGeneric</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Generic plug-in. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67a409b3d66125fe5a0c1519fe195685cbd" prot="public">
          <name>eParticle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="df/dfd/a05208" kindref="compound">Particle</ref> plug-in. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eImporter</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="db/d33/a04192" kindref="compound">Plugin</ref> types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="26" column="1" bodyfile="Plugin/PluginModule.hpp" bodystart="24" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a623d65c31e80ba892acc6b448fdaa6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Plugin)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="db/d33/a04192" kindref="compound">Plugin</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adb98811e05a594a71348e6d6c39f470f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ImporterPlugin)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/dd9/a04184" kindref="compound">ImporterPlugin</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a13e0f3548d85146ecdc45bc4fccf9511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(DividerPlugin)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/d72/a04172" kindref="compound">DividerPlugin</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1addf2a8c44d210a073b19b26eff44a200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(GenericPlugin)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">GenericPlugin</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2de21b5da04af86cb5fb25230e7cbf0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(PostFxPlugin)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="df/d5c/a04200" kindref="compound">PostFxPlugin</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a967ad22a1cc3dabe52206ae9e4a6b369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ParticlePlugin)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="de/df4/a04188" kindref="compound">ParticlePlugin</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae57f8a1786493ccbdeb99c08dcc4b797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, PluginSPtr, PluginStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>PluginSPtr</type>
        </param>
        <param>
          <type>PluginStr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3c0ee51b5e83f3d1ba15c29d5a31c4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareArray</definition>
        <argsstring>(PluginStrMap, PluginType::eCount, PluginStrMap)</argsstring>
        <name>CU_DeclareArray</name>
        <param>
          <type>PluginStrMap</type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67ae558bb69fadec037d9eae46601a4df8e" kindref="member">PluginType::eCount</ref></type>
        </param>
        <param>
          <type>PluginStrMap</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acc6b5dc0ff4362d6c0566b56b92e398a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::Path, castor::DynamicLibrarySPtr, DynamicLibraryPtrPath)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::Path</type>
        </param>
        <param>
          <type>castor::DynamicLibrarySPtr</type>
        </param>
        <param>
          <type>DynamicLibraryPtrPath</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a15df7c1e07d0476e0e6acc07f42b02dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareArray</definition>
        <argsstring>(DynamicLibraryPtrPathMap, PluginType::eCount, DynamicLibraryPtrPathMap)</argsstring>
        <name>CU_DeclareArray</name>
        <param>
          <type>DynamicLibraryPtrPathMap</type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67ae558bb69fadec037d9eae46601a4df8e" kindref="member">PluginType::eCount</ref></type>
        </param>
        <param>
          <type>DynamicLibraryPtrPathMap</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a65a88c0c07cea957355e149464899b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::Path, PluginType, PluginTypePath)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::Path</type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1aecf8304db7dd49c874ec216f139e5f67" kindref="member">PluginType</ref></type>
        </param>
        <param>
          <type>PluginTypePath</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugin/PluginModule.hpp" line="161" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Render</header>
      <memberdef kind="enum" id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6" prot="public" static="no" strong="yes">
        <type></type>
        <name>FrustumCorner</name>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6a5e404438175056577f38ad2e82d2495d" prot="public">
          <name>eFarLeftBottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Far left bottom corner. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6a35c1bb5688ab5f3fc7c4d68f2ee7ab31" prot="public">
          <name>eFarLeftTop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Far left top corner. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6aa338ec2827d09794e2945707d6811fac" prot="public">
          <name>eFarRightTop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Far right top corner. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6a00e5b36cfe4b03a15f9aa3e4451c7c3b" prot="public">
          <name>eFarRightBottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Far right bottom corner. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6a584c10a848552239d9c731989eb7229f" prot="public">
          <name>eNearLeftBottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Near left bottom corner. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6a296497b09ce477f1f2b7c0393d014d79" prot="public">
          <name>eNearLeftTop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Near left top corner. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6ab048e10646cc4ea1ff0d57d1be6cf944" prot="public">
          <name>eNearRightTop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Near right top corner. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6a40931c52548517759b7de4ae1f1f095b" prot="public">
          <name>eNearRightBottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Near right bottom corner. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eFarLeftBottom</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d7/d04/a04248" kindref="compound">Frustum</ref> corners enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="84" column="1" bodyfile="Render/RenderModule.hpp" bodystart="83" bodyend="110"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259b" prot="public" static="no" strong="yes">
        <type></type>
        <name>FrustumPlane</name>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259ba266a808a9c1eaa4fbdfa7dbd317769cf" prot="public">
          <name>eNear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Near plane. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259bae20e81305ceea245be2dd35b33c3ca6d" prot="public">
          <name>eFar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Far plane. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259ba97d352658db7b34c35502f9cd535e48b" prot="public">
          <name>eLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Left plane. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259baf47864efb86f863a0080026825b1303d" prot="public">
          <name>eRight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Right plane. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259bae64af3a3ced78854860e9eccf0322873" prot="public">
          <name>eTop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Top plane. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259ba776f50b8d2af1233e8900eb42f93adab" prot="public">
          <name>eBottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bottom plane. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259bae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259babd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eNear</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259ba66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d7/d04/a04248" kindref="compound">Frustum</ref> planes enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="121" column="1" bodyfile="Render/RenderModule.hpp" bodystart="120" bodyend="141"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>PickNodeType</name>
        <enumvalue id="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6abe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6ad4a35693e80621cd89d4bf671551d10c" prot="public">
          <name>eStatic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6abc3eb7d1faa93e9699c898f1e100c35a" prot="public">
          <name>eInstantiatedStatic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6a8da329f9a01cff2c195563173a86b2ee" prot="public">
          <name>eSkinning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6af43e56aeff0d00d90e871c272c528d76" prot="public">
          <name>eInstantiatedSkinning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6afc8be581627b97523b9662d9eae684b0" prot="public">
          <name>eMorphing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6af0fbe61d17cc90f35a934671f2b23671" prot="public">
          <name>eBillboard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The picking node types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="153" column="1" bodyfile="Render/RenderModule.hpp" bodystart="151" bodyend="161"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a4ad78470d8077ac5aaa5443df9894203" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>TargetType</name>
        <enumvalue id="da/d1e/a01479_1a4ad78470d8077ac5aaa5443df9894203a12aca55fe985a5da291e392493577cd9" prot="public">
          <name>eWindow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4ad78470d8077ac5aaa5443df9894203ac9e394bbf95e981b8642e652f30aa3d6" prot="public">
          <name>eTexture</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4ad78470d8077ac5aaa5443df9894203ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4ad78470d8077ac5aaa5443df9894203abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eWindow</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4ad78470d8077ac5aaa5443df9894203a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d3/d6e/a04628" kindref="compound">RenderTarget</ref> supported types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="173" column="1" bodyfile="Render/RenderModule.hpp" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a4141612e14f3113f10b3872630c29b3d" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>ViewportType</name>
        <enumvalue id="da/d1e/a01479_1a4141612e14f3113f10b3872630c29b3dafa422cee00a47837ac8b81a025322242" prot="public">
          <name>eOrtho</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4141612e14f3113f10b3872630c29b3da3b5ff0c7a29fc3706c5e2420ad8781f7" prot="public">
          <name>ePerspective</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4141612e14f3113f10b3872630c29b3dac5687931bad09b73c0c30e620b120677" prot="public">
          <name>eFrustum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4141612e14f3113f10b3872630c29b3dae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4141612e14f3113f10b3872630c29b3dabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eOrtho</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4141612e14f3113f10b3872630c29b3da66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The viewport projection types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="189" column="1" bodyfile="Render/RenderModule.hpp" bodystart="187" bodyend="194"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>RenderMode</name>
        <enumvalue id="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5a3e203591ffa3c07902f8adec13ed9df5" prot="public">
          <name>eOpaqueOnly</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5acd61240aa7b85fae32bfb98990c65638" prot="public">
          <name>eTransparentOnly</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5af33a4ae0625b377c9723b84da191b46e" prot="public">
          <name>eBoth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eOpaqueOnly</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The render pass modes, regarding transparency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="206" column="1" bodyfile="Render/RenderModule.hpp" bodystart="204" bodyend="211"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a16af0407887759f4b7d74964b4533ec6" prot="public" static="no">
        <type>std::vector&lt; std::reference_wrapper&lt; <ref refid="d2/dfe/a04620" kindref="compound">RenderQueue</ref> &gt; &gt;</type>
        <definition>using castor3d::RenderQueueArray = typedef std::vector&lt; std::reference_wrapper&lt; RenderQueue &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>RenderQueueArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="494" column="1" bodyfile="Render/RenderModule.hpp" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1af341190530b9aad83bf35da1c5329119" prot="public" static="no" mutable="no">
        <type>castor::String const</type>
        <definition>castor::String const castor3d::RenderTypeUndefined</definition>
        <argsstring></argsstring>
        <name>RenderTypeUndefined</name>
        <initializer>= cuT( &quot;Undefined&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="21" column="1" bodyfile="Render/RenderModule.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8723058dd625dfc41d3007e03dde762c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(FrustumCorner value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acc03c9ba988d8a559bc3cdcca5b677a6" kindref="member">FrustumCorner</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a97352e4e217bb6a98111cef73d4cf2ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(FrustumPlane value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1abc8a2e73a4a01c9d2a4575897121259b" kindref="member">FrustumPlane</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7be5fdf142e3d8f1c0b021e8797954de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(PickNodeType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a658b8a9f25669fd516ba89c1af1d52e6" kindref="member">PickNodeType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5a0f3968772dbac5e407a78f917e1f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(TargetType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a4ad78470d8077ac5aaa5443df9894203" kindref="member">TargetType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab81af3c970a88ade434d12d1f8127ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(ViewportType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a4141612e14f3113f10b3872630c29b3d" kindref="member">ViewportType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a79c17d5a7a7e078c2154e0fedb121ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(RenderMode value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5" kindref="member">RenderMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a106dc87107651cbbb8728623dc1a693f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::isValidNodeForPass</definition>
        <argsstring>(PassFlags const &amp;passFlags, RenderMode value)</argsstring>
        <name>isValidNodeForPass</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a69e89af11c4c9247dce7ee99a21090fc" kindref="member">PassFlags</ref> const &amp;</type>
          <declname>passFlags</declname>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a908786422cb850b8f90f8992963734d5" kindref="member">RenderMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a574a0a0338a204c50c147dc10d867d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> TextureFlagsArray::const_iterator</type>
        <definition>C3D_API TextureFlagsArray::const_iterator castor3d::checkFlags</definition>
        <argsstring>(TextureFlagsArray const &amp;flags, TextureFlag flag)</argsstring>
        <name>checkFlags</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afa51b269ca00eaeff4f95f361bf2208f" kindref="member">TextureFlagsArray</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1ae3a32e32f3eaa63d0b9886aa3e942742" kindref="member">TextureFlag</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8f6d4f9ae74fd29ff72b57fc99ea28d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="da/d1e/a01479_1a3b9e457486b668463148ebc06850f3ac" kindref="member">TextureFlags</ref></type>
        <definition>C3D_API TextureFlags castor3d::merge</definition>
        <argsstring>(TextureFlagsArray const &amp;flags)</argsstring>
        <name>merge</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afa51b269ca00eaeff4f95f361bf2208f" kindref="member">TextureFlagsArray</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3066a6da8a349db8ebbef9dcaea06d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator&lt;</definition>
        <argsstring>(PipelineFlags const &amp;lhs, PipelineFlags const &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="dd/db6/a04580" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="dd/db6/a04580" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad6d415d4ea2b672254c03277d40d6c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, PickingPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d1/d55/a04496" kindref="compound">PickingPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a56382bbdc36dd3e3d81326c4dd51d76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderDevice, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a72b539afd5448780af0ed9e8ac0820d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderLoop, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d3/d83/a04520" kindref="compound">RenderLoop</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4e5034eb3cce434b69d093a764a8e494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderPassTimer, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d7/dc4/a04612" kindref="compound">RenderPassTimer</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9bed8670f95467e55e91e2c04e1363b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderPipeline, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="de/dfb/a04616" kindref="compound">RenderPipeline</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3c71b9ece141fc26301031b329791884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderSystem, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d9/d38/a04624" kindref="compound">RenderSystem</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad10ce6187213b9a69e2db7203e190216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderTarget, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d3/d6e/a04628" kindref="compound">RenderTarget</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aac9811e7920135aa6a941037f3517dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderWindow, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d4/d6d/a04636" kindref="compound">RenderWindow</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="486" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a39ef71b367e67e1e4aa22429b13fc6a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, Viewport, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d6/df3/a05008" kindref="compound">Viewport</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7280270e3e0e29669a7167b55c4fe707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(RenderWindowSPtr, RenderWindowPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>RenderWindowSPtr</type>
        </param>
        <param>
          <type>RenderWindowPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab298bbb913397a12ff6abbd615fbfa96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(IntermediateView, IntermediateView)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="d7/d6d/a04584" kindref="compound">IntermediateView</ref></type>
        </param>
        <param>
          <type><ref refid="d7/d6d/a04584" kindref="compound">IntermediateView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="490" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a77cb0fac5fe29c9d2dbe3d74919a1d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(uint32_t, RenderWindowSPtr, RenderWindow)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>uint32_t</type>
        </param>
        <param>
          <type>RenderWindowSPtr</type>
        </param>
        <param>
          <type><ref refid="d4/d6d/a04636" kindref="compound">RenderWindow</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a73d3c85ea9ae94d30c84851b2d30dc9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, RenderWindowSPtr, RenderWindowPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>RenderWindowSPtr</type>
        </param>
        <param>
          <type>RenderWindowPtrStr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/RenderModule.hpp" line="492" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Culling</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1aa769a1850c3168149a816238e83ccc95" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d4/d4b/a04232" kindref="compound">SceneCuller</ref> const &amp;) &gt;</type>
        <definition>using castor3d::SceneCullerSignalFunction = typedef std::function&lt; void( SceneCuller const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>SceneCullerSignalFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/CullingModule.hpp" line="77" column="1" bodyfile="Render/Culling/CullingModule.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a6c6d22108e8df82e041f809ac060fd8e" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1aa769a1850c3168149a816238e83ccc95" kindref="member">SceneCullerSignalFunction</ref> &gt;</type>
        <definition>using castor3d::SceneCullerSignal = typedef castor::Signal&lt; SceneCullerSignalFunction &gt;</definition>
        <argsstring></argsstring>
        <name>SceneCullerSignal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/CullingModule.hpp" line="78" column="1" bodyfile="Render/Culling/CullingModule.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a8ec8e0f87d6a3b322f28b36dc7bd593f" prot="public" static="no">
        <type>castor::Connection&lt; <ref refid="da/d1e/a01479_1a6c6d22108e8df82e041f809ac060fd8e" kindref="member">SceneCullerSignal</ref> &gt;</type>
        <definition>using castor3d::SceneCullerSignalConnection = typedef castor::Connection&lt; SceneCullerSignal &gt;</definition>
        <argsstring></argsstring>
        <name>SceneCullerSignalConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/CullingModule.hpp" line="79" column="1" bodyfile="Render/Culling/CullingModule.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a69723f2f519487c850ab4cc06e45c5d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SceneCuller)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d4/d4b/a04232" kindref="compound">SceneCuller</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/CullingModule.hpp" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>EnvironmentMap</header>
      <memberdef kind="function" id="da/d1e/a01479_1aa71a70eeca728349382610aee22eb769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(EnvironmentMap)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/d32/a04240" kindref="compound">EnvironmentMap</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/EnvironmentMap/EnvironmentMapModule.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0e520ec20e94397fc8a9b7f4a89dc83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(EnvironmentMapPass)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d2/d98/a04244" kindref="compound">EnvironmentMapPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/EnvironmentMap/EnvironmentMapModule.hpp" line="36" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Global Illumination</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443e" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>GlobalIlluminationType</name>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443eabe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443ea2f8b0bf26e55e24cd393b32d912828c0" prot="public">
          <name>eRsm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443ea2801d8ef53f92c196110f842add78e1c" prot="public">
          <name>eVoxelConeTracing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443ea933088ce1b93a7a6a9e1d9a0bb2db604" prot="public">
          <name>eLpv</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443eac3a9f7fcd396aed98c223206d8de403a" prot="public">
          <name>eLpvG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443ea09b00b69e0958c0aeeb2dce094199d11" prot="public">
          <name>eLayeredLpv</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443eaafd64de38933583add90e847ccd7e101" prot="public">
          <name>eLayeredLpvG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443eae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443eabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eNone</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443ea66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator of supported global illumination algorithms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/GlobalIlluminationModule.hpp" line="26" column="1" bodyfile="Render/GlobalIllumination/GlobalIlluminationModule.hpp" bodystart="24" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac5ebbccb11fdbd92546944bac3608b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getName</definition>
        <argsstring>(GlobalIlluminationType giType)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a94045726cb02c9deb4926f3bf0d0443e" kindref="member">GlobalIlluminationType</ref></type>
          <declname>giType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/GlobalIlluminationModule.hpp" line="42" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Light Propagation Volumes</header>
      <memberdef kind="enum" id="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>LpvTexture</name>
        <enumvalue id="da/d1e/a01479_1acdc63c63f270914c5061259e5645752ba2c8d3af323e82d44b5f7dda62485623f" prot="public">
          <name>eR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acdc63c63f270914c5061259e5645752bacd5532a9977c28cb4bcea23ba3b0dc48" prot="public">
          <name>eG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acdc63c63f270914c5061259e5645752ba76f5a6e4de889068fb1b4c3e3c263666" prot="public">
          <name>eB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acdc63c63f270914c5061259e5645752bae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acdc63c63f270914c5061259e5645752babd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eR</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1acdc63c63f270914c5061259e5645752ba66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator of textures used by the light volume GI passes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="32" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="30" bodyend="37"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a1ab53731654bbc485d46bde47dc9fc55" prot="public" static="no">
        <type><ref refid="d3/df5/a04272" kindref="compound">LayeredLightPropagationVolumesT</ref>&lt; false &gt;</type>
        <definition>using castor3d::LayeredLightPropagationVolumes = typedef LayeredLightPropagationVolumesT&lt; false &gt;</definition>
        <argsstring></argsstring>
        <name>LayeredLightPropagationVolumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="122" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1af62aae4e3403383a0c9d5c4d24f157c3" prot="public" static="no">
        <type><ref refid="d3/df5/a04272" kindref="compound">LayeredLightPropagationVolumesT</ref>&lt; true &gt;</type>
        <definition>using castor3d::LayeredLightPropagationVolumesG = typedef LayeredLightPropagationVolumesT&lt; true &gt;</definition>
        <argsstring></argsstring>
        <name>LayeredLightPropagationVolumesG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="123" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aef0fcf1dbbc7d96843a1fe980ba1c350" prot="public" static="no">
        <type><ref refid="d3/d31/a04292" kindref="compound">LightPropagationVolumesT</ref>&lt; false &gt;</type>
        <definition>using castor3d::LightPropagationVolumes = typedef LightPropagationVolumesT&lt; false &gt;</definition>
        <argsstring></argsstring>
        <name>LightPropagationVolumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="124" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a2cf0e68dcc13b899481982fc0f4e444d" prot="public" static="no">
        <type><ref refid="d3/d31/a04292" kindref="compound">LightPropagationVolumesT</ref>&lt; true &gt;</type>
        <definition>using castor3d::LightPropagationVolumesG = typedef LightPropagationVolumesT&lt; true &gt;</definition>
        <argsstring></argsstring>
        <name>LightPropagationVolumesG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="125" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a0d08094dbc29136cf3b11775987ed4d5" prot="public" static="no">
        <type>std::array&lt; LightPropagationVolumesUPtr, size_t(<ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ae558bb69fadec037d9eae46601a4df8e" kindref="member">LightType::eCount</ref>) &gt;</type>
        <definition>using castor3d::LightPropagationVolumesLightType = typedef std::array&lt; LightPropagationVolumesUPtr, size_t( LightType::eCount ) &gt;</definition>
        <argsstring></argsstring>
        <name>LightPropagationVolumesLightType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="144" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a45b5676720a8d0a13c78ad5f00c94163" prot="public" static="no">
        <type>std::array&lt; LayeredLightPropagationVolumesUPtr, size_t(<ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ae558bb69fadec037d9eae46601a4df8e" kindref="member">LightType::eCount</ref>) &gt;</type>
        <definition>using castor3d::LayeredLightPropagationVolumesLightType = typedef std::array&lt; LayeredLightPropagationVolumesUPtr, size_t( LightType::eCount ) &gt;</definition>
        <argsstring></argsstring>
        <name>LayeredLightPropagationVolumesLightType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="145" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a5b16382cb984a93c1f022f08963b2493" prot="public" static="no">
        <type>std::array&lt; LightPropagationVolumesGUPtr, size_t(<ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ae558bb69fadec037d9eae46601a4df8e" kindref="member">LightType::eCount</ref>) &gt;</type>
        <definition>using castor3d::LightPropagationVolumesGLightType = typedef std::array&lt; LightPropagationVolumesGUPtr, size_t( LightType::eCount ) &gt;</definition>
        <argsstring></argsstring>
        <name>LightPropagationVolumesGLightType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="146" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aeb1a81c01b04833e5175bef5f7857874" prot="public" static="no">
        <type>std::array&lt; LayeredLightPropagationVolumesGUPtr, size_t(<ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ae558bb69fadec037d9eae46601a4df8e" kindref="member">LightType::eCount</ref>) &gt;</type>
        <definition>using castor3d::LayeredLightPropagationVolumesGLightType = typedef std::array&lt; LayeredLightPropagationVolumesGUPtr, size_t( LightType::eCount ) &gt;</definition>
        <argsstring></argsstring>
        <name>LayeredLightPropagationVolumesGLightType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="147" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a111c44379137b514b592078a542764b7" prot="public" static="no">
        <type><ref refid="d1/dda/a04860" kindref="compound">LightPassVolumePropagationShadowT</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a0ddd5baafa15f79528b19dd012e1dce3" kindref="member">LightType::eDirectional</ref> &gt;</type>
        <definition>using castor3d::DirectionalLightPassLPVShadow = typedef LightPassVolumePropagationShadowT&lt; LightType::eDirectional &gt;</definition>
        <argsstring></argsstring>
        <name>DirectionalLightPassLPVShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The directional lights light pass with shadows and LPV. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="69" column="1" bodyfile="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a899ed0b05a862356b486a907c2f12d36" prot="public" static="no">
        <type><ref refid="d1/dda/a04860" kindref="compound">LightPassVolumePropagationShadowT</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ad6edd06d4607dfe84cff29cdd4f67fed" kindref="member">LightType::eSpot</ref> &gt;</type>
        <definition>using castor3d::SpotLightPassLPVShadow = typedef LightPassVolumePropagationShadowT&lt; LightType::eSpot &gt;</definition>
        <argsstring></argsstring>
        <name>SpotLightPassLPVShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The spot lights light pass with shadows and LPV. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="72" column="1" bodyfile="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a7bd54ea40b74349e31909a7bd15e052c" prot="public" static="no">
        <type><ref refid="da/dea/a04864" kindref="compound">LightPassLayeredVolumePropagationShadowT</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a0ddd5baafa15f79528b19dd012e1dce3" kindref="member">LightType::eDirectional</ref> &gt;</type>
        <definition>using castor3d::DirectionalLightPassLayeredLPVShadow = typedef LightPassLayeredVolumePropagationShadowT&lt; LightType::eDirectional &gt;</definition>
        <argsstring></argsstring>
        <name>DirectionalLightPassLayeredLPVShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The directional lights light pass with shadows and LPV. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="75" column="1" bodyfile="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a807feaa5cfe837a23c4a3c4edf22d370" prot="public" static="no">
        <type><ref refid="d7/d61/a04868" kindref="compound">LpvLightPassConfigT</ref>&lt; <ref refid="d7/de4/a04296" kindref="compound">LightVolumePassResult</ref>, <ref refid="db/d15/a05484" kindref="compound">LpvGridConfigUbo</ref> &gt;</type>
        <definition>using castor3d::LpvLightPassConfig = typedef LpvLightPassConfigT&lt; LightVolumePassResult, LpvGridConfigUbo &gt;</definition>
        <argsstring></argsstring>
        <name>LpvLightPassConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="93" column="1" bodyfile="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1afb8d10adeb087c1804672ef1415f29b2" prot="public" static="no">
        <type><ref refid="d7/d61/a04868" kindref="compound">LpvLightPassConfigT</ref>&lt; LightVolumePassResultArray, <ref refid="d4/db7/a05476" kindref="compound">LayeredLpvGridConfigUbo</ref> &gt;</type>
        <definition>using castor3d::LayeredLpvLightPassConfig = typedef LpvLightPassConfigT&lt; LightVolumePassResultArray, LayeredLpvGridConfigUbo &gt;</definition>
        <argsstring></argsstring>
        <name>LayeredLpvLightPassConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="94" column="1" bodyfile="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a430d412e54000239d4f9a8488e527a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getTextureName</definition>
        <argsstring>(LpvTexture texture, std::string const &amp;infix)</argsstring>
        <name>getTextureName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" kindref="member">LpvTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>infix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aace3dca69f1fd89dcc9ed11b3a8655e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getName</definition>
        <argsstring>(LpvTexture texture)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" kindref="member">LpvTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a36346721f17599e36f459cb5c2a73d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat castor3d::getFormat</definition>
        <argsstring>(LpvTexture texture)</argsstring>
        <name>getFormat</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" kindref="member">LpvTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="41" column="1"/>
        <referencedby refid="dc/de4/a04252_1aeed340f667006bcc6998c5da50b235f5" compoundref="dc/df2/a00656" startline="71" endline="98">castor3d::GBufferBase::doCreateTextures</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a483aae16335a5055cdd96f51377e9ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkClearValue</type>
        <definition>VkClearValue castor3d::getClearValue</definition>
        <argsstring>(LpvTexture texture)</argsstring>
        <name>getClearValue</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" kindref="member">LpvTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aae48a18fd2e40c4d553c3d8392c379ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageUsageFlags</type>
        <definition>VkImageUsageFlags castor3d::getUsageFlags</definition>
        <argsstring>(LpvTexture texture)</argsstring>
        <name>getUsageFlags</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" kindref="member">LpvTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="43" column="1"/>
        <referencedby refid="dc/de4/a04252_1aeed340f667006bcc6998c5da50b235f5" compoundref="dc/df2/a00656" startline="71" endline="98">castor3d::GBufferBase::doCreateTextures</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a144e7b1c66bfaf1fdbd86fd168e84f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkBorderColor</type>
        <definition>VkBorderColor castor3d::getBorderColor</definition>
        <argsstring>(LpvTexture texture)</argsstring>
        <name>getBorderColor</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" kindref="member">LpvTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="44" column="1"/>
        <referencedby refid="dc/de4/a04252_1aeed340f667006bcc6998c5da50b235f5" compoundref="dc/df2/a00656" startline="71" endline="98">castor3d::GBufferBase::doCreateTextures</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a94a673163556c0e25e566b9ff217d459" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(LpvTexture texture, castor::Size const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" kindref="member">LpvTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="45" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad2b4b474cbbf3a57807e60a854e9809b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(LpvTexture texture, VkExtent3D const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1acdc63c63f270914c5061259e5645752b" kindref="member">LpvTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="50" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" bodystart="50" bodyend="55"/>
        <references refid="da/d1e/a01479_1a320c0bae9dcfad25c32cde3aeb74d28a">getMipLevels</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a11c99e4d7287246ad57769250536dcf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, GeometryInjectionPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="dc/dca/a04260" kindref="compound">GeometryInjectionPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a76d5471fdfb6203bc02b774dc8794883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LayeredLightPropagationVolumes, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a1ab53731654bbc485d46bde47dc9fc55" kindref="member">LayeredLightPropagationVolumes</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a71349b60dab99724d9097c9cbc00e934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LayeredLightPropagationVolumesG, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1af62aae4e3403383a0c9d5c4d24f157c3" kindref="member">LayeredLightPropagationVolumesG</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac6d113186e2408738fe6e84fb1272057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LightInjectionPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d4/d45/a04276" kindref="compound">LightInjectionPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0e5fbb7c43f69f3caca829a047cb898d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LightPropagationPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d3/d45/a04280" kindref="compound">LightPropagationPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ade43442ef4e867bcb85995755f12ab8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LightPropagationVolumes, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1aef0fcf1dbbc7d96843a1fe980ba1c350" kindref="member">LightPropagationVolumes</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad08bb2fea34e05e678f0af00d0ac483f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LightPropagationVolumesG, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a2cf0e68dcc13b899481982fc0f4e444d" kindref="member">LightPropagationVolumesG</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afdbd3e49d87d3464c58d02150ff92047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LightVolumePassResult, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d7/de4/a04296" kindref="compound">LightVolumePassResult</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a07eaa2137986a61e5d753a410a775833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareArray</definition>
        <argsstring>(LightPropagationPassUPtr, lpv::PropagationPassCount, LightPropagationPass)</argsstring>
        <name>CU_DeclareArray</name>
        <param>
          <type>LightPropagationPassUPtr</type>
        </param>
        <param>
          <type><ref refid="d1/d38/a01480_1a3037c31cab6ec6b4505e931d6f236c93" kindref="member">lpv::PropagationPassCount</ref></type>
        </param>
        <param>
          <type><ref refid="d3/d45/a04280" kindref="compound">LightPropagationPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab762ffafd020a9443a8102eabdcd9d49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(GeometryInjectionPass, GeometryInjectionPass)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="dc/dca/a04260" kindref="compound">GeometryInjectionPass</ref></type>
        </param>
        <param>
          <type><ref refid="dc/dca/a04260" kindref="compound">GeometryInjectionPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0434fff87495d904f574311a8f8475a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(LightInjectionPass, LightInjectionPass)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="d4/d45/a04276" kindref="compound">LightInjectionPass</ref></type>
        </param>
        <param>
          <type><ref refid="d4/d45/a04276" kindref="compound">LightInjectionPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a474d83b188059e963495ca1509bd01fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(LightVolumePassResultUPtr, LightVolumePassResult)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>LightVolumePassResultUPtr</type>
        </param>
        <param>
          <type><ref refid="d7/de4/a04296" kindref="compound">LightVolumePassResult</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumesModule.hpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9e094bd3dfbfb7cccb52997ef6d4f103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LayeredLightVolumeGIPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="de/d75/a04852" kindref="compound">LayeredLightVolumeGIPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a93c84693f0d87874cf61d51c864e7993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LightVolumeGIPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="de/d6f/a04872" kindref="compound">LightVolumeGIPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac02297c7499948e49c821523f919524d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareArray</definition>
        <argsstring>(LayeredLightVolumeGIPassUPtr, lpv::ResolvePassCount, LayeredLightVolumeGIPass)</argsstring>
        <name>CU_DeclareArray</name>
        <param>
          <type>LayeredLightVolumeGIPassUPtr</type>
        </param>
        <param>
          <type><ref refid="d1/d38/a01480_1af1ce6a3538d8a65d24f2cc4796197d33" kindref="member">lpv::ResolvePassCount</ref></type>
        </param>
        <param>
          <type><ref refid="de/d75/a04852" kindref="compound">LayeredLightVolumeGIPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a68542fe4b6a5085a95c7f9ae54939f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareArray</definition>
        <argsstring>(LightVolumeGIPassUPtr, lpv::ResolvePassCount, LightVolumeGIPass)</argsstring>
        <name>CU_DeclareArray</name>
        <param>
          <type>LightVolumeGIPassUPtr</type>
        </param>
        <param>
          <type><ref refid="d1/d38/a01480_1af1ce6a3538d8a65d24f2cc4796197d33" kindref="member">lpv::ResolvePassCount</ref></type>
        </param>
        <param>
          <type><ref refid="de/d6f/a04872" kindref="compound">LightVolumeGIPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/LightVolumeGI/LightVolumeGIModule.hpp" line="81" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Node</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1ae05cd0daba83f842b870aa2eb08b1b91" prot="public" static="no">
        <type><ref refid="df/da8/a04320" kindref="compound">ObjectRenderNode</ref>&lt; <ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref>, <ref refid="df/df0/a05160" kindref="compound">Geometry</ref> &gt;</type>
        <definition>using castor3d::SubmeshRenderNode = typedef ObjectRenderNode&lt; Submesh, Geometry &gt;</definition>
        <argsstring></argsstring>
        <name>SubmeshRenderNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNodeModule.hpp" line="120" column="1" bodyfile="Render/Node/RenderNodeModule.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a384f6fd61b75ba3fbac28239a79872cd" prot="public" static="no">
        <type><ref refid="df/da8/a04320" kindref="compound">ObjectRenderNode</ref>&lt; <ref refid="d3/dc0/a05140" kindref="compound">BillboardBase</ref>, <ref refid="d3/dc0/a05140" kindref="compound">BillboardBase</ref> &gt;</type>
        <definition>using castor3d::BillboardListRenderNode = typedef ObjectRenderNode&lt; BillboardBase, BillboardBase &gt;</definition>
        <argsstring></argsstring>
        <name>BillboardListRenderNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNodeModule.hpp" line="121" column="1" bodyfile="Render/Node/RenderNodeModule.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Passes</header>
      <memberdef kind="function" id="da/d1e/a01479_1a3c5c4b67be070d030cda06b63f1ea772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, CombinePass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d1/d13/a04368" kindref="compound">CombinePass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2faf63dd2930868b2145ce38069a126f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, DepthPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d2/d7a/a04384" kindref="compound">DepthPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5d4b66a19ff554d93a6da6b5e747a598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, DownscalePass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d6/d5c/a04388" kindref="compound">DownscalePass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acbdba6f4c1abe887b7ad367ece46ac7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, GaussianBlur, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="dd/d8e/a04392" kindref="compound">GaussianBlur</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad712b17061d89a43d30a6519481db870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LineariseDepthPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d5/dbb/a04408" kindref="compound">LineariseDepthPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6e53c87db816ff32d44b8ee66cf78aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderQuad, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d4/d45/a04456" kindref="compound">RenderQuad</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7df5ed0fef0d399fc8cef0345a12c15b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderGrid, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="dd/d4b/a04432" kindref="compound">RenderGrid</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad665bf25e7b7720f1eab8dc14f23ac09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, StencilPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="df/d25/a04464" kindref="compound">StencilPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a07d5f125b6cc8d5f928d3b1b42928a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(CommandsSemaphore, CommandsSemaphore)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="d1/da6/a04380" kindref="compound">CommandsSemaphore</ref></type>
        </param>
        <param>
          <type><ref refid="d1/da6/a04380" kindref="compound">CommandsSemaphore</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/PassesModule.hpp" line="164" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>PBR</header>
      <memberdef kind="function" id="da/d1e/a01479_1a18748fd2329a3ec6a3b8b075d5251e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(IblTextures)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d0/d0c/a04484" kindref="compound">IblTextures</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/PBR/PbrModule.hpp" line="53" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>PostEffect</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1a151693e3692aa0feaea11a32fda7a14b" prot="public" static="no">
        <type>castor::Factory&lt; <ref refid="da/d6e/a04500" kindref="compound">PostEffect</ref>, castor::String, std::shared_ptr&lt; <ref refid="da/d6e/a04500" kindref="compound">PostEffect</ref> &gt;, std::function&lt; std::shared_ptr&lt; <ref refid="da/d6e/a04500" kindref="compound">PostEffect</ref> &gt;(<ref refid="d3/d6e/a04628" kindref="compound">RenderTarget</ref> &amp;, <ref refid="d9/d38/a04624" kindref="compound">RenderSystem</ref> &amp;, <ref refid="da/d1e/a01479_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref> const &amp;) &gt; &gt;</type>
        <definition>using castor3d::PostEffectFactory = typedef castor::Factory&lt; PostEffect , castor::String , std::shared_ptr&lt; PostEffect &gt; , std::function&lt; std::shared_ptr&lt; PostEffect &gt;( RenderTarget &amp;, RenderSystem &amp;, Parameters const &amp; ) &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>PostEffectFactory</name>
        <briefdescription>
<para>Post effect factory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/PostEffect/PostEffectModule.hpp" line="55" column="1" bodyfile="Render/PostEffect/PostEffectModule.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4ec433d5431343a3f91fbfa3d2fdd880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(PostEffect)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d6e/a04500" kindref="compound">PostEffect</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/PostEffect/PostEffectModule.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5ec722b8487cd488e70b11397e2bf622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(PostEffectSPtr, PostEffectPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>PostEffectSPtr</type>
        </param>
        <param>
          <type>PostEffectPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/PostEffect/PostEffectModule.hpp" line="62" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ShadowMap</header>
      <memberdef kind="enum" id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>SmTexture</name>
        <enumvalue id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751ca2a37044e2d0bed7cbb63527176543d73" prot="public">
          <name>eDepth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751ca8002b5774830d8abe29fba3b95e7bf92" prot="public">
          <name>eNormalLinear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751ca4e2884b2d066757887d9fb720396f707" prot="public">
          <name>eVariance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751ca091b83531d1056da31350f15fa2cd803" prot="public">
          <name>ePosition</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751ca3a5e35f7342841dc447f3a2c2b9a4c0c" prot="public">
          <name>eFlux</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751cae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751cabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eDepth</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751ca66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator of textures used in deferred rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="29" column="1" bodyfile="Render/ShadowMap/ShadowMapModule.hpp" bodystart="27" bodyend="36"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ab0b67f5cd43f18d6e037bc04b61267be" prot="public" static="no">
        <type>std::pair&lt; std::reference_wrapper&lt; <ref refid="d5/d62/a04648" kindref="compound">ShadowMap</ref> &gt;, UInt32Array &gt;</type>
        <definition>using castor3d::ShadowMapRefIds = typedef std::pair&lt; std::reference_wrapper&lt; ShadowMap &gt;, UInt32Array &gt;</definition>
        <argsstring></argsstring>
        <name>ShadowMapRefIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="136" column="1" bodyfile="Render/ShadowMap/ShadowMapModule.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a3cf1cf7237bf0ba75490a26c86985c47" prot="public" static="no">
        <type>std::vector&lt; <ref refid="da/d1e/a01479_1ab0b67f5cd43f18d6e037bc04b61267be" kindref="member">ShadowMapRefIds</ref> &gt;</type>
        <definition>using castor3d::ShadowMapRefArray = typedef std::vector&lt; ShadowMapRefIds &gt;</definition>
        <argsstring></argsstring>
        <name>ShadowMapRefArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="137" column="1" bodyfile="Render/ShadowMap/ShadowMapModule.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ad3137fb4b01f8deea8b1e20522ec8e6c" prot="public" static="no">
        <type>std::array&lt; <ref refid="da/d1e/a01479_1a3cf1cf7237bf0ba75490a26c86985c47" kindref="member">ShadowMapRefArray</ref>, size_t(<ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ae558bb69fadec037d9eae46601a4df8e" kindref="member">LightType::eCount</ref>) &gt;</type>
        <definition>using castor3d::ShadowMapLightTypeArray = typedef std::array&lt; ShadowMapRefArray, size_t( LightType::eCount ) &gt;</definition>
        <argsstring></argsstring>
        <name>ShadowMapLightTypeArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="138" column="1" bodyfile="Render/ShadowMap/ShadowMapModule.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2cf53532575a0eaf09047a15879c3940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getTextureName</definition>
        <argsstring>(LightType light, SmTexture texture)</argsstring>
        <name>getTextureName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>light</declname>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" kindref="member">SmTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aedd5a7073139f084275a15aaf69f7954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getName</definition>
        <argsstring>(SmTexture texture)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" kindref="member">SmTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a42b8f25da3adfadc9cadb196d32f4faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat castor3d::getFormat</definition>
        <argsstring>(SmTexture texture)</argsstring>
        <name>getFormat</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" kindref="member">SmTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acc1b0b37586750fa47daf800dcb41d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkClearValue</type>
        <definition>VkClearValue castor3d::getClearValue</definition>
        <argsstring>(SmTexture texture)</argsstring>
        <name>getClearValue</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" kindref="member">SmTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6f315b195a2dedb82b692cc59b795e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageUsageFlags</type>
        <definition>VkImageUsageFlags castor3d::getUsageFlags</definition>
        <argsstring>(SmTexture texture)</argsstring>
        <name>getUsageFlags</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" kindref="member">SmTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afc34713af1fbcefa938aa46f0dd6e890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkBorderColor</type>
        <definition>VkBorderColor castor3d::getBorderColor</definition>
        <argsstring>(SmTexture texture)</argsstring>
        <name>getBorderColor</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" kindref="member">SmTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4dc38e7af5acf19bc6a593c82ce8f404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(SmTexture texture, castor::Size const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" kindref="member">SmTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4670a0705410fb390d1469ae27db1b06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(SmTexture texture, VkExtent3D const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1afd8c72a6b5ba8d1f784bec682765751c" kindref="member">SmTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="45" column="1" bodyfile="Render/ShadowMap/ShadowMapModule.hpp" bodystart="45" bodyend="50"/>
        <references refid="da/d1e/a01479_1a320c0bae9dcfad25c32cde3aeb74d28a">getMipLevels</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abc45c99e2102b14a179cc6c54a165d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, ShadowMap, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d5/d62/a04648" kindref="compound">ShadowMap</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a317afb5b1c84f84e5b1bb691d0bbe397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, ShadowMapPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d1/d62/a04664" kindref="compound">ShadowMapPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad736890e06914cfcee12308505ec76bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::bindShadowMaps</definition>
        <argsstring>(PipelineFlags const &amp;pipelineFlags, ShadowMapLightTypeArray const &amp;shadowMaps, ashes::WriteDescriptorSetArray &amp;writes, uint32_t &amp;index)</argsstring>
        <name>bindShadowMaps</name>
        <param>
          <type><ref refid="dd/db6/a04580" kindref="compound">PipelineFlags</ref> const &amp;</type>
          <declname>pipelineFlags</declname>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const &amp;</type>
          <declname>shadowMaps</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>writes</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Writes the shadow maps descriptors to the given writes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ShadowMap/ShadowMapModule.hpp" line="147" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Technique</header>
      <memberdef kind="function" id="da/d1e/a01479_1a53eff72f298c3dae85515cc1f080f322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::bindTexture</definition>
        <argsstring>(ashes::ImageView const &amp;view, ashes::Sampler const &amp;sampler, ashes::WriteDescriptorSetArray &amp;writes, uint32_t &amp;index)</argsstring>
        <name>bindTexture</name>
        <param>
          <type>ashes::ImageView const &amp;</type>
          <declname>view</declname>
        </param>
        <param>
          <type>ashes::Sampler const &amp;</type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>writes</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Writes the image view and sampler descriptor to the given writes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/TechniqueModule.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a635e7e4e159a5e2c9296fa7ed22e4bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(RenderTechnique)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d05/a04920" kindref="compound">RenderTechnique</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/TechniqueModule.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a39be2bcd83207177c2a850024cf0d55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, RenderTechniquePass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d1/db7/a04924" kindref="compound">RenderTechniquePass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/TechniqueModule.hpp" line="77" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Opaque</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>DsTexture</name>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65a2a37044e2d0bed7cbb63527176543d73" prot="public">
          <name>eDepth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65a176c19311eebcba5053e7e18a6c2943d" prot="public">
          <name>eData1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65a8a7478ff5303b8a3583d0d785be98b9c" prot="public">
          <name>eData2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65a4aaa1db219bf8ad8a83b6a06c45f6789" prot="public">
          <name>eData3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65a1becdb19469fbc7301a1ee56bb792c22" prot="public">
          <name>eData4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65a60c22916ba359a87d83140501ea05fce" prot="public">
          <name>eData5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eDepth</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator of textures used by the deferred renderer&apos;s GBUffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="30" column="1" bodyfile="Render/Technique/Opaque/OpaqueModule.hpp" bodystart="28" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a35ccd65212b27c10e6f243d1f4829c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getTextureName</definition>
        <argsstring>(DsTexture texture)</argsstring>
        <name>getTextureName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65" kindref="member">DsTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a068d48188e9efbb545eef0534169585b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getName</definition>
        <argsstring>(DsTexture texture)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65" kindref="member">DsTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae3f2135231404a239802e2ba1d585f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat castor3d::getFormat</definition>
        <argsstring>(DsTexture texture)</argsstring>
        <name>getFormat</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65" kindref="member">DsTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ade896f1a7c6a8069329b3c90367edb4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkClearValue</type>
        <definition>VkClearValue castor3d::getClearValue</definition>
        <argsstring>(DsTexture texture)</argsstring>
        <name>getClearValue</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65" kindref="member">DsTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abd3a3344824dd810e01f455e329213a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageUsageFlags</type>
        <definition>VkImageUsageFlags castor3d::getUsageFlags</definition>
        <argsstring>(DsTexture texture)</argsstring>
        <name>getUsageFlags</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65" kindref="member">DsTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad8270dfb8ed5ba43d4dca84dbe69fea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkBorderColor</type>
        <definition>VkBorderColor castor3d::getBorderColor</definition>
        <argsstring>(DsTexture texture)</argsstring>
        <name>getBorderColor</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65" kindref="member">DsTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afdef47fc2b8bf0aa14c64fbbb0a96f6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(DsTexture texture, castor::Size const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a26cc94de349e5c40496343ae7a977d65" kindref="member">DsTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="45" column="1" bodyfile="Render/Technique/Opaque/OpaqueModule.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2cf98cfc7fbb8c2ae944883b77f7f934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, DeferredRendering, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d4/deb/a04728" kindref="compound">DeferredRendering</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3c08a80cb4c32de99e8256cd0201797f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, OpaqueResolvePass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="dc/d32/a04884" kindref="compound">OpaqueResolvePass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9e1fdd8eddb6c523cc07fa4dee066115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, SsaoPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d1/d58/a04916" kindref="compound">SsaoPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/OpaqueModule.hpp" line="106" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Lighting</header>
      <memberdef kind="enum" id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>LpTexture</name>
        <enumvalue id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3a2a37044e2d0bed7cbb63527176543d73" prot="public">
          <name>eDepth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3a32997c8a5f76ab8215ad2ef2e093418a" prot="public">
          <name>eDiffuse</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3aff5c79b4447f084037c3a309bb0154a7" prot="public">
          <name>eSpecular</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3a714901740a2cbc9e8a322cbdb7d9255f" prot="public">
          <name>eIndirectDiffuse</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3ac72345b7a4a6dea5eac806298da729be" prot="public">
          <name>eIndirectSpecular</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eDepth</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator of textures used by the lighting pass in deferred rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="35" column="1" bodyfile="Render/Technique/Opaque/Lighting/LightingModule.hpp" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abd67ae7f87033e1b946ca735de992c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getTextureName</definition>
        <argsstring>(LpTexture texture)</argsstring>
        <name>getTextureName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" kindref="member">LpTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa47c8630ae6d50229a544f4e3b270e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getName</definition>
        <argsstring>(LpTexture texture)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" kindref="member">LpTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1755898edcf104c9824198d9cb4a15e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat castor3d::getFormat</definition>
        <argsstring>(LpTexture texture)</argsstring>
        <name>getFormat</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" kindref="member">LpTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8f1f4723cdacafa2a5cba122404a3499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkClearValue</type>
        <definition>VkClearValue castor3d::getClearValue</definition>
        <argsstring>(LpTexture texture)</argsstring>
        <name>getClearValue</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" kindref="member">LpTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2ebe28df4c8d74482b328039d8600c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageUsageFlags</type>
        <definition>VkImageUsageFlags castor3d::getUsageFlags</definition>
        <argsstring>(LpTexture texture)</argsstring>
        <name>getUsageFlags</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" kindref="member">LpTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acee7b021962c3aa45c38c6081b3c6588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkBorderColor</type>
        <definition>VkBorderColor castor3d::getBorderColor</definition>
        <argsstring>(LpTexture texture)</argsstring>
        <name>getBorderColor</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" kindref="member">LpTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a753d8821b777ecb54536ffc1b3fb09ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(LpTexture texture, castor::Size const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" kindref="member">LpTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="49" column="1" bodyfile="Render/Technique/Opaque/Lighting/LightingModule.hpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9044d0e2a84ca00e266679b36f161a0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(LpTexture texture, VkExtent3D const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad9c2eac495497ef40705cc770a05c4f3" kindref="member">LpTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="54" column="1" bodyfile="Render/Technique/Opaque/Lighting/LightingModule.hpp" bodystart="54" bodyend="59"/>
        <references refid="da/d1e/a01479_1a320c0bae9dcfad25c32cde3aeb74d28a">getMipLevels</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afc51e8fa3bce67f71b4370e4c8ed8cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::getMaxDistance</definition>
        <argsstring>(LightCategory const &amp;light, castor::Point3f const &amp;attenuation)</argsstring>
        <name>getMaxDistance</name>
        <param>
          <type><ref refid="d3/dd2/a05176" kindref="compound">LightCategory</ref> const &amp;</type>
          <declname>light</declname>
        </param>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>attenuation</declname>
        </param>
        <briefdescription>
<para>Retrieve the maximum litten distance for given light and attenuation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">light</parametername>
</parameternamelist>
<parameterdescription>
<para>The light source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attenuation</parametername>
</parameternamelist>
<parameterdescription>
<para>The attenuation values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5edea55945dcc33414d9b9510103ecce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::getMaxDistance</definition>
        <argsstring>(LightCategory const &amp;light, castor::Point3f const &amp;attenuation, float max)</argsstring>
        <name>getMaxDistance</name>
        <param>
          <type><ref refid="d3/dd2/a05176" kindref="compound">LightCategory</ref> const &amp;</type>
          <declname>light</declname>
        </param>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>attenuation</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Retrieve the maximum litten distance for given light and attenuation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">light</parametername>
</parameternamelist>
<parameterdescription>
<para>The light source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attenuation</parametername>
</parameternamelist>
<parameterdescription>
<para>The attenuation values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max</parametername>
</parameternamelist>
<parameterdescription>
<para>The viewer max value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a950ea021052d50b7d62b3567bde8992a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(LightPass)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d8/dfa/a04756" kindref="compound">LightPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1e8840a9979303decbfae246b47f53e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, SubsurfaceScatteringPass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="df/da2/a04828" kindref="compound">SubsurfaceScatteringPass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightingModule.hpp" line="198" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>RSM GI</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1af19149c116c244ac51c891564d096cd6" prot="public" static="no">
        <type><ref refid="db/d9e/a04892" kindref="compound">LightPassReflectiveShadow</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a0ddd5baafa15f79528b19dd012e1dce3" kindref="member">LightType::eDirectional</ref> &gt;</type>
        <definition>using castor3d::DirectionalLightPassReflectiveShadow = typedef LightPassReflectiveShadow&lt; LightType::eDirectional &gt;</definition>
        <argsstring></argsstring>
        <name>DirectionalLightPassReflectiveShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The directional lights light pass with shadows. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/ReflectiveShadowMapGI/ReflectiveShadowMapGIModule.hpp" line="74" column="1" bodyfile="Render/Technique/Opaque/ReflectiveShadowMapGI/ReflectiveShadowMapGIModule.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a2d2c5d4b1cc4e8477e8e03cbf70b3856" prot="public" static="no">
        <type><ref refid="db/d9e/a04892" kindref="compound">LightPassReflectiveShadow</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a4ddd9f8296bf1271adcf1a2eea61bd57" kindref="member">LightType::ePoint</ref> &gt;</type>
        <definition>using castor3d::PointLightPassReflectiveShadow = typedef LightPassReflectiveShadow&lt; LightType::ePoint &gt;</definition>
        <argsstring></argsstring>
        <name>PointLightPassReflectiveShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The point lights light pass with shadows. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/ReflectiveShadowMapGI/ReflectiveShadowMapGIModule.hpp" line="77" column="1" bodyfile="Render/Technique/Opaque/ReflectiveShadowMapGI/ReflectiveShadowMapGIModule.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a7f8390f912f8f15aff3529b7f87375a3" prot="public" static="no">
        <type><ref refid="db/d9e/a04892" kindref="compound">LightPassReflectiveShadow</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ad6edd06d4607dfe84cff29cdd4f67fed" kindref="member">LightType::eSpot</ref> &gt;</type>
        <definition>using castor3d::SpotLightPassReflectiveShadow = typedef LightPassReflectiveShadow&lt; LightType::eSpot &gt;</definition>
        <argsstring></argsstring>
        <name>SpotLightPassReflectiveShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The spot lights light pass with shadows. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/ReflectiveShadowMapGI/ReflectiveShadowMapGIModule.hpp" line="80" column="1" bodyfile="Render/Technique/Opaque/ReflectiveShadowMapGI/ReflectiveShadowMapGIModule.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5a4431a5bd51c297e3b880891ef8eb66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(RsmGIPass)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/db8/a04908" kindref="compound">RsmGIPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/ReflectiveShadowMapGI/ReflectiveShadowMapGIModule.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a478dd8fe0f76147880ecc2eadb8dd7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(RsmInterpolatePass)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/d52/a04912" kindref="compound">RsmInterpolatePass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/ReflectiveShadowMapGI/ReflectiveShadowMapGIModule.hpp" line="83" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Transparent</header>
      <memberdef kind="enum" id="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4e" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>WbTexture</name>
        <enumvalue id="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4ea2a37044e2d0bed7cbb63527176543d73" prot="public">
          <name>eDepth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4ea8f5b387607a452919741c768d39bd93c" prot="public">
          <name>eAccumulation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4ea1d707621fe3cbc480f0aabdbf1c1e5b9" prot="public">
          <name>eRevealage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4eab2c25b5cef640a0733b40b4ded88d091" prot="public">
          <name>eVelocity</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4eae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4eabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eDepth</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4ea66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator of textures used in weighted blend OIT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentModule.hpp" line="28" column="1" bodyfile="Render/Technique/Transparent/TransparentModule.hpp" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a335752e6e4d0dfd52a1c96a9c964976e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getTextureName</definition>
        <argsstring>(WbTexture texture)</argsstring>
        <name>getTextureName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4e" kindref="member">WbTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentModule.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae903bf79e56bef1cb2e0855341d2a5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::String</type>
        <definition>castor::String castor3d::getName</definition>
        <argsstring>(WbTexture texture)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4e" kindref="member">WbTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentModule.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7a5027d7cf2be88982090db183ef579d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat castor3d::getFormat</definition>
        <argsstring>(WbTexture texture)</argsstring>
        <name>getFormat</name>
        <param>
          <type><ref refid="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4e" kindref="member">WbTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentModule.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aec0c952f8f0dc20a985b9e56d93c824a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkClearValue</type>
        <definition>VkClearValue castor3d::getClearValue</definition>
        <argsstring>(WbTexture texture)</argsstring>
        <name>getClearValue</name>
        <param>
          <type><ref refid="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4e" kindref="member">WbTexture</ref></type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentModule.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4c413024aa1d2a387aeb8d7c6ecbb9e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(WbTexture texture, castor::Size const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4e" kindref="member">WbTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentModule.hpp" line="39" column="1" bodyfile="Render/Technique/Transparent/TransparentModule.hpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4373168925ad9b6fd2b8750d3be98bf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::getMipLevels</definition>
        <argsstring>(WbTexture texture, VkExtent3D const &amp;size)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type><ref refid="da/d1e/a01479_1af57613a6840019e1b8344d92a7789d4e" kindref="member">WbTexture</ref></type>
          <declname>texture</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentModule.hpp" line="44" column="1" bodyfile="Render/Technique/Transparent/TransparentModule.hpp" bodystart="44" bodyend="49"/>
        <references refid="da/d1e/a01479_1a320c0bae9dcfad25c32cde3aeb74d28a">getMipLevels</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a144a424fdbdfbce629b1194531f9f88c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, WeightedBlendRendering, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="de/d1b/a04948" kindref="compound">WeightedBlendRendering</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentModule.hpp" line="96" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ToneMapping</header>
      <memberdef kind="typedef" id="da/d1e/a01479_1a88196663ff565a3a06f0c8481043d205" prot="public" static="no">
        <type>castor::Factory&lt; <ref refid="d7/de6/a04956" kindref="compound">ToneMapping</ref>, castor::String, ToneMappingSPtr, std::function&lt; ToneMappingSPtr(<ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> &amp;, <ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;, <ref refid="d1/d06/a05468" kindref="compound">HdrConfigUbo</ref> &amp;, <ref refid="da/d1e/a01479_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref> const &amp;) &gt; &gt;</type>
        <definition>using castor3d::ToneMappingFactory = typedef castor::Factory&lt; ToneMapping , castor::String , ToneMappingSPtr , std::function&lt; ToneMappingSPtr( Engine &amp;, RenderDevice const &amp;, HdrConfigUbo &amp;, Parameters const &amp; ) &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ToneMappingFactory</name>
        <briefdescription>
<para>Tone mapping factory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ToneMapping/ToneMappingModule.hpp" line="66" column="1" bodyfile="Render/ToneMapping/ToneMappingModule.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afe6ec4317507e3726860e1a73827ffbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ToneMapping)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d7/de6/a04956" kindref="compound">ToneMapping</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ToneMapping/ToneMappingModule.hpp" line="57" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ToTexture</header>
      <memberdef kind="function" id="da/d1e/a01479_1a91941cbb92e7ae6d6081333af63a2f9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(EquirectangularToCube)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/dc6/a04964" kindref="compound">EquirectangularToCube</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ToTexture/RenderToTextureModule.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aef43067f7eef3a62c691c40366da5016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(RenderCube)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d3/d49/a04972" kindref="compound">RenderCube</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ToTexture/RenderToTextureModule.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad38a79d0a2ffcb4aa5da3edeb9720052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(RenderDepthQuad)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d4c/a04980" kindref="compound">RenderDepthQuad</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ToTexture/RenderToTextureModule.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a86691935e36ea02a5c8bf8f990060122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureProjection)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dd/dc9/a04996" kindref="compound">TextureProjection</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ToTexture/RenderToTextureModule.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac3d131a3c1d388a157fe3681c68eb861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureProjectionToCube)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="de/d7d/a05000" kindref="compound">TextureProjectionToCube</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ToTexture/RenderToTextureModule.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a662c4a37ecdbd52fea8a4a6a1fe8fcac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, Texture3DTo2D, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d5/d6e/a04988" kindref="compound">Texture3DTo2D</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/ToTexture/RenderToTextureModule.hpp" line="77" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Voxelize</header>
      <memberdef kind="function" id="da/d1e/a01479_1ae30ffed056f030d2682469622524aeae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, VoxelBufferToTexture, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="db/dd9/a05012" kindref="compound">VoxelBufferToTexture</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Voxelize/VoxelizeModule.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a39659cc22df40072b092791035d9a1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, VoxelizePass, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d7/d17/a05024" kindref="compound">VoxelizePass</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Voxelize/VoxelizeModule.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6a6fbd1dc837cfae8b923ed0c00712b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, VoxelSecondaryBounce, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d8/d09/a05036" kindref="compound">VoxelSecondaryBounce</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Voxelize/VoxelizeModule.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad93a783d39b92e5d8c7a8ae136ba8234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, Voxelizer, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="dc/d61/a05028" kindref="compound">Voxelizer</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Voxelize/VoxelizeModule.hpp" line="68" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Scene</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebca" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>MovableType</name>
        <enumvalue id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebcaa14bd73738591c6e560d81b0724e96322" prot="public">
          <name>eCamera</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebcaa602580dcfaed9d9ddf07cad7276c3103" prot="public">
          <name>eGeometry</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebcaadd46b640b816561ca3a98235d84d40e9" prot="public">
          <name>eLight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebcaaf0fbe61d17cc90f35a934671f2b23671" prot="public">
          <name>eBillboard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebcaa1b5d4499254640e2ab3c0394f83c195a" prot="public">
          <name>eParticleEmitter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebcaae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebcaabd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eCamera</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebcaa66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Movable object types enumerator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>There are four movable object types : camera, geometry, light and billboard. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="31" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="29" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935" prot="public" static="no" strong="yes">
        <type></type>
        <name>ShadowType</name>
        <enumvalue id="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935abe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No shadows at all. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935a7bafdff459a286e49c229bde7488d211" prot="public">
          <name>eRaw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No filtering. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935af5c76b6327e73cd66f0125b00698f04b" prot="public">
          <name>ePCF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PCF filtering. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935a4e2884b2d066757887d9fb720396f707" prot="public">
          <name>eVariance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Variance shadow mapping. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eNone</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Shadow filter types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="49" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="48" bodyend="63"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3" prot="public" static="no" strong="yes">
        <type></type>
        <name>FogType</name>
        <enumvalue id="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3ab32b520e58e1334ea07d4df5a4c5c402" prot="public">
          <name>eDisabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No fog. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3ab4f471e7b4231c34ab95df36681e7a86" prot="public">
          <name>eLinear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d7/d13/a05156" kindref="compound">Fog</ref> intensity increases linearly with distance to camera. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3a4f00818b66b11cae205ccdf9bfbe8c92" prot="public">
          <name>eExponential</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d7/d13/a05156" kindref="compound">Fog</ref> intensity increases exponentially with distance to camera. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3aeafd518d3a8f1b0a3e3f07476090f1ca" prot="public">
          <name>eSquaredExponential</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d7/d13/a05156" kindref="compound">Fog</ref> intensity increases even more with distance to camera. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eDisabled</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d7/d13/a05156" kindref="compound">Fog</ref> types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="74" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="73" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51" prot="public" static="no" strong="yes">
        <type>uint16_t</type>
        <name>SceneFlag</name>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51abe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No flag. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a0d43f4f9f313db7620ef36523b343315" prot="public">
          <name>eFogLinear</name>
          <initializer>= 0x0001 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Linear fog. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a2fc0e92dbe8866022f54219bc2be62e0" prot="public">
          <name>eFogExponential</name>
          <initializer>= 0x0001 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Exponential fog. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51af21da3477a083c4df100fbea08783d0a" prot="public">
          <name>eFogSquaredExponential</name>
          <initializer>= 0x0001 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Squared exponential fog. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a823430dbaa201567ef07f3033e23586e" prot="public">
          <name>eShadowBegin</name>
          <initializer>= 0x0001 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow enabling, by light source type. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a4f8d6145cd4babf148920d6b9f96601c" prot="public">
          <name>eShadowDirectional</name>
          <initializer>= eShadowBegin &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a6e440d9192b990b375db2d86f828cbf3" prot="public">
          <name>eShadowPoint</name>
          <initializer>= eShadowBegin &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a25a5b6f04f6876e13a7f8930e3615e61" prot="public">
          <name>eShadowSpot</name>
          <initializer>= eShadowBegin &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a03d28be43b0583118676c48566f0981b" prot="public">
          <name>eShadowEnd</name>
          <initializer>= eShadowSpot</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51afc9a4467a136023d484aa192809023b1" prot="public">
          <name>eShadowAny</name>
          <initializer>= eShadowSpot | eShadowPoint | eShadowDirectional</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a2f54b96ef60b1a51f8a1dd4de145b613" prot="public">
          <name>eLpvGI</name>
          <initializer>= 0x0001 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d8/de4/a05172" kindref="compound">Light</ref> Propagation Volumes enabling. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a4dd2d2584776fd577fb86a5d5d524da6" prot="public">
          <name>eLayeredLpvGI</name>
          <initializer>= 0x0001 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a2801d8ef53f92c196110f842add78e1c" prot="public">
          <name>eVoxelConeTracing</name>
          <initializer>= 0x0001 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d4/d79/a05020" kindref="compound">Voxel</ref> <ref refid="d0/de0/a03868" kindref="compound">Cone</ref> Tracing enabling. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51a205a605c9a22391af5e09fa60fe30678" prot="public">
          <name>eAll</name>
          <initializer>= 0x01FF</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>All flags. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d5/d76/a05244" kindref="compound">Scene</ref> flags enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="100" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="98" bodyend="131"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1ad8a373afc3d804c9273fa77709e4dcc5" prot="public" static="no" strong="yes">
        <type></type>
        <name>BillboardType</name>
        <enumvalue id="da/d1e/a01479_1ad8a373afc3d804c9273fa77709e4dcc5a20cf4ac448c4e6af02dc910e7fd95045" prot="public">
          <name>eSpherical</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Billboards always face the camera. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad8a373afc3d804c9273fa77709e4dcc5aec4299b41c7fa97335488379670b0a8a" prot="public">
          <name>eCylindrical</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Billboards rotate only on Y axis. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad8a373afc3d804c9273fa77709e4dcc5ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad8a373afc3d804c9273fa77709e4dcc5abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eSpherical</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1ad8a373afc3d804c9273fa77709e4dcc5a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Billboard rendering types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="159" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a37be8688c9386159c9f20086a7dc24a4" prot="public" static="no" strong="yes">
        <type></type>
        <name>BillboardSize</name>
        <enumvalue id="da/d1e/a01479_1a37be8688c9386159c9f20086a7dc24a4a9475ad50d50be67082b6b6b176d7d524" prot="public">
          <name>eDynamic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Billboards size changes with camera position. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a37be8688c9386159c9f20086a7dc24a4a2eec4822798fb8c96b4fd915bf11836c" prot="public">
          <name>eFixed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Billboards size doesn&apos;t change. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a37be8688c9386159c9f20086a7dc24a4ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a37be8688c9386159c9f20086a7dc24a4abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eDynamic</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a37be8688c9386159c9f20086a7dc24a4a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Billboard sizing types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="178" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="177" bodyend="186"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a525bec5d25db94bcff4168e9e1a826fa" prot="public" static="no">
        <type>castor::FlagCombination&lt; <ref refid="da/d1e/a01479_1a0282168ae87222228c5a154c419deb51" kindref="member">SceneFlag</ref> &gt;</type>
        <definition>using castor3d::SceneFlags = typedef castor::FlagCombination&lt; SceneFlag &gt;</definition>
        <argsstring></argsstring>
        <name>SceneFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="132" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a42a69a9566a4038f57963caedf0de910" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d5/d76/a05244" kindref="compound">Scene</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnSceneChangedFunction = typedef std::function&lt; void( Scene const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnSceneChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="365" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ae5105909202db27d41f4d15d2618222d" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a42a69a9566a4038f57963caedf0de910" kindref="member">OnSceneChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnSceneChanged = typedef castor::Signal&lt; OnSceneChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnSceneChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="366" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ae841a866078e431ce198a5b2e3715ee6" prot="public" static="no">
        <type>OnSceneChanged::connection</type>
        <definition>using castor3d::OnSceneChangedConnection = typedef OnSceneChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnSceneChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="367" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ad6e47562a17d7bc5c4ef217bcf52e54c" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d5/d76/a05244" kindref="compound">Scene</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnSceneUpdateFunction = typedef std::function&lt; void( Scene const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnSceneUpdateFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="369" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ae3bdb303f4c58da6b95243ca2f39bd23" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1ad6e47562a17d7bc5c4ef217bcf52e54c" kindref="member">OnSceneUpdateFunction</ref> &gt;</type>
        <definition>using castor3d::OnSceneUpdate = typedef castor::Signal&lt; OnSceneUpdateFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnSceneUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="370" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1af0a845ca52eabd726084993dce2730d9" prot="public" static="no">
        <type>OnSceneUpdate::connection</type>
        <definition>using castor3d::OnSceneUpdateConnection = typedef OnSceneUpdate::connection</definition>
        <argsstring></argsstring>
        <name>OnSceneUpdateConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="371" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a81e3f2bcdf845aa0abd1bb938616fdd3" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d5/d9c/a05152" kindref="compound">Camera</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnCameraChangedFunction = typedef std::function&lt; void( Camera const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnCameraChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="373" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a105ab8eb9af9fadc029838d711c7fb08" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a81e3f2bcdf845aa0abd1bb938616fdd3" kindref="member">OnCameraChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnCameraChanged = typedef castor::Signal&lt; OnCameraChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnCameraChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="374" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a3d394828fcca3243224921cdc4f0eec7" prot="public" static="no">
        <type>OnCameraChanged::connection</type>
        <definition>using castor3d::OnCameraChangedConnection = typedef OnCameraChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnCameraChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="375" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a62490e442807b57fca56968344b3b762" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="da/d44/a05256" kindref="compound">SceneNode</ref> const &amp;) &gt;</type>
        <definition>using castor3d::OnSceneNodeChangedFunction = typedef std::function&lt; void( SceneNode const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnSceneNodeChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="377" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aeba6e359a1ee72890385531e06ed1999" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a62490e442807b57fca56968344b3b762" kindref="member">OnSceneNodeChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnSceneNodeChanged = typedef castor::Signal&lt; OnSceneNodeChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnSceneNodeChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="378" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a93966e91ef2aff33b2963e1e8101cb3e" prot="public" static="no">
        <type>OnSceneNodeChanged::connection</type>
        <definition>using castor3d::OnSceneNodeChangedConnection = typedef OnSceneNodeChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnSceneNodeChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="379" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1af0168b54b0fa08e14c78c84581cb672b" prot="public" static="no">
        <type>std::map&lt; <ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> const *, MaterialWPtr &gt;</type>
        <definition>using castor3d::SubmeshMaterialMap = typedef std::map&lt; Submesh const *, MaterialWPtr &gt;</definition>
        <argsstring></argsstring>
        <name>SubmeshMaterialMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="381" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a68c8ae48d7ef075b35fd94f891bef4aa" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="df/df0/a05160" kindref="compound">Geometry</ref> const &amp;, <ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> const &amp;, MaterialSPtr oldMaterial, MaterialSPtr newMaterial) &gt;</type>
        <definition>using castor3d::OnSubmeshMaterialChangedFunction = typedef std::function&lt; void( Geometry const &amp;, Submesh const &amp;, MaterialSPtr oldMaterial, MaterialSPtr newMaterial) &gt;</definition>
        <argsstring></argsstring>
        <name>OnSubmeshMaterialChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="382" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a2deb2dce7c6c148182125764441e4459" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a68c8ae48d7ef075b35fd94f891bef4aa" kindref="member">OnSubmeshMaterialChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnSubmeshMaterialChanged = typedef castor::Signal&lt; OnSubmeshMaterialChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnSubmeshMaterialChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="383" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aa18db09cb65a6e2ddc11e83b62453e79" prot="public" static="no">
        <type>OnSubmeshMaterialChanged::connection</type>
        <definition>using castor3d::OnSubmeshMaterialChangedConnection = typedef OnSubmeshMaterialChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnSubmeshMaterialChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="384" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a0b51065d311dca147469e6359990835d" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d3/dc0/a05140" kindref="compound">BillboardBase</ref> const &amp;, MaterialSPtr oldMaterial, MaterialSPtr newMaterial) &gt;</type>
        <definition>using castor3d::OnBillboardMaterialChangedFunction = typedef std::function&lt; void( BillboardBase const &amp;, MaterialSPtr oldMaterial, MaterialSPtr newMaterial ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnBillboardMaterialChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="386" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a7416bc901efb2d1d9ca84fbdf29c8d22" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a0b51065d311dca147469e6359990835d" kindref="member">OnBillboardMaterialChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnBillboardMaterialChanged = typedef castor::Signal&lt; OnBillboardMaterialChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnBillboardMaterialChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="387" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a21698845af912005f0ce8c4fd573f16a" prot="public" static="no">
        <type>OnBillboardMaterialChanged::connection</type>
        <definition>using castor3d::OnBillboardMaterialChangedConnection = typedef OnBillboardMaterialChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnBillboardMaterialChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="388" column="1" bodyfile="Scene/SceneModule.hpp" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac40b88855b45da29ce97fd4f678864fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(MovableType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a3b295abad3147d934a7378cad0a0ebca" kindref="member">MovableType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aaf4811bc9008557fa5ec60863303d90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(ShadowType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a90275671c44e791e9556c4bed9033935" kindref="member">ShadowType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0eb28409f09e15a89dcb2d304360aa42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(FogType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3" kindref="member">FogType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adcc2eb07b51ad3a63c775f71a009e3a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3" kindref="member">FogType</ref></type>
        <definition>C3D_API FogType castor3d::getFogType</definition>
        <argsstring>(SceneFlags const &amp;flags)</argsstring>
        <name>getFogType</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a525bec5d25db94bcff4168e9e1a826fa" kindref="member">SceneFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Gives the fog type matching the given flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fog type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2c8d30896bc3bf4382376c657114ec02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(BillboardType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad8a373afc3d804c9273fa77709e4dcc5" kindref="member">BillboardType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adaca8168da6cf66118d276b66e1eb4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(BillboardSize value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a37be8688c9386159c9f20086a7dc24a4" kindref="member">BillboardSize</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad673c4b733494ba737d15ee1104927f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(BillboardBase)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d3/dc0/a05140" kindref="compound">BillboardBase</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a91cd2d2f79fee6a02c7c6ae13d15274c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(BillboardList)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d4/dc5/a05148" kindref="compound">BillboardList</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4e4248ff83f01331891e16a980a6a108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Camera)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d5/d9c/a05152" kindref="compound">Camera</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adbd09d9e6f527ed8c8c5d487acffb8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Geometry)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="df/df0/a05160" kindref="compound">Geometry</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a71523372aab8a1346fbae25f596abfa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(MovableObject)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/d4a/a05192" kindref="compound">MovableObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac19c35ee16d794ea43eaf7050090389f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Scene)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d5/d76/a05244" kindref="compound">Scene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a596f0ae370a72b503ce74b9c9bc5d0c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SceneFileContext)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="df/d8e/a05248" kindref="compound">SceneFileContext</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a490ea523cf69938a3825c2627998bda5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SceneFileParser)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/df0/a05252" kindref="compound">SceneFileParser</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a385dbbef5fad0533272a393872d51bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SceneImporter)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type>SceneImporter</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad171770da60ba455d7a9deaf35612e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SceneNode)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d44/a05256" kindref="compound">SceneNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9f7e7ffc07bb89ee7ad2cddaed2b643f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(CameraSPtr, CameraPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>CameraSPtr</type>
        </param>
        <param>
          <type>CameraPtr</type>
        </param>
        <briefdescription>
<para><ref refid="d5/d9c/a05152" kindref="compound">Camera</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad6d19d36241a2e3da872c189ff4b2659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(GeometrySPtr, GeometryPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>GeometrySPtr</type>
        </param>
        <param>
          <type>GeometryPtr</type>
        </param>
        <briefdescription>
<para><ref refid="df/df0/a05160" kindref="compound">Geometry</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a12669028c17ad3d1031c11e0b003ae8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(SceneNodeSPtr, SceneNodePtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>SceneNodeSPtr</type>
        </param>
        <param>
          <type>SceneNodePtr</type>
        </param>
        <briefdescription>
<para><ref refid="da/d44/a05256" kindref="compound">SceneNode</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8da57a7016dfb734b6d69280d288967d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(BillboardListSPtr, BillboardList)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>BillboardListSPtr</type>
        </param>
        <param>
          <type><ref refid="d4/dc5/a05148" kindref="compound">BillboardList</ref></type>
        </param>
        <briefdescription>
<para><ref refid="d4/dc5/a05148" kindref="compound">BillboardList</ref> pointer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adc4048453e64887baa23c801fca41a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, CameraSPtr, CameraPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>CameraSPtr</type>
        </param>
        <param>
          <type>CameraPtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="d5/d9c/a05152" kindref="compound">Camera</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a47b3e8a96979e6b4e579fc1e6bc832fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, MovableObjectSPtr, MovableObjectPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>MovableObjectSPtr</type>
        </param>
        <param>
          <type>MovableObjectPtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="d9/d4a/a05192" kindref="compound">MovableObject</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5621c0d39836b2dd8beacc5527aaa9e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, GeometrySPtr, GeometryPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>GeometrySPtr</type>
        </param>
        <param>
          <type>GeometryPtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="df/df0/a05160" kindref="compound">Geometry</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4d9377678d1d69e216f3355f7545d2ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, SceneSPtr, ScenePtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>SceneSPtr</type>
        </param>
        <param>
          <type>ScenePtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="d5/d76/a05244" kindref="compound">Scene</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a91d1a4c2089fee78bab172c80f097042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, SceneNodeSPtr, SceneNodePtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>SceneNodeSPtr</type>
        </param>
        <param>
          <type>SceneNodePtrStr</type>
        </param>
        <briefdescription>
<para><ref refid="da/d44/a05256" kindref="compound">SceneNode</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5817f35c6b2eae4b42b936a8e22e73e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, BillboardListSPtr, BillboardListStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>BillboardListSPtr</type>
        </param>
        <param>
          <type>BillboardListStr</type>
        </param>
        <briefdescription>
<para><ref refid="d4/dc5/a05148" kindref="compound">BillboardList</ref> pointer map, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneModule.hpp" line="363" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Background</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a4e3a829d0637134e60b23ef9d62d692b" prot="public" static="no" strong="yes">
        <type></type>
        <name>BackgroundType</name>
        <enumvalue id="da/d1e/a01479_1a4e3a829d0637134e60b23ef9d62d692ba933e146a34d99e16a319642574089a34" prot="public">
          <name>eColour</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4e3a829d0637134e60b23ef9d62d692bac8cb98c5bfd36f031e9e987c48553cca" prot="public">
          <name>eImage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4e3a829d0637134e60b23ef9d62d692ba983a99e993c0f4ac67380ee7f720828c" prot="public">
          <name>eSkybox</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4e3a829d0637134e60b23ef9d62d692bae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4e3a829d0637134e60b23ef9d62d692babd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eColour</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4e3a829d0637134e60b23ef9d62d692ba66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d5/d76/a05244" kindref="compound">Scene</ref> background types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Background/BackgroundModule.hpp" line="27" column="1" bodyfile="Scene/Background/BackgroundModule.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a5af8a9bbd0dfca8465c727ae42dfef14" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d0/d47/a05104" kindref="compound">SceneBackground</ref> const &amp;) &gt;</type>
        <definition>using castor3d::BackgroundChangedFunc = typedef std::function&lt; void( SceneBackground const &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>BackgroundChangedFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Background/BackgroundModule.hpp" line="100" column="1" bodyfile="Scene/Background/BackgroundModule.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ae595eac69c246fe9f69f54e0a59472b9" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a5af8a9bbd0dfca8465c727ae42dfef14" kindref="member">BackgroundChangedFunc</ref> &gt;</type>
        <definition>using castor3d::OnBackgroundChanged = typedef castor::Signal&lt; BackgroundChangedFunc &gt;</definition>
        <argsstring></argsstring>
        <name>OnBackgroundChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Background/BackgroundModule.hpp" line="101" column="1" bodyfile="Scene/Background/BackgroundModule.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a041b5481c8af5c2735f8cbf6740bf07e" prot="public" static="no">
        <type>OnBackgroundChanged::connection</type>
        <definition>using castor3d::OnBackgroundChangedConnection = typedef OnBackgroundChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnBackgroundChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Background/BackgroundModule.hpp" line="102" column="1" bodyfile="Scene/Background/BackgroundModule.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7055e83b75e589e5e9872b870c2e0bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(BackgroundType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a4e3a829d0637134e60b23ef9d62d692b" kindref="member">BackgroundType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Background/BackgroundModule.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae82ad105cbe7d865686c19ea5b5ef334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SceneBackground)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d0/d47/a05104" kindref="compound">SceneBackground</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Background/BackgroundModule.hpp" line="98" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Light</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>LightType</name>
        <enumvalue id="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a0ddd5baafa15f79528b19dd012e1dce3" prot="public">
          <name>eDirectional</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Directional light type. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a4ddd9f8296bf1271adcf1a2eea61bd57" prot="public">
          <name>ePoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Point light type. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ad6edd06d4607dfe84cff29cdd4f67fed" prot="public">
          <name>eSpot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Spot light type. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eDirectional</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="d8/de4/a05172" kindref="compound">Light</ref> types enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="26" column="1" bodyfile="Scene/Light/LightModule.hpp" bodystart="24" bodyend="37"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aeff34048b6a4d55dc9fa0df40b5dd8e7" prot="public" static="no">
        <type>std::array&lt; LightsArray, size_t(<ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ae558bb69fadec037d9eae46601a4df8e" kindref="member">LightType::eCount</ref>) &gt;</type>
        <definition>using castor3d::LightsMap = typedef std::array&lt; LightsArray, size_t( LightType::eCount ) &gt;</definition>
        <argsstring></argsstring>
        <name>LightsMap</name>
        <briefdescription>
<para>Array of lights per light type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="132" column="1" bodyfile="Scene/Light/LightModule.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a3d685b686dac6a4d6b5875e48fa7ac72" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="d8/de4/a05172" kindref="compound">Light</ref> &amp;) &gt;</type>
        <definition>using castor3d::OnLightChangedFunction = typedef std::function&lt; void( Light &amp; ) &gt;</definition>
        <argsstring></argsstring>
        <name>OnLightChangedFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="134" column="1" bodyfile="Scene/Light/LightModule.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a3a3bbc0e69185525067a88f90de99026" prot="public" static="no">
        <type>castor::Signal&lt; <ref refid="da/d1e/a01479_1a3d685b686dac6a4d6b5875e48fa7ac72" kindref="member">OnLightChangedFunction</ref> &gt;</type>
        <definition>using castor3d::OnLightChanged = typedef castor::Signal&lt; OnLightChangedFunction &gt;</definition>
        <argsstring></argsstring>
        <name>OnLightChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="135" column="1" bodyfile="Scene/Light/LightModule.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a099e189b5c7efa89e27d48091a4d746a" prot="public" static="no">
        <type>OnLightChanged::connection</type>
        <definition>using castor3d::OnLightChangedConnection = typedef OnLightChanged::connection</definition>
        <argsstring></argsstring>
        <name>OnLightChangedConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="136" column="1" bodyfile="Scene/Light/LightModule.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9a7403053a5ecef828a4c775c1a9f43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(LightType value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a93b845f02083441f4904e88be80875f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Light)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d8/de4/a05172" kindref="compound">Light</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a34e80606db8388df6db3029c9bd81036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(LightFactory)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d7/d64/a05180" kindref="compound">LightFactory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afb04fee1b83566b981515cb3234113b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(LightCategory)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d3/dd2/a05176" kindref="compound">LightCategory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9018c9f45497939fb27d9cbebfee456c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(DirectionalLight)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="df/d18/a05168" kindref="compound">DirectionalLight</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aad082576201aec9add4597a99e950218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(PointLight)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/ded/a05184" kindref="compound">PointLight</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af6753d6d7c18e13d507f684bca49116e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(SpotLight)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/d8c/a05188" kindref="compound">SpotLight</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac9984f1888aa50d1911ee7b9b4650d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(LightSPtr, LightPtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>LightSPtr</type>
        </param>
        <param>
          <type>LightPtr</type>
        </param>
        <briefdescription>
<para>Array of lights. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a837ed0c6fa342256ab007a769c8c4d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(LightSPtr, Lights)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>LightSPtr</type>
        </param>
        <param>
          <type>Lights</type>
        </param>
        <briefdescription>
<para>Array of lights. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a31603c072cda0a345e93c5204e8bf1ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(LightRPtr, LightsRef)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>LightRPtr</type>
        </param>
        <param>
          <type>LightsRef</type>
        </param>
        <briefdescription>
<para>Array to non owning light pointers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a636d248e069772b92862806dff37d29b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, LightSPtr, LightPtrStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>LightSPtr</type>
        </param>
        <param>
          <type>LightPtrStr</type>
        </param>
        <briefdescription>
<para>Map of lights, sorted by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa684a184d70a6ea82451dfc569bd0144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(int, LightSPtr, LightPtrInt)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>LightSPtr</type>
        </param>
        <param>
          <type>LightPtrInt</type>
        </param>
        <briefdescription>
<para>Map of lights, sorted by index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightModule.hpp" line="130" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Particle</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756" prot="public" static="no" strong="yes">
        <type>uint32_t</type>
        <name>ElementUsage</name>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a64c3acc11ffdb1be30ea339290bd1508" prot="public">
          <name>eUnknown</name>
          <initializer>= 0x000</initializer>
          <briefdescription>
<para>Position coords. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a091b83531d1056da31350f15fa2cd803" prot="public">
          <name>ePosition</name>
          <initializer>= 0x001</initializer>
          <briefdescription>
<para>Position coords. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756ab4f88a7e09f780f6246448ebb0f6a44b" prot="public">
          <name>eNormal</name>
          <initializer>= 0x002</initializer>
          <briefdescription>
<para>Normal coords. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a6c04f24aa0b7ff00b186ed2169bfec3b" prot="public">
          <name>eTangent</name>
          <initializer>= 0x004</initializer>
          <briefdescription>
<para>Tangent coords. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a5a2bfa6e36c6a4654d917e717e256f44" prot="public">
          <name>eBitangent</name>
          <initializer>= 0x008</initializer>
          <briefdescription>
<para>Bitangent coords. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a32997c8a5f76ab8215ad2ef2e093418a" prot="public">
          <name>eDiffuse</name>
          <initializer>= 0x010</initializer>
          <briefdescription>
<para>Diffuse colour. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a4a54986c775a98f4480ae0ab59b10d70" prot="public">
          <name>eTexCoords</name>
          <initializer>= 0x020</initializer>
          <briefdescription>
<para>Texture coordinates. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a52f9e8ff160664949487717d03003229" prot="public">
          <name>eBoneIds0</name>
          <initializer>= 0x040</initializer>
          <briefdescription>
<para><ref refid="d7/dcb/a04028" kindref="compound">Bone</ref> IDs 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756ae3833c3f8ebda6a854168179497b2169" prot="public">
          <name>eBoneIds1</name>
          <initializer>= 0x080</initializer>
          <briefdescription>
<para><ref refid="d7/dcb/a04028" kindref="compound">Bone</ref> IDs 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756abdf78ec3b871c0bbdc7bacd92011cc0e" prot="public">
          <name>eBoneWeights0</name>
          <initializer>= 0x100</initializer>
          <briefdescription>
<para><ref refid="d7/dcb/a04028" kindref="compound">Bone</ref> weights 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a1d55be476eac97712b416fcef6a84d46" prot="public">
          <name>eBoneWeights1</name>
          <initializer>= 0x200</initializer>
          <briefdescription>
<para><ref refid="d7/dcb/a04028" kindref="compound">Bone</ref> weights 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a3f6aaeb2f4e899f8dced38b8f222fc54" prot="public">
          <name>eTransform</name>
          <initializer>= 0x400</initializer>
          <briefdescription>
<para>Instantiation matrix. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756a56f2b4a0619911c5e324e42d3ee95f63" prot="public">
          <name>eMatIndex</name>
          <initializer>= 0x800</initializer>
          <briefdescription>
<para>Instantiation material index. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Element usage enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="27" column="1" bodyfile="Scene/ParticleSystem/ParticleModule.hpp" bodystart="25" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250" prot="public" static="no" strong="yes">
        <type></type>
        <name>ParticleFormat</name>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250ab811883d0eea431e27438596857a9e86" prot="public">
          <name>eInt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a249395ba5533750007ce9aeb02568236" prot="public">
          <name>eVec2i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a341f1d3999612c66e19dfe12ca93732f" prot="public">
          <name>eVec3i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a05854348b7e374f2235703f464b19dd2" prot="public">
          <name>eVec4i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250aca13c76c9c197a095618d5b32eea2b02" prot="public">
          <name>eUInt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250ad404a2be7a6134318da5d4359ddbce5e" prot="public">
          <name>eVec2ui</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a4ff20c4a8da57637f7de9d1ce3798941" prot="public">
          <name>eVec3ui</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250acfcc389c2c7a1c58d39d61a6596124da" prot="public">
          <name>eVec4ui</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a9b9526f83cc144a1ee8dfa49d1c45863" prot="public">
          <name>eFloat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a910762e1f93aad6cc1c8009c4830d72c" prot="public">
          <name>eVec2f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a5fda82c7587913cec9522f0305aa5de7" prot="public">
          <name>eVec3f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250aa81e9d0c1658f7a130fc2174bb154433" prot="public">
          <name>eVec4f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a71ad272bb2bb0f21e6ce4ac81d748339" prot="public">
          <name>eMat2f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a2970e603064cd2b07e53a6397c374b5a" prot="public">
          <name>eMat3f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a4e5f6d3499db3eec2e24762c4c30f1c0" prot="public">
          <name>eMat4f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250ae558bb69fadec037d9eae46601a4df8e" prot="public">
          <name>eCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250abd967862789968b1f8571ca888fffc77" prot="public">
          <name>eMin</name>
          <initializer>=  eInt</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a66119c64f8564b693324347fd2bea820" prot="public">
          <name>eMax</name>
          <initializer>=eCount-1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="58" column="1" bodyfile="Scene/ParticleSystem/ParticleModule.hpp" bodystart="57" bodyend="75"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a18a79c59c605cf0a19240fe9e9c8893c" prot="public" static="no">
        <type>castor::FlagCombination&lt; <ref refid="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756" kindref="member">ElementUsage</ref> &gt;</type>
        <definition>using castor3d::ElementUsages = typedef castor::FlagCombination&lt; ElementUsage &gt;</definition>
        <argsstring></argsstring>
        <name>ElementUsages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="55" column="1" bodyfile="Scene/ParticleSystem/ParticleModule.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ad337e27d25f9041374c5cdc7d0fef0ac" prot="public" static="no">
        <type>castor::Factory&lt; <ref refid="d6/d3f/a05204" kindref="compound">CpuParticleSystem</ref>, castor::String, std::unique_ptr&lt; <ref refid="d6/d3f/a05204" kindref="compound">CpuParticleSystem</ref> &gt;, std::function&lt; std::unique_ptr&lt; <ref refid="d6/d3f/a05204" kindref="compound">CpuParticleSystem</ref> &gt;(<ref refid="d6/dd5/a05228" kindref="compound">ParticleSystem</ref> &amp;) &gt; &gt;</type>
        <definition>using castor3d::ParticleFactory = typedef castor::Factory&lt; CpuParticleSystem , castor::String , std::unique_ptr&lt; CpuParticleSystem &gt; , std::function&lt; std::unique_ptr&lt; CpuParticleSystem &gt;( ParticleSystem &amp; ) &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ParticleFactory</name>
        <briefdescription>
<para><ref refid="df/dfd/a05208" kindref="compound">Particle</ref> system factory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="180" column="1" bodyfile="Scene/ParticleSystem/ParticleModule.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a04f5362c821ed84ec9897c8636970f7d" prot="public" static="no">
        <type><ref refid="d0/d8e/a03828" kindref="compound">ParametersT</ref>&lt; size_t &gt;</type>
        <definition>using castor3d::ParticleValues = typedef ParametersT&lt; size_t &gt;</definition>
        <argsstring></argsstring>
        <name>ParticleValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="201" column="1" bodyfile="Scene/ParticleSystem/ParticleModule.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a11ed4fe3abcb2fd546e67c47b07358b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(ElementUsage value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a9b92af1597392404a4f7c2057698a756" kindref="member">ElementUsage</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7675b69566ba617bc00e1e3d317d366e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::getName</definition>
        <argsstring>(ParticleFormat value)</argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250" kindref="member">ParticleFormat</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad79167e4da10a764a768231272c98f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ComputeParticleSystem)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/dff/a05196" kindref="compound">ComputeParticleSystem</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1fcec08d640b7fd6a74a38423471ed12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(CpuParticleSystem)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/d3f/a05204" kindref="compound">CpuParticleSystem</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7501a3a70ec76420cc4285298a45e09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ParticleElementDeclaration)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="df/d2e/a05216" kindref="compound">ParticleElementDeclaration</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a18b72f23701df22bf65edd821f4aa368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ParticleEmitter)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dd/d2d/a05220" kindref="compound">ParticleEmitter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae4aeeab303dee9622949a3efd6b3f9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ParticleFactory)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad337e27d25f9041374c5cdc7d0fef0ac" kindref="member">ParticleFactory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a554410143116f1099420eee536c83627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ParticleSystem)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d6/dd5/a05228" kindref="compound">ParticleSystem</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab49f94a6d4057fd00a2895e3450a3960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ParticleSystemImpl)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d5/d8b/a05232" kindref="compound">ParticleSystemImpl</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab34db8da057776bc45e16b399941f660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(ParticleUpdater)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dd/d1a/a05236" kindref="compound">ParticleUpdater</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a02a3e24bbd863ef6aef04564ef9b4c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(Particle, Particle)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="df/dfd/a05208" kindref="compound">Particle</ref></type>
        </param>
        <param>
          <type><ref refid="df/dfd/a05208" kindref="compound">Particle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adb4b4820dcc4f3f70c688953b17adba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(ParticleEmitterUPtr, ParticleEmitter)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>ParticleEmitterUPtr</type>
        </param>
        <param>
          <type><ref refid="dd/d2d/a05220" kindref="compound">ParticleEmitter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac5054f043990d66098f33f55c3bac249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(ParticleUpdaterUPtr, ParticleUpdater)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>ParticleUpdaterUPtr</type>
        </param>
        <param>
          <type><ref refid="dd/d1a/a05236" kindref="compound">ParticleUpdater</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleModule.hpp" line="199" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Shader</header>
      <memberdef kind="enum" id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778b" prot="public" static="no" strong="yes">
        <type>uint32_t</type>
        <name>ProgramFlag</name>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778babe988781e4e1de1c6a36fb698afbbe1f" prot="public">
          <name>eNone</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No flag. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba925e615ac432b4dd6e17fe61359ad1c5" prot="public">
          <name>eInstantiation</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Program using instanciation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba8da329f9a01cff2c195563173a86b2ee" prot="public">
          <name>eSkinning</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Program using skeleton animations. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778baa7242bffc1057f5048a657a799909415" prot="public">
          <name>eBillboards</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Program used by billboards. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778bafc8be581627b97523b9662d9eae684b0" prot="public">
          <name>eMorphing</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Program using per-vertex animations. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778bad87941418fd9e2238ccb07af845ae4a2" prot="public">
          <name>ePicking</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
<para>Picking pass program. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778baeb97df2a505ca2b5140ffd98519fe19b" prot="public">
          <name>eLighting</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
<para>Shader supporting lighting. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba20cf4ac448c4e6af02dc910e7fd95045" prot="public">
          <name>eSpherical</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
<para>Shader for spherical billboards. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba2fa8851795249386b4d9a2db3933bced" prot="public">
          <name>eFixedSize</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
<para>Shader for fixed size billboards. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba2d08c60b0a32025f1385a983b0f9a519" prot="public">
          <name>eInstanceMult</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Program using and instances multiplier. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778baeb723f851d718b4b5a20b9753f5c9f30" prot="public">
          <name>eShadowMapDirectional</name>
          <initializer>= 0x0200</initializer>
          <briefdescription>
<para>Shader used to render a shadow map for directional light. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba65500600404fff625f48587c511e4227" prot="public">
          <name>eShadowMapSpot</name>
          <initializer>= 0x0400</initializer>
          <briefdescription>
<para>Shader used to render a shadow map for spot light. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778baf2c66955d3cd06ca2dc76347feeb7c9a" prot="public">
          <name>eShadowMapPoint</name>
          <initializer>= 0x0800</initializer>
          <briefdescription>
<para>Shader used to render a shadow map for point light. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778babe4173784548d4708cd1322d33bf6a26" prot="public">
          <name>eEnvironmentMapping</name>
          <initializer>= 0x1000</initializer>
          <briefdescription>
<para>Shader used to render an environment map. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba4409c2873e3085c4d5d295d4d133857d" prot="public">
          <name>eDepthPass</name>
          <initializer>= 0x2000</initializer>
          <briefdescription>
<para>Shader for the depth pre-pass. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba448bacc71942a4fb0a408f1304b4857e" prot="public">
          <name>eInvertNormals</name>
          <initializer>= 0x4000</initializer>
          <briefdescription>
<para>Vertex shader inverts normals (for front culling). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778baaeed18bc4bd380714ec61730e7812363" prot="public">
          <name>eHasGeometry</name>
          <initializer>= 0x8000</initializer>
          <briefdescription>
<para>Vertex shader inverts normals (for front culling). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba57baccfe47c605582e5d0cdb7e8ff903" prot="public">
          <name>eConservativeRasterization</name>
          <initializer>= 0x10000</initializer>
          <briefdescription>
<para>Voxelization uses conservative rasterization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba205a605c9a22391af5e09fa60fe30678" prot="public">
          <name>eAll</name>
          <initializer>= 0x1FFFF</initializer>
          <briefdescription>
<para>All flags. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags to use when looking for an automatically generated program. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="74" column="1" bodyfile="Shader/ShaderModule.hpp" bodystart="72" bodyend="132"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aec4f86dd5fea51ba4c7a8a10c7f503c7" prot="public" static="no">
        <type>std::unique_ptr&lt; ast::Shader &gt;</type>
        <definition>using castor3d::ShaderPtr = typedef std::unique_ptr&lt; ast::Shader &gt;</definition>
        <argsstring></argsstring>
        <name>ShaderPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="19" column="1" bodyfile="Shader/ShaderModule.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ab503144f281345b45ccc3f3a94543dce" prot="public" static="no">
        <type>castor::FlagCombination&lt; <ref refid="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778b" kindref="member">ProgramFlag</ref> &gt;</type>
        <definition>using castor3d::ProgramFlags = typedef castor::FlagCombination&lt; ProgramFlag &gt;</definition>
        <argsstring></argsstring>
        <name>ProgramFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="133" column="1" bodyfile="Shader/ShaderModule.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac8a876742496617499a2d577822c031d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::isShadowMapProgram</definition>
        <argsstring>(ProgramFlags const &amp;flags)</argsstring>
        <name>isShadowMapProgram</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ab503144f281345b45ccc3f3a94543dce" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Tells if the given flags contain a shadow map flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if flags contain one of <ref refid="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778baeb723f851d718b4b5a20b9753f5c9f30" kindref="member">ProgramFlag::eShadowMapDirectional</ref>, <ref refid="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778ba65500600404fff625f48587c511e4227" kindref="member">ProgramFlag::eShadowMapSpot</ref>, or <ref refid="da/d1e/a01479_1a6dbeb5480c4a424e0c24ace65835778baf2c66955d3cd06ca2dc76347feeb7c9a" kindref="member">ProgramFlag::eShadowMapPoint</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a35a5c3b227ff115dc28e4a2bac5cdffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::getPassBufferIndex</definition>
        <argsstring>() noexcept</argsstring>
        <name>getPassBufferIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The materials passes buffer index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a34d5c27d8af04efd9337428e2d67f602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::getTexturesBufferIndex</definition>
        <argsstring>() noexcept</argsstring>
        <name>getTexturesBufferIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The textures buffer index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6ada57220c476309f8d5981842415854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::getLightBufferIndex</definition>
        <argsstring>() noexcept</argsstring>
        <name>getLightBufferIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The lights sources buffer index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad184b3a71a144b1a0d10fe993cecbd63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::getMinBufferIndex</definition>
        <argsstring>() noexcept</argsstring>
        <name>getMinBufferIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The minimal index for shader buffers (SSBO and UBO). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa926d528594e4771a44d48f413fe6dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::getMinTextureIndex</definition>
        <argsstring>() noexcept</argsstring>
        <name>getMinTextureIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The minimal index for textures. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3507fd71ed9dbb67d0e46a6722b2d798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, ShaderBuffer, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d6/d72/a05308" kindref="compound">ShaderBuffer</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6e6810cc70a0f127713cce3e616fe1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, ShaderProgram, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="dc/da0/a05304" kindref="compound">ShaderProgram</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/ShaderModule.hpp" line="234" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>PassBuffer</header>
      <memberdef kind="function" id="da/d1e/a01479_1a214c424c843bbd3220aa14d0528864e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(PassBuffer)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d1/d54/a05272" kindref="compound">PassBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/PassBuffer/PassBufferModule.hpp" line="53" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>TextureConfigurationBuffer</header>
      <memberdef kind="function" id="da/d1e/a01479_1a32d7f449fac9eddfdeb0e833c07a5c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(TextureConfigurationBuffer)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="d9/d21/a05448" kindref="compound">TextureConfigurationBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/TextureConfigurationBuffer/TextureConfigurationBufferModule.hpp" line="26" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>UBO</header>
      <memberdef kind="function" id="da/d1e/a01479_1a5d1b1a9e279521b25b8df79e89b9bd80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LpvGridConfigUbo, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="db/d15/a05484" kindref="compound">LpvGridConfigUbo</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/UbosModule.hpp" line="449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8d87efbae6ca41fe2af8e5e703740289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LpvLightConfigUbo, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="de/d62/a05492" kindref="compound">LpvLightConfigUbo</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/UbosModule.hpp" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa7c1df599255a3c97c249fb0b1d1d10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareCUSmartPtr</definition>
        <argsstring>(castor3d, LayeredLpvGridConfigUbo, C3D_API)</argsstring>
        <name>CU_DeclareCUSmartPtr</name>
        <param>
          <type>castor3d</type>
        </param>
        <param>
          <type><ref refid="d4/db7/a05476" kindref="compound">LayeredLpvGridConfigUbo</ref></type>
        </param>
        <param>
          <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/UbosModule.hpp" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8f594947c94aa2fe74ec62674d5f9b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(LpvLightConfigUbo, LpvLightConfigUbo)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="de/d62/a05492" kindref="compound">LpvLightConfigUbo</ref></type>
        </param>
        <param>
          <type><ref refid="de/d62/a05492" kindref="compound">LpvLightConfigUbo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/UbosModule.hpp" line="452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a382a3eec8a40307659eebb98e8bc336b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(LpvGridConfigUbo, LpvGridConfigUbo)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="db/d15/a05484" kindref="compound">LpvGridConfigUbo</ref></type>
        </param>
        <param>
          <type><ref refid="db/d15/a05484" kindref="compound">LpvGridConfigUbo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/UbosModule.hpp" line="453" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414d" prot="public" static="no" strong="yes">
        <type>uint64_t</type>
        <name>ChunkType</name>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da64c3acc11ffdb1be30ea339290bd1508" prot="public">
          <name>eUnknown</name>
          <initializer>= makeChunkID( &apos; &apos;, &apos; &apos;, &apos; &apos;, &apos; &apos;, &apos; &apos;, &apos; &apos;, &apos; &apos;, &apos; &apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da3af707888e537c6e9dde81b11bf02959" prot="public">
          <name>eCmshFile</name>
          <initializer>= makeChunkID( &apos;C&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;F&apos;, &apos;I&apos;, &apos;L&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da9e33398324cc27f4d18d60ffe7436294" prot="public">
          <name>eCmshHeader</name>
          <initializer>= makeChunkID( &apos;C&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;H&apos;, &apos;D&apos;, &apos;E&apos;, &apos;R&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da52eafb299773df06313321e3eca83362" prot="public">
          <name>eCmshVersion</name>
          <initializer>= makeChunkID( &apos;C&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;V&apos;, &apos;R&apos;, &apos;S&apos;, &apos;N&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414daa866af182acab9fffb643ecb752cd9e5" prot="public">
          <name>eName</name>
          <initializer>= makeChunkID( &apos;N&apos;, &apos;A&apos;, &apos;M&apos;, &apos;E&apos;, &apos; &apos;, &apos; &apos;, &apos; &apos;, &apos; &apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da5be756330a0600dde9db6b9fdb5e16a2" prot="public">
          <name>eMesh</name>
          <initializer>= makeChunkID( &apos;M&apos;, &apos;E&apos;, &apos;S&apos;, &apos;H&apos;, &apos; &apos;, &apos; &apos;, &apos; &apos;, &apos; &apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dadc5e27f91e7e90419aa4f7f8578b69ff" prot="public">
          <name>eSkeleton</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;E&apos;, &apos;L&apos;, &apos;E&apos;, &apos;T&apos;, &apos;O&apos;, &apos;N&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da79001a55061cfd6dde7ba371ca783691" prot="public">
          <name>eSkeletonGlobalInverse</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;E&apos;, &apos;L&apos;, &apos;G&apos;, &apos;I&apos;, &apos;M&apos;, &apos;X&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da08dc84efbcc938bfd03db6fad9ed9946" prot="public">
          <name>eSkeletonBone</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;E&apos;, &apos;L&apos;, &apos;B&apos;, &apos;O&apos;, &apos;N&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414daa01091c995040b0be7513df6eb86addf" prot="public">
          <name>eBoneParentName</name>
          <initializer>= makeChunkID( &apos;B&apos;, &apos;O&apos;, &apos;N&apos;, &apos;E&apos;, &apos;P&apos;, &apos;A&apos;, &apos;R&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dafdca66809512c2bebe8eadc71897a529" prot="public">
          <name>eBoneOffsetMatrix</name>
          <initializer>= makeChunkID( &apos;B&apos;, &apos;O&apos;, &apos;N&apos;, &apos;E&apos;, &apos;O&apos;, &apos;M&apos;, &apos;T&apos;, &apos;X&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da1c6e623c4f3ed72ce3d17fb2896ccbfc" prot="public">
          <name>eSubmesh</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;U&apos;, &apos;B&apos;, &apos;M&apos;, &apos;E&apos;, &apos;S&apos;, &apos;H&apos;, &apos; &apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da7c907915cbd27d907521f9f54e4fdd26" prot="public">
          <name>eSubmeshTopology</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;T&apos;, &apos;O&apos;, &apos;P&apos;, &apos;O&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da5c9a8a405e3750299d54d22ab22b0796" prot="public">
          <name>eSubmeshVertexCount</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;V&apos;, &apos;X&apos;, &apos;C&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da943fd45d3572fea461610bed3780edea" prot="public">
          <name>eSubmeshVertex</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;V&apos;, &apos;R&apos;, &apos;T&apos;, &apos;X&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da9a800a662d9ce8bcfb6e201d992274b2" prot="public">
          <name>eSubmeshBoneCount</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;B&apos;, &apos;N&apos;, &apos;C&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da934aac93900efc69dc94c1f2dd18fa30" prot="public">
          <name>eSubmeshBones</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;B&apos;, &apos;O&apos;, &apos;N&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da41be9560a0a4017deed7270a0a757912" prot="public">
          <name>eSubmeshMatrixCount</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;M&apos;, &apos;X&apos;, &apos;C&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dab7402ead3f406b9e6672c9298f51c0bf" prot="public">
          <name>eSubmeshMatrices</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;M&apos;, &apos;T&apos;, &apos;R&apos;, &apos;X&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da5fd3bdb800992b14cd692dafe08bb08a" prot="public">
          <name>eSubmeshFaceCount</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;F&apos;, &apos;C&apos;, &apos;C&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dacb7918c57f4aa82423d93c1f1b6ecea0" prot="public">
          <name>eSubmeshFaces</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;F&apos;, &apos;A&apos;, &apos;C&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dab941ce195d8ca01906be3b1281dbf90c" prot="public">
          <name>eAnimable</name>
          <initializer>= makeChunkID( &apos;A&apos;, &apos;N&apos;, &apos;I&apos;, &apos;M&apos;, &apos;A&apos;, &apos;B&apos;, &apos;L&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414daf8b3bcfa9a9160ba9956d2197892e796" prot="public">
          <name>eAnimation</name>
          <initializer>= makeChunkID( &apos;A&apos;, &apos;N&apos;, &apos;M&apos;, &apos;A&apos;, &apos;T&apos;, &apos;I&apos;, &apos;O&apos;, &apos;N&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da450d63b2282158b9ea9a2bd53c774fca" prot="public">
          <name>eAnimLength</name>
          <initializer>= makeChunkID( &apos;A&apos;, &apos;N&apos;, &apos;M&apos;, &apos;L&apos;, &apos;E&apos;, &apos;N&apos;, &apos;G&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414daf29764535eb62deb6c04b2e38ebce092" prot="public">
          <name>eSkeletonAnimation</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;E&apos;, &apos;L&apos;, &apos;A&apos;, &apos;N&apos;, &apos;I&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da887d8ff541bbddb669f339dc26fded5b" prot="public">
          <name>eMeshAnimation</name>
          <initializer>= makeChunkID( &apos;M&apos;, &apos;E&apos;, &apos;S&apos;, &apos;H&apos;, &apos;A&apos;, &apos;N&apos;, &apos;I&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414daf7bf6fea39d4457707835983cb8b246c" prot="public">
          <name>eAnimInterpolator</name>
          <initializer>= makeChunkID( &apos;A&apos;, &apos;N&apos;, &apos;M&apos;, &apos;I&apos;, &apos;N&apos;, &apos;T&apos;, &apos;E&apos;, &apos;R&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dae409c43ca989071d9b8518e05bf7a168" prot="public">
          <name>eAnimationObject</name>
          <initializer>= makeChunkID( &apos;A&apos;, &apos;N&apos;, &apos;S&apos;, &apos;K&apos;, &apos;O&apos;, &apos;B&apos;, &apos;J&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da0acf24819b388bf13a6881408227607f" prot="public">
          <name>eSkeletonAnimationNode</name>
          <initializer>= makeChunkID( &apos;A&apos;, &apos;N&apos;, &apos;S&apos;, &apos;K&apos;, &apos;N&apos;, &apos;O&apos;, &apos;D&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da280f1578becaa24b0b6455cb57a9b5d8" prot="public">
          <name>eSkeletonAnimationBone</name>
          <initializer>= makeChunkID( &apos;A&apos;, &apos;N&apos;, &apos;S&apos;, &apos;K&apos;, &apos;B&apos;, &apos;O&apos;, &apos;N&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dafcc6b7d587a3fabe7a7dcdcddf2aae45" prot="public">
          <name>eMovingTransform</name>
          <initializer>= makeChunkID( &apos;M&apos;, &apos;V&apos;, &apos;N&apos;, &apos;G&apos;, &apos;T&apos;, &apos;S&apos;, &apos;F&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da7ce97df41e8327f2ea3a82d9dd9a6c62" prot="public">
          <name>eKeyframeCount</name>
          <initializer>= makeChunkID( &apos;K&apos;, &apos;F&apos;, &apos;R&apos;, &apos;M&apos;, &apos;C&apos;, &apos;O&apos;, &apos;N&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dafaf4e1a98bc29036f7e929311c518be2" prot="public">
          <name>eKeyframes</name>
          <initializer>= makeChunkID( &apos;K&apos;, &apos;E&apos;, &apos;Y&apos;, &apos;F&apos;, &apos;R&apos;, &apos;M&apos;, &apos;E&apos;, &apos;S&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dafe8ec950199cfa5dc10b05235822becd" prot="public">
          <name>eBonesComponent</name>
          <initializer>= makeChunkID( &apos;B&apos;, &apos;O&apos;, &apos;N&apos;, &apos;E&apos;, &apos;C&apos;, &apos;O&apos;, &apos;M&apos;, &apos;P&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dad0e65a7476b424b77bb21459bb8f8541" prot="public">
          <name>eMeshAnimationKeyFrame</name>
          <initializer>= makeChunkID( &apos;M&apos;, &apos;S&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;R&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da83b19e4fa4fa9693f0836e7d7f4f484b" prot="public">
          <name>eMeshAnimationKeyFrameTime</name>
          <initializer>= makeChunkID( &apos;M&apos;, &apos;S&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;T&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da08678ca7c19def59299a9e3ed5b94149" prot="public">
          <name>eMeshAnimationKeyFrameSubmeshID</name>
          <initializer>= makeChunkID( &apos;M&apos;, &apos;S&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;I&apos;, &apos;D&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da4baef8595f4aadf89c90dfe2303a8e8d" prot="public">
          <name>eMeshAnimationKeyFrameBufferSize</name>
          <initializer>= makeChunkID( &apos;M&apos;, &apos;H&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;S&apos;, &apos;Z&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414daa5910778bbe155ce707b6903caad5c35" prot="public">
          <name>eMeshAnimationKeyFrameBufferData</name>
          <initializer>= makeChunkID( &apos;M&apos;, &apos;H&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;D&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dafc2fcad1713bdfa545ca7db604802954" prot="public">
          <name>eSkeletonAnimationKeyFrame</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;R&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dafd83421c233b10ce0887440f5edbbba2" prot="public">
          <name>eSkeletonAnimationKeyFrameTime</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;T&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da8dea65c57b1ddfe52d4e003598b924cc" prot="public">
          <name>eSkeletonAnimationKeyFrameObjectType</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;O&apos;, &apos;Y&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da3d71de439f525c7e6279c0593b368ecc" prot="public">
          <name>eSkeletonAnimationKeyFrameObjectName</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;O&apos;, &apos;N&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414da35f9240f2d27d4957cfe7e0ac5017f19" prot="public">
          <name>eSkeletonAnimationKeyFrameObjectTransform</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;K&apos;, &apos;A&apos;, &apos;N&apos;, &apos;K&apos;, &apos;F&apos;, &apos;O&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414daa7fd7aec387fc3a151b4f0b9329e6fad" prot="public">
          <name>eSubmeshIndexComponentCount</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;F&apos;, &apos;C&apos;, &apos;C&apos;, &apos;P&apos;, &apos;C&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dabc4617f1d584d24a3e7cc6c0b5124f02" prot="public">
          <name>eSubmeshIndexCount</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;I&apos;, &apos;C&apos;, &apos;C&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414dac298356528e470d8dc1f35f34e520c83" prot="public">
          <name>eSubmeshIndices</name>
          <initializer>= makeChunkID( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos;, &apos;I&apos;, &apos;D&apos;, &apos;C&apos;, &apos;S&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Binary data chunk types enumeration. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Sylvain DOREMUS </para>
</simplesect>
<simplesect kind="version"><para>0.7.0.0 </para>
</simplesect>
<simplesect kind="date"><para>15/04/2013 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="68" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="66" bodyend="118"/>
      </memberdef>
      <memberdef kind="enum" id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25" prot="public" static="no" strong="yes">
        <type>uint32_t</type>
        <name>CSCNSection</name>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25af8da519216510eb90ec31c4b8c966da8" prot="public">
          <name>eRoot</name>
          <initializer>= CU_MakeSectionName( &apos;R&apos;, &apos;O&apos;, &apos;O&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a3a840316b6eeeb00d85c3010fa291f2a" prot="public">
          <name>eScene</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;C&apos;, &apos;N&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a12aca55fe985a5da291e392493577cd9" prot="public">
          <name>eWindow</name>
          <initializer>= CU_MakeSectionName( &apos;W&apos;, &apos;N&apos;, &apos;D&apos;, &apos;W&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a7bb42ee00d346d90b918eb8867fc52eb" prot="public">
          <name>eSampler</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;M&apos;, &apos;P&apos;, &apos;R&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a14bd73738591c6e560d81b0724e96322" prot="public">
          <name>eCamera</name>
          <initializer>= CU_MakeSectionName( &apos;C&apos;, &apos;A&apos;, &apos;M&apos;, &apos;R&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25af6f03937a523133824ce95e02224a33d" prot="public">
          <name>eViewport</name>
          <initializer>= CU_MakeSectionName( &apos;V&apos;, &apos;W&apos;, &apos;P&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25add46b640b816561ca3a98235d84d40e9" prot="public">
          <name>eLight</name>
          <initializer>= CU_MakeSectionName( &apos;L&apos;, &apos;G&apos;, &apos;H&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a540edeff695f0af70e9bc41bb35297dd" prot="public">
          <name>eNode</name>
          <initializer>= CU_MakeSectionName( &apos;N&apos;, &apos;O&apos;, &apos;D&apos;, &apos;E&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ac92038caaf313844f673a690ac5c88bf" prot="public">
          <name>eObject</name>
          <initializer>= CU_MakeSectionName( &apos;O&apos;, &apos;B&apos;, &apos;J&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ab7bc5fc0f497555d7168d61fd54fc1dc" prot="public">
          <name>eObjectMaterials</name>
          <initializer>= CU_MakeSectionName( &apos;O&apos;, &apos;M&apos;, &apos;T&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25af57d2711afb894c59ac3f4704298c57e" prot="public">
          <name>eFont</name>
          <initializer>= CU_MakeSectionName( &apos;F&apos;, &apos;O&apos;, &apos;N&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a2311d10dd8691c4aabfa8fd56c7f882f" prot="public">
          <name>ePanelOverlay</name>
          <initializer>= CU_MakeSectionName( &apos;P&apos;, &apos;O&apos;, &apos;V&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a2cbf3caeffc6d9d683337a8b85c1c5f8" prot="public">
          <name>eBorderPanelOverlay</name>
          <initializer>= CU_MakeSectionName( &apos;B&apos;, &apos;O&apos;, &apos;V&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ae175cf129c8163fc0d85a4e14a53fd8e" prot="public">
          <name>eTextOverlay</name>
          <initializer>= CU_MakeSectionName( &apos;T&apos;, &apos;O&apos;, &apos;V&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a5be756330a0600dde9db6b9fdb5e16a2" prot="public">
          <name>eMesh</name>
          <initializer>= CU_MakeSectionName( &apos;M&apos;, &apos;E&apos;, &apos;S&apos;, &apos;H&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a1c6e623c4f3ed72ce3d17fb2896ccbfc" prot="public">
          <name>eSubmesh</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;M&apos;, &apos;S&apos;, &apos;H&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25aed4256d4006aafecb89a04b9c823389c" prot="public">
          <name>eMaterial</name>
          <initializer>= CU_MakeSectionName( &apos;M&apos;, &apos;T&apos;, &apos;R&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a0c6035e3f32184f72caa466f24089721" prot="public">
          <name>ePass</name>
          <initializer>= CU_MakeSectionName( &apos;P&apos;, &apos;A&apos;, &apos;S&apos;, &apos;S&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a2df299093abd7e4a060690d2eeeaa35e" prot="public">
          <name>eTextureUnit</name>
          <initializer>= CU_MakeSectionName( &apos;U&apos;, &apos;N&apos;, &apos;I&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ad28dfecdde13a7fe56232becdfc2e77a" prot="public">
          <name>eRenderTarget</name>
          <initializer>= CU_MakeSectionName( &apos;R&apos;, &apos;T&apos;, &apos;G&apos;, &apos;R&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a64969adfed1ac558462ce1a3e644e74f" prot="public">
          <name>eShaderProgram</name>
          <initializer>= CU_MakeSectionName( &apos;G&apos;, &apos;L&apos;, &apos;S&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ab2626fc02b5ebf4f2a3f71415d7c847c" prot="public">
          <name>eShaderStage</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;P&apos;, &apos;G&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25abe7f85bb65a3a637cc982be356bad885" prot="public">
          <name>eShaderUBO</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;U&apos;, &apos;B&apos;, &apos;O&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ab97eb1a0080bc6a0f1e5810d3ff05096" prot="public">
          <name>eUBOVariable</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;U&apos;, &apos;B&apos;, &apos;V&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25af0fbe61d17cc90f35a934671f2b23671" prot="public">
          <name>eBillboard</name>
          <initializer>= CU_MakeSectionName( &apos;B&apos;, &apos;L&apos;, &apos;B&apos;, &apos;d&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a4f695ef2e43df005b0c369adc2a9acb6" prot="public">
          <name>eBillboardList</name>
          <initializer>= CU_MakeSectionName( &apos;B&apos;, &apos;L&apos;, &apos;B&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a5963e298194533246925e8c60e8e96dd" prot="public">
          <name>eAnimGroup</name>
          <initializer>= CU_MakeSectionName( &apos;A&apos;, &apos;N&apos;, &apos;G&apos;, &apos;P&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25af8b3bcfa9a9160ba9956d2197892e796" prot="public">
          <name>eAnimation</name>
          <initializer>= CU_MakeSectionName( &apos;A&apos;, &apos;N&apos;, &apos;M&apos;, &apos;T&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a983a99e993c0f4ac67380ee7f720828c" prot="public">
          <name>eSkybox</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;K&apos;, &apos;B&apos;, &apos;X&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a1b5fd934e394d426730e1bdd46c7a914" prot="public">
          <name>eParticleSystem</name>
          <initializer>= CU_MakeSectionName( &apos;P&apos;, &apos;L&apos;, &apos;S&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a409b3d66125fe5a0c1519fe195685cbd" prot="public">
          <name>eParticle</name>
          <initializer>= CU_MakeSectionName( &apos;P&apos;, &apos;T&apos;, &apos;C&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ad7f9028336c707ea9207257c118068b2" prot="public">
          <name>eSsao</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;S&apos;, &apos;A&apos;, &apos;O&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ae5ecc06beb78c6d10266c1300fc8ca9c" prot="public">
          <name>eSubsurfaceScattering</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;S&apos;, &apos;S&apos;, &apos;G&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25ada98eb1373fd6318bfd0d09a79d9f3cf" prot="public">
          <name>eTransmittanceProfile</name>
          <initializer>= CU_MakeSectionName( &apos;T&apos;, &apos;R&apos;, &apos;P&apos;, &apos;R&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a3f0a0d059ba40baa6aca365e1772dbad" prot="public">
          <name>eHdrConfig</name>
          <initializer>= CU_MakeSectionName( &apos;H&apos;, &apos;D&apos;, &apos;R&apos;, &apos;C&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a8863913d76cd9cdac5463567b6fd2b53" prot="public">
          <name>eShadows</name>
          <initializer>= CU_MakeSectionName( &apos;S&apos;, &apos;H&apos;, &apos;D&apos;, &apos;W&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a9291bd3d3dd2c5363d51493fe6d31367" prot="public">
          <name>eMeshDefaultMaterials</name>
          <initializer>= CU_MakeSectionName( &apos;M&apos;, &apos;M&apos;, &apos;T&apos;, &apos;L&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a2f8b0bf26e55e24cd393b32d912828c0" prot="public">
          <name>eRsm</name>
          <initializer>= CU_MakeSectionName( &apos;R&apos;, &apos;F&apos;, &apos;S&apos;, &apos;M&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a933088ce1b93a7a6a9e1d9a0bb2db604" prot="public">
          <name>eLpv</name>
          <initializer>= CU_MakeSectionName( &apos;L&apos;, &apos;P&apos;, &apos;V&apos;, &apos;I&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a7bafdff459a286e49c229bde7488d211" prot="public">
          <name>eRaw</name>
          <initializer>= CU_MakeSectionName( &apos;R&apos;, &apos;A&apos;, &apos;W&apos;, &apos;S&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25aad7e29ea4fae98875a09cf3d2965be97" prot="public">
          <name>ePcf</name>
          <initializer>= CU_MakeSectionName( &apos;P&apos;, &apos;C&apos;, &apos;F&apos;, &apos;S&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25aa7958f70eeea279510a947560d12aa74" prot="public">
          <name>eVsm</name>
          <initializer>= CU_MakeSectionName( &apos;V&apos;, &apos;S&apos;, &apos;M&apos;, &apos;S&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a63f9a43f205e15b85b7efa794c9a8aeb" prot="public">
          <name>eTextureAnimation</name>
          <initializer>= CU_MakeSectionName( &apos;T&apos;, &apos;X&apos;, &apos;A&apos;, &apos;N&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d1e/a01479_1af1774dee6be1e8467278342fbe9a2d25a2801d8ef53f92c196110f842add78e1c" prot="public">
          <name>eVoxelConeTracing</name>
          <initializer>= CU_MakeSectionName( &apos;V&apos;, &apos;C&apos;, &apos;T&apos;, &apos;C&apos; )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines all the sections and subsections of a scene file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/SceneFileParser.hpp" line="37" column="1" bodyfile="Scene/SceneFileParser.hpp" bodystart="35" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="da/d1e/a01479_1a6573844f0848fb7a4664ac788b817e88" prot="public" static="no">
        <type>std::set&lt; OverlayCategorySPtr, <ref refid="d6/d90/a02492" kindref="compound">OverlayCategorySort</ref> &gt;</type>
        <definition>using castor3d::OverlayCategorySet = typedef std::set&lt; OverlayCategorySPtr, OverlayCategorySort &gt;</definition>
        <argsstring></argsstring>
        <name>OverlayCategorySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/OverlayCache.hpp" line="36" column="1" bodyfile="Cache/OverlayCache.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a8d0a657263819a41c6859d48350c864e" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="d0/d9f/a02672" kindref="compound">DebugCallbacks</ref> &gt;</type>
        <definition>using castor3d::DebugCallbacksPtr = typedef std::unique_ptr&lt; DebugCallbacks &gt;</definition>
        <argsstring></argsstring>
        <name>DebugCallbacksPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/DebugCallbacks.hpp" line="30" column="1" bodyfile="Miscellaneous/DebugCallbacks.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ac410f72e00a2bf73b63cc8d803fe4ebc" prot="public" static="no">
        <type>std::vector&lt; <ref refid="db/dc8/a03964" kindref="compound">Line</ref> &gt;</type>
        <definition>using castor3d::LineArray = typedef std::vector&lt; Line &gt;</definition>
        <argsstring></argsstring>
        <name>LineArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of Lines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Submesh/Component/Line.hpp" line="46" column="1" bodyfile="Model/Mesh/Submesh/Component/Line.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a9f51b4acc2ca361ba85882978648fa2d" prot="public" static="no">
        <type>castor::UniquePtr&lt; <ref refid="d2/d56/a04348" kindref="compound">SceneRenderNodes</ref> &gt;</type>
        <definition>using castor3d::SceneRenderNodesPtr = typedef castor::UniquePtr&lt; SceneRenderNodes &gt;</definition>
        <argsstring></argsstring>
        <name>SceneRenderNodesPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNodeModule.hpp" line="164" column="1" bodyfile="Render/Node/RenderNodeModule.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1af658a5da582878b947d5f1364883dcb2" prot="public" static="no">
        <type>castor::UniquePtr&lt; <ref refid="da/d16/a04336" kindref="compound">SceneCulledRenderNodes</ref> &gt;</type>
        <definition>using castor3d::SceneCulledRenderNodesPtr = typedef castor::UniquePtr&lt; SceneCulledRenderNodes &gt;</definition>
        <argsstring></argsstring>
        <name>SceneCulledRenderNodesPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNodeModule.hpp" line="165" column="1" bodyfile="Render/Node/RenderNodeModule.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a3c99cd93ea5717660ffcef59716e8df6" prot="public" static="no">
        <type><ref refid="d3/dd1/a04364" kindref="compound">CombinePassConfigT</ref>&lt; ashes::Optional &gt;</type>
        <definition>using castor3d::CombinePassConfig = typedef CombinePassConfigT&lt; ashes::Optional &gt;</definition>
        <argsstring></argsstring>
        <name>CombinePassConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/CombinePass.hpp" line="42" column="1" bodyfile="Render/Passes/CombinePass.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ae1e9f2ceeb199f25a7d94770cf140ad9" prot="public" static="no">
        <type><ref refid="d3/dd1/a04364" kindref="compound">CombinePassConfigT</ref>&lt; <ref refid="d2/dc4/a01483_1a573d44a1af90c2fa5cd8d023adb34ae8" kindref="member">rq::RawTypeT</ref> &gt;</type>
        <definition>using castor3d::CombinePassConfigData = typedef CombinePassConfigT&lt; rq::RawTypeT &gt;</definition>
        <argsstring></argsstring>
        <name>CombinePassConfigData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/CombinePass.hpp" line="43" column="1" bodyfile="Render/Passes/CombinePass.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a6a2a2ce24095d11c722cac7487ea9a32" prot="public" static="no">
        <type>std::reference_wrapper&lt; <ref refid="d9/d5b/a02668" kindref="compound">TextureView</ref> const &gt;</type>
        <definition>using castor3d::TextureViewCRef = typedef std::reference_wrapper&lt; TextureView const &gt;</definition>
        <argsstring></argsstring>
        <name>TextureViewCRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/GaussianBlur.hpp" line="21" column="1" bodyfile="Render/Passes/GaussianBlur.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aa14bff27327c2422b05a8f71dfc2fcf4" prot="public" static="no">
        <type>std::vector&lt; <ref refid="da/d1e/a01479_1a6a2a2ce24095d11c722cac7487ea9a32" kindref="member">TextureViewCRef</ref> &gt;</type>
        <definition>using castor3d::TextureViewCRefArray = typedef std::vector&lt; TextureViewCRef &gt;</definition>
        <argsstring></argsstring>
        <name>TextureViewCRefArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/GaussianBlur.hpp" line="22" column="1" bodyfile="Render/Passes/GaussianBlur.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a12a5f6b1824d30be68bf0b1f6dc7cc63" prot="public" static="no">
        <type><ref refid="dc/d42/a04748" kindref="compound">LightPassShadow</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a0ddd5baafa15f79528b19dd012e1dce3" kindref="member">LightType::eDirectional</ref> &gt;</type>
        <definition>using castor3d::DirectionalLightPassShadow = typedef LightPassShadow&lt; LightType::eDirectional &gt;</definition>
        <argsstring></argsstring>
        <name>DirectionalLightPassShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The directional lights light pass with shadows. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightPassShadow.hpp" line="219" column="1" bodyfile="Render/Technique/Opaque/Lighting/LightPassShadow.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aa6e368e9971dda1da19a4d975515d765" prot="public" static="no">
        <type><ref refid="dc/d42/a04748" kindref="compound">LightPassShadow</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8a4ddd9f8296bf1271adcf1a2eea61bd57" kindref="member">LightType::ePoint</ref> &gt;</type>
        <definition>using castor3d::PointLightPassShadow = typedef LightPassShadow&lt; LightType::ePoint &gt;</definition>
        <argsstring></argsstring>
        <name>PointLightPassShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The point lights light pass with shadows. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightPassShadow.hpp" line="222" column="1" bodyfile="Render/Technique/Opaque/Lighting/LightPassShadow.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a4e83d23a63c5b6e5db8b5291aab41952" prot="public" static="no">
        <type><ref refid="dc/d42/a04748" kindref="compound">LightPassShadow</ref>&lt; <ref refid="da/d1e/a01479_1a381718aa9accc88c20afd97d76c30ed8ad6edd06d4607dfe84cff29cdd4f67fed" kindref="member">LightType::eSpot</ref> &gt;</type>
        <definition>using castor3d::SpotLightPassShadow = typedef LightPassShadow&lt; LightType::eSpot &gt;</definition>
        <argsstring></argsstring>
        <name>SpotLightPassShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The spot lights light pass with shadows. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Opaque/Lighting/LightPassShadow.hpp" line="225" column="1" bodyfile="Render/Technique/Opaque/Lighting/LightPassShadow.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1aa6575e1c03af4a5cbb7008597e3ec4ae" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="da/d94/a04940" kindref="compound">TransparentResolveProgram</ref> &gt;</type>
        <definition>using castor3d::FinalCombineProgramPtr = typedef std::unique_ptr&lt; TransparentResolveProgram &gt;</definition>
        <argsstring></argsstring>
        <name>FinalCombineProgramPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentResolvePass.hpp" line="54" column="1" bodyfile="Render/Technique/Transparent/TransparentResolvePass.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1ac02b883edb5fda8b3ba75648eb729f3b" prot="public" static="no">
        <type>std::map&lt; <ref refid="da/d1e/a01479_1a99a6b51dbe68abcf95c70f03008dd3a3" kindref="member">FogType</ref>, <ref refid="da/d1e/a01479_1aa6575e1c03af4a5cbb7008597e3ec4ae" kindref="member">FinalCombineProgramPtr</ref> &gt;</type>
        <definition>using castor3d::FinalCombineProgramMap = typedef std::map&lt; FogType, FinalCombineProgramPtr &gt;</definition>
        <argsstring></argsstring>
        <name>FinalCombineProgramMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of <ref refid="da/d94/a04940" kindref="compound">TransparentResolveProgram</ref>, one per fog type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/Transparent/TransparentResolvePass.hpp" line="57" column="1" bodyfile="Render/Technique/Transparent/TransparentResolvePass.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d1e/a01479_1a068e276350df1883046d7bf489649145" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d3/d82/a05088" kindref="compound">SkeletonAnimationInstanceKeyFrame</ref> &gt;</type>
        <definition>using castor3d::SkeletonAnimationInstanceKeyFrameArray = typedef std::vector&lt; SkeletonAnimationInstanceKeyFrame &gt;</definition>
        <argsstring></argsstring>
        <name>SkeletonAnimationInstanceKeyFrameArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Animation/Skeleton/SkeletonAnimationInstanceKeyFrame.hpp" line="59" column="1" bodyfile="Scene/Animation/Skeleton/SkeletonAnimationInstanceKeyFrame.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="da/d1e/a01479_1abb378ab1c4b7208b4d80b496f3ad14bc" prot="public" static="no" mutable="no">
        <type>uint32_t constexpr</type>
        <definition>uint32_t constexpr castor3d::CurrentCmshVersion</definition>
        <argsstring></argsstring>
        <name>CurrentCmshVersion</name>
        <initializer>= <ref refid="da/d1e/a01479_1ad59c79359ac4d4f478d009c56b809e3e" kindref="member">makeCmshVersion</ref>( 0x01u, 0x05u, 0x0000u )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current format version number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="42" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="42" bodyend="-1"/>
        <referencedby refid="d2/d08/a02148_1a035881aba2b64571b30a5efd3faaf3d9" compoundref="d3/d00/a00113" startline="321" endline="384">castor3d::BinaryParserBase&lt; Skeleton &gt;::doParseHeader</referencedby>
        <referencedby refid="dd/d3f/a02156_1a8828d359b7a61ea2b657d5aada2dd87b" compoundref="d2/df5/a00137" startline="83" endline="102">castor3d::BinaryWriterBase&lt; Skeleton &gt;::doWriteHeader</referencedby>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1a2533c48f44e5f343ab52f930f7fec110" prot="public" static="yes" mutable="no">
        <type>uint32_t constexpr</type>
        <definition>uint32_t constexpr castor3d::InvalidIndex</definition>
        <argsstring></argsstring>
        <name>InvalidIndex</name>
        <initializer>= ~( 0u )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="38" column="1" bodyfile="Castor3DModule.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1a58d767c4f59a22436a245919a95cef51" prot="public" static="yes" mutable="no">
        <type>VkColorComponentFlags const</type>
        <definition>VkColorComponentFlags const castor3d::defaultColorWriteMask</definition>
        <argsstring></argsstring>
        <name>defaultColorWriteMask</name>
        <initializer>{ VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="39" column="1" bodyfile="Castor3DModule.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1ac8c27d4825cec58c846a1d9d74a59f0d" prot="public" static="yes" mutable="no">
        <type>VkClearValue const</type>
        <definition>VkClearValue const castor3d::defaultClearDepthStencil</definition>
        <argsstring></argsstring>
        <name>defaultClearDepthStencil</name>
        <initializer>{ <ref refid="da/d1e/a01479_1af859e44d88d31d8f44773fc1546bdb81" kindref="member">makeClearValue</ref>( 1.0f, 0u ) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="281" column="1" bodyfile="Castor3DModule.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1a8297e0a7e46fc58e357d3961968295ae" prot="public" static="yes" mutable="no">
        <type>VkClearValue const</type>
        <definition>VkClearValue const castor3d::opaqueBlackClearColor</definition>
        <argsstring></argsstring>
        <name>opaqueBlackClearColor</name>
        <initializer>{ <ref refid="da/d1e/a01479_1af859e44d88d31d8f44773fc1546bdb81" kindref="member">makeClearValue</ref>( 0.0f, 0.0f, 0.0f, 1.0f ) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="282" column="1" bodyfile="Castor3DModule.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1a36e4d190f8f3702a58a0a6f72a0e2c80" prot="public" static="yes" mutable="no">
        <type>VkClearValue const</type>
        <definition>VkClearValue const castor3d::transparentBlackClearColor</definition>
        <argsstring></argsstring>
        <name>transparentBlackClearColor</name>
        <initializer>{ <ref refid="da/d1e/a01479_1af859e44d88d31d8f44773fc1546bdb81" kindref="member">makeClearValue</ref>( 0.0f, 0.0f, 0.0f, 0.0f ) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="283" column="1" bodyfile="Castor3DModule.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1a48789daee0afe5e7a2ab6cfa8b1821a2" prot="public" static="yes" mutable="no">
        <type>VkClearValue const</type>
        <definition>VkClearValue const castor3d::opaqueWhiteClearColor</definition>
        <argsstring></argsstring>
        <name>opaqueWhiteClearColor</name>
        <initializer>{ <ref refid="da/d1e/a01479_1af859e44d88d31d8f44773fc1546bdb81" kindref="member">makeClearValue</ref>( 1.0f, 1.0f, 1.0f, 1.0f ) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="284" column="1" bodyfile="Castor3DModule.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d1e/a01479_1a921b5026b983d985bdce5f0f67466b6c" prot="public" static="yes" mutable="no">
        <type>VkClearValue const</type>
        <definition>VkClearValue const castor3d::transparentWhiteClearColor</definition>
        <argsstring></argsstring>
        <name>transparentWhiteClearColor</name>
        <initializer>{ <ref refid="da/d1e/a01479_1af859e44d88d31d8f44773fc1546bdb81" kindref="member">makeClearValue</ref>( 1.0f, 1.0f, 1.0f, 0.0f ) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="285" column="1" bodyfile="Castor3DModule.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/d1e/a01479_1ad59c79359ac4d4f478d009c56b809e3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t castor3d::makeCmshVersion</definition>
        <argsstring>(uint32_t maj, uint32_t min, uint32_t rev)</argsstring>
        <name>makeCmshVersion</name>
        <param>
          <type>uint32_t</type>
          <declname>maj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="16" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7f5dee29f8589db515b5267b84c9ac5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t castor3d::getCmshMajor</definition>
        <argsstring>(uint32_t version)</argsstring>
        <name>getCmshMajor</name>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="25" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="25" bodyend="28"/>
        <referencedby refid="d2/d08/a02148_1a035881aba2b64571b30a5efd3faaf3d9" compoundref="d3/d00/a00113" startline="321" endline="384">castor3d::BinaryParserBase&lt; Skeleton &gt;::doParseHeader</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a55001a89450107aff1d25db30844947e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t castor3d::getCmshMinor</definition>
        <argsstring>(uint32_t version)</argsstring>
        <name>getCmshMinor</name>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="30" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="30" bodyend="33"/>
        <referencedby refid="d2/d08/a02148_1a035881aba2b64571b30a5efd3faaf3d9" compoundref="d3/d00/a00113" startline="321" endline="384">castor3d::BinaryParserBase&lt; Skeleton &gt;::doParseHeader</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aab8661e5d664e92f493a8f6c8272e264" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t castor3d::getCmshRevision</definition>
        <argsstring>(uint32_t version)</argsstring>
        <name>getCmshRevision</name>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="35" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="35" bodyend="38"/>
        <referencedby refid="d2/d08/a02148_1a035881aba2b64571b30a5efd3faaf3d9" compoundref="d3/d00/a00113" startline="321" endline="384">castor3d::BinaryParserBase&lt; Skeleton &gt;::doParseHeader</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad37096e1968b9a4a64e19b4e3aa21175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t constexpr</type>
        <definition>uint64_t constexpr castor3d::makeChunkID</definition>
        <argsstring>(char a, char b, char c, char d, char e, char f, char g, char h)</argsstring>
        <name>makeChunkID</name>
        <param>
          <type>char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>char</type>
          <declname>b</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>char</type>
          <declname>d</declname>
        </param>
        <param>
          <type>char</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char</type>
          <declname>f</declname>
        </param>
        <param>
          <type>char</type>
          <declname>g</declname>
        </param>
        <param>
          <type>char</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A define to ease the declaration of a chunk id. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="45" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="45" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a430f3de9071e7d03358bb1b39d07c2b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(ChunkType &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="127" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="127" bodyend="133"/>
        <referencedby refid="dc/d18/a02260_1a51aa9cc211a27e96cdfbdb431808cc8f" compoundref="d7/dce/a00143" startline="72" endline="86">castor3d::ChunkParser&lt; T &gt;::parse</referencedby>
        <referencedby refid="da/d1e/a01479_1a04cfa41d0ea2df4819a1f078fe399cdf" compoundref="d5/db1/a00140" startline="1270" endline="1277">prepareChunkData</referencedby>
        <referencedby refid="d2/d81/a02276_1ac4cf51584e348def2f360b81e6ec7a9a" compoundref="d9/db6/a00146" startline="83" endline="99">castor3d::ChunkWriter&lt; T &gt;::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acd91e9630a784a5006a0c4299b0abe2d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(bool const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>bool const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="47" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="47" bodyend="50"/>
        <referencedby refid="dc/d18/a02260_1ad15c5a1f67d963aaebd202df3e903042" compoundref="d7/dce/a00143" startline="99" endline="107">castor3d::ChunkParser&lt; T &gt;::parse</referencedby>
        <referencedby refid="d2/d81/a02276_1a9d1fa6f341bb8c14ae9a7c2c1bfb184b" compoundref="d9/db6/a00146" startline="114" endline="123">castor3d::ChunkWriter&lt; T &gt;::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a53b6709412e96ff8db8399fafb621460" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(bool &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>bool &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="61" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad17e4e2463fd47bf50e6228f23cda9e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(int8_t const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>int8_t const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="75" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af31b7eed52ae31471146a7898ad65faf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(int8_t &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>int8_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="89" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a65eae2945ba929d1f28528855d8e52ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(uint8_t const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>uint8_t const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="103" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aeb45afffb038c6e9f3b338c38607d199" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(uint8_t &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="117" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abeabc6af95186f3cf82c3e9c7f82ac7d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(int16_t const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>int16_t const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="131" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aea3a9531c79581774698c80422cb8100" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(int16_t &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>int16_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="145" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a86fa3822f540ca22728fe5b3e2713b1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(uint16_t const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>uint16_t const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="159" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a15bc96f784bf57131e19131b8f390b84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(uint16_t &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="173" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab1f840d0f22f9a3f3a335bd0b11a0fbf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(int32_t const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>int32_t const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="187" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a084ab789a878d2cb357f74e8577806e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(int32_t &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="201" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aedf1ddd6986beb175aa5f27835e2807c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(uint32_t const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>uint32_t const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="215" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a42bbb70524caa8d72666fae2b1175a73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(uint32_t &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="229" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4a9071bc2e07e4cc2d2640f80631f5c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(int64_t const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>int64_t const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="243" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aaa7301a69cc778315b5dd3ccc6164ecc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(int64_t &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>int64_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="257" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a78734955ba0db918ae8662effbe5e8cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(uint64_t const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>uint64_t const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="271" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abbb2e66b6efd18b19c6daea2ef4c8391" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(uint64_t &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="285" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7bf35a8671619f022772a48e9c69b09b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(float const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>float const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="299" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a072fcd01afdad125f06931dc615345de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(float &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="313" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8e3292b2201c1ee15d662f24d0ac15fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(double const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>double const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="327" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a04f9817661de5c68f3c6b6e0a591a8f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(double &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>double &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="341" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a44ad9bbd498c7f6c3d0add74da328267" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(long double const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>long double const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="355" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa6adbd6b02ffbed5a818c3838de60651" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(long double &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>long double &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="369" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="369" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0237c5eefd38c3d0de4466c3fbe0d713" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(T const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="384" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="384" bodyend="387"/>
        <referencedby refid="dc/d18/a02260_1ad15c5a1f67d963aaebd202df3e903042" compoundref="d7/dce/a00143" startline="99" endline="107">castor3d::ChunkParser&lt; T &gt;::parse</referencedby>
        <referencedby refid="d2/d81/a02276_1a9d1fa6f341bb8c14ae9a7c2c1bfb184b" compoundref="d9/db6/a00146" startline="114" endline="123">castor3d::ChunkWriter&lt; T &gt;::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a91a3d07a28a63e2d1c39a85c0c83ed0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(std::vector&lt; T &gt; const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>std::vector&lt; T &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="399" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="399" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a177a29e56f250b8859c88444a66be214" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="414" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="414" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a01d7b18d8f980e263b57b8c25ed58803" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(std::vector&lt; T &gt; const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>std::vector&lt; T &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="429" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="429" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1db246694986ee513d3ecebbe60df538" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(std::array&lt; T, Count &gt; const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>std::array&lt; T, Count &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="444" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="444" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5c6dc343c675fbb0ddb78cc8cf99a43b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(std::array&lt; T, Count &gt; &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>std::array&lt; T, Count &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer (&amp;value for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="459" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="459" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0339bd509da629d83671dedc70b6a5c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(std::array&lt; T, Count &gt; const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>std::array&lt; T, Count &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="474" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="474" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a30a7de8847b4a8e5a1980d57614419a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::Point&lt; T, Count &gt; const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Point&lt; T, Count &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="489" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="489" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abf26e6f77aef77b923c8fd99877beb25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::Point&lt; T, Count &gt; &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Point&lt; T, Count &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="504" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="504" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a71a3782dfec34ddcf82a699c1f4fadf1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::Point&lt; T, Count &gt; const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::Point&lt; T, Count &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="519" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="519" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a512da094b1591fd9f9845b924541a105" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::Coords&lt; T, Count &gt; const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Coords&lt; T, Count &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="534" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="534" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adf1f0ee15c4c2209de6fafaf4f09ce74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::Coords&lt; T, Count &gt; &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Coords&lt; T, Count &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="549" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="549" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa068a299f450ce126b22b012229fe7f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::Coords&lt; T, Count &gt; const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::Coords&lt; T, Count &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="564" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="564" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abb1195e25dfec99e6906d6be10357394" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Columns</declname>
            <defname>Columns</defname>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Rows</declname>
            <defname>Rows</defname>
          </param>
        </templateparamlist>
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::Matrix&lt; T, Columns, Rows &gt; const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Matrix&lt; T, Columns, Rows &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="579" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="579" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a96958c36ea195d89d44b1b229afc3ee5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Columns</declname>
            <defname>Columns</defname>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Rows</declname>
            <defname>Rows</defname>
          </param>
        </templateparamlist>
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::Matrix&lt; T, Columns, Rows &gt; &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Matrix&lt; T, Columns, Rows &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="594" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="594" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a718010efae835c3c527530c6bc151732" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Columns</declname>
            <defname>Columns</defname>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Rows</declname>
            <defname>Rows</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::Matrix&lt; T, Columns, Rows &gt; const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::Matrix&lt; T, Columns, Rows &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="609" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="609" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5ee6d700d756d7c4eb1a7622fb9c8de5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::SquareMatrix&lt; T, Count &gt; const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::SquareMatrix&lt; T, Count &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="624" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="624" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1798d345fffedc291cd2c1564dd3ec99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::SquareMatrix&lt; T, Count &gt; &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::SquareMatrix&lt; T, Count &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="639" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="639" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6727e4e36c46dd0f20ae7394134609ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::SquareMatrix&lt; T, Count &gt; const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::SquareMatrix&lt; T, Count &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="654" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="654" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a00edfb0891ef710afb9e9def0c59939b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::RgbColour const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::RgbColour const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="668" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="668" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a740af1b71d42d3f97e8b4c17f8a4903c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::RgbColour &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::RgbColour &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="682" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="682" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a17bdfe86d14745ed8fd56c502d5b3660" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::RgbColour const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::RgbColour const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="696" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="696" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acc82acebc089883801d613ac2f635883" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::RgbaColour const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::RgbaColour const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="710" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="710" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8e5b111e48890d5a778b88cb4581916b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::RgbaColour &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::RgbaColour &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="724" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="724" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a636b1a8b36dd9f87c507e8fe939ab1e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::RgbaColour const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::RgbaColour const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="738" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="738" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac4e915c658e79a9361fd271029be8424" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::Size const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="752" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="752" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a568e0ce14a1b4a9b70e282f6f460cf23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::Size &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Size &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="766" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="766" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7dd9bfff24a725e50ad4294bee7fa002" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::Size const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="780" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="780" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a37c72d53b5e868b0eef017feb1c31055" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::Position const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Position const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="794" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="794" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5e9875b2524db2bacde7641f51f484ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::Position &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::Position &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="808" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="808" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acf471ffb3fb451593ac3a3165c958ed7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::Position const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::Position const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="822" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="822" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab735d688598ab1d4e0bc77c761be08b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>uint8_t const  *</type>
        <definition>static uint8_t const* castor3d::getBuffer</definition>
        <argsstring>(castor::QuaternionT&lt; T &gt; const &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::QuaternionT&lt; T &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="837" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="837" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abf32e975a23c7f9d00d759e7187b2bdf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>uint8_t *</type>
        <definition>static uint8_t* castor3d::getBuffer</definition>
        <argsstring>(castor::QuaternionT&lt; T &gt; &amp;value)</argsstring>
        <name>getBuffer</name>
        <param>
          <type>castor::QuaternionT&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the beginning of the buffer for given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="852" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="852" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4a4f68994f8095ef79c940de578f4e36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t castor3d::getDataSize</definition>
        <argsstring>(castor::QuaternionT&lt; T &gt; const &amp;value)</argsstring>
        <name>getDataSize</name>
        <param>
          <type>castor::QuaternionT&lt; T &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value binary size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size (sizeof( value ) for basic types). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="867" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="867" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a512769107a1a41ec6ca67a10f32c9d89" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(bool &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>bool &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="879" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="879" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8d60269ffdfbd89a01c0f301e12af421" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(int8_t &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>int8_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="891" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="891" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4031c38dc7e4b43d53c54727adf8c0e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(uint8_t &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="903" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="903" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7f70d15ea4a68c85c548cd5552619d97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(int16_t &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>int16_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="915" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="915" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a41332c78f59210d8b68f9eb33e202c6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(uint16_t &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="930" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="930" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a19419ebed1810e7293e390e5ec3c2d9b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(int32_t &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="945" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="945" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ab8a87dce63a0ebba4c5f454eea27e7a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(uint32_t &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="960" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="960" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa25c32cc9e2d91e7b7d6287917c04524" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(int64_t &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>int64_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="975" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="975" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a83d5b33dc01843598fc318d243ea8136" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(uint64_t &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="990" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="990" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a06caf74173997883bedfa6c3ff807c12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(float &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1005" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1005" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a64d22c03869c8db8496ef7e16733777b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(double &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>double &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1020" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1020" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa728469bd8e826b18eb6c1d6e8913bf3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(long double &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>long double &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1035" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1035" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae955f5d39527f64545bdbee361023444" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;values)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1051" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1051" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa333ef390868f0b42199f033aa16ad73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(std::array&lt; T, Count &gt; &amp;values)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>std::array&lt; T, Count &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1070" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1070" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adec052c5846a087dbf0d4dc2672b8f45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(castor::SquareMatrix&lt; T, Count &gt; &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>castor::SquareMatrix&lt; T, Count &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1089" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1089" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a87e7a551793e1998870e8b6ba1bb3a4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(castor::Point&lt; T, Count &gt; &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>castor::Point&lt; T, Count &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1108" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1108" bodyend="1117"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8c20990a4663fb276e147bb3b1bbaa74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>Count</declname>
            <defname>Count</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(castor::Coords&lt; T, Count &gt; &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>castor::Coords&lt; T, Count &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1127" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1127" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7f0063a8a28d970183adc8aac48992bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(castor::QuaternionT&lt; T &gt; &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>castor::QuaternionT&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1146" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1146" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4fc68de12338fd3a4ca4362246f502ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(castor::ColourComponent &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>castor::ColourComponent &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1164" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1164" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6c9799addf4313489625161731a1c8eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(castor::RgbColour &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>castor::RgbColour &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1179" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1179" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a57304a0182373e71acbbcb1a49086f76" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(castor::RgbaColour &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type>castor::RgbaColour &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1197" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1197" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a241973c9a831e044ed17e61d46d1c4b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(OldInterleavedVertexT&lt; T &gt; &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type><ref refid="d1/dce/a02168" kindref="compound">OldInterleavedVertexT</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1216" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1216" bodyend="1233"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a02a77ba0bbe8d8c7e9b2cdac1f45a2fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(InterleavedVertexT&lt; T &gt; &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type><ref refid="d9/def/a04004" kindref="compound">InterleavedVertexT</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1243" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1243" bodyend="1260"/>
        <references refid="d9/def/a04004_1a08ef8cb947afd3d5e8ea4b6419104111" compoundref="d9/d19/a00560" startline="43">castor3d::InterleavedVertexT&lt; T &gt;::nml</references>
        <references refid="d9/def/a04004_1a231c8bedc4c5ff711f3eb1e4ccd05752" compoundref="d9/d19/a00560" startline="40">castor3d::InterleavedVertexT&lt; T &gt;::pos</references>
        <references refid="d9/def/a04004_1a9f11fd7bbdd4959041c9aaa25e8f1bc3" compoundref="d9/d19/a00560" startline="46">castor3d::InterleavedVertexT&lt; T &gt;::tan</references>
        <references refid="d9/def/a04004_1a4ccb3f9d45a9d26918f29c3110affa6d" compoundref="d9/d19/a00560" startline="49">castor3d::InterleavedVertexT&lt; T &gt;::tex</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a04cfa41d0ea2df4819a1f078fe399cdf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(SubmeshAnimationBufferT&lt; T &gt; &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type><ref refid="d3/d4a/a03996" kindref="compound">SubmeshAnimationBufferT</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1270" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1270" bodyend="1277"/>
        <references refid="d3/d4a/a03996_1abe5ed8a52b6a3cc7356f0df4b30186ec" compoundref="dc/d19/a00515" startline="40">castor3d::SubmeshAnimationBufferT&lt; T &gt;::m_buffer</references>
        <references refid="da/d1e/a01479_1a430f3de9071e7d03358bb1b39d07c2b8" compoundref="d1/d44/a00098" startline="127" endline="133">prepareChunkData</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4bf10f2f11fde3269c70845bbc572fbf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(FaceIndices &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type><ref refid="d0/d60/a03936" kindref="compound">FaceIndices</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1286" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1286" bodyend="1294"/>
        <references refid="d0/d60/a03936_1adf8426df8bab8f2e89269aad090a1d01" compoundref="db/d8e/a00482" startline="17">castor3d::FaceIndices::m_index</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1281cbf080321b1041acc691028f9d97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(LineIndices &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type><ref refid="db/de8/a03968" kindref="compound">LineIndices</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1303" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1303" bodyend="1310"/>
        <references refid="db/de8/a03968_1ac8d2569b7f8e6030b425ffb8e651b617" compoundref="d4/d1e/a00497" startline="15">castor3d::LineIndices::m_index</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a770ba5e8e6c80ebb02e90284327877d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void castor3d::prepareChunkData</definition>
        <argsstring>(VertexBoneData &amp;value)</argsstring>
        <name>prepareChunkData</name>
        <param>
          <type><ref refid="dc/d1f/a04036" kindref="compound">VertexBoneData</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets given value to big endian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/ChunkData.hpp" line="1319" column="1" bodyfile="Binary/ChunkData.hpp" bodystart="1319" bodyend="1340"/>
        <references refid="db/d69/a04040_1a2bf3acefcc41daac40ff83c31e12592c" compoundref="dc/df9/a00554" startline="41">castor3d::VertexBoneData::Ids::data</references>
        <references refid="d4/db0/a04048_1a2d3452a7660781bfca0ac8afbcd57671" compoundref="dc/df9/a00554" startline="110">castor3d::VertexBoneData::Weights::data</references>
        <references refid="dc/d1f/a04036_1af2bf0195342cc4a6ff82b71cc5455545" compoundref="dc/df9/a00554" startline="100">castor3d::VertexBoneData::m_ids</references>
        <references refid="dc/d1f/a04036_1a3f15c9548718093815e7e1c2214089c7" compoundref="dc/df9/a00554" startline="169">castor3d::VertexBoneData::m_weights</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a146ceeb0893c1cec8c766271ffd388c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>ashes::BufferPtr&lt; T &gt;</type>
        <definition>ashes::BufferPtr&lt; T &gt; castor3d::makeBuffer</definition>
        <argsstring>(RenderDevice const &amp;device, VkDeviceSize count, VkBufferUsageFlags usage, VkMemoryPropertyFlags flags, std::string const &amp;name, ashes::QueueShare sharingMode={})</argsstring>
        <name>makeBuffer</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>count</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="285" column="1" bodyfile="Buffer/GpuBuffer.hpp" bodystart="285" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a36dcd65edd93bacd4e730790dad37756" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::BufferBasePtr</type>
        <definition>ashes::BufferBasePtr castor3d::makeBufferBase</definition>
        <argsstring>(RenderDevice const &amp;device, VkDeviceSize size, VkBufferUsageFlags usage, VkMemoryPropertyFlags flags, std::string const &amp;name, ashes::QueueShare sharingMode={})</argsstring>
        <name>makeBufferBase</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="302" column="1" bodyfile="Buffer/GpuBuffer.hpp" bodystart="302" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a735781106066805dd7ad034dd2ccb752" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>ashes::VertexBufferPtr&lt; T &gt;</type>
        <definition>ashes::VertexBufferPtr&lt; T &gt; castor3d::makeVertexBuffer</definition>
        <argsstring>(RenderDevice const &amp;device, VkDeviceSize count, VkBufferUsageFlags usage, VkMemoryPropertyFlags flags, std::string const &amp;name, ashes::QueueShare sharingMode={})</argsstring>
        <name>makeVertexBuffer</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>count</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="319" column="1" bodyfile="Buffer/GpuBuffer.hpp" bodystart="319" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a36bed1a26a458bea071006a6bf7eed0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::VertexBufferBasePtr</type>
        <definition>ashes::VertexBufferBasePtr castor3d::makeVertexBufferBase</definition>
        <argsstring>(RenderDevice const &amp;device, VkDeviceSize size, VkBufferUsageFlags usage, VkMemoryPropertyFlags flags, std::string const &amp;name, ashes::QueueShare sharingMode={})</argsstring>
        <name>makeVertexBufferBase</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="336" column="1" bodyfile="Buffer/GpuBuffer.hpp" bodystart="336" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1add23a4cab39c7677c14973748e80ada7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PoolUniformBufferUPtr</type>
        <definition>PoolUniformBufferUPtr castor3d::makePoolUniformBuffer</definition>
        <argsstring>(RenderSystem const &amp;renderSystem, castor::ArrayView&lt; uint8_t &gt; data, VkBufferUsageFlags usage, VkMemoryPropertyFlags flags, std::string name, ashes::QueueShare sharingMode={})</argsstring>
        <name>makePoolUniformBuffer</name>
        <param>
          <type><ref refid="d9/d38/a04624" kindref="compound">RenderSystem</ref> const &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>castor::ArrayView&lt; uint8_t &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/PoolUniformBuffer.hpp" line="251" column="1" bodyfile="Buffer/PoolUniformBuffer.hpp" bodystart="251" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a10d07677c605d3d5b806bd4770b1040d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataT</type>
          </param>
        </templateparamlist>
        <type>UniformBufferUPtrT&lt; DataT &gt;</type>
        <definition>UniformBufferUPtrT&lt; DataT &gt; castor3d::makeUniformBuffer</definition>
        <argsstring>(RenderSystem const &amp;renderSystem, VkDeviceSize count, VkBufferUsageFlags usage, VkMemoryPropertyFlags flags, std::string name, ashes::QueueShare sharingMode={})</argsstring>
        <name>makeUniformBuffer</name>
        <param>
          <type><ref refid="d9/d38/a04624" kindref="compound">RenderSystem</ref> const &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>count</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/UniformBuffer.hpp" line="249" column="1" bodyfile="Buffer/UniformBuffer.hpp" bodystart="249" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac3a529d187865e8ca739c73930c2f866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UniformBufferBaseUPtr</type>
        <definition>UniformBufferBaseUPtr castor3d::makeUniformBufferBase</definition>
        <argsstring>(RenderSystem const &amp;renderSystem, VkDeviceSize count, VkDeviceSize size, VkBufferUsageFlags usage, VkMemoryPropertyFlags flags, std::string name, ashes::QueueShare sharingMode={})</argsstring>
        <name>makeUniformBufferBase</name>
        <param>
          <type><ref refid="d9/d38/a04624" kindref="compound">RenderSystem</ref> const &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>count</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/UniformBufferBase.hpp" line="559" column="1" bodyfile="Buffer/UniformBufferBase.hpp" bodystart="559" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a24b3d38a3fba25d9ebff0d4960667d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> size_t</type>
        <definition>C3D_API size_t castor3d::hash</definition>
        <argsstring>(BillboardBase const &amp;billboard, Pass const &amp;pass)</argsstring>
        <name>hash</name>
        <param>
          <type><ref refid="d3/dc0/a05140" kindref="compound">BillboardBase</ref> const &amp;</type>
          <declname>billboard</declname>
        </param>
        <param>
          <type><ref refid="df/d5d/a02596" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/BillboardUboPools.hpp" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af77e434cd8b07ef13496bf3e7fdabc18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> size_t</type>
        <definition>C3D_API size_t castor3d::hash</definition>
        <argsstring>(BillboardBase const &amp;billboard, Pass const &amp;pass, uint32_t instanceMult)</argsstring>
        <name>hash</name>
        <param>
          <type><ref refid="d3/dc0/a05140" kindref="compound">BillboardBase</ref> const &amp;</type>
          <declname>billboard</declname>
        </param>
        <param>
          <type><ref refid="df/d5d/a02596" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/BillboardUboPools.hpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a411f4b3e37711216bc6744462695e9bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
          <param>
            <type>typename KeyType</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="da/d75/a02372" kindref="compound">Cache</ref>&lt; ElementType, KeyType &gt; &gt;</type>
        <definition>std::unique_ptr&lt; Cache&lt; ElementType, KeyType &gt; &gt; castor3d::makeCache</definition>
        <argsstring>(Engine &amp;engine, typename CacheTraits&lt; ElementType, KeyType &gt;::Producer &amp;&amp;produce, ElementInitialiser&lt; ElementType &gt; &amp;&amp;initialise=[](std::shared_ptr&lt; ElementType &gt;){}, ElementCleaner&lt; ElementType &gt; &amp;&amp;clean=[](std::shared_ptr&lt; ElementType &gt;){}, typename CacheTraits&lt; ElementType, KeyType &gt;::Merger &amp;&amp;merge=[](CacheBase&lt; ElementType, KeyType &gt; const &amp;, castor::Collection&lt; ElementType, KeyType &gt; &amp;, std::shared_ptr&lt; ElementType &gt;){})</argsstring>
        <name>makeCache</name>
        <param>
          <type><ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>typename <ref refid="d8/d30/a02380" kindref="compound">CacheTraits</ref>&lt; ElementType, KeyType &gt;::Producer &amp;&amp;</type>
          <declname>produce</declname>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a2c8a46389d1ccec823efc418fe4b6ad4" kindref="member">ElementInitialiser</ref>&lt; ElementType &gt; &amp;&amp;</type>
          <declname>initialise</declname>
          <defval>[](std::shared_ptr&lt; ElementType &gt;){}</defval>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a35dc9312b15caba5ee045ddb7204ad74" kindref="member">ElementCleaner</ref>&lt; ElementType &gt; &amp;&amp;</type>
          <declname>clean</declname>
          <defval>[](std::shared_ptr&lt; ElementType &gt;){}</defval>
        </param>
        <param>
          <type>typename <ref refid="d8/d30/a02380" kindref="compound">CacheTraits</ref>&lt; ElementType, KeyType &gt;::Merger &amp;&amp;</type>
          <declname>merge</declname>
          <defval>[](<ref refid="df/d46/a02376" kindref="compound">CacheBase</ref>&lt; ElementType, KeyType &gt; const &amp;, castor::Collection&lt; ElementType, KeyType &gt; &amp;, std::shared_ptr&lt; ElementType &gt;){}</defval>
        </param>
        <briefdescription>
<para>Creates a cache. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">produce</parametername>
</parameternamelist>
<parameterdescription>
<para>The element producer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialise</parametername>
</parameternamelist>
<parameterdescription>
<para>The element initialiser. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clean</parametername>
</parameternamelist>
<parameterdescription>
<para>The element cleaner. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">merge</parametername>
</parameternamelist>
<parameterdescription>
<para>The element collection merger. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/Cache.hpp" line="83" column="1" bodyfile="Cache/Cache.hpp" bodystart="83" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7c8940627552cd61766757f20bb8102a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> size_t</type>
        <definition>C3D_API size_t castor3d::hash</definition>
        <argsstring>(Geometry const &amp;geometry, Submesh const &amp;submesh, Pass const &amp;pass)</argsstring>
        <name>hash</name>
        <param>
          <type><ref refid="df/df0/a05160" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type><ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> const &amp;</type>
          <declname>submesh</declname>
        </param>
        <param>
          <type><ref refid="df/d5d/a02596" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/GeometryCache.hpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a44b49ffb58a3f9d295dbc24c26d6da82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> size_t</type>
        <definition>C3D_API size_t castor3d::hash</definition>
        <argsstring>(Geometry const &amp;geometry, Submesh const &amp;submesh, Pass const &amp;pass, uint32_t instanceMult)</argsstring>
        <name>hash</name>
        <param>
          <type><ref refid="df/df0/a05160" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type><ref refid="d9/d0c/a03992" kindref="compound">Submesh</ref> const &amp;</type>
          <declname>submesh</declname>
        </param>
        <param>
          <type><ref refid="df/d5d/a02596" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/GeometryCache.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a24cd580af192f8b6c1583b1a09934735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
          <param>
            <type>typename KeyType</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="da/d5c/a02432" kindref="compound">ObjectCache</ref>&lt; ElementType, KeyType &gt; &gt;</type>
        <definition>std::unique_ptr&lt; ObjectCache&lt; ElementType, KeyType &gt; &gt; castor3d::makeObjectCache</definition>
        <argsstring>(Engine &amp;engine, Scene &amp;scene, SceneNodeSPtr rootNode, SceneNodeSPtr rootCameraNode, SceneNodeSPtr rootObjectNode, typename ObjectCacheTraits&lt; ElementType, KeyType &gt;::Producer &amp;&amp;produce, ElementInitialiser&lt; ElementType &gt; &amp;&amp;initialise=[](std::shared_ptr&lt; ElementType &gt;){}, ElementCleaner&lt; ElementType &gt; &amp;&amp;clean=[](std::shared_ptr&lt; ElementType &gt;){}, typename ObjectCacheTraits&lt; ElementType, KeyType &gt;::Merger &amp;&amp;merge=[](ObjectCacheBase&lt; ElementType, KeyType &gt; const &amp;, castor::Collection&lt; ElementType, KeyType &gt; &amp;, std::shared_ptr&lt; ElementType &gt;, SceneNodeSPtr, SceneNodeSPtr){}, ElementAttacher&lt; ElementType &gt; &amp;&amp;attach=[](std::shared_ptr&lt; ElementType &gt;, SceneNode &amp;, SceneNodeSPtr, SceneNodeSPtr, SceneNodeSPtr){}, ElementDetacher&lt; ElementType &gt; &amp;&amp;detach=[](std::shared_ptr&lt; ElementType &gt;){})</argsstring>
        <name>makeObjectCache</name>
        <param>
          <type><ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="d5/d76/a05244" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>SceneNodeSPtr</type>
          <declname>rootNode</declname>
        </param>
        <param>
          <type>SceneNodeSPtr</type>
          <declname>rootCameraNode</declname>
        </param>
        <param>
          <type>SceneNodeSPtr</type>
          <declname>rootObjectNode</declname>
        </param>
        <param>
          <type>typename <ref refid="dd/d0a/a02436" kindref="compound">ObjectCacheTraits</ref>&lt; ElementType, KeyType &gt;::Producer &amp;&amp;</type>
          <declname>produce</declname>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a2c8a46389d1ccec823efc418fe4b6ad4" kindref="member">ElementInitialiser</ref>&lt; ElementType &gt; &amp;&amp;</type>
          <declname>initialise</declname>
          <defval>[](std::shared_ptr&lt; ElementType &gt;){}</defval>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a35dc9312b15caba5ee045ddb7204ad74" kindref="member">ElementCleaner</ref>&lt; ElementType &gt; &amp;&amp;</type>
          <declname>clean</declname>
          <defval>[](std::shared_ptr&lt; ElementType &gt;){}</defval>
        </param>
        <param>
          <type>typename <ref refid="dd/d0a/a02436" kindref="compound">ObjectCacheTraits</ref>&lt; ElementType, KeyType &gt;::Merger &amp;&amp;</type>
          <declname>merge</declname>
          <defval>[](<ref refid="d5/d04/a02428" kindref="compound">ObjectCacheBase</ref>&lt; ElementType, KeyType &gt; const &amp;, castor::Collection&lt; ElementType, KeyType &gt; &amp;, std::shared_ptr&lt; ElementType &gt;, SceneNodeSPtr, SceneNodeSPtr){}</defval>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1ac7d2928603e3d29246115f215f1deb05" kindref="member">ElementAttacher</ref>&lt; ElementType &gt; &amp;&amp;</type>
          <declname>attach</declname>
          <defval>[](std::shared_ptr&lt; ElementType &gt;, <ref refid="da/d44/a05256" kindref="compound">SceneNode</ref> &amp;, SceneNodeSPtr, SceneNodeSPtr, SceneNodeSPtr){}</defval>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1a3aa434d7a4346a597f32d372cbf557cd" kindref="member">ElementDetacher</ref>&lt; ElementType &gt; &amp;&amp;</type>
          <declname>detach</declname>
          <defval>[](std::shared_ptr&lt; ElementType &gt;){}</defval>
        </param>
        <briefdescription>
<para>Creates an object cache. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rootNode</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene root node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rootCameraNode</parametername>
</parameternamelist>
<parameterdescription>
<para>The root node for cameras. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rootObjectNode</parametername>
</parameternamelist>
<parameterdescription>
<para>The root node for objects. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">produce</parametername>
</parameternamelist>
<parameterdescription>
<para>The element producer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialise</parametername>
</parameternamelist>
<parameterdescription>
<para>The element initialiser. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clean</parametername>
</parameternamelist>
<parameterdescription>
<para>The element cleaner. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">merge</parametername>
</parameternamelist>
<parameterdescription>
<para>The element collection merger. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attach</parametername>
</parameternamelist>
<parameterdescription>
<para>The element attacher (to a scene node). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">detach</parametername>
</parameternamelist>
<parameterdescription>
<para>The element detacher (from a scene node). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/ObjectCache.hpp" line="122" column="1" bodyfile="Cache/ObjectCache.hpp" bodystart="122" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac312788750fb038d39ae652c19867b6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="db/da2/a02512" kindref="compound">ShaderProgramCache</ref> &gt;</type>
        <definition>std::unique_ptr&lt; ShaderProgramCache &gt; castor3d::makeCache</definition>
        <argsstring>(Engine &amp;engine)</argsstring>
        <name>makeCache</name>
        <param>
          <type><ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
<para>Creates a ashes::ShaderProgram cache. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">engine</parametername>
</parameternamelist>
<parameterdescription>
<para>The engine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cache/ShaderCache.hpp" line="169" column="1" bodyfile="Cache/ShaderCache.hpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5beb2f01c44b9fded752009892b72e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareSmartPtr</definition>
        <argsstring>(Engine)</argsstring>
        <name>CU_DeclareSmartPtr</name>
        <param>
          <type><ref refid="dc/dbb/a02520" kindref="compound">Engine</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ace35ba09ee6ea86f78ee625de1cc34f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::LoggerInstance &amp;</type>
        <definition>castor::LoggerInstance&amp; castor3d::getLogger</definition>
        <argsstring>(Engine &amp;engine)</argsstring>
        <name>getLogger</name>
        <param>
          <type><ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad766f5fe0331cc8610c0f04de52ce27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::convert</definition>
        <argsstring>(std::array&lt; float, 16 &gt; const &amp;value)</argsstring>
        <name>convert</name>
        <param>
          <type>std::array&lt; float, 16 &gt; const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adddd3878b9dbf6f893fdffaca22fa820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkClearColorValue</type>
        <definition>VkClearColorValue castor3d::convert</definition>
        <argsstring>(castor::RgbaColour const &amp;value)</argsstring>
        <name>convert</name>
        <param>
          <type>castor::RgbaColour const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4e14068cad83365093225cf862880998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>castor::RgbaColour</type>
        <definition>castor::RgbaColour castor3d::convert</definition>
        <argsstring>(VkClearColorValue const &amp;value)</argsstring>
        <name>convert</name>
        <param>
          <type>VkClearColorValue const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acf3cef0b63358b0359ccf7365004573e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; float, 4u &gt;</type>
        <definition>std::array&lt; float, 4u &gt; castor3d::makeFloatArray</definition>
        <argsstring>(castor::RgbaColour const &amp;value)</argsstring>
        <name>makeFloatArray</name>
        <param>
          <type>castor::RgbaColour const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad4e44005dcf2f73eb22e0e91f5ad63e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(float, Float)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>Float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adfb0be1ebdb8aa17665ee94ad9e85b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(uint32_t, int, IntUInt)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>uint32_t</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>IntUInt</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9f2e71f76e282df15178e5e23c155b50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(castor::String, int, IntStr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>IntStr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa0c643344d6d6a7aef1fcbb0ab4d0d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(int, castor::String, StrInt)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>castor::String</type>
        </param>
        <param>
          <type>StrInt</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1873720773359ddadefcb9c8dd342249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkDescriptorSetLayoutBinding</type>
        <definition>VkDescriptorSetLayoutBinding castor3d::makeDescriptorSetLayoutBinding</definition>
        <argsstring>(uint32_t binding, VkDescriptorType descriptorType, VkShaderStageFlags stageFlags, uint32_t descriptorCount=1u, VkSampler const *pImmutableSamplers=nullptr)</argsstring>
        <name>makeDescriptorSetLayoutBinding</name>
        <param>
          <type>uint32_t</type>
          <declname>binding</declname>
        </param>
        <param>
          <type>VkDescriptorType</type>
          <declname>descriptorType</declname>
        </param>
        <param>
          <type>VkShaderStageFlags</type>
          <declname>stageFlags</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>descriptorCount</declname>
          <defval>1u</defval>
        </param>
        <param>
          <type>VkSampler const *</type>
          <declname>pImmutableSamplers</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="75" column="1" bodyfile="Castor3DModule.hpp" bodystart="75" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkExtent2D</type>
        <definition>VkExtent2D castor3d::makeExtent2D</definition>
        <argsstring>(castor::Coords2ui const &amp;size)</argsstring>
        <name>makeExtent2D</name>
        <param>
          <type>castor::Coords2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="91" column="1" bodyfile="Castor3DModule.hpp" bodystart="91" bodyend="98"/>
        <referencedby refid="da/d1e/a01479_1a1813549a9ae0f9de5d95c58b2b8b5f25" compoundref="d5/d35/a00266" startline="231" endline="235">makeScissor</referencedby>
        <referencedby refid="da/d1e/a01479_1a7b3af07b64fe368bed3d4373f92c670d" compoundref="d5/d35/a00266" startline="167" endline="175">makeViewport</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa3e75f11b9ffb44e724dc582824db6f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkExtent2D</type>
        <definition>VkExtent2D castor3d::makeExtent2D</definition>
        <argsstring>(castor::Point2ui const &amp;size)</argsstring>
        <name>makeExtent2D</name>
        <param>
          <type>castor::Point2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="100" column="1" bodyfile="Castor3DModule.hpp" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a43ac53ed1e47a555f8f0d413a408b8bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkExtent3D</type>
        <definition>VkExtent3D castor3d::makeExtent3D</definition>
        <argsstring>(castor::Coords2ui const &amp;size)</argsstring>
        <name>makeExtent3D</name>
        <param>
          <type>castor::Coords2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="109" column="1" bodyfile="Castor3DModule.hpp" bodystart="109" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a953129fa15a813d165dbac2582b37246" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkExtent3D</type>
        <definition>VkExtent3D castor3d::makeExtent3D</definition>
        <argsstring>(castor::Point2ui const &amp;size)</argsstring>
        <name>makeExtent3D</name>
        <param>
          <type>castor::Point2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="119" column="1" bodyfile="Castor3DModule.hpp" bodystart="119" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkOffset2D</type>
        <definition>VkOffset2D castor3d::makeOffset2D</definition>
        <argsstring>(castor::Coords2i const &amp;pos)</argsstring>
        <name>makeOffset2D</name>
        <param>
          <type>castor::Coords2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="129" column="1" bodyfile="Castor3DModule.hpp" bodystart="129" bodyend="136"/>
        <referencedby refid="da/d1e/a01479_1a677de6a2643f78d80e55e85d7ae6ce35" compoundref="d5/d35/a00266" startline="243" endline="248">makeScissor</referencedby>
        <referencedby refid="da/d1e/a01479_1ad4f6878dcfe55ab89b0e0d6aac35cf8b" compoundref="d5/d35/a00266" startline="187" endline="196">makeViewport</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2685bf21cb151eb53583067fbddf8789" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkOffset2D</type>
        <definition>VkOffset2D castor3d::makeOffset2D</definition>
        <argsstring>(castor::Point2i const &amp;pos)</argsstring>
        <name>makeOffset2D</name>
        <param>
          <type>castor::Point2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="138" column="1" bodyfile="Castor3DModule.hpp" bodystart="138" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1add68db47c0c5c0d3f59f3ea850945106" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkOffset3D</type>
        <definition>VkOffset3D castor3d::makeOffset3D</definition>
        <argsstring>(castor::Coords2i const &amp;pos)</argsstring>
        <name>makeOffset3D</name>
        <param>
          <type>castor::Coords2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="147" column="1" bodyfile="Castor3DModule.hpp" bodystart="147" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a18e1581299022e9510d91b7b36c3f503" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkOffset3D</type>
        <definition>VkOffset3D castor3d::makeOffset3D</definition>
        <argsstring>(castor::Point2i const &amp;pos)</argsstring>
        <name>makeOffset3D</name>
        <param>
          <type>castor::Point2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="157" column="1" bodyfile="Castor3DModule.hpp" bodystart="157" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7b3af07b64fe368bed3d4373f92c670d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkViewport</type>
        <definition>VkViewport castor3d::makeViewport</definition>
        <argsstring>(castor::Coords2ui const &amp;size, float zMin=0.0f, float zMax=1.0f)</argsstring>
        <name>makeViewport</name>
        <param>
          <type>castor::Coords2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zMin</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>zMax</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="167" column="1" bodyfile="Castor3DModule.hpp" bodystart="167" bodyend="175"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a5b68d503feffed438a2d6fd828501115" compoundref="d5/d35/a00266" startline="220" endline="229">makeViewport</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a074812e360be9a1fd90ff560194ef791" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkViewport</type>
        <definition>VkViewport castor3d::makeViewport</definition>
        <argsstring>(castor::Point2ui const &amp;size, float zMin=0.0f, float zMax=1.0f)</argsstring>
        <name>makeViewport</name>
        <param>
          <type>castor::Point2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zMin</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>zMax</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="177" column="1" bodyfile="Castor3DModule.hpp" bodystart="177" bodyend="185"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a5b68d503feffed438a2d6fd828501115" compoundref="d5/d35/a00266" startline="220" endline="229">makeViewport</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad4f6878dcfe55ab89b0e0d6aac35cf8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkViewport</type>
        <definition>VkViewport castor3d::makeViewport</definition>
        <argsstring>(castor::Coords2i const &amp;pos, castor::Coords2ui const &amp;size, float zMin=0.0f, float zMax=1.0f)</argsstring>
        <name>makeViewport</name>
        <param>
          <type>castor::Coords2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>castor::Coords2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zMin</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>zMax</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="187" column="1" bodyfile="Castor3DModule.hpp" bodystart="187" bodyend="196"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" compoundref="d5/d35/a00266" startline="129" endline="136">makeOffset2D</references>
        <references refid="da/d1e/a01479_1a5b68d503feffed438a2d6fd828501115" compoundref="d5/d35/a00266" startline="220" endline="229">makeViewport</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acc0979c2115f1d74866da44a28f7bc18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkViewport</type>
        <definition>VkViewport castor3d::makeViewport</definition>
        <argsstring>(castor::Point2i const &amp;pos, castor::Coords2ui const &amp;size, float zMin=0.0f, float zMax=1.0f)</argsstring>
        <name>makeViewport</name>
        <param>
          <type>castor::Point2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>castor::Coords2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zMin</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>zMax</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="198" column="1" bodyfile="Castor3DModule.hpp" bodystart="198" bodyend="207"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" compoundref="d5/d35/a00266" startline="129" endline="136">makeOffset2D</references>
        <references refid="da/d1e/a01479_1a5b68d503feffed438a2d6fd828501115" compoundref="d5/d35/a00266" startline="220" endline="229">makeViewport</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6a7abe4af1d41c48b8116612d88af453" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkViewport</type>
        <definition>VkViewport castor3d::makeViewport</definition>
        <argsstring>(castor::Coords2i const &amp;pos, castor::Point2ui const &amp;size, float zMin=0.0f, float zMax=1.0f)</argsstring>
        <name>makeViewport</name>
        <param>
          <type>castor::Coords2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>castor::Point2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zMin</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>zMax</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="209" column="1" bodyfile="Castor3DModule.hpp" bodystart="209" bodyend="218"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" compoundref="d5/d35/a00266" startline="129" endline="136">makeOffset2D</references>
        <references refid="da/d1e/a01479_1a5b68d503feffed438a2d6fd828501115" compoundref="d5/d35/a00266" startline="220" endline="229">makeViewport</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5b68d503feffed438a2d6fd828501115" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkViewport</type>
        <definition>VkViewport castor3d::makeViewport</definition>
        <argsstring>(castor::Point2i const &amp;pos, castor::Point2ui const &amp;size, float zMin=0.0f, float zMax=1.0f)</argsstring>
        <name>makeViewport</name>
        <param>
          <type>castor::Point2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>castor::Point2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zMin</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>zMax</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="220" column="1" bodyfile="Castor3DModule.hpp" bodystart="220" bodyend="229"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" compoundref="d5/d35/a00266" startline="129" endline="136">makeOffset2D</references>
        <referencedby refid="da/d1e/a01479_1a7b3af07b64fe368bed3d4373f92c670d" compoundref="d5/d35/a00266" startline="167" endline="175">makeViewport</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1813549a9ae0f9de5d95c58b2b8b5f25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkRect2D</type>
        <definition>VkRect2D castor3d::makeScissor</definition>
        <argsstring>(castor::Coords2ui const &amp;size)</argsstring>
        <name>makeScissor</name>
        <param>
          <type>castor::Coords2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="231" column="1" bodyfile="Castor3DModule.hpp" bodystart="231" bodyend="235"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a2dd594ca9fc835153aa68ac6d80be61b" compoundref="d5/d35/a00266" startline="264" endline="269">makeScissor</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac0bbe9ceb2468b4d04850f5fdf88acf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkRect2D</type>
        <definition>VkRect2D castor3d::makeScissor</definition>
        <argsstring>(castor::Point2ui const &amp;size)</argsstring>
        <name>makeScissor</name>
        <param>
          <type>castor::Point2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="237" column="1" bodyfile="Castor3DModule.hpp" bodystart="237" bodyend="241"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a2dd594ca9fc835153aa68ac6d80be61b" compoundref="d5/d35/a00266" startline="264" endline="269">makeScissor</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a677de6a2643f78d80e55e85d7ae6ce35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkRect2D</type>
        <definition>VkRect2D castor3d::makeScissor</definition>
        <argsstring>(castor::Coords2i const &amp;pos, castor::Coords2ui const &amp;size)</argsstring>
        <name>makeScissor</name>
        <param>
          <type>castor::Coords2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>castor::Coords2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="243" column="1" bodyfile="Castor3DModule.hpp" bodystart="243" bodyend="248"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" compoundref="d5/d35/a00266" startline="129" endline="136">makeOffset2D</references>
        <references refid="da/d1e/a01479_1a2dd594ca9fc835153aa68ac6d80be61b" compoundref="d5/d35/a00266" startline="264" endline="269">makeScissor</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6b284e772c0c4202ec2de93bd95f0266" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkRect2D</type>
        <definition>VkRect2D castor3d::makeScissor</definition>
        <argsstring>(castor::Point2i const &amp;pos, castor::Coords2ui const &amp;size)</argsstring>
        <name>makeScissor</name>
        <param>
          <type>castor::Point2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>castor::Coords2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="250" column="1" bodyfile="Castor3DModule.hpp" bodystart="250" bodyend="255"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" compoundref="d5/d35/a00266" startline="129" endline="136">makeOffset2D</references>
        <references refid="da/d1e/a01479_1a2dd594ca9fc835153aa68ac6d80be61b" compoundref="d5/d35/a00266" startline="264" endline="269">makeScissor</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a588ce0798add320c22b3c188b95fcd4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkRect2D</type>
        <definition>VkRect2D castor3d::makeScissor</definition>
        <argsstring>(castor::Coords2i const &amp;pos, castor::Point2ui const &amp;size)</argsstring>
        <name>makeScissor</name>
        <param>
          <type>castor::Coords2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>castor::Point2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="257" column="1" bodyfile="Castor3DModule.hpp" bodystart="257" bodyend="262"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" compoundref="d5/d35/a00266" startline="129" endline="136">makeOffset2D</references>
        <references refid="da/d1e/a01479_1a2dd594ca9fc835153aa68ac6d80be61b" compoundref="d5/d35/a00266" startline="264" endline="269">makeScissor</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2dd594ca9fc835153aa68ac6d80be61b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkRect2D</type>
        <definition>VkRect2D castor3d::makeScissor</definition>
        <argsstring>(castor::Point2i const &amp;pos, castor::Point2ui const &amp;size)</argsstring>
        <name>makeScissor</name>
        <param>
          <type>castor::Point2i const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>castor::Point2ui const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="264" column="1" bodyfile="Castor3DModule.hpp" bodystart="264" bodyend="269"/>
        <references refid="da/d1e/a01479_1a55a37a3867840d33ac98bf64d8275fbb" compoundref="d5/d35/a00266" startline="91" endline="98">makeExtent2D</references>
        <references refid="da/d1e/a01479_1a9fb531a8a27e5d1ede4f5dd4f20c6b46" compoundref="d5/d35/a00266" startline="129" endline="136">makeOffset2D</references>
        <referencedby refid="da/d1e/a01479_1a1813549a9ae0f9de5d95c58b2b8b5f25" compoundref="d5/d35/a00266" startline="231" endline="235">makeScissor</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af859e44d88d31d8f44773fc1546bdb81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkClearValue</type>
        <definition>VkClearValue castor3d::makeClearValue</definition>
        <argsstring>(float depth, uint32_t stencil=0u)</argsstring>
        <name>makeClearValue</name>
        <param>
          <type>float</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>stencil</declname>
          <defval>0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="271" column="1" bodyfile="Castor3DModule.hpp" bodystart="271" bodyend="274"/>
        <references refid="da/d1e/a01479_1a9063e0f9661e2e7fbebb9727749e7e28" compoundref="d5/d35/a00266" startline="276" endline="279">makeClearValue</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9063e0f9661e2e7fbebb9727749e7e28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkClearValue</type>
        <definition>VkClearValue castor3d::makeClearValue</definition>
        <argsstring>(float r, float g, float b, float a=1.0f)</argsstring>
        <name>makeClearValue</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>g</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="276" column="1" bodyfile="Castor3DModule.hpp" bodystart="276" bodyend="279"/>
        <referencedby refid="da/d1e/a01479_1af859e44d88d31d8f44773fc1546bdb81" compoundref="d5/d35/a00266" startline="271" endline="274">makeClearValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a698d486826c86842fe6e457bfd9d95e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator&gt;</definition>
        <argsstring>(VkImageSubresourceRange const &amp;lhs, VkImageSubresourceRange const &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="287" column="1" bodyfile="Castor3DModule.hpp" bodystart="287" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a94f23065f41ccddea677b9b77ced97d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator&lt;</definition>
        <argsstring>(VkImageSubresourceRange const &amp;lhs, VkImageSubresourceRange const &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="308" column="1" bodyfile="Castor3DModule.hpp" bodystart="308" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a085be042657430353af558e8985160ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator&lt;=</definition>
        <argsstring>(VkImageSubresourceRange const &amp;lhs, VkImageSubresourceRange const &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="329" column="1" bodyfile="Castor3DModule.hpp" bodystart="329" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae34bcff61596b20fb3f47651df85cf4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator&gt;=</definition>
        <argsstring>(VkImageSubresourceRange const &amp;lhs, VkImageSubresourceRange const &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="335" column="1" bodyfile="Castor3DModule.hpp" bodystart="335" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a79506f8dfeabe9ed7564fdb5285bdb90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator!=</definition>
        <argsstring>(VkImageSubresourceRange const &amp;lhs, VkImageSubresourceRange const &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="341" column="1" bodyfile="Castor3DModule.hpp" bodystart="341" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3efc186cb20d6148d89c83b0a6ee3cfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator==</definition>
        <argsstring>(VkImageSubresourceRange const &amp;lhs, VkImageSubresourceRange const &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3DModule.hpp" line="347" column="1" bodyfile="Castor3DModule.hpp" bodystart="347" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae0dbb9f75d1d34dcf5eb3c6b2b7e99e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="d8/d65/a02528" kindref="compound">CpuFunctorEvent</ref> &gt;</type>
        <definition>std::unique_ptr&lt; CpuFunctorEvent &gt; castor3d::makeCpuCleanupEvent</definition>
        <argsstring>(T &amp;object)</argsstring>
        <name>makeCpuCleanupEvent</name>
        <param>
          <type>T &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Helper function to create a cleanup event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to cleanup </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/CleanupEvent.hpp" line="21" column="1" bodyfile="Event/Frame/CleanupEvent.hpp" bodystart="21" bodyend="28"/>
        <references refid="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870acbc7558471e9ec703d7240df431df7df">ePreRender</references>
        <references refid="da/d1e/a01479_1aa37a2cf8db5d071eeabbdeb5bc0dd505" compoundref="db/dc3/a00284" startline="62" endline="66">makeCpuFunctorEvent</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac7e1239e050fd1300bca47c82bf016b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="d4/db0/a02540" kindref="compound">GpuFunctorEvent</ref> &gt;</type>
        <definition>std::unique_ptr&lt; GpuFunctorEvent &gt; castor3d::makeGpuCleanupEvent</definition>
        <argsstring>(T &amp;object)</argsstring>
        <name>makeGpuCleanupEvent</name>
        <param>
          <type>T &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Helper function to create a cleanup event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to cleanup </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/CleanupEvent.hpp" line="38" column="1" bodyfile="Event/Frame/CleanupEvent.hpp" bodystart="38" bodyend="45"/>
        <references refid="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870acbc7558471e9ec703d7240df431df7df">ePreRender</references>
        <references refid="da/d1e/a01479_1a200b7dae1a9356a994f23ca74876c9aa" compoundref="db/d7b/a00296" startline="68" endline="72">makeGpuFunctorEvent</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa37a2cf8db5d071eeabbdeb5bc0dd505" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="d8/d65/a02528" kindref="compound">CpuFunctorEvent</ref> &gt;</type>
        <definition>std::unique_ptr&lt; CpuFunctorEvent &gt; castor3d::makeCpuFunctorEvent</definition>
        <argsstring>(EventType type, CpuFunctorEvent::Functor functor)</argsstring>
        <name>makeCpuFunctorEvent</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870" kindref="member">EventType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="d8/d65/a02528_1a076a85bf563a18b1df0511ec60ef1944" kindref="member">CpuFunctorEvent::Functor</ref></type>
          <declname>functor</declname>
        </param>
        <briefdescription>
<para>Helper function to create a functor event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">functor</parametername>
</parameternamelist>
<parameterdescription>
<para>The functor to execute </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/CpuFunctorEvent.hpp" line="62" column="1" bodyfile="Event/Frame/CpuFunctorEvent.hpp" bodystart="62" bodyend="66"/>
        <referencedby refid="da/d1e/a01479_1ae0dbb9f75d1d34dcf5eb3c6b2b7e99e6" compoundref="dc/d5d/a00278" startline="21" endline="28">makeCpuCleanupEvent</referencedby>
        <referencedby refid="da/d1e/a01479_1aa3bbd4e0176351da903fc3ea6a06c589" compoundref="df/d95/a00299" startline="21" endline="28">makeCpuInitialiseEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a200b7dae1a9356a994f23ca74876c9aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="d4/db0/a02540" kindref="compound">GpuFunctorEvent</ref> &gt;</type>
        <definition>std::unique_ptr&lt; GpuFunctorEvent &gt; castor3d::makeGpuFunctorEvent</definition>
        <argsstring>(EventType type, GpuFunctorEvent::Functor functor)</argsstring>
        <name>makeGpuFunctorEvent</name>
        <param>
          <type><ref refid="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870" kindref="member">EventType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="d4/db0/a02540_1ac7f8085060b2163a8f581fc2c35287db" kindref="member">GpuFunctorEvent::Functor</ref></type>
          <declname>functor</declname>
        </param>
        <briefdescription>
<para>Helper function to create a functor event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">functor</parametername>
</parameternamelist>
<parameterdescription>
<para>The functor to execute </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/GpuFunctorEvent.hpp" line="68" column="1" bodyfile="Event/Frame/GpuFunctorEvent.hpp" bodystart="68" bodyend="72"/>
        <referencedby refid="da/d1e/a01479_1ac7e1239e050fd1300bca47c82bf016b9" compoundref="dc/d5d/a00278" startline="38" endline="45">makeGpuCleanupEvent</referencedby>
        <referencedby refid="da/d1e/a01479_1a24c96fda137c8c1f352e51a8c3fe8e7f" compoundref="df/d95/a00299" startline="38" endline="45">makeGpuInitialiseEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa3bbd4e0176351da903fc3ea6a06c589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="d8/d65/a02528" kindref="compound">CpuFunctorEvent</ref> &gt;</type>
        <definition>std::unique_ptr&lt; CpuFunctorEvent &gt; castor3d::makeCpuInitialiseEvent</definition>
        <argsstring>(T &amp;object)</argsstring>
        <name>makeCpuInitialiseEvent</name>
        <param>
          <type>T &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Helper function to create an initialise event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to initialise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/InitialiseEvent.hpp" line="21" column="1" bodyfile="Event/Frame/InitialiseEvent.hpp" bodystart="21" bodyend="28"/>
        <references refid="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870acbc7558471e9ec703d7240df431df7df">ePreRender</references>
        <references refid="da/d1e/a01479_1aa37a2cf8db5d071eeabbdeb5bc0dd505" compoundref="db/dc3/a00284" startline="62" endline="66">makeCpuFunctorEvent</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a24c96fda137c8c1f352e51a8c3fe8e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="d4/db0/a02540" kindref="compound">GpuFunctorEvent</ref> &gt;</type>
        <definition>std::unique_ptr&lt; GpuFunctorEvent &gt; castor3d::makeGpuInitialiseEvent</definition>
        <argsstring>(T &amp;object)</argsstring>
        <name>makeGpuInitialiseEvent</name>
        <param>
          <type>T &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Helper function to create an initialise event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to initialise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Event/Frame/InitialiseEvent.hpp" line="38" column="1" bodyfile="Event/Frame/InitialiseEvent.hpp" bodystart="38" bodyend="45"/>
        <references refid="da/d1e/a01479_1ad442bf3c1ba8a06ac36f710ba30b2870acbc7558471e9ec703d7240df431df7df">ePreRender</references>
        <references refid="da/d1e/a01479_1a200b7dae1a9356a994f23ca74876c9aa" compoundref="db/d7b/a00296" startline="68" endline="72">makeGpuFunctorEvent</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9e1364644b62e1efc43fcd538c1c18e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SamplerSPtr</type>
        <definition>SamplerSPtr castor3d::createSampler</definition>
        <argsstring>(Engine &amp;engine, castor::String const &amp;baseName, VkFilter filter, VkImageSubresourceRange const *range)</argsstring>
        <name>createSampler</name>
        <param>
          <type><ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>baseName</declname>
        </param>
        <param>
          <type>VkFilter</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange const *</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/Sampler.hpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a31b8712a8a3b3cd479b3c096daf47692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="da/d1e/a01479_1a3b9e457486b668463148ebc06850f3ac" kindref="member">TextureFlags</ref></type>
        <definition>C3D_API TextureFlags castor3d::getFlags</definition>
        <argsstring>(TextureConfiguration const &amp;config)</argsstring>
        <name>getFlags</name>
        <param>
          <type><ref refid="dd/d32/a02636" kindref="compound">TextureConfiguration</ref> const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureConfiguration.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a49bde8be80f67b57781cf396651c2719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> TextureLayoutSPtr</type>
        <definition>C3D_API TextureLayoutSPtr castor3d::createTextureLayout</definition>
        <argsstring>(Engine const &amp;engine, castor::Path const &amp;relative, castor::Path const &amp;folder)</argsstring>
        <name>createTextureLayout</name>
        <param>
          <type><ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> const &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae775e7c600a382ba6ed3e651e5c84438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> TextureLayoutSPtr</type>
        <definition>C3D_API TextureLayoutSPtr castor3d::createTextureLayout</definition>
        <argsstring>(Engine const &amp;engine, castor::String const &amp;name, castor::PxBufferBaseUPtr buffer, bool isStatic=false)</argsstring>
        <name>createTextureLayout</name>
        <param>
          <type><ref refid="dc/dbb/a02520" kindref="compound">Engine</ref> const &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a320c0bae9dcfad25c32cde3aeb74d28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::getMipLevels</definition>
        <argsstring>(VkExtent3D const &amp;extent)</argsstring>
        <name>getMipLevels</name>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="175" column="1"/>
        <referencedby refid="dc/de4/a04252_1aeed340f667006bcc6998c5da50b235f5" compoundref="dc/df2/a00656" startline="71" endline="98">castor3d::GBufferBase::doCreateTextures</referencedby>
        <referencedby refid="da/d1e/a01479_1ad2b4b474cbbf3a57807e60a854e9809b" compoundref="dc/de4/a00677" startline="50" endline="55">getMipLevels</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a932b6582f5ddd0b25114f67f97d8bbaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::ImagePtr</type>
        <definition>ashes::ImagePtr castor3d::makeImage</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::ImageCreateInfo createInfo, VkMemoryPropertyFlags flags, std::string const &amp;name)</argsstring>
        <name>makeImage</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::ImageCreateInfo</type>
          <declname>createInfo</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="755" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="755" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af75710db2764d5232b847257aef455eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ResT</type>
          </param>
        </templateparamlist>
        <type>ashes::DeviceMemoryPtr</type>
        <definition>ashes::DeviceMemoryPtr castor3d::setupMemory</definition>
        <argsstring>(ashes::Device const &amp;device, ResT &amp;resource, VkMemoryPropertyFlags flags, std::string const &amp;name)</argsstring>
        <name>setupMemory</name>
        <param>
          <type>ashes::Device const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ResT &amp;</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/DebugName.hpp" line="16" column="1" bodyfile="Miscellaneous/DebugName.hpp" bodystart="16" bodyend="25"/>
        <referencedby refid="da/d1e/a01479_1ae0f7ab490cf98e3a48622088692ad97b" compoundref="d4/d13/a00377" startline="28" endline="34">setupMemory</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae0f7ab490cf98e3a48622088692ad97b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ResT</type>
          </param>
        </templateparamlist>
        <type>ashes::DeviceMemoryPtr</type>
        <definition>ashes::DeviceMemoryPtr castor3d::setupMemory</definition>
        <argsstring>(RenderDevice const &amp;device, ResT &amp;resource, VkMemoryPropertyFlags flags, std::string const &amp;name)</argsstring>
        <name>setupMemory</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ResT &amp;</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/DebugName.hpp" line="28" column="1" bodyfile="Miscellaneous/DebugName.hpp" bodystart="28" bodyend="34"/>
        <references refid="da/d1e/a01479_1af75710db2764d5232b847257aef455eb" compoundref="d4/d13/a00377" startline="16" endline="25">setupMemory</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8e4c63058a16f4334bb4a04175a01327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::ostream &amp;</type>
        <definition>C3D_API std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, GpuInformations const &amp;object)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="df/d97/a02676" kindref="compound">GpuInformations</ref> const &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Output stream operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to put in the stream. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The stream. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/GpuInformations.hpp" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adb5d7b3b5cbe53cbc1a449f24e4a6849" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VkType</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type>VkType</type>
        <definition>VkType castor3d::makeVkType</definition>
        <argsstring>(Params &amp;&amp;... params)</argsstring>
        <name>makeVkType</name>
        <param>
          <type>Params &amp;&amp;...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/makeVkType.hpp" line="369" column="1" bodyfile="Miscellaneous/makeVkType.hpp" bodystart="369" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af9f9c1d5ddde100112d68b00fb102917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator==</definition>
        <argsstring>(castor3d::Version const &amp;a, castor3d::Version const &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The versions to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if one version number is different from a to b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3faf74621e2270f94015218fd299d7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator!=</definition>
        <argsstring>(castor3d::Version const &amp;a, castor3d::Version const &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Difference operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The versions to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if one version number is different from a to b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a037718cd745bbb905d11f9a37f1143b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator&lt;</definition>
        <argsstring>(castor3d::Version const &amp;a, castor3d::Version const &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Less than operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The versions to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if a.major is less than b.major or if they are equal and a.minor is less than b.minor or if majors and minors are equal and a.build is less than b.build. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a39e8b09492d758e5c77b87c2d9b17258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator&gt;</definition>
        <argsstring>(castor3d::Version const &amp;a, castor3d::Version const &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Less than operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The versions to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if a.major is greater than b.major or if they are equal and a.minor is greater than b.minor or if majors and minors are equal and a.build is greater than b.build. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6669ada30d3cac25b2aea45fe2458f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator&lt;=</definition>
        <argsstring>(castor3d::Version const &amp;a, castor3d::Version const &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Less than operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The versions to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if a.major is greater than b.major or if they are equal and a.minor is greater than b.minor or if majors and minors are equal and a.build is greater than b.build. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a8dad1d61164648c01482656969a0a648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator&gt;=</definition>
        <argsstring>(castor3d::Version const &amp;a, castor3d::Version const &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Less than operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The versions to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if a.major is less than b.major or if they are equal and a.minor is less than b.minor or if majors and minors are equal and a.build is less than b.build. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae88b4100437087184c1ac5805dc02dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::ostream &amp;</type>
        <definition>C3D_API std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, castor3d::Version const &amp;version)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9d0081c1151d61b7304b55151d67ae19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::wostream &amp;</type>
        <definition>C3D_API std::wostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::wostream &amp;stream, castor3d::Version const &amp;version)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::wostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a141dfe0d59ff19cfc46611bf3afb100f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String &amp;</type>
        <definition>C3D_API castor::String&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(castor::String &amp;stream, castor3d::Version const &amp;version)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>castor::String &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="de/de6/a03848" kindref="compound">castor3d::Version</ref> const &amp;</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Version.hpp" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae6bc77a62618576a9ab11baab2a6b889" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, Cone const &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="d0/de0/a03868" kindref="compound">Cone</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/Cone.hpp" line="49" column="1" bodyfile="Model/Mesh/Generator/Cone.hpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a59eebb4837f96335aba984fb1e63ea9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, Cube const &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="d0/d84/a03872" kindref="compound">Cube</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/Cube.hpp" line="46" column="1" bodyfile="Model/Mesh/Generator/Cube.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6beece10d05a28b4edfb9c0536ac1368" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, Cylinder const &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="d4/dfc/a03876" kindref="compound">Cylinder</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/Cylinder.hpp" line="46" column="1" bodyfile="Model/Mesh/Generator/Cylinder.hpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1adf90690c0a2cca5d0a69d97dcee4ad9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, Icosahedron const &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="df/d0d/a03880" kindref="compound">Icosahedron</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/Icosahedron.hpp" line="45" column="1" bodyfile="Model/Mesh/Generator/Icosahedron.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af8bb330d2459eec4cd50e988896cd14d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, Plane const &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="d6/db7/a03884" kindref="compound">Plane</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/Plane.hpp" line="47" column="1" bodyfile="Model/Mesh/Generator/Plane.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a491ce99a26a034a6de24c98090989fa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, Projection const &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="d6/d74/a03888" kindref="compound">Projection</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/Projection.hpp" line="63" column="1" bodyfile="Model/Mesh/Generator/Projection.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af5fc7954ba8a013cc3cc49ed96aca8aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; castor3d::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, Sphere const &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="db/dc1/a03892" kindref="compound">Sphere</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Model/Mesh/Generator/Sphere.hpp" line="44" column="1" bodyfile="Model/Mesh/Generator/Sphere.hpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aeee178504652f6acb2143eb8f72ba78b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t castor3d::hash</definition>
        <argsstring>(CulledSubmesh const &amp;culled)</argsstring>
        <name>hash</name>
        <param>
          <type><ref refid="d0/d39/a04224" kindref="compound">CulledSubmesh</ref> const &amp;</type>
          <declname>culled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/SceneCuller.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad4f5d4ffc92510637502441069066fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t castor3d::hash</definition>
        <argsstring>(CulledSubmesh const &amp;culled, uint32_t instanceMult)</argsstring>
        <name>hash</name>
        <param>
          <type><ref refid="d0/d39/a04224" kindref="compound">CulledSubmesh</ref> const &amp;</type>
          <declname>culled</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/SceneCuller.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a46a4f9b3a6c5d884cf1f025ad4305e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::isVisible</definition>
        <argsstring>(Camera const &amp;camera, CulledSubmesh const &amp;node)</argsstring>
        <name>isVisible</name>
        <param>
          <type><ref refid="d5/d9c/a05152" kindref="compound">Camera</ref> const &amp;</type>
          <declname>camera</declname>
        </param>
        <param>
          <type><ref refid="d0/d39/a04224" kindref="compound">CulledSubmesh</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/SceneCuller.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac816b582b7d1641d305cbd20fdc3a9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::isVisible</definition>
        <argsstring>(Frustum const &amp;frustum, CulledSubmesh const &amp;node)</argsstring>
        <name>isVisible</name>
        <param>
          <type><ref refid="d7/d04/a04248" kindref="compound">Frustum</ref> const &amp;</type>
          <declname>frustum</declname>
        </param>
        <param>
          <type><ref refid="d0/d39/a04224" kindref="compound">CulledSubmesh</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/SceneCuller.hpp" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afc52069baddc9a6156f3e6038bf2d136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t castor3d::hash</definition>
        <argsstring>(CulledBillboard const &amp;culled)</argsstring>
        <name>hash</name>
        <param>
          <type><ref refid="d4/d29/a04228" kindref="compound">CulledBillboard</ref> const &amp;</type>
          <declname>culled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/SceneCuller.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a336a1b95d393478d7937a994408a9613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t castor3d::hash</definition>
        <argsstring>(CulledBillboard const &amp;culled, uint32_t instanceMult)</argsstring>
        <name>hash</name>
        <param>
          <type><ref refid="d4/d29/a04228" kindref="compound">CulledBillboard</ref> const &amp;</type>
          <declname>culled</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceMult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/SceneCuller.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac760efe5752ed069994543a31ba6fd7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::isVisible</definition>
        <argsstring>(Camera const &amp;camera, CulledBillboard const &amp;node)</argsstring>
        <name>isVisible</name>
        <param>
          <type><ref refid="d5/d9c/a05152" kindref="compound">Camera</ref> const &amp;</type>
          <declname>camera</declname>
        </param>
        <param>
          <type><ref refid="d4/d29/a04228" kindref="compound">CulledBillboard</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/SceneCuller.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae69f149e096780564b68ca40dbb7d14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::isVisible</definition>
        <argsstring>(Frustum const &amp;frustum, CulledBillboard const &amp;node)</argsstring>
        <name>isVisible</name>
        <param>
          <type><ref refid="d7/d04/a04248" kindref="compound">Frustum</ref> const &amp;</type>
          <declname>frustum</declname>
        </param>
        <param>
          <type><ref refid="d4/d29/a04228" kindref="compound">CulledBillboard</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Culling/SceneCuller.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2b5086284746736326aba01502e86ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NodeType</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; <ref refid="de/d12/a04308" kindref="compound">DistanceRenderNodeBase</ref> &gt;</type>
        <definition>std::unique_ptr&lt; DistanceRenderNodeBase &gt; castor3d::makeDistanceNode</definition>
        <argsstring>(NodeType &amp;node)</argsstring>
        <name>makeDistanceNode</name>
        <param>
          <type>NodeType &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/DistanceRenderNode.hpp" line="114" column="1" bodyfile="Render/Node/DistanceRenderNode.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a09c3795aa84993b0fe1d6395d0efa518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMultimap</definition>
        <argsstring>(double, StaticRenderNode *, StaticRenderNodePtrByDistance)</argsstring>
        <name>CU_DeclareMultimap</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="d5/dad/a04360" kindref="compound">StaticRenderNode</ref> *</type>
        </param>
        <param>
          <type>StaticRenderNodePtrByDistance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae829a1b86b68abfc6f8cf1720b4c25a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMultimap</definition>
        <argsstring>(double, SkinningRenderNode *, SkinningRenderNodePtrByDistance)</argsstring>
        <name>CU_DeclareMultimap</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="db/d20/a04356" kindref="compound">SkinningRenderNode</ref> *</type>
        </param>
        <param>
          <type>SkinningRenderNodePtrByDistance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a20af5681caa9c06502d483b8544b20ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMultimap</definition>
        <argsstring>(double, MorphingRenderNode *, MorphingRenderNodePtrByDistance)</argsstring>
        <name>CU_DeclareMultimap</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="de/d38/a04316" kindref="compound">MorphingRenderNode</ref> *</type>
        </param>
        <param>
          <type>MorphingRenderNodePtrByDistance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7847f5e0a7276ba9c02c688704bc6c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMultimap</definition>
        <argsstring>(double, BillboardRenderNode *, BillboardRenderNodePtrByDistance)</argsstring>
        <name>CU_DeclareMultimap</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="dd/deb/a04304" kindref="compound">BillboardRenderNode</ref> *</type>
        </param>
        <param>
          <type>BillboardRenderNodePtrByDistance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7d769250a6d645cfddc51ac649da6cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(StaticRenderNode *, StaticRenderNodePtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="d5/dad/a04360" kindref="compound">StaticRenderNode</ref> *</type>
        </param>
        <param>
          <type>StaticRenderNodePtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afe7d73b5a30670386ebe17e0b0ecb8e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(SkinningRenderNode *, SkinningRenderNodePtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="db/d20/a04356" kindref="compound">SkinningRenderNode</ref> *</type>
        </param>
        <param>
          <type>SkinningRenderNodePtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9a6620ab251f33faaea012da5d903fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(MorphingRenderNode *, MorphingRenderNodePtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="de/d38/a04316" kindref="compound">MorphingRenderNode</ref> *</type>
        </param>
        <param>
          <type>MorphingRenderNodePtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a306952d62f8300961e27c53a5caec782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareVector</definition>
        <argsstring>(BillboardRenderNode *, BillboardRenderNodePtr)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type><ref refid="dd/deb/a04304" kindref="compound">BillboardRenderNode</ref> *</type>
        </param>
        <param>
          <type>BillboardRenderNodePtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0784fe4242169c05f3be4903d0091eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, StaticRenderNodePtrArray, StaticRenderNodesPtrByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>StaticRenderNodePtrArray</type>
        </param>
        <param>
          <type>StaticRenderNodesPtrByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a09601d4d017ed2689389eb93ba0c9069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, SkinningRenderNodePtrArray, SkinningRenderNodesPtrByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>SkinningRenderNodePtrArray</type>
        </param>
        <param>
          <type>SkinningRenderNodesPtrByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aa70eebcda2b5024d28dfe74b25fdc869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, MorphingRenderNodePtrArray, MorphingRenderNodesPtrByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>MorphingRenderNodePtrArray</type>
        </param>
        <param>
          <type>MorphingRenderNodesPtrByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7b92332912950a21376b8bbaeb7f53cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, BillboardRenderNodePtrArray, BillboardRenderNodesPtrByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>BillboardRenderNodePtrArray</type>
        </param>
        <param>
          <type>BillboardRenderNodesPtrByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4bb4db7d2e1fa7bd2f5179a861e54eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(SubmeshRPtr, StaticRenderNodePtrArray, SubmeshStaticRenderNodesPtr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>SubmeshRPtr</type>
        </param>
        <param>
          <type>StaticRenderNodePtrArray</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1acd6a097b8f4163b421fe176e2a47843d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(SubmeshRPtr, SkinningRenderNodePtrArray, SubmeshSkinningRenderNodesPtr)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>SubmeshRPtr</type>
        </param>
        <param>
          <type>SkinningRenderNodePtrArray</type>
        </param>
        <param>
          <type>SubmeshSkinningRenderNodesPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac078bb8a2c84f135408dac71f7ae5c1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(PassRPtr, SubmeshStaticRenderNodesPtrMap, SubmeshStaticRenderNodesPtrByPass)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>PassRPtr</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesPtrMap</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesPtrByPass</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af02a173f6303916f423af80d2817c5a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(PassRPtr, SubmeshSkinningRenderNodesPtrMap, SubmeshSkinninRenderNodesPtrByPass)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>PassRPtr</type>
        </param>
        <param>
          <type>SubmeshSkinningRenderNodesPtrMap</type>
        </param>
        <param>
          <type>SubmeshSkinninRenderNodesPtrByPass</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a00b7120451973f3fe294fb929cd8e846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, SubmeshStaticRenderNodesPtrByPassMap, SubmeshStaticRenderNodesPtrByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesPtrByPassMap</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesPtrByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a3691eb8bbb35ea172164d06c94c50add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, SubmeshSkinninRenderNodesPtrByPassMap, SubmeshSkinningRenderNodesPtrByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>SubmeshSkinninRenderNodesPtrByPassMap</type>
        </param>
        <param>
          <type>SubmeshSkinningRenderNodesPtrByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a6a005f81ef6065b158b333712679b4c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMultimap</definition>
        <argsstring>(double, StaticRenderNode, StaticRenderNodeByDistance)</argsstring>
        <name>CU_DeclareMultimap</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="d5/dad/a04360" kindref="compound">StaticRenderNode</ref></type>
        </param>
        <param>
          <type>StaticRenderNodeByDistance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a172403c81e4818fe7ee1442be9f7deed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMultimap</definition>
        <argsstring>(double, SkinningRenderNode, SkinningRenderNodeByDistance)</argsstring>
        <name>CU_DeclareMultimap</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="db/d20/a04356" kindref="compound">SkinningRenderNode</ref></type>
        </param>
        <param>
          <type>SkinningRenderNodeByDistance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a18169599f97e469c5a4d71a86792bbb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMultimap</definition>
        <argsstring>(double, MorphingRenderNode, MorphingRenderNodeByDistance)</argsstring>
        <name>CU_DeclareMultimap</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="de/d38/a04316" kindref="compound">MorphingRenderNode</ref></type>
        </param>
        <param>
          <type>MorphingRenderNodeByDistance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7f910172200dd2204e6d8101a4fe9a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMultimap</definition>
        <argsstring>(double, BillboardRenderNode, BillboardRenderNodeByDistance)</argsstring>
        <name>CU_DeclareMultimap</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="dd/deb/a04304" kindref="compound">BillboardRenderNode</ref></type>
        </param>
        <param>
          <type>BillboardRenderNodeByDistance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a92fd8759eeb5a56509536172414ce406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(CulledSubmesh const *, StaticRenderNode, StaticRenderNode)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type><ref refid="d0/d39/a04224" kindref="compound">CulledSubmesh</ref> const *</type>
        </param>
        <param>
          <type><ref refid="d5/dad/a04360" kindref="compound">StaticRenderNode</ref></type>
        </param>
        <param>
          <type><ref refid="d5/dad/a04360" kindref="compound">StaticRenderNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a85d22efcff0b2fbdc3b51c9009163d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(CulledSubmesh const *, SkinningRenderNode, SkinningRenderNode)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type><ref refid="d0/d39/a04224" kindref="compound">CulledSubmesh</ref> const *</type>
        </param>
        <param>
          <type><ref refid="db/d20/a04356" kindref="compound">SkinningRenderNode</ref></type>
        </param>
        <param>
          <type><ref refid="db/d20/a04356" kindref="compound">SkinningRenderNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aaae3830983b9a1766e0e56f8805af1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(CulledSubmesh const *, MorphingRenderNode, MorphingRenderNode)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type><ref refid="d0/d39/a04224" kindref="compound">CulledSubmesh</ref> const *</type>
        </param>
        <param>
          <type><ref refid="de/d38/a04316" kindref="compound">MorphingRenderNode</ref></type>
        </param>
        <param>
          <type><ref refid="de/d38/a04316" kindref="compound">MorphingRenderNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4e70af5d5f6b3ff1de92b547da0284ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(CulledBillboard const *, BillboardRenderNode, BillboardRenderNode)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type><ref refid="d4/d29/a04228" kindref="compound">CulledBillboard</ref> const *</type>
        </param>
        <param>
          <type><ref refid="dd/deb/a04304" kindref="compound">BillboardRenderNode</ref></type>
        </param>
        <param>
          <type><ref refid="dd/deb/a04304" kindref="compound">BillboardRenderNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aab48129f53d46353cd738dfee4f9a6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, StaticRenderNodeMap, StaticRenderNodesByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>StaticRenderNodeMap</type>
        </param>
        <param>
          <type>StaticRenderNodesByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac78315fe3bcc3cabef6d1493524a217d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, SkinningRenderNodeMap, SkinningRenderNodesByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>SkinningRenderNodeMap</type>
        </param>
        <param>
          <type>SkinningRenderNodesByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7210dceef47d8e5f7625fa994be4dd39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, MorphingRenderNodeMap, MorphingRenderNodesByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>MorphingRenderNodeMap</type>
        </param>
        <param>
          <type>MorphingRenderNodesByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a1bc0346f9723d4ea0eb67d1157ac0b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, BillboardRenderNodeMap, BillboardRenderNodesByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>BillboardRenderNodeMap</type>
        </param>
        <param>
          <type>BillboardRenderNodesByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a47acb5cf92a8ec0a7d4a2c09b777498c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(SubmeshRPtr, StaticRenderNodeMap, SubmeshStaticRenderNodes)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>SubmeshRPtr</type>
        </param>
        <param>
          <type>StaticRenderNodeMap</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1aaefaa75e50bf6b4a20c57ea072fe96eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(SubmeshRPtr, SkinningRenderNodeMap, SubmeshSkinningRenderNodes)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>SubmeshRPtr</type>
        </param>
        <param>
          <type>SkinningRenderNodeMap</type>
        </param>
        <param>
          <type>SubmeshSkinningRenderNodes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ac6758ef159a2088a4a82fa6eabf43577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(PassRPtr, SubmeshStaticRenderNodesMap, SubmeshStaticRenderNodesByPass)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>PassRPtr</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesMap</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesByPass</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1affaa5caa8ffdb01f87e4c059f6b4a45a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(PassRPtr, SubmeshSkinningRenderNodesMap, SubmeshSkinninRenderNodesByPass)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>PassRPtr</type>
        </param>
        <param>
          <type>SubmeshSkinningRenderNodesMap</type>
        </param>
        <param>
          <type>SubmeshSkinninRenderNodesByPass</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2abe9c8766fdd283383f55fe8b16ecfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, SubmeshStaticRenderNodesByPassMap, SubmeshStaticRenderNodesByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesByPassMap</type>
        </param>
        <param>
          <type>SubmeshStaticRenderNodesByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a9bb9171dd8bf60443e7b5d74e734da17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::CU_DeclareMap</definition>
        <argsstring>(RenderPipelineRPtr, SubmeshSkinninRenderNodesByPassMap, SubmeshSkinningRenderNodesByPipeline)</argsstring>
        <name>CU_DeclareMap</name>
        <param>
          <type>RenderPipelineRPtr</type>
        </param>
        <param>
          <type>SubmeshSkinninRenderNodesByPassMap</type>
        </param>
        <param>
          <type>SubmeshSkinningRenderNodesByPipeline</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/RenderNode.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ae43b18256910077a939fa6e48151d1b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator==</definition>
        <argsstring>(DirectionalLightCascade const &amp;lhs, DirectionalLightCascade const &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="d9/dab/a05164" kindref="compound">DirectionalLightCascade</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="d9/dab/a05164" kindref="compound">DirectionalLightCascade</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/DirectionalLight.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a7554a19318cfa00c51a99e28f405fee4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator!=</definition>
        <argsstring>(DirectionalLightCascade const &amp;lhs, DirectionalLightCascade const &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="d9/dab/a05164" kindref="compound">DirectionalLightCascade</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="d9/dab/a05164" kindref="compound">DirectionalLightCascade</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/DirectionalLight.hpp" line="24" column="1" bodyfile="Scene/Light/DirectionalLight.hpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1af145720a0b2c8ccbcc74c2a00c0c8f31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkDeviceSize</type>
        <definition>VkDeviceSize castor3d::getSize</definition>
        <argsstring>(ParticleFormat format)</argsstring>
        <name>getSize</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250" kindref="member">ParticleFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle format. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The data size for this particle format. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleDeclaration.hpp" line="23" column="1" bodyfile="Scene/ParticleSystem/ParticleDeclaration.hpp" bodystart="23" bodyend="58"/>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a9b9526f83cc144a1ee8dfa49d1c45863">eFloat</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250ab811883d0eea431e27438596857a9e86">eInt</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a71ad272bb2bb0f21e6ce4ac81d748339">eMat2f</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a2970e603064cd2b07e53a6397c374b5a">eMat3f</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a4e5f6d3499db3eec2e24762c4c30f1c0">eMat4f</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250aca13c76c9c197a095618d5b32eea2b02">eUInt</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a910762e1f93aad6cc1c8009c4830d72c">eVec2f</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a249395ba5533750007ce9aeb02568236">eVec2i</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250ad404a2be7a6134318da5d4359ddbce5e">eVec2ui</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a5fda82c7587913cec9522f0305aa5de7">eVec3f</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a341f1d3999612c66e19dfe12ca93732f">eVec3i</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a4ff20c4a8da57637f7de9d1ce3798941">eVec3ui</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250aa81e9d0c1658f7a130fc2174bb154433">eVec4f</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250a05854348b7e374f2235703f464b19dd2">eVec4i</references>
        <references refid="da/d1e/a01479_1a4fdd8bd8042f3a3ae81042067e1ac250acfcc389c2c7a1c58d39d61a6596124da">eVec4ui</references>
        <referencedby refid="d4/d61/a05212_1ae9fa2c33110f50fdd3c3875d87508624" compoundref="db/d17/a01148" startline="201" endline="205">castor3d::ParticleDeclaration::emplace_back</referencedby>
        <referencedby refid="d4/d61/a05212_1aa0b424404ccc18558bcbd1983dc9810c" compoundref="db/d17/a01148" startline="187" endline="191">castor3d::ParticleDeclaration::push_back</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0b3f2e15d724b8139c1245af4ff5291d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator==</definition>
        <argsstring>(ParticleDeclaration const &amp;lhs, ParticleDeclaration const &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="d4/d61/a05212" kindref="compound">ParticleDeclaration</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="d4/d61/a05212" kindref="compound">ParticleDeclaration</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lhs</parametername>
<parametername direction="in">rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The 2 objects to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleDeclaration.hpp" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2e3db8143a3384316011ea641605e43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::operator!=</definition>
        <argsstring>(ParticleDeclaration const &amp;lhs, ParticleDeclaration const &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="d4/d61/a05212" kindref="compound">ParticleDeclaration</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="d4/d61/a05212" kindref="compound">ParticleDeclaration</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lhs</parametername>
<parametername direction="in">rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The 2 objects to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleDeclaration.hpp" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ad8bc5aa3ee1f0b471e537817aede563a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator==</definition>
        <argsstring>(ParticleElementDeclaration const &amp;lhs, ParticleElementDeclaration const &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="df/d2e/a05216" kindref="compound">ParticleElementDeclaration</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="df/d2e/a05216" kindref="compound">ParticleElementDeclaration</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lhs</parametername>
<parametername direction="in">rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The 2 objects to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleElementDeclaration.hpp" line="67" column="1" bodyfile="Scene/ParticleSystem/ParticleElementDeclaration.hpp" bodystart="67" bodyend="74"/>
        <references refid="df/d2e/a05216_1ac91b50b324cc8986e482250e383655ad" compoundref="de/df1/a01151" startline="51">castor3d::ParticleElementDeclaration::m_dataType</references>
        <references refid="df/d2e/a05216_1a5aa9795c1ceaaeeeda9808e57ca017eb" compoundref="de/df1/a01151" startline="57">castor3d::ParticleElementDeclaration::m_divisor</references>
        <references refid="df/d2e/a05216_1ad48a43be5c97ce61e08322ecc9486cf5" compoundref="de/df1/a01151" startline="45">castor3d::ParticleElementDeclaration::m_name</references>
        <references refid="df/d2e/a05216_1aad5b25bb08bf45909da03dd1e74fece4" compoundref="de/df1/a01151" startline="54">castor3d::ParticleElementDeclaration::m_offset</references>
        <references refid="df/d2e/a05216_1aa857460b42e9639d688ab83f64ade880" compoundref="de/df1/a01151" startline="48">castor3d::ParticleElementDeclaration::m_usages</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a4f9731a2af40fa7e66ea720feb6838cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::operator!=</definition>
        <argsstring>(ParticleElementDeclaration const &amp;lhs, ParticleElementDeclaration const &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="df/d2e/a05216" kindref="compound">ParticleElementDeclaration</ref> const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="df/d2e/a05216" kindref="compound">ParticleElementDeclaration</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lhs</parametername>
<parametername direction="in">rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The 2 objects to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/ParticleSystem/ParticleElementDeclaration.hpp" line="83" column="1" bodyfile="Scene/ParticleSystem/ParticleElementDeclaration.hpp" bodystart="83" bodyend="90"/>
        <references refid="df/d2e/a05216_1ac91b50b324cc8986e482250e383655ad" compoundref="de/df1/a01151" startline="51">castor3d::ParticleElementDeclaration::m_dataType</references>
        <references refid="df/d2e/a05216_1a5aa9795c1ceaaeeeda9808e57ca017eb" compoundref="de/df1/a01151" startline="57">castor3d::ParticleElementDeclaration::m_divisor</references>
        <references refid="df/d2e/a05216_1ad48a43be5c97ce61e08322ecc9486cf5" compoundref="de/df1/a01151" startline="45">castor3d::ParticleElementDeclaration::m_name</references>
        <references refid="df/d2e/a05216_1aad5b25bb08bf45909da03dd1e74fece4" compoundref="de/df1/a01151" startline="54">castor3d::ParticleElementDeclaration::m_offset</references>
        <references refid="df/d2e/a05216_1aa857460b42e9639d688ab83f64ade880" compoundref="de/df1/a01151" startline="48">castor3d::ParticleElementDeclaration::m_usages</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a5134090054bcd7276fc1726bac7fbe73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::initialiseGlslang</definition>
        <argsstring>()</argsstring>
        <name>initialiseGlslang</name>
        <briefdescription>
<para>Initialises glslang globals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/GlslToSpv.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a0ffe25b370204d542b8431bab6a63c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::cleanupGlslang</definition>
        <argsstring>()</argsstring>
        <name>cleanupGlslang</name>
        <briefdescription>
<para>Cleans up glslang globals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/GlslToSpv.hpp" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a73769c804659afef144b69cccbeb6fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> UInt32Array</type>
        <definition>C3D_API UInt32Array castor3d::compileGlslToSpv</definition>
        <argsstring>(RenderDevice const &amp;device, VkShaderStageFlagBits stage, std::string const &amp;shader)</argsstring>
        <name>compileGlslToSpv</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkShaderStageFlagBits</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
<para>Transpiles a GLSL shader to SPIR-V. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stage</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader stage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shader</parametername>
</parameternamelist>
<parameterdescription>
<para>The GLSL shader. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/GlslToSpv.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a2ec4389d88f2ec06fb4791572e60aec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d8/df6/a05316" kindref="compound">SpirVShader</ref></type>
        <definition>C3D_API SpirVShader castor3d::compileShader</definition>
        <argsstring>(RenderDevice const &amp;device, ShaderModule const &amp;module)</argsstring>
        <name>compileShader</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d7/d32/a05312" kindref="compound">ShaderModule</ref> const &amp;</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Program.hpp" line="238" column="1"/>
        <referencedby refid="da/d1e/a01479_1a41e04fd31882d7775cfdab91367bd7c3" compoundref="d9/d31/a01208" startline="262" endline="273">makeShaderState</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1afd1668b2a3f01118d357d63134781e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d8/df6/a05316" kindref="compound">SpirVShader</ref></type>
        <definition>C3D_API SpirVShader castor3d::compileShader</definition>
        <argsstring>(RenderSystem const &amp;renderSystem, ShaderModule const &amp;module)</argsstring>
        <name>compileShader</name>
        <param>
          <type><ref refid="d9/d38/a04624" kindref="compound">RenderSystem</ref> const &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type><ref refid="d7/d32/a05312" kindref="compound">ShaderModule</ref> const &amp;</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Program.hpp" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1abdd887e9655c5efc778c7921523d39c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::PipelineShaderStageCreateInfo</type>
        <definition>ashes::PipelineShaderStageCreateInfo castor3d::makeShaderState</definition>
        <argsstring>(RenderDevice const &amp;device, VkShaderStageFlagBits stage, SpirVShader code, std::string const &amp;name, std::string mainFuncName=&quot;main&quot;, ashes::Optional&lt; ashes::SpecializationInfo &gt; specialization=ashes::nullopt)</argsstring>
        <name>makeShaderState</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkShaderStageFlagBits</type>
          <declname>stage</declname>
        </param>
        <param>
          <type><ref refid="d8/df6/a05316" kindref="compound">SpirVShader</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>mainFuncName</declname>
          <defval>&quot;main&quot;</defval>
        </param>
        <param>
          <type>ashes::Optional&lt; ashes::SpecializationInfo &gt;</type>
          <declname>specialization</declname>
          <defval>ashes::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Program.hpp" line="243" column="1" bodyfile="Shader/Program.hpp" bodystart="243" bodyend="260"/>
        <references refid="da/d1e/a01479_1a5691da845a89609231c90071fccdfc20">getName</references>
        <references refid="d8/df6/a05316_1aa9154c5d764c20f2d45b6161ac65159a" compoundref="d5/d32/a01214" startline="61">castor3d::SpirVShader::spirv</references>
        <referencedby refid="da/d1e/a01479_1a41e04fd31882d7775cfdab91367bd7c3" compoundref="d9/d31/a01208" startline="262" endline="273">makeShaderState</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1a41e04fd31882d7775cfdab91367bd7c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::PipelineShaderStageCreateInfo</type>
        <definition>ashes::PipelineShaderStageCreateInfo castor3d::makeShaderState</definition>
        <argsstring>(RenderDevice const &amp;device, ShaderModule const &amp;shaderModule, std::string mainFuncName=&quot;main&quot;, ashes::Optional&lt; ashes::SpecializationInfo &gt; specialization=ashes::nullopt)</argsstring>
        <name>makeShaderState</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d7/d32/a05312" kindref="compound">ShaderModule</ref> const &amp;</type>
          <declname>shaderModule</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>mainFuncName</declname>
          <defval>&quot;main&quot;</defval>
        </param>
        <param>
          <type>ashes::Optional&lt; ashes::SpecializationInfo &gt;</type>
          <declname>specialization</declname>
          <defval>ashes::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Program.hpp" line="262" column="1" bodyfile="Shader/Program.hpp" bodystart="262" bodyend="273"/>
        <references refid="da/d1e/a01479_1a2ec4389d88f2ec06fb4791572e60aec6">compileShader</references>
        <references refid="da/d1e/a01479_1abdd887e9655c5efc778c7921523d39c5" compoundref="d9/d31/a01208" startline="243" endline="260">makeShaderState</references>
        <references refid="d7/d32/a05312_1abcb1dc7987193f9c3a6d35823ee0a81b" compoundref="d5/d32/a01214" startline="47">castor3d::ShaderModule::name</references>
        <references refid="d7/d32/a05312_1a428803e0813e289a4e34b54e7f46be94" compoundref="d5/d32/a01214" startline="46">castor3d::ShaderModule::stage</references>
      </memberdef>
      <memberdef kind="function" id="da/d1e/a01479_1ace43c67ac4b66f43c6dace94de70e4d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::cpuUpdate</definition>
        <argsstring>(UniformBufferOffsetT&lt; ModelInstancesUboConfiguration &gt; &amp;buffer, UInt32Array const &amp;instances)</argsstring>
        <name>cpuUpdate</name>
        <param>
          <type><ref refid="d1/d47/a02300" kindref="compound">UniformBufferOffsetT</ref>&lt; <ref refid="d4/d33/a05580" kindref="compound">ModelInstancesUboConfiguration</ref> &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>UInt32Array const &amp;</type>
          <declname>instances</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/ModelInstancesUbo.hpp" line="99" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Animation/Animable.hpp" line="10" column="1"/>
  </compounddef>
</doxygen>
