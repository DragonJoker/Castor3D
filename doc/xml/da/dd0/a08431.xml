<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="da/dd0/a08431" kind="class" language="C++" prot="public">
    <compoundname>castor::ParserParameter&lt; ParameterType::eName &gt;</compoundname>
    <basecompoundref refid="d3/d9a/a08387" prot="public" virt="non-virtual">castor::ParserParameter&lt; ParameterType::eText &gt;</basecompoundref>
    <includes local="no">ParserParameter.hpp</includes>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="da/dd0/a08431_1ac210fb1248e79fef3640ea194f5807f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor::ParserParameter&lt; ParameterType::eName &gt;::ParserParameter</definition>
        <argsstring>()</argsstring>
        <name>ParserParameter</name>
        <qualifiedname>castor::ParserParameter&lt; ParameterType::eName &gt;::ParserParameter</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/FileParser/ParserParameter.hpp" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/dd0/a08431_1a755f22da35c128850f5a9785132a623b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor::ParserParameter&lt; ParameterType::eName &gt;::ParserParameter</definition>
        <argsstring>(String rhs)</argsstring>
        <name>ParserParameter</name>
        <qualifiedname>castor::ParserParameter&lt; ParameterType::eName &gt;::ParserParameter</qualifiedname>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">String</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/FileParser/ParserParameter.hpp" line="236" column="10" bodyfile="CastorUtils/FileParser/ParserParameter.hpp" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="da/dd0/a08431_1a7f702c270d6b8a65e6a7ab7cce56fbed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a64114a56af07e11adb6eb2f3f816d222" kindref="member">ParameterType</ref></type>
        <definition>ParameterType castor::ParserParameter&lt; ParameterType::eName &gt;::getType</definition>
        <argsstring>() const override</argsstring>
        <name>getType</name>
        <qualifiedname>castor::ParserParameter&lt; ParameterType::eName &gt;::getType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le type du paramètre.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/FileParser/ParserParameter.hpp" line="243" column="15"/>
      </memberdef>
      <memberdef kind="function" id="da/dd0/a08431_1a29b9a45504bca2f30bd6938e47286fe4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a64114a56af07e11adb6eb2f3f816d222" kindref="member">ParameterType</ref></type>
        <definition>ParameterType castor::ParserParameter&lt; ParameterType::eName &gt;::getBaseType</definition>
        <argsstring>() const override</argsstring>
        <name>getBaseType</name>
        <qualifiedname>castor::ParserParameter&lt; ParameterType::eName &gt;::getBaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le type de base du paramètre (comme <ref refid="d2/dd2/a02279_1a64114a56af07e11adb6eb2f3f816d222a8c15e6038102a3065760b26043b9c162" kindref="member">ParameterType::eText</ref> pour <ref refid="d2/dd2/a02279_1a64114a56af07e11adb6eb2f3f816d222aa866af182acab9fffb643ecb752cd9e5" kindref="member">ParameterType::eName</ref>).   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/FileParser/ParserParameter.hpp" line="247" column="15"/>
      </memberdef>
      <memberdef kind="function" id="da/dd0/a08431_1a096c1f1bc2f48d05ad14dc3275ad40d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1a7fc5aca9eb8d35e69abfe9df07e365e3" kindref="member">StringView</ref></type>
        <definition>StringView castor::ParserParameter&lt; ParameterType::eName &gt;::getStrType</definition>
        <argsstring>() const override</argsstring>
        <name>getStrType</name>
        <qualifiedname>castor::ParserParameter&lt; ParameterType::eName &gt;::getStrType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Le type du chaîne paramètre.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/FileParser/ParserParameter.hpp" line="251" column="12"/>
      </memberdef>
      <memberdef kind="function" id="da/dd0/a08431_1ada54e1e6e9d497f46834468f8b2b4ca7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dd2/a02279_1ae025149db64e1fa986a71e2460c50263" kindref="member">ParserParameterBaseSPtr</ref></type>
        <definition>ParserParameterBaseSPtr castor::ParserParameter&lt; ParameterType::eName &gt;::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>castor::ParserParameter&lt; ParameterType::eName &gt;::clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Une copie de ce paramètre.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/FileParser/ParserParameter.hpp" line="255" column="25"/>
      </memberdef>
      <memberdef kind="function" id="da/dd0/a08431_1a589df6c0536cc30c1a10955443564a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor::ParserParameter&lt; ParameterType::eName &gt;::parse</definition>
        <argsstring>(LoggerInstance &amp;logger, String &amp;params) override</argsstring>
        <name>parse</name>
        <qualifiedname>castor::ParserParameter&lt; ParameterType::eName &gt;::parse</qualifiedname>
        <param>
          <type><ref refid="d9/d93/a09063" kindref="compound">LoggerInstance</ref> &amp;</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">String</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Vérifie le paramètre.   </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">logger</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;instance de logger. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Le texte contenant la valeur du paramètre. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> si un problème quelconque est arrivé.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CastorUtils/FileParser/ParserParameter.hpp" line="259" column="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Specialisation de <ref refid="d3/d9a/a08387" kindref="compound">ParserParameter</ref> pour <ref refid="d2/dd2/a02279_1a64114a56af07e11adb6eb2f3f816d222aa866af182acab9fffb643ecb752cd9e5" kindref="member">ParameterType::eName</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para></para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor::ParserParameter&lt; ParameterType::eText &gt;</label>
        <link refid="d3/d9a/a08387"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ParameterType::eText &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor::ParserParameter&lt; Type, Enable &gt;</label>
        <link refid="d3/d9a/a08387"/>
      </node>
      <node id="1">
        <label>castor::ParserParameter&lt; ParameterType::eName &gt;</label>
        <link refid="da/dd0/a08431"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>castor::ParserParameter&lt; ParameterType::eText &gt;</label>
        <link refid="d3/d9a/a08387"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ParameterType::eText &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>castor::ParserParameter&lt; Type, Enable &gt;</label>
        <link refid="d3/d9a/a08387"/>
      </node>
      <node id="1">
        <label>castor::ParserParameter&lt; ParameterType::eName &gt;</label>
        <link refid="da/dd0/a08431"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CastorUtils/FileParser/ParserParameter.hpp" line="219" column="1" bodyfile="CastorUtils/FileParser/ParserParameter.hpp" bodystart="221" bodyend="261"/>
    <listofallmembers>
      <member refid="da/dd0/a08431_1ada54e1e6e9d497f46834468f8b2b4ca7" prot="public" virt="non-virtual"><scope>castor::ParserParameter&lt; ParameterType::eName &gt;</scope><name>clone</name></member>
      <member refid="da/dd0/a08431_1a29b9a45504bca2f30bd6938e47286fe4" prot="public" virt="non-virtual"><scope>castor::ParserParameter&lt; ParameterType::eName &gt;</scope><name>getBaseType</name></member>
      <member refid="da/dd0/a08431_1a096c1f1bc2f48d05ad14dc3275ad40d3" prot="public" virt="non-virtual"><scope>castor::ParserParameter&lt; ParameterType::eName &gt;</scope><name>getStrType</name></member>
      <member refid="da/dd0/a08431_1a7f702c270d6b8a65e6a7ab7cce56fbed" prot="public" virt="non-virtual"><scope>castor::ParserParameter&lt; ParameterType::eName &gt;</scope><name>getType</name></member>
      <member refid="da/dd0/a08431_1a589df6c0536cc30c1a10955443564a27" prot="public" virt="non-virtual"><scope>castor::ParserParameter&lt; ParameterType::eName &gt;</scope><name>parse</name></member>
      <member refid="da/dd0/a08431_1ac210fb1248e79fef3640ea194f5807f7" prot="public" virt="non-virtual"><scope>castor::ParserParameter&lt; ParameterType::eName &gt;</scope><name>ParserParameter</name></member>
      <member refid="da/dd0/a08431_1a755f22da35c128850f5a9785132a623b" prot="public" virt="non-virtual"><scope>castor::ParserParameter&lt; ParameterType::eName &gt;</scope><name>ParserParameter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
