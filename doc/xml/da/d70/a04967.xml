<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="da/d70/a04967" kind="class" language="C++" prot="public">
    <compoundname>castor3d::TextureLayout</compoundname>
    <basecompoundref refid="d6/da8/a08227" prot="public" virt="non-virtual">castor::OwnedBy&lt; RenderSystem &gt;</basecompoundref>
    <includes local="no">TextureLayout.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Texture source setup.</header>
      <memberdef kind="function" id="da/d70/a04967_1a9471b85819856f67f1617f719587b6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::PxBufferBaseUPtr buffer, uint32_t bufferOrigLevels, bool isStatic=false)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bufferOrigLevels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>DÃ©finit la source de tout le layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="219" column="14"/>
        <referencedby refid="da/d70/a04967_1a70882c26b5e0900cb83d3bb68d56b782" compoundref="de/ddd/a00653" startline="229" endline="234">setSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a1aad25df804f69a9c998cd9606f3652a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::PxBufferBaseUPtr buffer, bool isStatic=false)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="222" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a988aacb6f287e248c22aecf1b21dd210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::Path const &amp;folder, castor::Path const &amp;relative)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type><ref refid="d1/de1/a08011" kindref="compound">castor::Path</ref> const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type><ref refid="d1/de1/a08011" kindref="compound">castor::Path</ref> const &amp;</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="224" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1aee81558bd667f6701ef019f4af1375f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(VkExtent3D const &amp;extent, VkFormat format)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="226" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a70882c26b5e0900cb83d3bb68d56b782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setSource</definition>
        <argsstring>(VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="229" column="6" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="229" bodyend="234"/>
        <references refid="da/d70/a04967_1a9471b85819856f67f1617f719587b6fc">setSource</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Getters.</header>
      <memberdef kind="function" id="da/d70/a04967_1aba351b66388372ac15062a2315ee6a6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
        <definition>C3D_API castor::String castor3d::TextureLayout::getDefaultSourceString</definition>
        <argsstring>() const</argsstring>
        <name>getDefaultSourceString</name>
        <qualifiedname>castor3d::TextureLayout::getDefaultSourceString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="240" column="24"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a34ceb7ac5aebae69c0a681c0bdd27a0b" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::ImageView const &amp;</type>
        <definition>C3D_API ashes::ImageView const  &amp; castor3d::TextureLayout::getDefaultSampledView</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefaultSampledView</name>
        <qualifiedname>castor3d::TextureLayout::getDefaultSampledView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="241" column="33"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1acaee364378867c3e2cc1855e571bb14d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::ImageView const &amp;</type>
        <definition>C3D_API ashes::ImageView const  &amp; castor3d::TextureLayout::getDefaultTargetView</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefaultTargetView</name>
        <qualifiedname>castor3d::TextureLayout::getDefaultTargetView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="242" column="33"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1aa1848b1e7177d02e3f62f806016558d4" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
        <definition>C3D_API castor::String castor3d::TextureLayout::getLayerCubeSourceString</definition>
        <argsstring>(size_t layer) const noexcept</argsstring>
        <name>getLayerCubeSourceString</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeSourceString</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="243" column="24"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a4364c41d33a80f8f279529bb5d38117f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::ImageView const &amp;</type>
        <definition>C3D_API ashes::ImageView const  &amp; castor3d::TextureLayout::getLayerCubeTargetView</definition>
        <argsstring>(size_t layer) const noexcept</argsstring>
        <name>getLayerCubeTargetView</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeTargetView</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="244" column="33"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a3c8bcae678a74035cca056beb988b768" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
        <definition>C3D_API castor::String castor3d::TextureLayout::getLayerCubeFaceSourceString</definition>
        <argsstring>(size_t layer, CubeMapFace face) const noexcept</argsstring>
        <name>getLayerCubeFaceSourceString</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeFaceSourceString</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="245" column="24"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a909f6294d09fcf3ba2a30f16f23afed2" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::ImageView const &amp;</type>
        <definition>C3D_API ashes::ImageView const  &amp; castor3d::TextureLayout::getLayerCubeFaceTargetView</definition>
        <argsstring>(size_t layer, CubeMapFace face) const noexcept</argsstring>
        <name>getLayerCubeFaceTargetView</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeFaceTargetView</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="247" column="33"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a93e6ea5882f18cbbfa5b15f0465b77a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref></type>
        <definition>C3D_API castor::String castor3d::TextureLayout::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <qualifiedname>castor3d::TextureLayout::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="249" column="24"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a0295aaff1f2219473910a6515b62ef11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/de1/a08011" kindref="compound">castor::Path</ref></type>
        <definition>C3D_API castor::Path castor3d::TextureLayout::getPath</definition>
        <argsstring>() const</argsstring>
        <name>getPath</name>
        <qualifiedname>castor3d::TextureLayout::getPath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="250" column="22"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a72dbb24d3d703a4861f92551b6b798ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::TextureLayout::needsYInversion</definition>
        <argsstring>() const</argsstring>
        <name>needsYInversion</name>
        <qualifiedname>castor3d::TextureLayout::needsYInversion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="251" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a2602fca603b99574afd8260c591fbfcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::TextureLayout::hasBuffer</definition>
        <argsstring>() const</argsstring>
        <name>hasBuffer</name>
        <qualifiedname>castor3d::TextureLayout::hasBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="252" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a1acf719870c042bf7fb72fba89a1bb6f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getLayersCount</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLayersCount</name>
        <qualifiedname>castor3d::TextureLayout::getLayersCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="254" column="10" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="254" bodyend="257"/>
        <referencedby refid="da/d70/a04967_1ae59d4e9d282eb81098d4d934b4b6f2f8" compoundref="de/ddd/a00653" startline="259" endline="264">isCube</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1ae59d4e9d282eb81098d4d934b4b6f2f8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::isCube</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isCube</name>
        <qualifiedname>castor3d::TextureLayout::isCube</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="259" column="10" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="259" bodyend="264"/>
        <references refid="da/d70/a04967_1a1acf719870c042bf7fb72fba89a1bb6f" compoundref="de/ddd/a00653" startline="254" endline="257">getLayersCount</references>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a7ac4c3253a9904801b669586d03b2957" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::isInitialised</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isInitialised</name>
        <qualifiedname>castor3d::TextureLayout::isInitialised</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="266" column="6" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1aced8052bf1d028ff37d23bac0aac02cc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::isStatic</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isStatic</name>
        <qualifiedname>castor3d::TextureLayout::isStatic</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="271" column="6" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1aa30180a30bda037b54d1d50366f68493" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>VkImageType</type>
        <definition>VkImageType castor3d::TextureLayout::getType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getType</name>
        <qualifiedname>castor3d::TextureLayout::getType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="276" column="13" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1ab060c248759cb2718a57d5b89db23eae" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d6/d3e/a08939" kindref="compound">castor::Image</ref> const &amp;</type>
        <definition>castor::Image const  &amp; castor3d::TextureLayout::getImage</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImage</name>
        <qualifiedname>castor3d::TextureLayout::getImage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="281" column="22" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a593ae06f52ce18205ab9f4e003253718" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d6/d3e/a08939" kindref="compound">castor::Image</ref> &amp;</type>
        <definition>castor::Image &amp; castor3d::TextureLayout::getImage</definition>
        <argsstring>() noexcept</argsstring>
        <name>getImage</name>
        <qualifiedname>castor3d::TextureLayout::getImage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="286" column="16" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a750bc028f687cfe4d495462381ec51fe" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ashes::Image const &amp;</type>
        <definition>ashes::Image const  &amp; castor3d::TextureLayout::getTexture</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTexture</name>
        <qualifiedname>castor3d::TextureLayout::getTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="291" column="21" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="291" bodyend="295"/>
        <references refid="df/dd8/a01943_1a7db41dab6f93d75339a43575590ee196" compoundref="df/dd8/a01943" startline="49">CU_Require</references>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a8093090abc565d1b692f5c90c4ee98fb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ashes::ImageCreateInfo const &amp;</type>
        <definition>ashes::ImageCreateInfo const  &amp; castor3d::TextureLayout::getCreateInfo</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getCreateInfo</name>
        <qualifiedname>castor3d::TextureLayout::getCreateInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="297" column="31" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1ac45025ba11c6894bc442bcc35104a2fa" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getWidth</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getWidth</name>
        <qualifiedname>castor3d::TextureLayout::getWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="302" column="10" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a0730dae72cabeb7a1f477c5bea385d37" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getHeight</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getHeight</name>
        <qualifiedname>castor3d::TextureLayout::getHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="307" column="10" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a82aec558a80dcb821cb8a63340fe9c71" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getDepth</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDepth</name>
        <qualifiedname>castor3d::TextureLayout::getDepth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="312" column="10" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1aa8b943dd667bd3b3cdf5c28c4580f893" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getMipLevels</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getMipLevels</name>
        <qualifiedname>castor3d::TextureLayout::getMipLevels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="317" column="10" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1abc4d8f422462212b1cf3b014b37152ff" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>VkExtent3D const &amp;</type>
        <definition>VkExtent3D const  &amp; castor3d::TextureLayout::getDimensions</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDimensions</name>
        <qualifiedname>castor3d::TextureLayout::getDimensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="322" column="19" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a1749aac707eda70b369b93ee14e9dc6f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat castor3d::TextureLayout::getPixelFormat</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPixelFormat</name>
        <qualifiedname>castor3d::TextureLayout::getPixelFormat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="327" column="10" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="327" bodyend="330"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="da/d70/a04967_1a38d122cc3c76362e353ea342b041636e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TextureView</definition>
        <argsstring></argsstring>
        <name>TextureView</name>
        <qualifiedname>castor3d::TextureLayout::TextureView</qualifiedname>
        <param>
          <type><ref refid="db/d5b/a05007" kindref="compound">TextureView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="91" column="14" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/d70/a04967_1abb4e7ba8bb8241f57f2667c84b320882" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::m_initialised</definition>
        <argsstring></argsstring>
        <name>m_initialised</name>
        <qualifiedname>castor3d::TextureLayout::m_initialised</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="360" column="6" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1a9a9e73f297fb0010219f2cc8dd0b2ef1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::m_static</definition>
        <argsstring></argsstring>
        <name>m_static</name>
        <qualifiedname>castor3d::TextureLayout::m_static</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="361" column="6" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="361" bodyend="361"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1a893c83ce79ad0bf4b2cbf75a70897c54" prot="private" static="no" mutable="no">
        <type>ashes::ImageCreateInfo</type>
        <definition>ashes::ImageCreateInfo castor3d::TextureLayout::m_info</definition>
        <argsstring></argsstring>
        <name>m_info</name>
        <qualifiedname>castor3d::TextureLayout::m_info</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="362" column="24" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1addb3faee8a01d6a5846f6cd95384894b" prot="private" static="no" mutable="no">
        <type>VkMemoryPropertyFlags</type>
        <definition>VkMemoryPropertyFlags castor3d::TextureLayout::m_properties</definition>
        <argsstring></argsstring>
        <name>m_properties</name>
        <qualifiedname>castor3d::TextureLayout::m_properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="363" column="23" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1a14cee824776b5a145bd865e5321cc4a8" prot="private" static="no" mutable="no">
        <type><ref refid="d6/d3e/a08939" kindref="compound">castor::Image</ref></type>
        <definition>castor::Image castor3d::TextureLayout::m_image</definition>
        <argsstring></argsstring>
        <name>m_image</name>
        <qualifiedname>castor3d::TextureLayout::m_image</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="364" column="15" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1acdc021024bf7b219739a157507bfda7d" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d31/a04951" kindref="compound">MipView</ref></type>
        <definition>MipView castor3d::TextureLayout::m_defaultView</definition>
        <argsstring></argsstring>
        <name>m_defaultView</name>
        <qualifiedname>castor3d::TextureLayout::m_defaultView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="365" column="9" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1a416b6b427d2aee2b519ecc1866a9068e" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d63/a04959" kindref="compound">ArrayView</ref>&lt; <ref refid="d9/d31/a04951" kindref="compound">MipView</ref> &gt;</type>
        <definition>ArrayView&lt; MipView &gt; castor3d::TextureLayout::m_arrayView</definition>
        <argsstring></argsstring>
        <name>m_arrayView</name>
        <qualifiedname>castor3d::TextureLayout::m_arrayView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="366" column="11" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1ad1ad3e24470b8f254c937a9815288857" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d63/a04959" kindref="compound">ArrayView</ref>&lt; <ref refid="db/de9/a04955" kindref="compound">CubeView</ref> &gt;</type>
        <definition>ArrayView&lt; CubeView &gt; castor3d::TextureLayout::m_cubeView</definition>
        <argsstring></argsstring>
        <name>m_cubeView</name>
        <qualifiedname>castor3d::TextureLayout::m_cubeView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="367" column="11" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1aeee6bb4c7f7fe408b45d48c8450c0f39" prot="private" static="no" mutable="no">
        <type><ref refid="d5/d18/a04963" kindref="compound">SliceView</ref>&lt; <ref refid="d9/d31/a04951" kindref="compound">MipView</ref> &gt;</type>
        <definition>SliceView&lt; MipView &gt; castor3d::TextureLayout::m_sliceView</definition>
        <argsstring></argsstring>
        <name>m_sliceView</name>
        <qualifiedname>castor3d::TextureLayout::m_sliceView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="368" column="11" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1a5c42f303dd75d9348314ba355f59ed11" prot="private" static="no" mutable="no">
        <type>ashes::ImagePtr</type>
        <definition>ashes::ImagePtr castor3d::TextureLayout::m_ownTexture</definition>
        <argsstring></argsstring>
        <name>m_ownTexture</name>
        <qualifiedname>castor3d::TextureLayout::m_ownTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="369" column="17" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d70/a04967_1aa758d553938bac0f22e4a07da7fb8f3e" prot="private" static="no" mutable="no">
        <type>ashes::Image *</type>
        <definition>ashes::Image* castor3d::TextureLayout::m_texture</definition>
        <argsstring></argsstring>
        <name>m_texture</name>
        <qualifiedname>castor3d::TextureLayout::m_texture</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="370" column="15" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="370" bodyend="370"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d70/a04967_1a616e74b761455374e23695b780fa2765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::TextureLayout</definition>
        <argsstring>(RenderSystem &amp;renderSystem, ashes::ImageCreateInfo info, VkMemoryPropertyFlags memoryProperties, castor::String const &amp;debugName, bool isStatic=false)</argsstring>
        <name>TextureLayout</name>
        <qualifiedname>castor3d::TextureLayout::TextureLayout</qualifiedname>
        <param>
          <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>ashes::ImageCreateInfo</type>
          <declname>info</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>memoryProperties</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>debugName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>Le render system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Les informations de l&apos;image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">memoryProperties</parametername>
</parameternamelist>
<parameterdescription>
<para>Les propriÃ©tÃ©s requise pour la mÃ©moire. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">debugName</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom de debug pour ce layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isStatic</parametername>
</parameternamelist>
<parameterdescription>
<para>Dit si ce layout est statique. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="110" column="9"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1ae1b028700e1f9ac48d5810d0555c1fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::TextureLayout</definition>
        <argsstring>(RenderSystem &amp;renderSystem, castor::String const &amp;name, VkImage image, crg::ImageViewId imageView)</argsstring>
        <name>TextureLayout</name>
        <qualifiedname>castor3d::TextureLayout::TextureLayout</qualifiedname>
        <param>
          <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type><ref refid="d2/dd2/a02279_1af78b89ba78c07da21e45ef90d4686c4c" kindref="member">castor::String</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>image</declname>
        </param>
        <param>
          <type>crg::ImageViewId</type>
          <declname>imageView</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>Le render system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nom de debug pour ce layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">imageView</parametername>
</parameternamelist>
<parameterdescription>
<para>La vue sur l&apos;image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="129" column="9"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a77ed83f4d34250f0daf619674791a08c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::TextureLayout</definition>
        <argsstring>(RenderSystem &amp;renderSystem, ashes::ImagePtr image, VkImageCreateInfo const &amp;createInfo)</argsstring>
        <name>TextureLayout</name>
        <qualifiedname>castor3d::TextureLayout::TextureLayout</qualifiedname>
        <param>
          <type><ref refid="d5/d4e/a06559" kindref="compound">RenderSystem</ref> &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>ashes::ImagePtr</type>
          <declname>image</declname>
        </param>
        <param>
          <type>VkImageCreateInfo const &amp;</type>
          <declname>createInfo</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>Le render system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>L&apos;image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">createInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Les informations de l&apos;image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="145" column="9"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1ab53c134a96809f04ad6a962301cc7cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::TextureLayout::initialise</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>initialise</name>
        <qualifiedname>castor3d::TextureLayout::initialise</qualifiedname>
        <param>
          <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Initialise la texture et toutes ses vues. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>Le device GPU. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> si tout s&apos;est bien passÃ©. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="158" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1aebecb18ae48faa1f08ab6c191cebd9a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::upload</definition>
        <argsstring>(UploadData &amp;uploader)</argsstring>
        <name>upload</name>
        <qualifiedname>castor3d::TextureLayout::upload</qualifiedname>
        <param>
          <type><ref refid="d7/d12/a03583" kindref="compound">UploadData</ref> &amp;</type>
          <declname>uploader</declname>
        </param>
        <briefdescription>
<para>Upload les donnÃ©es d&apos;image dans le buffer de la texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="165" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a3ef716cd4701738d3650079621d93b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>castor3d::TextureLayout::cleanup</qualifiedname>
        <briefdescription>
<para>Nettoie la texture et toutes ses vues. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="172" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a3d77ee35b29e870b1a627b31f06da163" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::generateMipmaps</definition>
        <argsstring>(RenderDevice const &amp;device, VkImageLayout srcLayout=VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL) const</argsstring>
        <name>generateMipmaps</name>
        <qualifiedname>castor3d::TextureLayout::generateMipmaps</qualifiedname>
        <param>
          <type><ref refid="dc/d32/a06415" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>srcLayout</declname>
          <defval>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</defval>
        </param>
        <briefdescription>
<para>GÃ©nÃ¨re les mipmaps de la texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>Le device GPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>Le layout actuel de l&apos;image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="183" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a73f84e494a275be37610b75747413850" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::generateMipmaps</definition>
        <argsstring>(QueueData const &amp;queueData, VkImageLayout srcLayout=VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL) const</argsstring>
        <name>generateMipmaps</name>
        <qualifiedname>castor3d::TextureLayout::generateMipmaps</qualifiedname>
        <param>
          <type><ref refid="d3/d0e/a06399" kindref="compound">QueueData</ref> const &amp;</type>
          <declname>queueData</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>srcLayout</declname>
          <defval>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</defval>
        </param>
        <briefdescription>
<para>GÃ©nÃ¨re les mipmaps de la texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">queueData</parametername>
</parameternamelist>
<parameterdescription>
<para>La queue recevant les commandes GPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>Le layout actuel de l&apos;image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="195" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a8ff9cdea618beded82e281e93ce110cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::generateMipmaps</definition>
        <argsstring>(ashes::CommandBuffer const &amp;cmd, VkImageLayout srcLayout=VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL) const</argsstring>
        <name>generateMipmaps</name>
        <qualifiedname>castor3d::TextureLayout::generateMipmaps</qualifiedname>
        <param>
          <type>ashes::CommandBuffer const &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>srcLayout</declname>
          <defval>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</defval>
        </param>
        <briefdescription>
<para>GÃ©nÃ¨re les mipmaps de la texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Le command buffer recevant les commandes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>Le layout actuel de l&apos;image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="207" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="da/d70/a04967_1a904fc55c9b0e4f4cd81b8a1bf63db545" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::doUpdateViews</definition>
        <argsstring>()</argsstring>
        <name>doUpdateViews</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateViews</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="334" column="10"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a4677c01162c04db13e48533de65befc1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateCreateInfo</definition>
        <argsstring>(castor::ImageLayout const &amp;layout)</argsstring>
        <name>doUpdateCreateInfo</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateCreateInfo</qualifiedname>
        <param>
          <type><ref refid="d5/d6e/a08955" kindref="compound">castor::ImageLayout</ref> const &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="335" column="6"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1adc7d6cc07ea8817267166df58172c1d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateMips</definition>
        <argsstring>(bool genNeeded, uint32_t mipLevels)</argsstring>
        <name>doUpdateMips</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateMips</qualifiedname>
        <param>
          <type>bool</type>
          <declname>genNeeded</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipLevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="336" column="6"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1ac6a0d13d89581f33b6269da99ec675f3" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="db/d5b/a05007" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView &amp; castor3d::TextureLayout::getDefaultView</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefaultView</name>
        <qualifiedname>castor3d::TextureLayout::getDefaultView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="338" column="14" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a3132b130477add67b74cbf87e208cfd1" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="db/de9/a04955" kindref="compound">CubeView</ref> const &amp;</type>
        <definition>CubeView const  &amp; castor3d::TextureLayout::getLayerCube</definition>
        <argsstring>(size_t layer) const noexcept</argsstring>
        <name>getLayerCube</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCube</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="344" column="17" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="344" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="da/d70/a04967_1a5fe9ed512573db004c725ffdcd357e4c" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/d31/a04951" kindref="compound">MipView</ref> const &amp;</type>
        <definition>MipView const  &amp; castor3d::TextureLayout::getLayerCubeFace</definition>
        <argsstring>(size_t layer, CubeMapFace face) const noexcept</argsstring>
        <name>getLayerCubeFace</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeFace</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d9/dba/a02278_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="353" column="16" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="353" bodyend="357"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor::OwnedBy&lt; RenderSystem &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; RenderSystem &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::TextureLayout</label>
        <link refid="da/d70/a04967"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>castor::OwnedBy&lt; RenderSystem &gt;</label>
        <link refid="d6/da8/a08227"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; RenderSystem &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::TextureLayout</label>
        <link refid="da/d70/a04967"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor::OwnedBy&lt; Owner &gt;</label>
        <link refid="d6/da8/a08227"/>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Material/Texture/TextureLayout.hpp" line="88" column="1" bodyfile="Castor3D/Material/Texture/TextureLayout.hpp" bodystart="90" bodyend="371"/>
    <listofallmembers>
      <member refid="da/d70/a04967_1a3ef716cd4701738d3650079621d93b4e" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>cleanup</name></member>
      <member refid="da/d70/a04967_1a4677c01162c04db13e48533de65befc1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateCreateInfo</name></member>
      <member refid="da/d70/a04967_1adc7d6cc07ea8817267166df58172c1d1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateMips</name></member>
      <member refid="da/d70/a04967_1a904fc55c9b0e4f4cd81b8a1bf63db545" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateViews</name></member>
      <member refid="da/d70/a04967_1a3d77ee35b29e870b1a627b31f06da163" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>generateMipmaps</name></member>
      <member refid="da/d70/a04967_1a73f84e494a275be37610b75747413850" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>generateMipmaps</name></member>
      <member refid="da/d70/a04967_1a8ff9cdea618beded82e281e93ce110cb" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>generateMipmaps</name></member>
      <member refid="da/d70/a04967_1a8093090abc565d1b692f5c90c4ee98fb" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getCreateInfo</name></member>
      <member refid="da/d70/a04967_1a34ceb7ac5aebae69c0a681c0bdd27a0b" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefaultSampledView</name></member>
      <member refid="da/d70/a04967_1aba351b66388372ac15062a2315ee6a6f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefaultSourceString</name></member>
      <member refid="da/d70/a04967_1acaee364378867c3e2cc1855e571bb14d" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefaultTargetView</name></member>
      <member refid="da/d70/a04967_1ac6a0d13d89581f33b6269da99ec675f3" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefaultView</name></member>
      <member refid="da/d70/a04967_1a82aec558a80dcb821cb8a63340fe9c71" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDepth</name></member>
      <member refid="da/d70/a04967_1abc4d8f422462212b1cf3b014b37152ff" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDimensions</name></member>
      <member refid="da/d70/a04967_1a0730dae72cabeb7a1f477c5bea385d37" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getHeight</name></member>
      <member refid="da/d70/a04967_1ab060c248759cb2718a57d5b89db23eae" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getImage</name></member>
      <member refid="da/d70/a04967_1a593ae06f52ce18205ab9f4e003253718" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getImage</name></member>
      <member refid="da/d70/a04967_1a3132b130477add67b74cbf87e208cfd1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCube</name></member>
      <member refid="da/d70/a04967_1a5fe9ed512573db004c725ffdcd357e4c" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFace</name></member>
      <member refid="da/d70/a04967_1a3c8bcae678a74035cca056beb988b768" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFaceSourceString</name></member>
      <member refid="da/d70/a04967_1a909f6294d09fcf3ba2a30f16f23afed2" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFaceTargetView</name></member>
      <member refid="da/d70/a04967_1aa1848b1e7177d02e3f62f806016558d4" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeSourceString</name></member>
      <member refid="da/d70/a04967_1a4364c41d33a80f8f279529bb5d38117f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeTargetView</name></member>
      <member refid="da/d70/a04967_1a1acf719870c042bf7fb72fba89a1bb6f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayersCount</name></member>
      <member refid="da/d70/a04967_1aa8b943dd667bd3b3cdf5c28c4580f893" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getMipLevels</name></member>
      <member refid="da/d70/a04967_1a93e6ea5882f18cbbfa5b15f0465b77a3" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getName</name></member>
      <member refid="d6/da8/a08227_1ae200b1c3bde17ab092b0d0b37095ff76" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getOwner</name></member>
      <member refid="da/d70/a04967_1a0295aaff1f2219473910a6515b62ef11" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getPath</name></member>
      <member refid="da/d70/a04967_1a1749aac707eda70b369b93ee14e9dc6f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getPixelFormat</name></member>
      <member refid="da/d70/a04967_1a750bc028f687cfe4d495462381ec51fe" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getTexture</name></member>
      <member refid="da/d70/a04967_1aa30180a30bda037b54d1d50366f68493" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getType</name></member>
      <member refid="da/d70/a04967_1ac45025ba11c6894bc442bcc35104a2fa" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getWidth</name></member>
      <member refid="da/d70/a04967_1a2602fca603b99574afd8260c591fbfcd" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>hasBuffer</name></member>
      <member refid="da/d70/a04967_1ab53c134a96809f04ad6a962301cc7cf5" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>initialise</name></member>
      <member refid="da/d70/a04967_1ae59d4e9d282eb81098d4d934b4b6f2f8" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isCube</name></member>
      <member refid="da/d70/a04967_1a7ac4c3253a9904801b669586d03b2957" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isInitialised</name></member>
      <member refid="da/d70/a04967_1aced8052bf1d028ff37d23bac0aac02cc" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isStatic</name></member>
      <member refid="da/d70/a04967_1a416b6b427d2aee2b519ecc1866a9068e" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_arrayView</name></member>
      <member refid="da/d70/a04967_1ad1ad3e24470b8f254c937a9815288857" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_cubeView</name></member>
      <member refid="da/d70/a04967_1acdc021024bf7b219739a157507bfda7d" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_defaultView</name></member>
      <member refid="da/d70/a04967_1a14cee824776b5a145bd865e5321cc4a8" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_image</name></member>
      <member refid="da/d70/a04967_1a893c83ce79ad0bf4b2cbf75a70897c54" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_info</name></member>
      <member refid="da/d70/a04967_1abb4e7ba8bb8241f57f2667c84b320882" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_initialised</name></member>
      <member refid="da/d70/a04967_1a5c42f303dd75d9348314ba355f59ed11" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_ownTexture</name></member>
      <member refid="da/d70/a04967_1addb3faee8a01d6a5846f6cd95384894b" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_properties</name></member>
      <member refid="da/d70/a04967_1aeee6bb4c7f7fe408b45d48c8450c0f39" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_sliceView</name></member>
      <member refid="da/d70/a04967_1a9a9e73f297fb0010219f2cc8dd0b2ef1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_static</name></member>
      <member refid="da/d70/a04967_1aa758d553938bac0f22e4a07da7fb8f3e" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_texture</name></member>
      <member refid="da/d70/a04967_1a72dbb24d3d703a4861f92551b6b798ca" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>needsYInversion</name></member>
      <member refid="d6/da8/a08227_1a5efafa99a79dd1036a6ae3f3242a366b" prot="protected" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>OwnedBy</name></member>
      <member refid="da/d70/a04967_1a9471b85819856f67f1617f719587b6fc" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="da/d70/a04967_1a1aad25df804f69a9c998cd9606f3652a" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="da/d70/a04967_1a988aacb6f287e248c22aecf1b21dd210" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="da/d70/a04967_1aee81558bd667f6701ef019f4af1375f9" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="da/d70/a04967_1a70882c26b5e0900cb83d3bb68d56b782" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="da/d70/a04967_1a616e74b761455374e23695b780fa2765" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureLayout</name></member>
      <member refid="da/d70/a04967_1ae1b028700e1f9ac48d5810d0555c1fbb" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureLayout</name></member>
      <member refid="da/d70/a04967_1a77ed83f4d34250f0daf619674791a08c" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureLayout</name></member>
      <member refid="da/d70/a04967_1a38d122cc3c76362e353ea342b041636e" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureView</name></member>
      <member refid="da/d70/a04967_1aebecb18ae48faa1f08ab6c191cebd9a9" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>upload</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
