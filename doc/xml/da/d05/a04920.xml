<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="da/d05/a04920" kind="class" language="C++" prot="public">
    <compoundname>castor3d::RenderTechnique</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; Engine &gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Named</basecompoundref>
    <includes local="no">RenderTechnique.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="da/d05/a04920_1a04bc779bf46caad5492a103bc3c23da7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Size const  &amp;</type>
        <definition>castor::Size const&amp; castor3d::RenderTechnique::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="154" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a42d7b7da30a673aaf697ce841e959ae6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d7d/a02656" kindref="compound">TextureLayout</ref> const  &amp;</type>
        <definition>TextureLayout const&amp; castor3d::RenderTechnique::getResult</definition>
        <argsstring>() const</argsstring>
        <name>getResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="159" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="159" bodyend="163"/>
        <references refid="d6/d18/a02664_1abf1c4acc8a943645ab8401d5ed25c751" compoundref="d8/d21/a00368" startline="164" endline="167">castor3d::TextureUnit::getTexture</references>
        <references refid="d6/d18/a02664_1a0cd2559e378b7b161753884cf9e43720" compoundref="d8/d21/a00368" startline="179" endline="182">castor3d::TextureUnit::isTextured</references>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1af5ad3c6d3d5634119f7dc0632969a514" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d7d/a02656" kindref="compound">TextureLayout</ref> const  &amp;</type>
        <definition>TextureLayout const&amp; castor3d::RenderTechnique::getDepth</definition>
        <argsstring>() const</argsstring>
        <name>getDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="165" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="165" bodyend="168"/>
        <references refid="d6/d18/a02664_1abf1c4acc8a943645ab8401d5ed25c751" compoundref="d8/d21/a00368" startline="164" endline="167">castor3d::TextureUnit::getTexture</references>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a34f98718c166e931b30baf0ee454659b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TextureLayoutSPtr</type>
        <definition>TextureLayoutSPtr castor3d::RenderTechnique::getDepthPtr</definition>
        <argsstring>() const</argsstring>
        <name>getDepthPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="170" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="170" bodyend="173"/>
        <references refid="d6/d18/a02664_1abf1c4acc8a943645ab8401d5ed25c751" compoundref="d8/d21/a00368" startline="164" endline="167">castor3d::TextureUnit::getTexture</references>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a4c1b44a1dc97be41e056176e80881581" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d0e/a05496" kindref="compound">MatrixUbo</ref> const  &amp;</type>
        <definition>MatrixUbo const&amp; castor3d::RenderTechnique::getMatrixUbo</definition>
        <argsstring>() const</argsstring>
        <name>getMatrixUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="175" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a5fb5e2566641a961c1bc70e01b6064c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d0e/a05496" kindref="compound">MatrixUbo</ref> &amp;</type>
        <definition>MatrixUbo&amp; castor3d::RenderTechnique::getMatrixUbo</definition>
        <argsstring>()</argsstring>
        <name>getMatrixUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="180" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a995ee917a0a9e8677459ac922160d2fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/db7/a04924" kindref="compound">RenderTechniquePass</ref> const  &amp;</type>
        <definition>RenderTechniquePass const&amp; castor3d::RenderTechnique::getOpaquePass</definition>
        <argsstring>() const</argsstring>
        <name>getOpaquePass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="185" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="185" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a1e162e613219c5ed9f327f79590e7f3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/db7/a04924" kindref="compound">RenderTechniquePass</ref> const  &amp;</type>
        <definition>RenderTechniquePass const&amp; castor3d::RenderTechnique::getTransparentPass</definition>
        <argsstring>() const</argsstring>
        <name>getTransparentPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="191" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a02340c2adfe07f0e2bf5f647a751965d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d1e/a01479_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref> const  &amp;</type>
        <definition>ShadowMapLightTypeArray const&amp; castor3d::RenderTechnique::getShadowMaps</definition>
        <argsstring>() const</argsstring>
        <name>getShadowMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="197" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a28f430e15954fffe7150f653f6508d01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::getSemaphore</definition>
        <argsstring>() const</argsstring>
        <name>getSemaphore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="202" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="202" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a36fdeba21727d3b4a72db8d861354d6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d6e/a04628" kindref="compound">RenderTarget</ref> const  &amp;</type>
        <definition>RenderTarget const&amp; castor3d::RenderTechnique::getRenderTarget</definition>
        <argsstring>() const</argsstring>
        <name>getRenderTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="208" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a17c12a1a7b458a7956baf183dea253cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::RenderTechnique::isMultisampling</definition>
        <argsstring>() const</argsstring>
        <name>isMultisampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="213" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a102f5c29a904ae5fdc62318943c0f66b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/dcc/a04712" kindref="compound">SsaoConfig</ref> const  &amp;</type>
        <definition>SsaoConfig const&amp; castor3d::RenderTechnique::getSsaoConfig</definition>
        <argsstring>() const</argsstring>
        <name>getSsaoConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="218" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1af0ea4d33db87fff7c265495f61ad6ee9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/dcc/a04712" kindref="compound">SsaoConfig</ref> &amp;</type>
        <definition>SsaoConfig&amp; castor3d::RenderTechnique::getSsaoConfig</definition>
        <argsstring>()</argsstring>
        <name>getSsaoConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="223" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1aafea09395c3f5273d5a51e522cf33fb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d6b/a05460" kindref="compound">DebugConfig</ref> const  &amp;</type>
        <definition>DebugConfig const&amp; castor3d::RenderTechnique::getDebugConfig</definition>
        <argsstring>() const</argsstring>
        <name>getDebugConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="228" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a4d9f3cc1c189619de3371b51cdc92612" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d6b/a05460" kindref="compound">DebugConfig</ref> &amp;</type>
        <definition>DebugConfig&amp; castor3d::RenderTechnique::getDebugConfig</definition>
        <argsstring>()</argsstring>
        <name>getDebugConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="233" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="233" bodyend="236"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="da/d05/a04920_1a8041804a8d37587ec2e005122a90f6a3" prot="public" static="no">
        <type>std::vector&lt; ShadowMapUPtr &gt;</type>
        <definition>using castor3d::RenderTechnique::ShadowMapArray =  std::vector&lt; ShadowMapUPtr &gt;</definition>
        <argsstring></argsstring>
        <name>ShadowMapArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="240" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="da/d05/a04920_1a8a9a2e56d4e385004fa8100d6c7e7496" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class RenderTechniquePass</definition>
        <argsstring></argsstring>
        <name>RenderTechniquePass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="36" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/d05/a04920_1a6d72d68742c1594981b324d59243e06f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::RenderTechnique::m_initialised</definition>
        <argsstring></argsstring>
        <name>m_initialised</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="277" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a567ad614522a3960905fe009907a9119" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d6e/a04628" kindref="compound">RenderTarget</ref> &amp;</type>
        <definition>RenderTarget&amp; castor3d::RenderTechnique::m_renderTarget</definition>
        <argsstring></argsstring>
        <name>m_renderTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="278" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a53645af8da3134595a0e0d0479cbfd71" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d38/a04624" kindref="compound">RenderSystem</ref> &amp;</type>
        <definition>RenderSystem&amp; castor3d::RenderTechnique::m_renderSystem</definition>
        <argsstring></argsstring>
        <name>m_renderSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="279" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a131b858ac6d0f687a695208c5c9ee9c9" prot="private" static="no" mutable="no">
        <type>castor::Size</type>
        <definition>castor::Size castor3d::RenderTechnique::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="280" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1af7c3afd2a025b13af3d8dda15ab7b961" prot="private" static="no" mutable="no">
        <type><ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref></type>
        <definition>TextureUnit castor3d::RenderTechnique::m_colourTexture</definition>
        <argsstring></argsstring>
        <name>m_colourTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="281" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a53b649807bc4bed82c02806d9a2fe882" prot="private" static="no" mutable="no">
        <type><ref refid="d6/d18/a02664" kindref="compound">TextureUnit</ref></type>
        <definition>TextureUnit castor3d::RenderTechnique::m_depthBuffer</definition>
        <argsstring></argsstring>
        <name>m_depthBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="282" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a6925c2e5d89073990c625857dbde68dd" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d0e/a05496" kindref="compound">MatrixUbo</ref></type>
        <definition>MatrixUbo castor3d::RenderTechnique::m_matrixUbo</definition>
        <argsstring></argsstring>
        <name>m_matrixUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="283" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a1cd745f80592734bf9aef76a7a3d4b4d" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d22/a05464" kindref="compound">GpInfoUbo</ref></type>
        <definition>GpInfoUbo castor3d::RenderTechnique::m_gpInfoUbo</definition>
        <argsstring></argsstring>
        <name>m_gpInfoUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="284" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a584621411ef10016c7bf3d50e6118a8b" prot="private" static="no" mutable="no">
        <type><ref refid="db/d6b/a05460" kindref="compound">DebugConfig</ref></type>
        <definition>DebugConfig castor3d::RenderTechnique::m_debugConfig</definition>
        <argsstring></argsstring>
        <name>m_debugConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="285" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1ae52fc2d343e8aa0ea69ba10564e760dd" prot="private" static="no" mutable="no">
        <type>DepthPassUPtr</type>
        <definition>DepthPassUPtr castor3d::RenderTechnique::m_depthPass</definition>
        <argsstring></argsstring>
        <name>m_depthPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="286" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a309fdd0a318ea6c0ff6b760326344350" prot="private" static="no" mutable="no">
        <type>VoxelizerUPtr</type>
        <definition>VoxelizerUPtr castor3d::RenderTechnique::m_voxelizer</definition>
        <argsstring></argsstring>
        <name>m_voxelizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="287" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a7e21187a54dee5666f10c3a871f29863" prot="private" static="no" mutable="no">
        <type>RenderTechniquePassUPtr</type>
        <definition>RenderTechniquePassUPtr castor3d::RenderTechnique::m_opaquePass</definition>
        <argsstring></argsstring>
        <name>m_opaquePass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="288" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1af20ae81bed0e8a6a51b87015c778a540" prot="private" static="no" mutable="no">
        <type>RenderTechniquePassUPtr</type>
        <definition>RenderTechniquePassUPtr castor3d::RenderTechnique::m_transparentPass</definition>
        <argsstring></argsstring>
        <name>m_transparentPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="289" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1ad7ad0e239066686d448b38ee3b3f5e28" prot="private" static="no" mutable="no">
        <type><ref refid="db/dcc/a04712" kindref="compound">SsaoConfig</ref></type>
        <definition>SsaoConfig castor3d::RenderTechnique::m_ssaoConfig</definition>
        <argsstring></argsstring>
        <name>m_ssaoConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="290" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1aa6c3f2ee278d3b4fa4bba9cbcc5203e5" prot="private" static="no" mutable="no">
        <type>DeferredRenderingUPtr</type>
        <definition>DeferredRenderingUPtr castor3d::RenderTechnique::m_deferredRendering</definition>
        <argsstring></argsstring>
        <name>m_deferredRendering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="291" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1ab0058313c957658648f400a6d2542f0b" prot="private" static="no" mutable="no">
        <type>WeightedBlendRenderingUPtr</type>
        <definition>WeightedBlendRenderingUPtr castor3d::RenderTechnique::m_weightedBlendRendering</definition>
        <argsstring></argsstring>
        <name>m_weightedBlendRendering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="292" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a58448fbedf618228b1f611fe2b7b5ad9" prot="private" static="no" mutable="no">
        <type>RenderPassTimerSPtr</type>
        <definition>RenderPassTimerSPtr castor3d::RenderTechnique::m_particleTimer</definition>
        <argsstring></argsstring>
        <name>m_particleTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="293" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1abc5461d317086d163c5ae68914439a0c" prot="private" static="no" mutable="no">
        <type>ShadowMapUPtr</type>
        <definition>ShadowMapUPtr castor3d::RenderTechnique::m_directionalShadowMap</definition>
        <argsstring></argsstring>
        <name>m_directionalShadowMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="294" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a4495ba76e40c7ee8495b9be956c99996" prot="private" static="no" mutable="no">
        <type>ShadowMapUPtr</type>
        <definition>ShadowMapUPtr castor3d::RenderTechnique::m_pointShadowMap</definition>
        <argsstring></argsstring>
        <name>m_pointShadowMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="295" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a9c3a8a67fb97d69baeb1fed7a492fbbd" prot="private" static="no" mutable="no">
        <type>ShadowMapUPtr</type>
        <definition>ShadowMapUPtr castor3d::RenderTechnique::m_spotShadowMap</definition>
        <argsstring></argsstring>
        <name>m_spotShadowMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="296" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1aba8f98e0cd4417e558b0ba92bca5cc5d" prot="private" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref></type>
        <definition>ShadowMapLightTypeArray castor3d::RenderTechnique::m_allShadowMaps</definition>
        <argsstring></argsstring>
        <name>m_allShadowMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="297" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1aeb5415674465e9513659afb02cca99a8" prot="private" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1ad3137fb4b01f8deea8b1e20522ec8e6c" kindref="member">ShadowMapLightTypeArray</ref></type>
        <definition>ShadowMapLightTypeArray castor3d::RenderTechnique::m_activeShadowMaps</definition>
        <argsstring></argsstring>
        <name>m_activeShadowMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="298" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1af0de85f9c121b55bc794d502df27258b" prot="private" static="no" mutable="no">
        <type><ref refid="db/d15/a05484" kindref="compound">LpvGridConfigUbo</ref></type>
        <definition>LpvGridConfigUbo castor3d::RenderTechnique::m_lpvConfigUbo</definition>
        <argsstring></argsstring>
        <name>m_lpvConfigUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="299" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1ab2aa7c0710ba3fb73bddda4d9db9ba15" prot="private" static="no" mutable="no">
        <type><ref refid="d4/db7/a05476" kindref="compound">LayeredLpvGridConfigUbo</ref></type>
        <definition>LayeredLpvGridConfigUbo castor3d::RenderTechnique::m_llpvConfigUbo</definition>
        <argsstring></argsstring>
        <name>m_llpvConfigUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="300" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a06e44e2b810b562ef6832c8bcb5c1f02" prot="private" static="no" mutable="no">
        <type><ref refid="dd/da7/a05632" kindref="compound">VoxelizerUbo</ref></type>
        <definition>VoxelizerUbo castor3d::RenderTechnique::m_vctConfigUbo</definition>
        <argsstring></argsstring>
        <name>m_vctConfigUbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="301" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a881a5764b5f9d6934787413453a4b3ac" prot="private" static="no" mutable="no">
        <type>LightVolumePassResultUPtr</type>
        <definition>LightVolumePassResultUPtr castor3d::RenderTechnique::m_lpvResult</definition>
        <argsstring></argsstring>
        <name>m_lpvResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="302" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a2675ebf80b8fe0253761f240eb7bf441" prot="private" static="no" mutable="no">
        <type>LightVolumePassResultArray</type>
        <definition>LightVolumePassResultArray castor3d::RenderTechnique::m_llpvResult</definition>
        <argsstring></argsstring>
        <name>m_llpvResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="303" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a70fd625e037b0bb5485d4f0f7eb2f7a0" prot="private" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1a0d08094dbc29136cf3b11775987ed4d5" kindref="member">LightPropagationVolumesLightType</ref></type>
        <definition>LightPropagationVolumesLightType castor3d::RenderTechnique::m_lightPropagationVolumes</definition>
        <argsstring></argsstring>
        <name>m_lightPropagationVolumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="304" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a8780a89774be87c7113a3adfbe0f744a" prot="private" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1a45b5676720a8d0a13c78ad5f00c94163" kindref="member">LayeredLightPropagationVolumesLightType</ref></type>
        <definition>LayeredLightPropagationVolumesLightType castor3d::RenderTechnique::m_layeredLightPropagationVolumes</definition>
        <argsstring></argsstring>
        <name>m_layeredLightPropagationVolumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="305" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a9895fda6bc928a4b32d3c5a62d0c2757" prot="private" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1a5b16382cb984a93c1f022f08963b2493" kindref="member">LightPropagationVolumesGLightType</ref></type>
        <definition>LightPropagationVolumesGLightType castor3d::RenderTechnique::m_lightPropagationVolumesG</definition>
        <argsstring></argsstring>
        <name>m_lightPropagationVolumesG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="306" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1ad5485f4ff8da25ed3e84c3bedb12d9f5" prot="private" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1aeb1a81c01b04833e5175bef5f7857874" kindref="member">LayeredLightPropagationVolumesGLightType</ref></type>
        <definition>LayeredLightPropagationVolumesGLightType castor3d::RenderTechnique::m_layeredLightPropagationVolumesG</definition>
        <argsstring></argsstring>
        <name>m_layeredLightPropagationVolumesG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="307" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a8405f39d060d3e1e2d3dcf7f21a753d4" prot="private" static="no" mutable="no">
        <type>ashes::SemaphorePtr</type>
        <definition>ashes::SemaphorePtr castor3d::RenderTechnique::m_signalFinished</definition>
        <argsstring></argsstring>
        <name>m_signalFinished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="308" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a90259c70dcb2d3adef10a35f5433dc68" prot="private" static="no" mutable="no">
        <type>ashes::RenderPassPtr</type>
        <definition>ashes::RenderPassPtr castor3d::RenderTechnique::m_bgRenderPass</definition>
        <argsstring></argsstring>
        <name>m_bgRenderPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="309" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a6828c1e0e9b765f187180a9888bc5093" prot="private" static="no" mutable="no">
        <type>ashes::FrameBufferPtr</type>
        <definition>ashes::FrameBufferPtr castor3d::RenderTechnique::m_bgFrameBuffer</definition>
        <argsstring></argsstring>
        <name>m_bgFrameBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="310" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a2d46f4f97abf40a31d8885f14d1eea2a" prot="private" static="no" mutable="no">
        <type>ashes::CommandBufferPtr</type>
        <definition>ashes::CommandBufferPtr castor3d::RenderTechnique::m_bgCommandBuffer</definition>
        <argsstring></argsstring>
        <name>m_bgCommandBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="311" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a776830c20911a421d1aeeae211959b6a" prot="private" static="no" mutable="no">
        <type>ashes::CommandBufferPtr</type>
        <definition>ashes::CommandBufferPtr castor3d::RenderTechnique::m_cbgCommandBuffer</definition>
        <argsstring></argsstring>
        <name>m_cbgCommandBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="312" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1a884a570c694cb723bb944a98f2bea6dc" prot="private" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1a041b5481c8af5c2735f8cbf6740bf07e" kindref="member">OnBackgroundChangedConnection</ref></type>
        <definition>OnBackgroundChangedConnection castor3d::RenderTechnique::m_onBgChanged</definition>
        <argsstring></argsstring>
        <name>m_onBgChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="313" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1af4e1e004f8d61466a1a2b9d5ecf6e27d" prot="private" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1a041b5481c8af5c2735f8cbf6740bf07e" kindref="member">OnBackgroundChangedConnection</ref></type>
        <definition>OnBackgroundChangedConnection castor3d::RenderTechnique::m_onCBgChanged</definition>
        <argsstring></argsstring>
        <name>m_onCBgChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="314" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1af0882792ca1cdaffaa60e0a0380ae019" prot="private" static="no" mutable="no">
        <type><ref refid="d1/da6/a04380" kindref="compound">CommandsSemaphore</ref></type>
        <definition>CommandsSemaphore castor3d::RenderTechnique::m_colorTexTransition</definition>
        <argsstring></argsstring>
        <name>m_colorTexTransition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="315" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d05/a04920_1ab6a7f3fe38973885538126319e954a38" prot="private" static="no" mutable="no">
        <type><ref refid="d1/da6/a04380" kindref="compound">CommandsSemaphore</ref></type>
        <definition>CommandsSemaphore castor3d::RenderTechnique::m_clearLpv</definition>
        <argsstring></argsstring>
        <name>m_clearLpv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="316" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="316" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d05/a04920_1a050bf38d70c1875fb35d4e997b45eb0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::RenderTechnique::RenderTechnique</definition>
        <argsstring>(castor::String const &amp;name, RenderTarget &amp;renderTarget, RenderSystem &amp;renderSystem, Parameters const &amp;parameters, SsaoConfig const &amp;ssaoConfig)</argsstring>
        <name>RenderTechnique</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d3/d6e/a04628" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type><ref refid="d9/d38/a04624" kindref="compound">RenderSystem</ref> &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type><ref refid="da/d1e/a01479_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref> const &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type><ref refid="db/dcc/a04712" kindref="compound">SsaoConfig</ref> const &amp;</type>
          <declname>ssaoConfig</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The technique name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">renderTarget</parametername>
</parameternamelist>
<parameterdescription>
<para>The render target for this technique. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>The render system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The technique parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssaoConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSAO configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a22f6b51c66793703d676b1587248d098" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>virtual C3D_API castor3d::RenderTechnique::~RenderTechnique</definition>
        <argsstring>()</argsstring>
        <name>~RenderTechnique</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a24527c3e71308c838612fe148cf31db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderTechnique::initialise</definition>
        <argsstring>(RenderDevice const &amp;device, std::vector&lt; IntermediateView &gt; &amp;intermediates)</argsstring>
        <name>initialise</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d7/d6d/a04584" kindref="compound">IntermediateView</ref> &gt; &amp;</type>
          <declname>intermediates</declname>
        </param>
        <briefdescription>
<para>Initialisation function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">intermediates</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the intermediate views used by the whole technique. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if ok. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1aa52f82ba80dcc81c38a5c818f92b6923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechnique::cleanup</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>cleanup</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Cleanup function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a3ac035aec4905eb6d75b1d332a8598c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechnique::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="dc/d0d/a04588" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the render pass, CPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a1c8b000b7edec5f90f18271f83e108fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechnique::update</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="da/d34/a04592" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the render pass, GPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a1e67794a8cbd8f748901273c055d623a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> ashes::Semaphore const  &amp;</type>
        <definition>C3D_API ashes::Semaphore const&amp; castor3d::RenderTechnique::render</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::SemaphoreCRefArray const &amp;waitSemaphores, RenderInfo &amp;info)</argsstring>
        <name>render</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::SemaphoreCRefArray const &amp;</type>
          <declname>waitSemaphores</declname>
        </param>
        <param>
          <type><ref refid="d5/d91/a04516" kindref="compound">RenderInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Render function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">waitSemaphores</parametername>
</parameternamelist>
<parameterdescription>
<para>The semaphores to wait for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the render informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a1e0b4979e57b7c404f2aca8acc9ae4b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::RenderTechnique::writeInto</definition>
        <argsstring>(castor::TextFile &amp;file)</argsstring>
        <name>writeInto</name>
        <param>
          <type>castor::TextFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Writes the technique into a text file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a38d0ec1974652fad11db60b854eda44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RenderTechnique::accept</definition>
        <argsstring>(RenderTechniqueVisitor &amp;visitor)</argsstring>
        <name>accept</name>
        <param>
          <type><ref refid="db/d15/a04928" kindref="compound">RenderTechniqueVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Visitor acceptance function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The ... visitor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="144" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="da/d05/a04920_1af63798b64788795f009229b180ce9598" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doCreateShadowMaps</definition>
        <argsstring>()</argsstring>
        <name>doCreateShadowMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1aee3b949d5b6eb84fec05bd6cda89cff9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doCreateLpv</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doCreateLpv</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1adacb3b7152a74fae56a0dd7797fec4bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doInitialiseShadowMaps</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doInitialiseShadowMaps</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a4150db604748cb4457d1becfaae11a6c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doInitialiseLpv</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doInitialiseLpv</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1aa41c18a55030ab1c6c6162862548ce0e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doInitialiseBackgroundPass</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doInitialiseBackgroundPass</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a9bc8473887b2db74afe1be4eed3faffc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doInitialiseDepthPass</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doInitialiseDepthPass</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1af0b399663b33e3196c89eb4ba04f9769" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doInitialiseOpaquePass</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doInitialiseOpaquePass</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a80fe4c88815302cdf0d6dc2f5db2170d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doInitialiseTransparentPass</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doInitialiseTransparentPass</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a9cf347fa370f1264e453db444d6933ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doCleanupShadowMaps</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doCleanupShadowMaps</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1ad88f9e25ac0f5025f9a985662695847a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doCleanupLpv</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>doCleanupLpv</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1ab417433dd28482feed90f7c6b3c3fb28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateShadowMaps</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>doUpdateShadowMaps</name>
        <param>
          <type><ref refid="dc/d0d/a04588" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a1bfb00168961873705ec089d3f3107ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateShadowMaps</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>doUpdateShadowMaps</name>
        <param>
          <type><ref refid="da/d34/a04592" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1aa30dab6f307082fdfebb6808ca429582" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateLpv</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>doUpdateLpv</name>
        <param>
          <type><ref refid="dc/d0d/a04588" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1ad8e6d68775be69e34b6935fb54b2e6e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateLpv</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>doUpdateLpv</name>
        <param>
          <type><ref refid="da/d34/a04592" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a029b10ffcd34418c2899ce0712414559" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateParticles</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>doUpdateParticles</name>
        <param>
          <type><ref refid="dc/d0d/a04588" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1ab2529263661bee14cce0387d936a7cc3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RenderTechnique::doUpdateParticles</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>doUpdateParticles</name>
        <param>
          <type><ref refid="da/d34/a04592" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a4f69f54d2152bd2f8cb42d6c3b7b93c0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::doRenderShadowMaps</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::Semaphore const &amp;semaphore)</argsstring>
        <name>doRenderShadowMaps</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::Semaphore const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a04bc9c06da75fd5f30f782beccfeaf25" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::doRenderLpv</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::Semaphore const &amp;semaphore)</argsstring>
        <name>doRenderLpv</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::Semaphore const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a6b220364ee41482fcd27df61a0bec666" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::doRenderEnvironmentMaps</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::Semaphore const &amp;semaphore)</argsstring>
        <name>doRenderEnvironmentMaps</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::Semaphore const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a4789756ecd98784dbeffa0910fc0a8da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::doRenderDepth</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::SemaphoreCRefArray const &amp;semaphores)</argsstring>
        <name>doRenderDepth</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::SemaphoreCRefArray const &amp;</type>
          <declname>semaphores</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a1102931e7b3b9ebe8ad1d5dd85550fd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::doRenderBackground</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::Semaphore const &amp;semaphore)</argsstring>
        <name>doRenderBackground</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::Semaphore const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1aeeafd5d0dd5e8e1c0dc72fe47f88fef3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::doRenderBackground</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::SemaphoreCRefArray const &amp;semaphores)</argsstring>
        <name>doRenderBackground</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::SemaphoreCRefArray const &amp;</type>
          <declname>semaphores</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1aed7336d329d4261547d656eea188a984" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::doRenderOpaque</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::Semaphore const &amp;semaphore)</argsstring>
        <name>doRenderOpaque</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::Semaphore const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d05/a04920_1a710ac15ed5de78c5210a142007e3e055" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ashes::Semaphore const  &amp;</type>
        <definition>ashes::Semaphore const&amp; castor3d::RenderTechnique::doRenderTransparent</definition>
        <argsstring>(RenderDevice const &amp;device, ashes::Semaphore const &amp;semaphore)</argsstring>
        <name>doRenderTransparent</name>
        <param>
          <type><ref refid="d1/def/a04512" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>ashes::Semaphore const &amp;</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Technique/RenderTechnique.hpp" line="273" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3076">
        <label>Named</label>
      </node>
      <node id="3075">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="3074">
        <label>castor3d::RenderTechnique</label>
        <link refid="da/d05/a04920"/>
        <childnode refid="3075" relation="public-inheritance">
        </childnode>
        <childnode refid="3076" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3079">
        <label>Named</label>
      </node>
      <node id="3078">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="3077">
        <label>castor3d::RenderTechnique</label>
        <link refid="da/d05/a04920"/>
        <childnode refid="3078" relation="public-inheritance">
        </childnode>
        <childnode refid="3079" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Render/Technique/RenderTechnique.hpp" line="35" column="1" bodyfile="Render/Technique/RenderTechnique.hpp" bodystart="32" bodyend="317"/>
    <listofallmembers>
      <member refid="da/d05/a04920_1a38d0ec1974652fad11db60b854eda44f" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>accept</name></member>
      <member refid="da/d05/a04920_1aa52f82ba80dcc81c38a5c818f92b6923" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>cleanup</name></member>
      <member refid="da/d05/a04920_1ad88f9e25ac0f5025f9a985662695847a" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doCleanupLpv</name></member>
      <member refid="da/d05/a04920_1a9cf347fa370f1264e453db444d6933ea" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doCleanupShadowMaps</name></member>
      <member refid="da/d05/a04920_1aee3b949d5b6eb84fec05bd6cda89cff9" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doCreateLpv</name></member>
      <member refid="da/d05/a04920_1af63798b64788795f009229b180ce9598" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doCreateShadowMaps</name></member>
      <member refid="da/d05/a04920_1aa41c18a55030ab1c6c6162862548ce0e" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doInitialiseBackgroundPass</name></member>
      <member refid="da/d05/a04920_1a9bc8473887b2db74afe1be4eed3faffc" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doInitialiseDepthPass</name></member>
      <member refid="da/d05/a04920_1a4150db604748cb4457d1becfaae11a6c" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doInitialiseLpv</name></member>
      <member refid="da/d05/a04920_1af0b399663b33e3196c89eb4ba04f9769" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doInitialiseOpaquePass</name></member>
      <member refid="da/d05/a04920_1adacb3b7152a74fae56a0dd7797fec4bc" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doInitialiseShadowMaps</name></member>
      <member refid="da/d05/a04920_1a80fe4c88815302cdf0d6dc2f5db2170d" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doInitialiseTransparentPass</name></member>
      <member refid="da/d05/a04920_1a1102931e7b3b9ebe8ad1d5dd85550fd1" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderBackground</name></member>
      <member refid="da/d05/a04920_1aeeafd5d0dd5e8e1c0dc72fe47f88fef3" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderBackground</name></member>
      <member refid="da/d05/a04920_1a4789756ecd98784dbeffa0910fc0a8da" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderDepth</name></member>
      <member refid="da/d05/a04920_1a6b220364ee41482fcd27df61a0bec666" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderEnvironmentMaps</name></member>
      <member refid="da/d05/a04920_1a04bc9c06da75fd5f30f782beccfeaf25" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderLpv</name></member>
      <member refid="da/d05/a04920_1aed7336d329d4261547d656eea188a984" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderOpaque</name></member>
      <member refid="da/d05/a04920_1a4f69f54d2152bd2f8cb42d6c3b7b93c0" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderShadowMaps</name></member>
      <member refid="da/d05/a04920_1a710ac15ed5de78c5210a142007e3e055" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doRenderTransparent</name></member>
      <member refid="da/d05/a04920_1aa30dab6f307082fdfebb6808ca429582" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateLpv</name></member>
      <member refid="da/d05/a04920_1ad8e6d68775be69e34b6935fb54b2e6e6" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateLpv</name></member>
      <member refid="da/d05/a04920_1a029b10ffcd34418c2899ce0712414559" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateParticles</name></member>
      <member refid="da/d05/a04920_1ab2529263661bee14cce0387d936a7cc3" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateParticles</name></member>
      <member refid="da/d05/a04920_1ab417433dd28482feed90f7c6b3c3fb28" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateShadowMaps</name></member>
      <member refid="da/d05/a04920_1a1bfb00168961873705ec089d3f3107ce" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>doUpdateShadowMaps</name></member>
      <member refid="da/d05/a04920_1aafea09395c3f5273d5a51e522cf33fb1" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDebugConfig</name></member>
      <member refid="da/d05/a04920_1a4d9f3cc1c189619de3371b51cdc92612" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDebugConfig</name></member>
      <member refid="da/d05/a04920_1af5ad3c6d3d5634119f7dc0632969a514" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDepth</name></member>
      <member refid="da/d05/a04920_1a34f98718c166e931b30baf0ee454659b" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getDepthPtr</name></member>
      <member refid="da/d05/a04920_1a4c1b44a1dc97be41e056176e80881581" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getMatrixUbo</name></member>
      <member refid="da/d05/a04920_1a5fb5e2566641a961c1bc70e01b6064c6" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getMatrixUbo</name></member>
      <member refid="da/d05/a04920_1a995ee917a0a9e8677459ac922160d2fb" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getOpaquePass</name></member>
      <member refid="da/d05/a04920_1a36fdeba21727d3b4a72db8d861354d6c" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getRenderTarget</name></member>
      <member refid="da/d05/a04920_1a42d7b7da30a673aaf697ce841e959ae6" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getResult</name></member>
      <member refid="da/d05/a04920_1a28f430e15954fffe7150f653f6508d01" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSemaphore</name></member>
      <member refid="da/d05/a04920_1a02340c2adfe07f0e2bf5f647a751965d" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getShadowMaps</name></member>
      <member refid="da/d05/a04920_1a04bc779bf46caad5492a103bc3c23da7" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSize</name></member>
      <member refid="da/d05/a04920_1a102f5c29a904ae5fdc62318943c0f66b" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSsaoConfig</name></member>
      <member refid="da/d05/a04920_1af0ea4d33db87fff7c265495f61ad6ee9" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getSsaoConfig</name></member>
      <member refid="da/d05/a04920_1a1e162e613219c5ed9f327f79590e7f3a" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>getTransparentPass</name></member>
      <member refid="da/d05/a04920_1a24527c3e71308c838612fe148cf31db4" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>initialise</name></member>
      <member refid="da/d05/a04920_1a17c12a1a7b458a7956baf183dea253cf" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>isMultisampling</name></member>
      <member refid="da/d05/a04920_1aeb5415674465e9513659afb02cca99a8" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_activeShadowMaps</name></member>
      <member refid="da/d05/a04920_1aba8f98e0cd4417e558b0ba92bca5cc5d" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_allShadowMaps</name></member>
      <member refid="da/d05/a04920_1a2d46f4f97abf40a31d8885f14d1eea2a" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_bgCommandBuffer</name></member>
      <member refid="da/d05/a04920_1a6828c1e0e9b765f187180a9888bc5093" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_bgFrameBuffer</name></member>
      <member refid="da/d05/a04920_1a90259c70dcb2d3adef10a35f5433dc68" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_bgRenderPass</name></member>
      <member refid="da/d05/a04920_1a776830c20911a421d1aeeae211959b6a" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_cbgCommandBuffer</name></member>
      <member refid="da/d05/a04920_1ab6a7f3fe38973885538126319e954a38" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_clearLpv</name></member>
      <member refid="da/d05/a04920_1af0882792ca1cdaffaa60e0a0380ae019" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_colorTexTransition</name></member>
      <member refid="da/d05/a04920_1af7c3afd2a025b13af3d8dda15ab7b961" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_colourTexture</name></member>
      <member refid="da/d05/a04920_1a584621411ef10016c7bf3d50e6118a8b" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_debugConfig</name></member>
      <member refid="da/d05/a04920_1aa6c3f2ee278d3b4fa4bba9cbcc5203e5" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_deferredRendering</name></member>
      <member refid="da/d05/a04920_1a53b649807bc4bed82c02806d9a2fe882" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_depthBuffer</name></member>
      <member refid="da/d05/a04920_1ae52fc2d343e8aa0ea69ba10564e760dd" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_depthPass</name></member>
      <member refid="da/d05/a04920_1abc5461d317086d163c5ae68914439a0c" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_directionalShadowMap</name></member>
      <member refid="da/d05/a04920_1a1cd745f80592734bf9aef76a7a3d4b4d" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_gpInfoUbo</name></member>
      <member refid="da/d05/a04920_1a6d72d68742c1594981b324d59243e06f" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_initialised</name></member>
      <member refid="da/d05/a04920_1a8780a89774be87c7113a3adfbe0f744a" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_layeredLightPropagationVolumes</name></member>
      <member refid="da/d05/a04920_1ad5485f4ff8da25ed3e84c3bedb12d9f5" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_layeredLightPropagationVolumesG</name></member>
      <member refid="da/d05/a04920_1a70fd625e037b0bb5485d4f0f7eb2f7a0" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_lightPropagationVolumes</name></member>
      <member refid="da/d05/a04920_1a9895fda6bc928a4b32d3c5a62d0c2757" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_lightPropagationVolumesG</name></member>
      <member refid="da/d05/a04920_1ab2aa7c0710ba3fb73bddda4d9db9ba15" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_llpvConfigUbo</name></member>
      <member refid="da/d05/a04920_1a2675ebf80b8fe0253761f240eb7bf441" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_llpvResult</name></member>
      <member refid="da/d05/a04920_1af0de85f9c121b55bc794d502df27258b" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_lpvConfigUbo</name></member>
      <member refid="da/d05/a04920_1a881a5764b5f9d6934787413453a4b3ac" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_lpvResult</name></member>
      <member refid="da/d05/a04920_1a6925c2e5d89073990c625857dbde68dd" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_matrixUbo</name></member>
      <member refid="da/d05/a04920_1a884a570c694cb723bb944a98f2bea6dc" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_onBgChanged</name></member>
      <member refid="da/d05/a04920_1af4e1e004f8d61466a1a2b9d5ecf6e27d" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_onCBgChanged</name></member>
      <member refid="da/d05/a04920_1a7e21187a54dee5666f10c3a871f29863" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_opaquePass</name></member>
      <member refid="da/d05/a04920_1a58448fbedf618228b1f611fe2b7b5ad9" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_particleTimer</name></member>
      <member refid="da/d05/a04920_1a4495ba76e40c7ee8495b9be956c99996" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_pointShadowMap</name></member>
      <member refid="da/d05/a04920_1a53645af8da3134595a0e0d0479cbfd71" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_renderSystem</name></member>
      <member refid="da/d05/a04920_1a567ad614522a3960905fe009907a9119" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_renderTarget</name></member>
      <member refid="da/d05/a04920_1a8405f39d060d3e1e2d3dcf7f21a753d4" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_signalFinished</name></member>
      <member refid="da/d05/a04920_1a131b858ac6d0f687a695208c5c9ee9c9" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_size</name></member>
      <member refid="da/d05/a04920_1a9c3a8a67fb97d69baeb1fed7a492fbbd" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_spotShadowMap</name></member>
      <member refid="da/d05/a04920_1ad7ad0e239066686d448b38ee3b3f5e28" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_ssaoConfig</name></member>
      <member refid="da/d05/a04920_1af20ae81bed0e8a6a51b87015c778a540" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_transparentPass</name></member>
      <member refid="da/d05/a04920_1a06e44e2b810b562ef6832c8bcb5c1f02" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_vctConfigUbo</name></member>
      <member refid="da/d05/a04920_1a309fdd0a318ea6c0ff6b760326344350" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_voxelizer</name></member>
      <member refid="da/d05/a04920_1ab0058313c957658648f400a6d2542f0b" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>m_weightedBlendRendering</name></member>
      <member refid="da/d05/a04920_1a1e67794a8cbd8f748901273c055d623a" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>render</name></member>
      <member refid="da/d05/a04920_1a050bf38d70c1875fb35d4e997b45eb0c" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>RenderTechnique</name></member>
      <member refid="da/d05/a04920_1a8a9a2e56d4e385004fa8100d6c7e7496" prot="private" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>RenderTechniquePass</name></member>
      <member refid="da/d05/a04920_1a8041804a8d37587ec2e005122a90f6a3" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>ShadowMapArray</name></member>
      <member refid="da/d05/a04920_1a3ac035aec4905eb6d75b1d332a8598c8" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>update</name></member>
      <member refid="da/d05/a04920_1a1c8b000b7edec5f90f18271f83e108fb" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>update</name></member>
      <member refid="da/d05/a04920_1a1e0b4979e57b7c404f2aca8acc9ae4b3" prot="public" virt="non-virtual"><scope>castor3d::RenderTechnique</scope><name>writeInto</name></member>
      <member refid="da/d05/a04920_1a22f6b51c66793703d676b1587248d098" prot="public" virt="virtual"><scope>castor3d::RenderTechnique</scope><name>~RenderTechnique</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
