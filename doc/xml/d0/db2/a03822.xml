<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d0/db2/a03822" kind="class" language="C++" prot="public">
    <compoundname>castor3d::ParametersT</compoundname>
    <includes local="no">Parameter.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>KeyT</declname>
        <defname>KeyT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d0/db2/a03822_1a0b6c14c5ab579f8725c3f0588987eda9" prot="private" static="no" mutable="no">
        <type>ParamNameMap</type>
        <definition>ParamNameMap castor3d::ParametersT&lt; KeyT &gt;::m_values</definition>
        <argsstring></argsstring>
        <name>m_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="337" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="337" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/db2/a03822_1a3c87031795661b1ec12983dc1c1599fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::ParametersT&lt; KeyT &gt;::ParametersT</definition>
        <argsstring>()</argsstring>
        <name>ParametersT</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="25" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1a60463ea4c2817dcf8633e73a7f307b48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::ParametersT&lt; KeyT &gt;::~ParametersT</definition>
        <argsstring>()</argsstring>
        <name>~ParametersT</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="34" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1a96cb2145223019c28b190229001f6be5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::ParametersT&lt; KeyT &gt;::parse</definition>
        <argsstring>(castor::String const &amp;text)</argsstring>
        <name>parse</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Parses the given text into a parameters list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">text</parametername>
</parameternamelist>
<parameterdescription>
<para>The source text. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="45" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="45" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1ad5db1be40b7fb695857dd9e36c1fcbff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::add</definition>
        <argsstring>(KeyT const &amp;name, ValueT *values, uint32_t count)</argsstring>
        <name>add</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>adds a parameter </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>If a parameter with the given name already exists, nothing is done </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>The values count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if a parameter with the given name already exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="88" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="88" bodyend="104"/>
        <referencedby refid="d0/db2/a03822_1a308156a2a8619c89a52f64b2c391efc3" compoundref="dc/dc9/a00389" startline="135" endline="139">castor3d::ParametersT&lt; castor::String &gt;::add</referencedby>
        <referencedby refid="d0/db2/a03822_1a96cb2145223019c28b190229001f6be5" compoundref="dc/dc9/a00389" startline="45" endline="70">castor3d::ParametersT&lt; castor::String &gt;::parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1a752ae446e1a04e0bc407260458af0ab8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::ParametersT&lt; KeyT &gt;::add</definition>
        <argsstring>(ParametersT const &amp;parameters)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="d0/db2/a03822" kindref="compound">ParametersT</ref> const &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>adds a parameters list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="113" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="113" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1a308156a2a8619c89a52f64b2c391efc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::add</definition>
        <argsstring>(KeyT const &amp;name, ValueT const(&amp;values)[N])</argsstring>
        <name>add</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ValueT const(&amp;)</type>
          <declname>values</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
<para>adds a parameter </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>If a parameter with the given name already exists, nothing is done </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if a parameter with the given name already exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="135" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1ae41f7406dafca84065a61cc27b6fc986" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::add</definition>
        <argsstring>(KeyT const &amp;name, ValueT const &amp;value)</argsstring>
        <name>add</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ValueT const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>adds a parameter </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>If a parameter with the given name already exists, nothing is done </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if a parameter with the given name already exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="155" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1aa632d31dbf2ec8449dc4ad022c2fac0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::add</definition>
        <argsstring>(KeyT const &amp;name, castor::String const &amp;value)</argsstring>
        <name>add</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>adds a string parameter </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>If a parameter with the given name already exists, nothing is done </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if a parameter with the given name already exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="174" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="174" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1a77dfeca82fa204f525df3fd314fbf9a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::set</definition>
        <argsstring>(KeyT const &amp;name, ValueT const &amp;value)</argsstring>
        <name>set</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ValueT const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if there is no parameter with the given name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="204" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="204" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1ad96af3a75d355cbb66a288d3c5776117" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::get</definition>
        <argsstring>(KeyT const &amp;name, ValueT *values, uint32_t count) const</argsstring>
        <name>get</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>The values available count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if there is no parameter with the given name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="233" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="233" bodyend="250"/>
        <referencedby refid="d0/db2/a03822_1ab2b2cb427182b47fde46cbbec82a2578" compoundref="dc/dc9/a00389" startline="264" endline="268">castor3d::ParametersT&lt; castor::String &gt;::get</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1ab2b2cb427182b47fde46cbbec82a2578" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::get</definition>
        <argsstring>(KeyT const &amp;name, ValueT &amp;value) const</argsstring>
        <name>get</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ValueT &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if there is no parameter with the given name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="264" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1a11ebc07545b4a4c273f4ee8f0c04d661" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::get</definition>
        <argsstring>(KeyT const &amp;name, ValueT(&amp;values)[N]) const</argsstring>
        <name>get</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>ValueT(&amp;)</type>
          <declname>values</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
<para>Retrieves a parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if there is no parameter with the given name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="282" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="282" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1ad29b8a638f6c203ca2198f6efebd990b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::ParametersT&lt; KeyT &gt;::get</definition>
        <argsstring>(KeyT const &amp;name, castor::String &amp;value) const</argsstring>
        <name>get</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>castor::String &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if there is no parameter with the given name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="299" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="299" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1ad57408a3beec0e65cac1ad1076c08e99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueT</type>
          </param>
        </templateparamlist>
        <type>ValueT</type>
        <definition>ValueT castor3d::ParametersT&lt; KeyT &gt;::get</definition>
        <argsstring>(KeyT const &amp;name) const</argsstring>
        <name>get</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieves a parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="322" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="322" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1a788809b2719ae6bd194e186572157ccb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t castor3d::ParametersT&lt; KeyT &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="329" column="1" bodyfile="Miscellaneous/Parameter.hpp" bodystart="329" bodyend="332"/>
        <referencedby refid="d0/db2/a03822_1aa632d31dbf2ec8449dc4ad022c2fac0c" compoundref="dc/dc9/a00389" startline="174" endline="190">castor3d::ParametersT&lt; castor::String &gt;::add</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d0/db2/a03822_1a0a56400136af3687df2e576411636114" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::ParametersT&lt; KeyT &gt;::CU_DeclareVector</definition>
        <argsstring>(uint8_t, Byte)</argsstring>
        <name>CU_DeclareVector</name>
        <param>
          <type>uint8_t</type>
        </param>
        <param>
          <type>Byte</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/db2/a03822_1a0b812d32700f91d14897935f83d08015" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::ParametersT&lt; KeyT &gt;::CU_DeclareTemplateMap</definition>
        <argsstring>(KeyT, ByteArray, ParamName)</argsstring>
        <name>CU_DeclareTemplateMap</name>
        <param>
          <type>KeyT</type>
        </param>
        <param>
          <type>ByteArray</type>
        </param>
        <param>
          <type>ParamName</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous/Parameter.hpp" line="336" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration parameters. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para>Pair of a name and binary data. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2518">
        <label>castor3d::ParametersT&lt; castor::String &gt;</label>
        <link refid="d0/db2/a03822"/>
        <childnode refid="2517" relation="template-instance">
          <edgelabel>&lt; castor::String &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2517">
        <label>castor3d::ParametersT&lt; KeyT &gt;</label>
        <link refid="d0/db2/a03822"/>
      </node>
    </inheritancegraph>
    <location file="Miscellaneous/MiscellaneousModule.hpp" line="133" column="1" bodyfile="Miscellaneous/MiscellaneousModule.hpp" bodystart="133" bodyend="-1"/>
    <listofallmembers>
      <member refid="d0/db2/a03822_1ad5db1be40b7fb695857dd9e36c1fcbff" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>add</name></member>
      <member refid="d0/db2/a03822_1a752ae446e1a04e0bc407260458af0ab8" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>add</name></member>
      <member refid="d0/db2/a03822_1a308156a2a8619c89a52f64b2c391efc3" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>add</name></member>
      <member refid="d0/db2/a03822_1ae41f7406dafca84065a61cc27b6fc986" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>add</name></member>
      <member refid="d0/db2/a03822_1aa632d31dbf2ec8449dc4ad022c2fac0c" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>add</name></member>
      <member refid="d0/db2/a03822_1a0b812d32700f91d14897935f83d08015" prot="private" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>CU_DeclareTemplateMap</name></member>
      <member refid="d0/db2/a03822_1a0a56400136af3687df2e576411636114" prot="private" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>CU_DeclareVector</name></member>
      <member refid="d0/db2/a03822_1ad96af3a75d355cbb66a288d3c5776117" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>get</name></member>
      <member refid="d0/db2/a03822_1ab2b2cb427182b47fde46cbbec82a2578" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>get</name></member>
      <member refid="d0/db2/a03822_1a11ebc07545b4a4c273f4ee8f0c04d661" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>get</name></member>
      <member refid="d0/db2/a03822_1ad29b8a638f6c203ca2198f6efebd990b" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>get</name></member>
      <member refid="d0/db2/a03822_1ad57408a3beec0e65cac1ad1076c08e99" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>get</name></member>
      <member refid="d0/db2/a03822_1a0b6c14c5ab579f8725c3f0588987eda9" prot="private" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>m_values</name></member>
      <member refid="d0/db2/a03822_1a3c87031795661b1ec12983dc1c1599fd" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>ParametersT</name></member>
      <member refid="d0/db2/a03822_1a96cb2145223019c28b190229001f6be5" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>parse</name></member>
      <member refid="d0/db2/a03822_1a77dfeca82fa204f525df3fd314fbf9a9" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>set</name></member>
      <member refid="d0/db2/a03822_1a788809b2719ae6bd194e186572157ccb" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>size</name></member>
      <member refid="d0/db2/a03822_1a60463ea4c2817dcf8633e73a7f307b48" prot="public" virt="non-virtual"><scope>castor3d::ParametersT</scope><name>~ParametersT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
