<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="fr">
  <compounddef id="d7/d51/a06999" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::LightCategory</compoundname>
    <derivedcompoundref refid="dc/d23/a06983" prot="public" virt="non-virtual">castor3d::DirectionalLight</derivedcompoundref>
    <derivedcompoundref refid="d7/dc6/a07035" prot="public" virt="non-virtual">castor3d::PointLight</derivedcompoundref>
    <derivedcompoundref refid="d9/d9d/a07039" prot="public" virt="non-virtual">castor3d::SpotLight</derivedcompoundref>
    <includes local="no">LightCategory.hpp</includes>
    <innerclass refid="d7/d3b/a07003" prot="public">castor3d::LightCategory::LightData</innerclass>
    <sectiondef kind="user-defined">
      <memberdef kind="function" id="d7/d51/a06999_1a1fdb3e7afdb8be2e8b3d1f5453cf72fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::LightCategory::getVolumetricSteps</definition>
        <argsstring>() const</argsstring>
        <name>getVolumetricSteps</name>
        <qualifiedname>castor3d::LightCategory::getVolumetricSteps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Accesseurs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="111" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a4b0881f2bdcfa98c6e36aaeceb8f937a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> float</type>
        <definition>C3D_API float castor3d::LightCategory::getVolumetricScatteringFactor</definition>
        <argsstring>() const</argsstring>
        <name>getVolumetricScatteringFactor</name>
        <qualifiedname>castor3d::LightCategory::getVolumetricScatteringFactor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="112" column="15"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ad344cbddb177d6c50b8d9485513f17da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Point2f const &amp;</type>
        <definition>C3D_API castor::Point2f const  &amp; castor3d::LightCategory::getShadowRawOffsets</definition>
        <argsstring>() const</argsstring>
        <name>getShadowRawOffsets</name>
        <qualifiedname>castor3d::LightCategory::getShadowRawOffsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="113" column="32"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a23f5abcfb09f64189d2f28a05f1f1cc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Point2f const &amp;</type>
        <definition>C3D_API castor::Point2f const  &amp; castor3d::LightCategory::getShadowPcfOffsets</definition>
        <argsstring>() const</argsstring>
        <name>getShadowPcfOffsets</name>
        <qualifiedname>castor3d::LightCategory::getShadowPcfOffsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="114" column="32"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1adf166a88980c56276139d451f9d35edd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> float</type>
        <definition>C3D_API float castor3d::LightCategory::getVsmMinVariance</definition>
        <argsstring>() const</argsstring>
        <name>getVsmMinVariance</name>
        <qualifiedname>castor3d::LightCategory::getVsmMinVariance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="115" column="15"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ab97675f7a00f658a9e764063e28e10f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> float</type>
        <definition>C3D_API float castor3d::LightCategory::getVsmLightBleedingReduction</definition>
        <argsstring>() const</argsstring>
        <name>getVsmLightBleedingReduction</name>
        <qualifiedname>castor3d::LightCategory::getVsmLightBleedingReduction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="116" column="15"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ac8cb3937499220711655a1eeed1fb012" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d8/de9/a09211" kindref="compound">castor::RangedValue</ref>&lt; uint32_t &gt;</type>
        <definition>C3D_API castor::RangedValue&lt; uint32_t &gt; castor3d::LightCategory::getShadowPcfFilterSize</definition>
        <argsstring>() const</argsstring>
        <name>getShadowPcfFilterSize</name>
        <qualifiedname>castor3d::LightCategory::getShadowPcfFilterSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="117" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a43eb82ce5c88a14b618608aeab6bc2e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d8/de9/a09211" kindref="compound">castor::RangedValue</ref>&lt; uint32_t &gt;</type>
        <definition>C3D_API castor::RangedValue&lt; uint32_t &gt; castor3d::LightCategory::getShadowPcfSampleCount</definition>
        <argsstring>() const</argsstring>
        <name>getShadowPcfSampleCount</name>
        <qualifiedname>castor3d::LightCategory::getShadowPcfSampleCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="118" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a1012a2f07cb70d5e2780a9990b02bd15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d7/dba/a07283" kindref="compound">ShadowConfig</ref> const &amp;</type>
        <definition>C3D_API ShadowConfig const  &amp; castor3d::LightCategory::getShadowConfig</definition>
        <argsstring>() const</argsstring>
        <name>getShadowConfig</name>
        <qualifiedname>castor3d::LightCategory::getShadowConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="119" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1adcb072b802c78c888dad48607a603bf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="dd/d51/a06023" kindref="compound">LpvConfig</ref> const &amp;</type>
        <definition>C3D_API LpvConfig const  &amp; castor3d::LightCategory::getLpvConfig</definition>
        <argsstring>() const</argsstring>
        <name>getLpvConfig</name>
        <qualifiedname>castor3d::LightCategory::getLpvConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="120" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a64522c60f1f11b59f7ae2e9968140ab4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dba/a02278_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
        <definition>LightType castor3d::LightCategory::getLightType</definition>
        <argsstring>() const</argsstring>
        <name>getLightType</name>
        <qualifiedname>castor3d::LightCategory::getLightType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="122" column="11" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ae63ee4d4bce64b4137b012e6d9db682c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::LightCategory::getLightComponentCount</definition>
        <argsstring>() const</argsstring>
        <name>getLightComponentCount</name>
        <qualifiedname>castor3d::LightCategory::getLightComponentCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="127" column="10" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ac9fd852d37898f8931299e2604c4849d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::LightCategory::getShadowComponentCount</definition>
        <argsstring>() const</argsstring>
        <name>getShadowComponentCount</name>
        <qualifiedname>castor3d::LightCategory::getShadowComponentCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="132" column="10" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a0e953d6e6965fb1ef782e3bdd6fe469d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::LightCategory::getDiffuseIntensity</definition>
        <argsstring>() const</argsstring>
        <name>getDiffuseIntensity</name>
        <qualifiedname>castor3d::LightCategory::getDiffuseIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="137" column="7" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a9189a1586f231e8bb99f7bdbaa432284" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::LightCategory::getSpecularIntensity</definition>
        <argsstring>() const</argsstring>
        <name>getSpecularIntensity</name>
        <qualifiedname>castor3d::LightCategory::getSpecularIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="142" column="7" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a357763c66670a16d97628ee55b7739f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point2f const &amp;</type>
        <definition>castor::Point2f const  &amp; castor3d::LightCategory::getIntensity</definition>
        <argsstring>() const</argsstring>
        <name>getIntensity</name>
        <qualifiedname>castor3d::LightCategory::getIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="147" column="24" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ab6f2d4d170e620f0f84c642b45bcc0fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::LightCategory::getFarPlane</definition>
        <argsstring>() const</argsstring>
        <name>getFarPlane</name>
        <qualifiedname>castor3d::LightCategory::getFarPlane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="152" column="7" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="152" bodyend="155"/>
        <references refid="d7/d51/a06999_1a510f474ea2102b2cdb6ea5683f165d66" compoundref="d9/d8b/a01469" startline="248" endline="248">m_farPlane</references>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a1dd1f113237c1d296c0dbdbf06088800" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point3f const &amp;</type>
        <definition>castor::Point3f const  &amp; castor3d::LightCategory::getColour</definition>
        <argsstring>() const</argsstring>
        <name>getColour</name>
        <qualifiedname>castor3d::LightCategory::getColour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="157" column="24" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1acb29137feb5442673c0f39896c507fac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d3c/a06987" kindref="compound">Light</ref> const &amp;</type>
        <definition>Light const  &amp; castor3d::LightCategory::getLight</definition>
        <argsstring>() const</argsstring>
        <name>getLight</name>
        <qualifiedname>castor3d::LightCategory::getLight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="162" column="14" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a0de76278c61625bfd8fc05a9fd612970" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d51/a08727" kindref="compound">castor::BoundingBox</ref> const &amp;</type>
        <definition>castor::BoundingBox const  &amp; castor3d::LightCategory::getBoundingBox</definition>
        <argsstring>() const</argsstring>
        <name>getBoundingBox</name>
        <qualifiedname>castor3d::LightCategory::getBoundingBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="167" column="28" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="167" bodyend="170"/>
        <references refid="d7/d51/a06999_1a28a4f8b94fa6ff89c9aa57e2dae75672" compoundref="d9/d8b/a01469" startline="245">m_cubeBox</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <memberdef kind="function" id="d7/d51/a06999_1a92e545bfabd12248ac2aa0409d9b1fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setVolumetricSteps</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>setVolumetricSteps</name>
        <qualifiedname>castor3d::LightCategory::setVolumetricSteps</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Mutateurs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="181" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a540bf2d551c26998f6257cbf3862abe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setVolumetricScatteringFactor</definition>
        <argsstring>(float value)</argsstring>
        <name>setVolumetricScatteringFactor</name>
        <qualifiedname>castor3d::LightCategory::setVolumetricScatteringFactor</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="182" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a4a20cb9dd9760352ebacffcbd8febaec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setRawMinOffset</definition>
        <argsstring>(float value)</argsstring>
        <name>setRawMinOffset</name>
        <qualifiedname>castor3d::LightCategory::setRawMinOffset</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="183" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a74565f5a3f7bdfdb7ebc0aee97a55960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setRawMaxSlopeOffset</definition>
        <argsstring>(float value)</argsstring>
        <name>setRawMaxSlopeOffset</name>
        <qualifiedname>castor3d::LightCategory::setRawMaxSlopeOffset</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="184" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1abbb7ac4dd057bd9b5c809822d2600959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setPcfMinOffset</definition>
        <argsstring>(float value)</argsstring>
        <name>setPcfMinOffset</name>
        <qualifiedname>castor3d::LightCategory::setPcfMinOffset</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="185" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ae0babdad467b1d890595403c7aa02065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setPcfMaxSlopeOffset</definition>
        <argsstring>(float value)</argsstring>
        <name>setPcfMaxSlopeOffset</name>
        <qualifiedname>castor3d::LightCategory::setPcfMaxSlopeOffset</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="186" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1aa7fa6950226db63bb1b49567d2ac622a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setPcfFilterSize</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>setPcfFilterSize</name>
        <qualifiedname>castor3d::LightCategory::setPcfFilterSize</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="187" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a28c48e4fd0d2c9d20376f5aff2636574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setPcfSampleCount</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>setPcfSampleCount</name>
        <qualifiedname>castor3d::LightCategory::setPcfSampleCount</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="188" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a2afe484cd970eea4c4568d392b5c13ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setVsmMinVariance</definition>
        <argsstring>(float value)</argsstring>
        <name>setVsmMinVariance</name>
        <qualifiedname>castor3d::LightCategory::setVsmMinVariance</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="189" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a76cab8c08601eb5f7a7519c2823a2c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setVsmLightBleedingReduction</definition>
        <argsstring>(float value)</argsstring>
        <name>setVsmLightBleedingReduction</name>
        <qualifiedname>castor3d::LightCategory::setVsmLightBleedingReduction</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="190" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1aed6673624b672394258be181c447eb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setColour</definition>
        <argsstring>(castor::Point3f const &amp;value)</argsstring>
        <name>setColour</name>
        <qualifiedname>castor3d::LightCategory::setColour</qualifiedname>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="191" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ac031bef3179ebbec519eedcc0b192dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setIntensity</definition>
        <argsstring>(castor::Point2f const &amp;value)</argsstring>
        <name>setIntensity</name>
        <qualifiedname>castor3d::LightCategory::setIntensity</qualifiedname>
        <param>
          <type>castor::Point2f const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="192" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ab28a4cda00a38263af9d9bf743eab34b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setDiffuseIntensity</definition>
        <argsstring>(float value)</argsstring>
        <name>setDiffuseIntensity</name>
        <qualifiedname>castor3d::LightCategory::setDiffuseIntensity</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="193" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a525add2d3b3f08be7bb332b3f079b2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setSpecularIntensity</definition>
        <argsstring>(float value)</argsstring>
        <name>setSpecularIntensity</name>
        <qualifiedname>castor3d::LightCategory::setSpecularIntensity</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="194" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a1f973301722581e083d5a8a2893ee88e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d3c/a06987" kindref="compound">Light</ref> &amp;</type>
        <definition>Light &amp; castor3d::LightCategory::getLight</definition>
        <argsstring>()</argsstring>
        <name>getLight</name>
        <qualifiedname>castor3d::LightCategory::getLight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="196" column="8" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a67ab3b182b474ea5f4bf2b59d7d1344e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point3f &amp;</type>
        <definition>castor::Point3f &amp; castor3d::LightCategory::getColour</definition>
        <argsstring>()</argsstring>
        <name>getColour</name>
        <qualifiedname>castor3d::LightCategory::getColour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="201" column="18" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a3ed7681f80c08f39f442f45a1c976bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point2f &amp;</type>
        <definition>castor::Point2f &amp; castor3d::LightCategory::getIntensity</definition>
        <argsstring>()</argsstring>
        <name>getIntensity</name>
        <qualifiedname>castor3d::LightCategory::getIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="206" column="18" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="206" bodyend="209"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="d7/d51/a06999_1a27862a9fe512b352f98ec1c054680edd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Light</definition>
        <argsstring></argsstring>
        <name>Light</name>
        <qualifiedname>castor3d::LightCategory::Light</qualifiedname>
        <param>
          <type><ref refid="da/d3c/a06987" kindref="compound">Light</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="19" column="14" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d7/d51/a06999_1a8621916e72c27c8933978fee0a2141f2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>uint32_t constexpr</type>
        <definition>uint32_t constexpr castor3d::LightCategory::LightMbrAlign</definition>
        <argsstring></argsstring>
        <name>LightMbrAlign</name>
        <qualifiedname>castor3d::LightCategory::LightMbrAlign</qualifiedname>
        <initializer>= 4u * sizeof( float )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="54" column="27" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/d51/a06999_1a42e688cef4bd84519bf211c023018d62" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dba/a02278_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
        <definition>LightType castor3d::LightCategory::m_lightType</definition>
        <argsstring></argsstring>
        <name>m_lightType</name>
        <qualifiedname>castor3d::LightCategory::m_lightType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="213" column="11" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d51/a06999_1a3b3f6f3faa9d1760154ad47129eff4c9" prot="private" static="no" mutable="no">
        <type><ref refid="da/d3c/a06987" kindref="compound">Light</ref> &amp;</type>
        <definition>Light&amp; castor3d::LightCategory::m_light</definition>
        <argsstring></argsstring>
        <name>m_light</name>
        <qualifiedname>castor3d::LightCategory::m_light</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="214" column="8" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d51/a06999_1a35131b4cb16fd650b556a614a179557c" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::LightCategory::m_lightComponentCount</definition>
        <argsstring></argsstring>
        <name>m_lightComponentCount</name>
        <qualifiedname>castor3d::LightCategory::m_lightComponentCount</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="215" column="10" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d51/a06999_1abd66f660ed2ebdc565fecd76c0a81318" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::LightCategory::m_shadowComponentCount</definition>
        <argsstring></argsstring>
        <name>m_shadowComponentCount</name>
        <qualifiedname>castor3d::LightCategory::m_shadowComponentCount</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="216" column="10" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d51/a06999_1a39cc643d1072dfb5ba0cabf2185cd7cd" prot="private" static="no" mutable="no">
        <type>castor::Point3f</type>
        <definition>castor::Point3f castor3d::LightCategory::m_colour</definition>
        <argsstring></argsstring>
        <name>m_colour</name>
        <qualifiedname>castor3d::LightCategory::m_colour</qualifiedname>
        <initializer>{ 1.0, 1.0, 1.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="217" column="17" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d51/a06999_1aee05883af967c7aaa619b9f3d1098949" prot="private" static="no" mutable="no">
        <type>castor::Point2f</type>
        <definition>castor::Point2f castor3d::LightCategory::m_intensity</definition>
        <argsstring></argsstring>
        <name>m_intensity</name>
        <qualifiedname>castor3d::LightCategory::m_intensity</qualifiedname>
        <initializer>{ 1.0, 1.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="218" column="17" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="218" bodyend="218"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d7/d51/a06999_1a28a4f8b94fa6ff89c9aa57e2dae75672" prot="protected" static="no" mutable="no">
        <type><ref refid="d6/d51/a08727" kindref="compound">castor::BoundingBox</ref></type>
        <definition>castor::BoundingBox castor3d::LightCategory::m_cubeBox</definition>
        <argsstring></argsstring>
        <name>m_cubeBox</name>
        <qualifiedname>castor3d::LightCategory::m_cubeBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>La cube box pour le volume d&apos;effet de la lumière. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="245" column="21" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="245" bodyend="-1"/>
        <referencedby refid="d7/d51/a06999_1a0de76278c61625bfd8fc05a9fd612970" compoundref="d9/d8b/a01469" startline="167" endline="170">getBoundingBox</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/d51/a06999_1a510f474ea2102b2cdb6ea5683f165d66" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float castor3d::LightCategory::m_farPlane</definition>
        <argsstring></argsstring>
        <name>m_farPlane</name>
        <qualifiedname>castor3d::LightCategory::m_farPlane</qualifiedname>
        <initializer>{ 1.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>La profondeur du plan éloigné. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="248" column="7" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="248" bodyend="248"/>
        <referencedby refid="d7/d51/a06999_1ab6f2d4d170e620f0f84c642b45bcc0fd" compoundref="d9/d8b/a01469" startline="152" endline="155">getFarPlane</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="d7/d51/a06999_1aadfc8d83b98edd672b54b5cfeeae0ec2" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::LightCategory::LightCategory</definition>
        <argsstring>(LightType lightType, Light &amp;light, uint32_t lightComponentCount, uint32_t shadowComponentCount)</argsstring>
        <name>LightCategory</name>
        <qualifiedname>castor3d::LightCategory::LightCategory</qualifiedname>
        <param>
          <type><ref refid="d9/dba/a02278_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>lightType</declname>
        </param>
        <param>
          <type><ref refid="da/d3c/a06987" kindref="compound">Light</ref> &amp;</type>
          <declname>light</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lightComponentCount</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>shadowComponentCount</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lightType</parametername>
</parameternamelist>
<parameterdescription>
<para>Le type de catégorie de lumière. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">light</parametername>
</parameternamelist>
<parameterdescription>
<para>La <ref refid="da/d3c/a06987" kindref="compound">Light</ref> parente. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lightComponentCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nombre de vec4 utilisés pour stocker les données de lumière. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shadowComponentCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Le nombre de vec4 utilisés pour stocker les données d&apos;ombres. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="36" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a003e3403bfd9107825cd963e9903d901" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::doFillBaseShadowData</definition>
        <argsstring>(BaseShadowData &amp;data) const</argsstring>
        <name>doFillBaseShadowData</name>
        <qualifiedname>castor3d::LightCategory::doFillBaseShadowData</qualifiedname>
        <param>
          <type><ref refid="d5/d14/a07019" kindref="compound">BaseShadowData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Met les données d&apos;ombre dans le buffer donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les données d&apos;ombres de la source lumineuse. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="257" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d51/a06999_1a43b97e0443a7c59fac134d2f3292e11a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>virtual C3D_API castor3d::LightCategory::~LightCategory</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~LightCategory</name>
        <qualifiedname>castor3d::LightCategory::~LightCategory</qualifiedname>
        <briefdescription>
<para>Destructeur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="63" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a34386a8cdce8cddd885daa4e906ad4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::LightCategory::update</definition>
        <argsstring>()=0</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::LightCategory::update</qualifiedname>
        <reimplementedby refid="dc/d23/a06983_1a4aac08296c8c137f835e418d3276963f">update</reimplementedby>
        <reimplementedby refid="d7/dc6/a07035_1a0cabf7c21bd275943f54e6c7a6c1bf49">update</reimplementedby>
        <reimplementedby refid="d9/d9d/a07039_1a89ee1f4b1d6931fd838eada16da3e410">update</reimplementedby>
        <briefdescription>
<para>Met la source à jour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="70" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a874bb5fe798d648010a3e889d2fd36fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::fillLightBuffer</definition>
        <argsstring>(castor::Point4f *data) const</argsstring>
        <name>fillLightBuffer</name>
        <qualifiedname>castor3d::LightCategory::fillLightBuffer</qualifiedname>
        <param>
          <type>castor::Point4f *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Met la lumière dans le buffer donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les données de la source lumineuse. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="79" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1ad28344280121c9bae2d240b23c2b5a5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::LightCategory::fillShadowBuffer</definition>
        <argsstring>(AllShadowData &amp;data) const =0</argsstring>
        <name>fillShadowBuffer</name>
        <qualifiedname>castor3d::LightCategory::fillShadowBuffer</qualifiedname>
        <reimplementedby refid="dc/d23/a06983_1aac455dc2e4140cbf5964ed6fc54955df">fillShadowBuffer</reimplementedby>
        <reimplementedby refid="d7/dc6/a07035_1a40fca8443d1419d5ef34d02978921d1d">fillShadowBuffer</reimplementedby>
        <reimplementedby refid="d9/d9d/a07039_1ac5b89c84ae809fba05e3479ce590471a">fillShadowBuffer</reimplementedby>
        <param>
          <type><ref refid="d1/d4b/a07031" kindref="compound">AllShadowData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Met les données d&apos;ombre dans le buffer donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les données d&apos;ombres de la source lumineuse. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="88" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a643c72a271e70a66da576f9b0e39e759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::accept</definition>
        <argsstring>(ConfigurationVisitorBase &amp;vis)</argsstring>
        <name>accept</name>
        <qualifiedname>castor3d::LightCategory::accept</qualifiedname>
        <param>
          <type><ref refid="db/dc2/a05011" kindref="compound">ConfigurationVisitorBase</ref> &amp;</type>
          <declname>vis</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;acceptation de <ref refid="db/dc2/a05011" kindref="compound">ConfigurationVisitorBase</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vis</parametername>
</parameternamelist>
<parameterdescription>
<para>Le ... visiteur. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="101" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d7/d51/a06999_1ac46d054caffac425f264d64c11624723" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::LightCategory::doFillLightBuffer</definition>
        <argsstring>(castor::Point4f *data) const =0</argsstring>
        <name>doFillLightBuffer</name>
        <qualifiedname>castor3d::LightCategory::doFillLightBuffer</qualifiedname>
        <reimplementedby refid="dc/d23/a06983_1a8b70ba3c642b82b8053c819ca62ea6d7">doFillLightBuffer</reimplementedby>
        <reimplementedby refid="d7/dc6/a07035_1ac2b70b4ec490c4a609ad36f177d264bd">doFillLightBuffer</reimplementedby>
        <reimplementedby refid="d9/d9d/a07039_1a15c4fbd95f42fd760b45883f928b56d3">doFillLightBuffer</reimplementedby>
        <param>
          <type>castor::Point4f *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Met la lumière dans le buffer donné. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reçoit les données de la source lumineuse. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="227" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/a06999_1a910141a8cfd27d7689dd7f01b8672dd5" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d3/d5e/a00275_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::LightCategory::doAccept</definition>
        <argsstring>(ConfigurationVisitorBase &amp;vis)=0</argsstring>
        <name>doAccept</name>
        <qualifiedname>castor3d::LightCategory::doAccept</qualifiedname>
        <reimplementedby refid="dc/d23/a06983_1a6f03ca37270c7b4c575d46bb6a7be438">doAccept</reimplementedby>
        <reimplementedby refid="d7/dc6/a07035_1ae8121484b1de13b7c3add41efa01900b">doAccept</reimplementedby>
        <reimplementedby refid="d9/d9d/a07039_1af5c096b28ab69dc58ae4c5054f1f5b43">doAccept</reimplementedby>
        <param>
          <type><ref refid="db/dc2/a05011" kindref="compound">ConfigurationVisitorBase</ref> &amp;</type>
          <declname>vis</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;acceptation de <ref refid="db/dc2/a05011" kindref="compound">ConfigurationVisitorBase</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vis</parametername>
</parameternamelist>
<parameterdescription>
<para>Le ... visiteur. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Castor3D/Scene/Light/LightCategory.hpp" line="240" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor3d::DirectionalLight</label>
        <link refid="dc/d23/a06983"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::LightCategory</label>
        <link refid="d7/d51/a06999"/>
      </node>
      <node id="3">
        <label>castor3d::PointLight</label>
        <link refid="d7/dc6/a07035"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::SpotLight</label>
        <link refid="d9/d9d/a07039"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>BoundingContainer3D</label>
        <link refid="da/dc6/a08731"/>
      </node>
      <node id="1">
        <label>castor3d::LightCategory</label>
        <link refid="d7/d51/a06999"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_cubeBox</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>castor::BoundingBox</label>
        <link refid="d6/d51/a08727"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Castor3D/Scene/Light/LightCategory.hpp" line="16" column="1" bodyfile="Castor3D/Scene/Light/LightCategory.hpp" bodystart="17" bodyend="258"/>
    <listofallmembers>
      <member refid="d7/d51/a06999_1a643c72a271e70a66da576f9b0e39e759" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>accept</name></member>
      <member refid="d7/d51/a06999_1a910141a8cfd27d7689dd7f01b8672dd5" prot="private" virt="pure-virtual"><scope>castor3d::LightCategory</scope><name>doAccept</name></member>
      <member refid="d7/d51/a06999_1a003e3403bfd9107825cd963e9903d901" prot="protected" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>doFillBaseShadowData</name></member>
      <member refid="d7/d51/a06999_1ac46d054caffac425f264d64c11624723" prot="private" virt="pure-virtual"><scope>castor3d::LightCategory</scope><name>doFillLightBuffer</name></member>
      <member refid="d7/d51/a06999_1a874bb5fe798d648010a3e889d2fd36fe" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>fillLightBuffer</name></member>
      <member refid="d7/d51/a06999_1ad28344280121c9bae2d240b23c2b5a5d" prot="public" virt="pure-virtual"><scope>castor3d::LightCategory</scope><name>fillShadowBuffer</name></member>
      <member refid="d7/d51/a06999_1a0de76278c61625bfd8fc05a9fd612970" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getBoundingBox</name></member>
      <member refid="d7/d51/a06999_1a1dd1f113237c1d296c0dbdbf06088800" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getColour</name></member>
      <member refid="d7/d51/a06999_1a67ab3b182b474ea5f4bf2b59d7d1344e" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getColour</name></member>
      <member refid="d7/d51/a06999_1a0e953d6e6965fb1ef782e3bdd6fe469d" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getDiffuseIntensity</name></member>
      <member refid="d7/d51/a06999_1ab6f2d4d170e620f0f84c642b45bcc0fd" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getFarPlane</name></member>
      <member refid="d7/d51/a06999_1a357763c66670a16d97628ee55b7739f6" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getIntensity</name></member>
      <member refid="d7/d51/a06999_1a3ed7681f80c08f39f442f45a1c976bc4" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getIntensity</name></member>
      <member refid="d7/d51/a06999_1acb29137feb5442673c0f39896c507fac" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLight</name></member>
      <member refid="d7/d51/a06999_1a1f973301722581e083d5a8a2893ee88e" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLight</name></member>
      <member refid="d7/d51/a06999_1ae63ee4d4bce64b4137b012e6d9db682c" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLightComponentCount</name></member>
      <member refid="d7/d51/a06999_1a64522c60f1f11b59f7ae2e9968140ab4" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLightType</name></member>
      <member refid="d7/d51/a06999_1adcb072b802c78c888dad48607a603bf6" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLpvConfig</name></member>
      <member refid="d7/d51/a06999_1ac9fd852d37898f8931299e2604c4849d" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowComponentCount</name></member>
      <member refid="d7/d51/a06999_1a1012a2f07cb70d5e2780a9990b02bd15" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowConfig</name></member>
      <member refid="d7/d51/a06999_1ac8cb3937499220711655a1eeed1fb012" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowPcfFilterSize</name></member>
      <member refid="d7/d51/a06999_1a23f5abcfb09f64189d2f28a05f1f1cc4" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowPcfOffsets</name></member>
      <member refid="d7/d51/a06999_1a43eb82ce5c88a14b618608aeab6bc2e0" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowPcfSampleCount</name></member>
      <member refid="d7/d51/a06999_1ad344cbddb177d6c50b8d9485513f17da" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowRawOffsets</name></member>
      <member refid="d7/d51/a06999_1a9189a1586f231e8bb99f7bdbaa432284" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getSpecularIntensity</name></member>
      <member refid="d7/d51/a06999_1a4b0881f2bdcfa98c6e36aaeceb8f937a" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getVolumetricScatteringFactor</name></member>
      <member refid="d7/d51/a06999_1a1fdb3e7afdb8be2e8b3d1f5453cf72fc" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getVolumetricSteps</name></member>
      <member refid="d7/d51/a06999_1ab97675f7a00f658a9e764063e28e10f0" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getVsmLightBleedingReduction</name></member>
      <member refid="d7/d51/a06999_1adf166a88980c56276139d451f9d35edd" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getVsmMinVariance</name></member>
      <member refid="d7/d51/a06999_1a27862a9fe512b352f98ec1c054680edd" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>Light</name></member>
      <member refid="d7/d51/a06999_1aadfc8d83b98edd672b54b5cfeeae0ec2" prot="protected" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>LightCategory</name></member>
      <member refid="d7/d51/a06999_1a8621916e72c27c8933978fee0a2141f2" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>LightMbrAlign</name></member>
      <member refid="d7/d51/a06999_1a39cc643d1072dfb5ba0cabf2185cd7cd" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_colour</name></member>
      <member refid="d7/d51/a06999_1a28a4f8b94fa6ff89c9aa57e2dae75672" prot="protected" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_cubeBox</name></member>
      <member refid="d7/d51/a06999_1a510f474ea2102b2cdb6ea5683f165d66" prot="protected" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_farPlane</name></member>
      <member refid="d7/d51/a06999_1aee05883af967c7aaa619b9f3d1098949" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_intensity</name></member>
      <member refid="d7/d51/a06999_1a3b3f6f3faa9d1760154ad47129eff4c9" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_light</name></member>
      <member refid="d7/d51/a06999_1a35131b4cb16fd650b556a614a179557c" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_lightComponentCount</name></member>
      <member refid="d7/d51/a06999_1a42e688cef4bd84519bf211c023018d62" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_lightType</name></member>
      <member refid="d7/d51/a06999_1abd66f660ed2ebdc565fecd76c0a81318" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_shadowComponentCount</name></member>
      <member refid="d7/d51/a06999_1aed6673624b672394258be181c447eb8a" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setColour</name></member>
      <member refid="d7/d51/a06999_1ab28a4cda00a38263af9d9bf743eab34b" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setDiffuseIntensity</name></member>
      <member refid="d7/d51/a06999_1ac031bef3179ebbec519eedcc0b192dbf" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setIntensity</name></member>
      <member refid="d7/d51/a06999_1aa7fa6950226db63bb1b49567d2ac622a" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setPcfFilterSize</name></member>
      <member refid="d7/d51/a06999_1ae0babdad467b1d890595403c7aa02065" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setPcfMaxSlopeOffset</name></member>
      <member refid="d7/d51/a06999_1abbb7ac4dd057bd9b5c809822d2600959" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setPcfMinOffset</name></member>
      <member refid="d7/d51/a06999_1a28c48e4fd0d2c9d20376f5aff2636574" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setPcfSampleCount</name></member>
      <member refid="d7/d51/a06999_1a74565f5a3f7bdfdb7ebc0aee97a55960" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setRawMaxSlopeOffset</name></member>
      <member refid="d7/d51/a06999_1a4a20cb9dd9760352ebacffcbd8febaec" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setRawMinOffset</name></member>
      <member refid="d7/d51/a06999_1a525add2d3b3f08be7bb332b3f079b2db" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setSpecularIntensity</name></member>
      <member refid="d7/d51/a06999_1a540bf2d551c26998f6257cbf3862abe4" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setVolumetricScatteringFactor</name></member>
      <member refid="d7/d51/a06999_1a92e545bfabd12248ac2aa0409d9b1fee" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setVolumetricSteps</name></member>
      <member refid="d7/d51/a06999_1a76cab8c08601eb5f7a7519c2823a2c89" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setVsmLightBleedingReduction</name></member>
      <member refid="d7/d51/a06999_1a2afe484cd970eea4c4568d392b5c13ca" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setVsmMinVariance</name></member>
      <member refid="d7/d51/a06999_1a34386a8cdce8cddd885daa4e906ad4ba" prot="public" virt="pure-virtual"><scope>castor3d::LightCategory</scope><name>update</name></member>
      <member refid="d7/d51/a06999_1a43b97e0443a7c59fac134d2f3292e11a" prot="public" virt="virtual"><scope>castor3d::LightCategory</scope><name>~LightCategory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
