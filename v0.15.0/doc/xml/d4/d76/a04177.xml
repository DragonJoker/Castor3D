<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="d4/d76/a04177" kind="class" language="C++" prot="public">
    <compoundname>castor3d::TextureLayout</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; RenderSystem &gt;</basecompoundref>
    <includes local="no">TextureLayout.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Whole texture access.</header>
      <memberdef kind="function" id="d4/d76/a04177_1a9471b85819856f67f1617f719587b6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::PxBufferBaseUPtr buffer, uint32_t bufferOrigLevels, bool isStatic=false)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bufferOrigLevels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the whole layout source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="310" column="14"/>
        <referencedby refid="d4/d76/a04177_1a70882c26b5e0900cb83d3bb68d56b782" compoundref="dc/d91/a00659" startline="320" endline="325">setSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a1aad25df804f69a9c998cd9606f3652a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::PxBufferBaseUPtr buffer, bool isStatic=false)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="313" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1aff7685a313629e0be811112c2da0334a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::Path const &amp;folder, castor::Path const &amp;relative, castor::ImageLoaderConfig config={ true, true, true })</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <param>
          <type>castor::ImageLoaderConfig</type>
          <declname>config</declname>
          <defval>{ true, true, true }</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="315" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1aee81558bd667f6701ef019f4af1375f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(VkExtent3D const &amp;extent, VkFormat format)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="318" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a70882c26b5e0900cb83d3bb68d56b782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setSource</definition>
        <argsstring>(VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setSource</name>
        <qualifiedname>castor3d::TextureLayout::setSource</qualifiedname>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="320" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="320" bodyend="325"/>
        <references refid="d4/d76/a04177_1a9471b85819856f67f1617f719587b6fc">setSource</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters.</header>
      <memberdef kind="function" id="d4/d76/a04177_1aeba38cf6b8d0ffec596c915eb34b626d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref> const &amp;</type>
        <definition>TextureView const  &amp; castor3d::TextureLayout::getDefaultView</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefaultView</name>
        <qualifiedname>castor3d::TextureLayout::getDefaultView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="330" column="20" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="330" bodyend="334"/>
        <references refid="d9/dc7/a04161_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d91/a00659" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a37c1c862a831db70896d88e5bcf41cd9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView &amp; castor3d::TextureLayout::getDefaultView</definition>
        <argsstring>() noexcept</argsstring>
        <name>getDefaultView</name>
        <qualifiedname>castor3d::TextureLayout::getDefaultView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="336" column="14" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="336" bodyend="340"/>
        <references refid="d9/dc7/a04161_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d91/a00659" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ae2e40370e0d70c2f61cd914255c559ac" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> const &amp;</type>
        <definition>MipView const  &amp; castor3d::TextureLayout::getDefault</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefault</name>
        <qualifiedname>castor3d::TextureLayout::getDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="342" column="16" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="342" bodyend="345"/>
        <referencedby refid="d4/d76/a04177_1ac1faf669d342d75f18c39257300456c3" compoundref="dc/d91/a00659" startline="353" endline="357">getMipView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a1acf719870c042bf7fb72fba89a1bb6f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getLayersCount</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLayersCount</name>
        <qualifiedname>castor3d::TextureLayout::getLayersCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="393" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="393" bodyend="396"/>
        <referencedby refid="d4/d76/a04177_1a5656f14b2f6fa31715a5bf82b824f568" compoundref="dc/d91/a00659" startline="403" endline="410">getLayer2D</referencedby>
        <referencedby refid="d4/d76/a04177_1ae59d4e9d282eb81098d4d934b4b6f2f8" compoundref="dc/d91/a00659" startline="500" endline="505">isCube</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1aba8ec4ec9920ab32c6cda07799c4018b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="df/d4b/a04169" kindref="compound">ArrayView</ref>&lt; <ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> &gt; const &amp;</type>
        <definition>ArrayView&lt; MipView &gt; const  &amp; castor3d::TextureLayout::getArray2D</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getArray2D</name>
        <qualifiedname>castor3d::TextureLayout::getArray2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="398" column="18" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a5656f14b2f6fa31715a5bf82b824f568" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> const &amp;</type>
        <definition>MipView const  &amp; castor3d::TextureLayout::getLayer2D</definition>
        <argsstring>(size_t layer) const noexcept</argsstring>
        <name>getLayer2D</name>
        <qualifiedname>castor3d::TextureLayout::getLayer2D</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="403" column="16" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="403" bodyend="410"/>
        <references refid="d4/d76/a04177_1a1acf719870c042bf7fb72fba89a1bb6f" compoundref="dc/d91/a00659" startline="393" endline="396">getLayersCount</references>
        <referencedby refid="d4/d76/a04177_1a932734a8559436f7fe81025e132778a9" compoundref="dc/d91/a00659" startline="421" endline="425">getLayer2DView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1afec47b354b70c3af7615ff4ac98ed1e4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> &amp;</type>
        <definition>MipView &amp; castor3d::TextureLayout::getLayer2D</definition>
        <argsstring>(size_t layer) noexcept</argsstring>
        <name>getLayer2D</name>
        <qualifiedname>castor3d::TextureLayout::getLayer2D</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="412" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="412" bodyend="419"/>
        <references refid="d4/d76/a04177_1a1acf719870c042bf7fb72fba89a1bb6f" compoundref="dc/d91/a00659" startline="393" endline="396">getLayersCount</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a932734a8559436f7fe81025e132778a9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView &amp; castor3d::TextureLayout::getLayer2DView</definition>
        <argsstring>(size_t layer) const noexcept</argsstring>
        <name>getLayer2DView</name>
        <qualifiedname>castor3d::TextureLayout::getLayer2DView</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="421" column="14" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="421" bodyend="425"/>
        <references refid="d4/d76/a04177_1a5656f14b2f6fa31715a5bf82b824f568" compoundref="dc/d91/a00659" startline="403" endline="410">getLayer2D</references>
        <references refid="d9/dc7/a04161_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d91/a00659" startline="22">castor3d::MipView::view</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>2D texture&apos;s mip level access. </para>
</description>
      <memberdef kind="function" id="d4/d76/a04177_1ac1faf669d342d75f18c39257300456c3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView &amp; castor3d::TextureLayout::getMipView</definition>
        <argsstring>(size_t level) const noexcept</argsstring>
        <name>getMipView</name>
        <qualifiedname>castor3d::TextureLayout::getMipView</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="353" column="14" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="353" bodyend="357"/>
        <references refid="d4/d76/a04177_1ae2e40370e0d70c2f61cd914255c559ac" compoundref="dc/d91/a00659" startline="342" endline="345">getDefault</references>
        <references refid="d9/dc7/a04161_1af1ba49261a22ad78a07f148018293b05" compoundref="dc/d91/a00659" startline="23">castor3d::MipView::levels</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Texture array&apos;s layer access.</header>
      <memberdef kind="function" id="d4/d76/a04177_1ab5eaf288835a47efda83baa4c109fa42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, castor::PxBufferBaseUPtr buffer, uint32_t bufferOrigLevels)</argsstring>
        <name>setLayerSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bufferOrigLevels</declname>
        </param>
        <briefdescription>
<para>Sets the source for all mip lever of one layer in the layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="369" column="14"/>
        <referencedby refid="d4/d76/a04177_1a11b25984f33fbe350a931f5215802146" compoundref="dc/d91/a00659" startline="381" endline="388">setLayerSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a7432fd34c874fd25c59188f4b4aeeb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, castor::PxBufferBaseUPtr buffer)</argsstring>
        <name>setLayerSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="372" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ab5d16061661a41b88d21eb7a4684107d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, castor::Path const &amp;folder, castor::Path const &amp;relative, castor::ImageLoaderConfig config={ true, true, false })</argsstring>
        <name>setLayerSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <param>
          <type>castor::ImageLoaderConfig</type>
          <declname>config</declname>
          <defval>{ true, true, false }</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="374" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1af1bd0a5db462e9e367d68e2131fe7a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, VkExtent3D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="378" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a11b25984f33fbe350a931f5215802146" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="381" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="381" bodyend="388"/>
        <references refid="d4/d76/a04177_1ab5eaf288835a47efda83baa4c109fa42">setLayerSource</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Texture array layer&apos;s mip level access.</header>
      <memberdef kind="function" id="d4/d76/a04177_1a15aa62671f60e38d23df373bcd7f30f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerMipSource</definition>
        <argsstring>(uint32_t index, uint32_t level, castor::PxBufferBaseUPtr buffer)</argsstring>
        <name>setLayerMipSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerMipSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Sets the source for one mip level of a layer in the layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="437" column="14"/>
        <referencedby refid="d4/d76/a04177_1a383dd14141d8a87ed9fb7fb35ebe6aac" compoundref="dc/d91/a00659" startline="449" endline="458">setLayerMipSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a75dc2ff6d1977e1d8dbb6c32ad8773a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerMipSource</definition>
        <argsstring>(uint32_t index, uint32_t level, castor::Path const &amp;folder, castor::Path const &amp;relative, castor::ImageLoaderConfig config={ true, false, false })</argsstring>
        <name>setLayerMipSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerMipSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <param>
          <type>castor::ImageLoaderConfig</type>
          <declname>config</declname>
          <defval>{ true, false, false }</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="440" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ae1dadef43b5aacac3b7df99f6e81b6d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerMipSource</definition>
        <argsstring>(uint32_t index, uint32_t level, VkExtent3D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerMipSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerMipSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="445" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a383dd14141d8a87ed9fb7fb35ebe6aac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setLayerMipSource</definition>
        <argsstring>(uint32_t index, uint32_t level, VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerMipSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerMipSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="449" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="449" bodyend="458"/>
        <references refid="d4/d76/a04177_1a15aa62671f60e38d23df373bcd7f30f0">setLayerMipSource</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>3D texture&apos;s slice access.</header>
      <memberdef kind="function" id="d4/d76/a04177_1af94e35eee693133f91a2e02f753a1e5d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="db/d91/a04173" kindref="compound">SliceView</ref>&lt; <ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> &gt; const &amp;</type>
        <definition>SliceView&lt; MipView &gt; const  &amp; castor3d::TextureLayout::getSlices3D</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getSlices3D</name>
        <qualifiedname>castor3d::TextureLayout::getSlices3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="464" column="18" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="464" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a4215f34bf1753511b86e63e86166e203" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> const &amp;</type>
        <definition>MipView const  &amp; castor3d::TextureLayout::getSlice</definition>
        <argsstring>(size_t slice) const noexcept</argsstring>
        <name>getSlice</name>
        <qualifiedname>castor3d::TextureLayout::getSlice</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="469" column="16" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="469" bodyend="476"/>
        <references refid="d4/d76/a04177_1a82aec558a80dcb821cb8a63340fe9c71" compoundref="dc/d91/a00659" startline="670" endline="673">getDepth</references>
        <referencedby refid="d4/d76/a04177_1a1fcca4d61015357a7a4eaeef47cbcb69" compoundref="dc/d91/a00659" startline="487" endline="491">getSliceView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a5863d1bb31a52a2752c17ae174bf6c7f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> &amp;</type>
        <definition>MipView &amp; castor3d::TextureLayout::getSlice</definition>
        <argsstring>(size_t slice) noexcept</argsstring>
        <name>getSlice</name>
        <qualifiedname>castor3d::TextureLayout::getSlice</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="478" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="478" bodyend="485"/>
        <references refid="d4/d76/a04177_1a82aec558a80dcb821cb8a63340fe9c71" compoundref="dc/d91/a00659" startline="670" endline="673">getDepth</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a1fcca4d61015357a7a4eaeef47cbcb69" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView &amp; castor3d::TextureLayout::getSliceView</definition>
        <argsstring>(size_t slice) const noexcept</argsstring>
        <name>getSliceView</name>
        <qualifiedname>castor3d::TextureLayout::getSliceView</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="487" column="14" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="487" bodyend="491"/>
        <references refid="d4/d76/a04177_1a4215f34bf1753511b86e63e86166e203" compoundref="dc/d91/a00659" startline="469" endline="476">getSlice</references>
        <references refid="d9/dc7/a04161_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d91/a00659" startline="22">castor3d::MipView::view</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para><ref refid="de/d21/a04545" kindref="compound">Cube</ref> array&apos;s texture access. <simplesect kind="remark"><para>A simple cube texture is a cube array of size 1. </para>
</simplesect>
</para>
</description>
      <memberdef kind="function" id="d4/d76/a04177_1ae59d4e9d282eb81098d4d934b4b6f2f8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::isCube</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isCube</name>
        <qualifiedname>castor3d::TextureLayout::isCube</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="500" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="500" bodyend="505"/>
        <references refid="d4/d76/a04177_1a1acf719870c042bf7fb72fba89a1bb6f" compoundref="dc/d91/a00659" startline="393" endline="396">getLayersCount</references>
        <referencedby refid="d4/d76/a04177_1a3132b130477add67b74cbf87e208cfd1" compoundref="dc/d91/a00659" startline="512" endline="519">getLayerCube</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a4b5097d4ab9330ded6c8141a212fa1cb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="df/d4b/a04169" kindref="compound">ArrayView</ref>&lt; <ref refid="d7/def/a04165" kindref="compound">CubeView</ref> &gt; const &amp;</type>
        <definition>ArrayView&lt; CubeView &gt; const  &amp; castor3d::TextureLayout::getArrayCube</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getArrayCube</name>
        <qualifiedname>castor3d::TextureLayout::getArrayCube</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="507" column="18" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a3132b130477add67b74cbf87e208cfd1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/def/a04165" kindref="compound">CubeView</ref> const &amp;</type>
        <definition>CubeView const  &amp; castor3d::TextureLayout::getLayerCube</definition>
        <argsstring>(size_t layer) const noexcept</argsstring>
        <name>getLayerCube</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCube</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="512" column="17" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="512" bodyend="519"/>
        <references refid="d4/d76/a04177_1ae59d4e9d282eb81098d4d934b4b6f2f8" compoundref="dc/d91/a00659" startline="500" endline="505">isCube</references>
        <referencedby refid="d4/d76/a04177_1a5fe9ed512573db004c725ffdcd357e4c" compoundref="dc/d91/a00659" startline="540" endline="544">getLayerCubeFace</referencedby>
        <referencedby refid="d4/d76/a04177_1afad0f3b744f94f0562aafca5a2ef36bf" compoundref="dc/d91/a00659" startline="530" endline="534">getLayerCubeView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a984e20589ba23e721f44ef948f90d7e2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/def/a04165" kindref="compound">CubeView</ref> &amp;</type>
        <definition>CubeView &amp; castor3d::TextureLayout::getLayerCube</definition>
        <argsstring>(size_t layer) noexcept</argsstring>
        <name>getLayerCube</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCube</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="521" column="11" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="521" bodyend="528"/>
        <references refid="d4/d76/a04177_1ae59d4e9d282eb81098d4d934b4b6f2f8" compoundref="dc/d91/a00659" startline="500" endline="505">isCube</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1afad0f3b744f94f0562aafca5a2ef36bf" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView &amp; castor3d::TextureLayout::getLayerCubeView</definition>
        <argsstring>(size_t layer) const noexcept</argsstring>
        <name>getLayerCubeView</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeView</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="530" column="14" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="530" bodyend="534"/>
        <references refid="d4/d76/a04177_1a3132b130477add67b74cbf87e208cfd1" compoundref="dc/d91/a00659" startline="512" endline="519">getLayerCube</references>
        <references refid="d9/dc7/a04161_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d91/a00659" startline="22">castor3d::MipView::view</references>
        <references refid="d7/def/a04165_1a80994da423e22c00a0e265a66debd84d" compoundref="dc/d91/a00659" startline="70">castor3d::CubeView::view</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cube array texture layer&apos;s face access.</header>
      <memberdef kind="function" id="d4/d76/a04177_1a5fe9ed512573db004c725ffdcd357e4c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> const &amp;</type>
        <definition>MipView const  &amp; castor3d::TextureLayout::getLayerCubeFace</definition>
        <argsstring>(size_t layer, CubeMapFace face) const noexcept</argsstring>
        <name>getLayerCubeFace</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeFace</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="540" column="16" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="540" bodyend="544"/>
        <references refid="d7/def/a04165_1a0fe245e7abfe95bd67276e81bcc0c059" compoundref="dc/d91/a00659" startline="71">castor3d::CubeView::faces</references>
        <references refid="d4/d76/a04177_1a3132b130477add67b74cbf87e208cfd1" compoundref="dc/d91/a00659" startline="512" endline="519">getLayerCube</references>
        <referencedby refid="d4/d76/a04177_1a37e74acd9e3da13830eafdb925483809" compoundref="dc/d91/a00659" startline="583" endline="590">getLayerCubeFaceMipView</referencedby>
        <referencedby refid="d4/d76/a04177_1a1c5b301215650c1a8d925246a4e595e3" compoundref="dc/d91/a00659" startline="552" endline="557">getLayerCubeFaceView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a1686334af11eeeb8fcdac12497e81151" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> &amp;</type>
        <definition>MipView &amp; castor3d::TextureLayout::getLayerCubeFace</definition>
        <argsstring>(size_t layer, CubeMapFace face) noexcept</argsstring>
        <name>getLayerCubeFace</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeFace</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="546" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="546" bodyend="550"/>
        <references refid="d7/def/a04165_1a0fe245e7abfe95bd67276e81bcc0c059" compoundref="dc/d91/a00659" startline="71">castor3d::CubeView::faces</references>
        <references refid="d4/d76/a04177_1a3132b130477add67b74cbf87e208cfd1" compoundref="dc/d91/a00659" startline="512" endline="519">getLayerCube</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a1c5b301215650c1a8d925246a4e595e3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref> const &amp;</type>
        <definition>TextureView const  &amp; castor3d::TextureLayout::getLayerCubeFaceView</definition>
        <argsstring>(size_t layer, CubeMapFace face) const noexcept</argsstring>
        <name>getLayerCubeFaceView</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeFaceView</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="552" column="20" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="552" bodyend="557"/>
        <references refid="d4/d76/a04177_1a5fe9ed512573db004c725ffdcd357e4c" compoundref="dc/d91/a00659" startline="540" endline="544">getLayerCubeFace</references>
        <references refid="d9/dc7/a04161_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d91/a00659" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1acef66817810e96e5d0d939395b4621b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerCubeFaceSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, castor::PxBufferBaseUPtr buffer)</argsstring>
        <name>setLayerCubeFaceSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerCubeFaceSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Sets the source for a layer cube&apos;s face in the layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="565" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ac23952e7f99ca3aedf81c9235f06fd4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerCubeFaceSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, castor::Path const &amp;folder, castor::Path const &amp;relative, castor::ImageLoaderConfig config={ true, true, false })</argsstring>
        <name>setLayerCubeFaceSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerCubeFaceSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <param>
          <type>castor::ImageLoaderConfig</type>
          <declname>config</declname>
          <defval>{ true, true, false }</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="568" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a7608eca11de86cc66d43f8d323a38b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setLayerCubeFaceSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerCubeFaceSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerCubeFaceSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="573" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cube array texture layer face&apos;s mip level access.</header>
      <memberdef kind="function" id="d4/d76/a04177_1a37e74acd9e3da13830eafdb925483809" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView &amp; castor3d::TextureLayout::getLayerCubeFaceMipView</definition>
        <argsstring>(size_t layer, CubeMapFace face, uint32_t level) const noexcept</argsstring>
        <name>getLayerCubeFaceMipView</name>
        <qualifiedname>castor3d::TextureLayout::getLayerCubeFaceMipView</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="583" column="14" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="583" bodyend="590"/>
        <references refid="d4/d76/a04177_1a5fe9ed512573db004c725ffdcd357e4c" compoundref="dc/d91/a00659" startline="540" endline="544">getLayerCubeFace</references>
        <references refid="d9/dc7/a04161_1af1ba49261a22ad78a07f148018293b05" compoundref="dc/d91/a00659" startline="23">castor3d::MipView::levels</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ab9518cdf219da8f9882ee5c765062087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerCubeFaceMipSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, uint32_t level, castor::PxBufferBaseUPtr buffer)</argsstring>
        <name>setLayerCubeFaceMipSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerCubeFaceMipSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseUPtr</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Sets the source for a face of layer in the layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="598" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a86adc488d3c0dc41ca77e4b9bb3a0754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerCubeFaceMipSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, uint32_t level, castor::Path const &amp;folder, castor::Path const &amp;relative, castor::ImageLoaderConfig config={ true, false, false })</argsstring>
        <name>setLayerCubeFaceMipSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerCubeFaceMipSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <param>
          <type>castor::ImageLoaderConfig</type>
          <declname>config</declname>
          <defval>{ true, false, false }</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="602" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1adbc242a9a0825e4382c9b65da708f7ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setLayerCubeFaceMipSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, uint32_t level, VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerCubeFaceMipSource</name>
        <qualifiedname>castor3d::TextureLayout::setLayerCubeFaceMipSource</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="608" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d4/d76/a04177_1a93e6ea5882f18cbbfa5b15f0465b77a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::TextureLayout::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <qualifiedname>castor3d::TextureLayout::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="620" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a0295aaff1f2219473910a6515b62ef11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Path</type>
        <definition>C3D_API castor::Path castor3d::TextureLayout::getPath</definition>
        <argsstring>() const</argsstring>
        <name>getPath</name>
        <qualifiedname>castor3d::TextureLayout::getPath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="621" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a72dbb24d3d703a4861f92551b6b798ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::TextureLayout::needsYInversion</definition>
        <argsstring>() const</argsstring>
        <name>needsYInversion</name>
        <qualifiedname>castor3d::TextureLayout::needsYInversion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="622" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a7ac4c3253a9904801b669586d03b2957" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::isInitialised</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isInitialised</name>
        <qualifiedname>castor3d::TextureLayout::isInitialised</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="624" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="624" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1aced8052bf1d028ff37d23bac0aac02cc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::isStatic</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isStatic</name>
        <qualifiedname>castor3d::TextureLayout::isStatic</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="629" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="629" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1aa30180a30bda037b54d1d50366f68493" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>VkImageType</type>
        <definition>VkImageType castor3d::TextureLayout::getType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getType</name>
        <qualifiedname>castor3d::TextureLayout::getType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="634" column="13" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="634" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ab060c248759cb2718a57d5b89db23eae" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::Image const &amp;</type>
        <definition>castor::Image const  &amp; castor3d::TextureLayout::getImage</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImage</name>
        <qualifiedname>castor3d::TextureLayout::getImage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="639" column="22" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="639" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a593ae06f52ce18205ab9f4e003253718" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::Image &amp;</type>
        <definition>castor::Image &amp; castor3d::TextureLayout::getImage</definition>
        <argsstring>() noexcept</argsstring>
        <name>getImage</name>
        <qualifiedname>castor3d::TextureLayout::getImage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="644" column="16" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="644" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a750bc028f687cfe4d495462381ec51fe" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ashes::Image const &amp;</type>
        <definition>ashes::Image const  &amp; castor3d::TextureLayout::getTexture</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTexture</name>
        <qualifiedname>castor3d::TextureLayout::getTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="649" column="21" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="649" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a8093090abc565d1b692f5c90c4ee98fb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ashes::ImageCreateInfo const &amp;</type>
        <definition>ashes::ImageCreateInfo const  &amp; castor3d::TextureLayout::getCreateInfo</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getCreateInfo</name>
        <qualifiedname>castor3d::TextureLayout::getCreateInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="655" column="31" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="655" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ac45025ba11c6894bc442bcc35104a2fa" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getWidth</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getWidth</name>
        <qualifiedname>castor3d::TextureLayout::getWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="660" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="660" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a0730dae72cabeb7a1f477c5bea385d37" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getHeight</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getHeight</name>
        <qualifiedname>castor3d::TextureLayout::getHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="665" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="665" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a82aec558a80dcb821cb8a63340fe9c71" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getDepth</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDepth</name>
        <qualifiedname>castor3d::TextureLayout::getDepth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="670" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="670" bodyend="673"/>
        <referencedby refid="d4/d76/a04177_1a4215f34bf1753511b86e63e86166e203" compoundref="dc/d91/a00659" startline="469" endline="476">getSlice</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1acf4864ee247deaab8a0a420e27a8c44f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getMipmapCount</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getMipmapCount</name>
        <qualifiedname>castor3d::TextureLayout::getMipmapCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="675" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="675" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1abc4d8f422462212b1cf3b014b37152ff" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>VkExtent3D const &amp;</type>
        <definition>VkExtent3D const  &amp; castor3d::TextureLayout::getDimensions</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDimensions</name>
        <qualifiedname>castor3d::TextureLayout::getDimensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="680" column="19" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a1749aac707eda70b369b93ee14e9dc6f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat castor3d::TextureLayout::getPixelFormat</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPixelFormat</name>
        <qualifiedname>castor3d::TextureLayout::getPixelFormat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="685" column="10" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="685" bodyend="688"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d4/d76/a04177_1ac81cdcc9deac35d38d45bf5085b92bcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FuncT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void castor3d::TextureLayout::forEachView</definition>
        <argsstring>(FuncT function) const</argsstring>
        <name>forEachView</name>
        <qualifiedname>castor3d::TextureLayout::forEachView</qualifiedname>
        <param>
          <type>FuncT</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Views parsing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="700" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="700" bodyend="716"/>
        <references refid="d9/dc7/a04161_1ac23bed4d978ef4c38473672b09fe4e25" compoundref="dc/d91/a00659" startline="48" endline="52">castor3d::MipView::forEachView</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1abd9e4b858ad805cfa5746588031566ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FuncT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void castor3d::TextureLayout::forEachFirstMipView</definition>
        <argsstring>(FuncT function) const</argsstring>
        <name>forEachFirstMipView</name>
        <qualifiedname>castor3d::TextureLayout::forEachFirstMipView</qualifiedname>
        <param>
          <type>FuncT</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="719" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="719" bodyend="737"/>
        <references refid="d9/dc7/a04161_1a63ac7209185df2c391cab3451317221e" compoundref="dc/d91/a00659" startline="55" endline="65">castor3d::MipView::forEachFirstMipView</references>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ab14de992a49bb8077063c1976a0e62e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FuncT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void castor3d::TextureLayout::forEachLeafView</definition>
        <argsstring>(FuncT function) const</argsstring>
        <name>forEachLeafView</name>
        <qualifiedname>castor3d::TextureLayout::forEachLeafView</qualifiedname>
        <param>
          <type>FuncT</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="740" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="740" bodyend="754"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d4/d76/a04177_1a38d122cc3c76362e353ea342b041636e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TextureView</definition>
        <argsstring></argsstring>
        <name>TextureView</name>
        <qualifiedname>castor3d::TextureLayout::TextureView</qualifiedname>
        <param>
          <type><ref refid="d7/dca/a04205" kindref="compound">TextureView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="182" column="14" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/d76/a04177_1abb4e7ba8bb8241f57f2667c84b320882" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::m_initialised</definition>
        <argsstring></argsstring>
        <name>m_initialised</name>
        <qualifiedname>castor3d::TextureLayout::m_initialised</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="766" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1a9a9e73f297fb0010219f2cc8dd0b2ef1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::m_static</definition>
        <argsstring></argsstring>
        <name>m_static</name>
        <qualifiedname>castor3d::TextureLayout::m_static</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="767" column="6" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1a893c83ce79ad0bf4b2cbf75a70897c54" prot="private" static="no" mutable="no">
        <type>ashes::ImageCreateInfo</type>
        <definition>ashes::ImageCreateInfo castor3d::TextureLayout::m_info</definition>
        <argsstring></argsstring>
        <name>m_info</name>
        <qualifiedname>castor3d::TextureLayout::m_info</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="768" column="24" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1addb3faee8a01d6a5846f6cd95384894b" prot="private" static="no" mutable="no">
        <type>VkMemoryPropertyFlags</type>
        <definition>VkMemoryPropertyFlags castor3d::TextureLayout::m_properties</definition>
        <argsstring></argsstring>
        <name>m_properties</name>
        <qualifiedname>castor3d::TextureLayout::m_properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="769" column="23" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1a14cee824776b5a145bd865e5321cc4a8" prot="private" static="no" mutable="no">
        <type>castor::Image</type>
        <definition>castor::Image castor3d::TextureLayout::m_image</definition>
        <argsstring></argsstring>
        <name>m_image</name>
        <qualifiedname>castor3d::TextureLayout::m_image</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="770" column="15" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1acdc021024bf7b219739a157507bfda7d" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dc7/a04161" kindref="compound">MipView</ref></type>
        <definition>MipView castor3d::TextureLayout::m_defaultView</definition>
        <argsstring></argsstring>
        <name>m_defaultView</name>
        <qualifiedname>castor3d::TextureLayout::m_defaultView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="771" column="9" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1a416b6b427d2aee2b519ecc1866a9068e" prot="private" static="no" mutable="no">
        <type><ref refid="df/d4b/a04169" kindref="compound">ArrayView</ref>&lt; <ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> &gt;</type>
        <definition>ArrayView&lt; MipView &gt; castor3d::TextureLayout::m_arrayView</definition>
        <argsstring></argsstring>
        <name>m_arrayView</name>
        <qualifiedname>castor3d::TextureLayout::m_arrayView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="772" column="11" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1ad1ad3e24470b8f254c937a9815288857" prot="private" static="no" mutable="no">
        <type><ref refid="df/d4b/a04169" kindref="compound">ArrayView</ref>&lt; <ref refid="d7/def/a04165" kindref="compound">CubeView</ref> &gt;</type>
        <definition>ArrayView&lt; CubeView &gt; castor3d::TextureLayout::m_cubeView</definition>
        <argsstring></argsstring>
        <name>m_cubeView</name>
        <qualifiedname>castor3d::TextureLayout::m_cubeView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="773" column="11" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1aeee6bb4c7f7fe408b45d48c8450c0f39" prot="private" static="no" mutable="no">
        <type><ref refid="db/d91/a04173" kindref="compound">SliceView</ref>&lt; <ref refid="d9/dc7/a04161" kindref="compound">MipView</ref> &gt;</type>
        <definition>SliceView&lt; MipView &gt; castor3d::TextureLayout::m_sliceView</definition>
        <argsstring></argsstring>
        <name>m_sliceView</name>
        <qualifiedname>castor3d::TextureLayout::m_sliceView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="774" column="11" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1a5c42f303dd75d9348314ba355f59ed11" prot="private" static="no" mutable="no">
        <type>ashes::ImagePtr</type>
        <definition>ashes::ImagePtr castor3d::TextureLayout::m_ownTexture</definition>
        <argsstring></argsstring>
        <name>m_ownTexture</name>
        <qualifiedname>castor3d::TextureLayout::m_ownTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="775" column="17" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d76/a04177_1aa758d553938bac0f22e4a07da7fb8f3e" prot="private" static="no" mutable="no">
        <type>ashes::Image *</type>
        <definition>ashes::Image* castor3d::TextureLayout::m_texture</definition>
        <argsstring></argsstring>
        <name>m_texture</name>
        <qualifiedname>castor3d::TextureLayout::m_texture</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="776" column="15" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="776" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/d76/a04177_1ae6f8be6177279a23ec2efb0c9c2b83ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::TextureLayout</definition>
        <argsstring>(RenderSystem &amp;renderSystem, ashes::ImageCreateInfo info, VkMemoryPropertyFlags memoryProperties, castor::String debugName, bool isStatic=false)</argsstring>
        <name>TextureLayout</name>
        <qualifiedname>castor3d::TextureLayout::TextureLayout</qualifiedname>
        <param>
          <type><ref refid="d3/d99/a05585" kindref="compound">RenderSystem</ref> &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>ashes::ImageCreateInfo</type>
          <declname>info</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>memoryProperties</declname>
        </param>
        <param>
          <type>castor::String</type>
          <declname>debugName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>The render system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>The image informations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">memoryProperties</parametername>
</parameternamelist>
<parameterdescription>
<para>The required memory properties. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">debugName</parametername>
</parameternamelist>
<parameterdescription>
<para>The debug name for this layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isStatic</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if this layout is static. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="201" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ac6418e33f6cbc136e07cc79c77057733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::TextureLayout</definition>
        <argsstring>(RenderSystem &amp;renderSystem, VkImage image, crg::ImageViewId imageView)</argsstring>
        <name>TextureLayout</name>
        <qualifiedname>castor3d::TextureLayout::TextureLayout</qualifiedname>
        <param>
          <type><ref refid="d3/d99/a05585" kindref="compound">RenderSystem</ref> &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>image</declname>
        </param>
        <param>
          <type>crg::ImageViewId</type>
          <declname>imageView</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>The render system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>The image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">imageView</parametername>
</parameternamelist>
<parameterdescription>
<para>The image view. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="218" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a77ed83f4d34250f0daf619674791a08c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::TextureLayout</definition>
        <argsstring>(RenderSystem &amp;renderSystem, ashes::ImagePtr image, VkImageCreateInfo const &amp;createInfo)</argsstring>
        <name>TextureLayout</name>
        <qualifiedname>castor3d::TextureLayout::TextureLayout</qualifiedname>
        <param>
          <type><ref refid="d3/d99/a05585" kindref="compound">RenderSystem</ref> &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>ashes::ImagePtr</type>
          <declname>image</declname>
        </param>
        <param>
          <type>VkImageCreateInfo const &amp;</type>
          <declname>createInfo</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>The render system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>The image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">createInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The image informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="233" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a78cacaa4597d5ac2129248b21d82cfbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::~TextureLayout</definition>
        <argsstring>()</argsstring>
        <name>~TextureLayout</name>
        <qualifiedname>castor3d::TextureLayout::~TextureLayout</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="242" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1ab4320c932e32d1041b038331e2195e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::TextureLayout::initialise</definition>
        <argsstring>(RenderDevice const &amp;device, QueueData const &amp;queueData)</argsstring>
        <name>initialise</name>
        <qualifiedname>castor3d::TextureLayout::initialise</qualifiedname>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d2/dce/a05441" kindref="compound">QueueData</ref> const &amp;</type>
          <declname>queueData</declname>
        </param>
        <briefdescription>
<para>Initialises the texture and all its views. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">queueData</parametername>
</parameternamelist>
<parameterdescription>
<para>The queue receiving the GPU commands. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if OK. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="255" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a3ef716cd4701738d3650079621d93b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>castor3d::TextureLayout::cleanup</qualifiedname>
        <briefdescription>
<para>Cleans up the texture and all its views. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="263" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a3d77ee35b29e870b1a627b31f06da163" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::generateMipmaps</definition>
        <argsstring>(RenderDevice const &amp;device, VkImageLayout srcLayout=VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL) const</argsstring>
        <name>generateMipmaps</name>
        <qualifiedname>castor3d::TextureLayout::generateMipmaps</qualifiedname>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>srcLayout</declname>
          <defval>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</defval>
        </param>
        <briefdescription>
<para>Generate texture mipmaps. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>The current layout of the image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="274" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a73f84e494a275be37610b75747413850" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::generateMipmaps</definition>
        <argsstring>(QueueData const &amp;queueData, VkImageLayout srcLayout=VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL) const</argsstring>
        <name>generateMipmaps</name>
        <qualifiedname>castor3d::TextureLayout::generateMipmaps</qualifiedname>
        <param>
          <type><ref refid="d2/dce/a05441" kindref="compound">QueueData</ref> const &amp;</type>
          <declname>queueData</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>srcLayout</declname>
          <defval>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</defval>
        </param>
        <briefdescription>
<para>Generate texture mipmaps. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">queueData</parametername>
</parameternamelist>
<parameterdescription>
<para>The queue receiving the GPU commands. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>The current layout of the image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="286" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1aa053bd56afaf6a9548df68c3f8a1c736" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::generateMipmaps</definition>
        <argsstring>(ashes::CommandBuffer &amp;cmd, VkImageLayout srcLayout=VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL) const</argsstring>
        <name>generateMipmaps</name>
        <qualifiedname>castor3d::TextureLayout::generateMipmaps</qualifiedname>
        <param>
          <type>ashes::CommandBuffer &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>srcLayout</declname>
          <defval>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</defval>
        </param>
        <briefdescription>
<para>Generate texture mipmaps. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>The command buffer recording the commands. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>The current layout of the image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="298" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d4/d76/a04177_1a904fc55c9b0e4f4cd81b8a1bf63db545" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::doUpdateViews</definition>
        <argsstring>()</argsstring>
        <name>doUpdateViews</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateViews</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="758" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a4677c01162c04db13e48533de65befc1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateCreateInfo</definition>
        <argsstring>(castor::ImageLayout const &amp;layout)</argsstring>
        <name>doUpdateCreateInfo</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateCreateInfo</qualifiedname>
        <param>
          <type>castor::ImageLayout const &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="759" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1abaaf1d7120d5a2fe3ad6222b818c16ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateFromFirstImage</definition>
        <argsstring>(uint32_t mipLevel, castor::ImageLayout layout)</argsstring>
        <name>doUpdateFromFirstImage</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateFromFirstImage</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>mipLevel</declname>
        </param>
        <param>
          <type>castor::ImageLayout</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="760" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1adc7d6cc07ea8817267166df58172c1d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateMips</definition>
        <argsstring>(bool genNeeded, uint32_t mipLevels)</argsstring>
        <name>doUpdateMips</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateMips</qualifiedname>
        <param>
          <type>bool</type>
          <declname>genNeeded</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipLevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="761" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a32305b9ef49022bdeb278501565df89a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateLayerMip</definition>
        <argsstring>(bool genNeeded, uint32_t layer, uint32_t level)</argsstring>
        <name>doUpdateLayerMip</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateLayerMip</qualifiedname>
        <param>
          <type>bool</type>
          <declname>genNeeded</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="762" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/d76/a04177_1a9322e8c732a84beeb59e93a7aa2c485c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateLayerMips</definition>
        <argsstring>(bool genNeeded, uint32_t layer, uint32_t mipLevels)</argsstring>
        <name>doUpdateLayerMips</name>
        <qualifiedname>castor3d::TextureLayout::doUpdateLayerMips</qualifiedname>
        <param>
          <type>bool</type>
          <declname>genNeeded</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipLevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="763" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::TextureLayout</label>
        <link refid="d4/d76/a04177"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; RenderSystem &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>castor3d::TextureLayout</label>
        <link refid="d4/d76/a04177"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; RenderSystem &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Material/Texture/TextureLayout.hpp" line="179" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="181" bodyend="777"/>
    <listofallmembers>
      <member refid="d4/d76/a04177_1a3ef716cd4701738d3650079621d93b4e" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>cleanup</name></member>
      <member refid="d4/d76/a04177_1a4677c01162c04db13e48533de65befc1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateCreateInfo</name></member>
      <member refid="d4/d76/a04177_1abaaf1d7120d5a2fe3ad6222b818c16ee" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateFromFirstImage</name></member>
      <member refid="d4/d76/a04177_1a32305b9ef49022bdeb278501565df89a" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateLayerMip</name></member>
      <member refid="d4/d76/a04177_1a9322e8c732a84beeb59e93a7aa2c485c" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateLayerMips</name></member>
      <member refid="d4/d76/a04177_1adc7d6cc07ea8817267166df58172c1d1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateMips</name></member>
      <member refid="d4/d76/a04177_1a904fc55c9b0e4f4cd81b8a1bf63db545" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateViews</name></member>
      <member refid="d4/d76/a04177_1abd9e4b858ad805cfa5746588031566ff" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>forEachFirstMipView</name></member>
      <member refid="d4/d76/a04177_1ab14de992a49bb8077063c1976a0e62e4" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>forEachLeafView</name></member>
      <member refid="d4/d76/a04177_1ac81cdcc9deac35d38d45bf5085b92bcf" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>forEachView</name></member>
      <member refid="d4/d76/a04177_1a3d77ee35b29e870b1a627b31f06da163" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>generateMipmaps</name></member>
      <member refid="d4/d76/a04177_1a73f84e494a275be37610b75747413850" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>generateMipmaps</name></member>
      <member refid="d4/d76/a04177_1aa053bd56afaf6a9548df68c3f8a1c736" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>generateMipmaps</name></member>
      <member refid="d4/d76/a04177_1aba8ec4ec9920ab32c6cda07799c4018b" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getArray2D</name></member>
      <member refid="d4/d76/a04177_1a4b5097d4ab9330ded6c8141a212fa1cb" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getArrayCube</name></member>
      <member refid="d4/d76/a04177_1a8093090abc565d1b692f5c90c4ee98fb" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getCreateInfo</name></member>
      <member refid="d4/d76/a04177_1ae2e40370e0d70c2f61cd914255c559ac" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefault</name></member>
      <member refid="d4/d76/a04177_1aeba38cf6b8d0ffec596c915eb34b626d" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefaultView</name></member>
      <member refid="d4/d76/a04177_1a37c1c862a831db70896d88e5bcf41cd9" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefaultView</name></member>
      <member refid="d4/d76/a04177_1a82aec558a80dcb821cb8a63340fe9c71" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDepth</name></member>
      <member refid="d4/d76/a04177_1abc4d8f422462212b1cf3b014b37152ff" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDimensions</name></member>
      <member refid="d4/d76/a04177_1a0730dae72cabeb7a1f477c5bea385d37" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getHeight</name></member>
      <member refid="d4/d76/a04177_1ab060c248759cb2718a57d5b89db23eae" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getImage</name></member>
      <member refid="d4/d76/a04177_1a593ae06f52ce18205ab9f4e003253718" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getImage</name></member>
      <member refid="d4/d76/a04177_1a5656f14b2f6fa31715a5bf82b824f568" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayer2D</name></member>
      <member refid="d4/d76/a04177_1afec47b354b70c3af7615ff4ac98ed1e4" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayer2D</name></member>
      <member refid="d4/d76/a04177_1a932734a8559436f7fe81025e132778a9" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayer2DView</name></member>
      <member refid="d4/d76/a04177_1a3132b130477add67b74cbf87e208cfd1" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCube</name></member>
      <member refid="d4/d76/a04177_1a984e20589ba23e721f44ef948f90d7e2" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCube</name></member>
      <member refid="d4/d76/a04177_1a5fe9ed512573db004c725ffdcd357e4c" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFace</name></member>
      <member refid="d4/d76/a04177_1a1686334af11eeeb8fcdac12497e81151" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFace</name></member>
      <member refid="d4/d76/a04177_1a37e74acd9e3da13830eafdb925483809" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFaceMipView</name></member>
      <member refid="d4/d76/a04177_1a1c5b301215650c1a8d925246a4e595e3" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFaceView</name></member>
      <member refid="d4/d76/a04177_1afad0f3b744f94f0562aafca5a2ef36bf" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeView</name></member>
      <member refid="d4/d76/a04177_1a1acf719870c042bf7fb72fba89a1bb6f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayersCount</name></member>
      <member refid="d4/d76/a04177_1acf4864ee247deaab8a0a420e27a8c44f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getMipmapCount</name></member>
      <member refid="d4/d76/a04177_1ac1faf669d342d75f18c39257300456c3" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getMipView</name></member>
      <member refid="d4/d76/a04177_1a93e6ea5882f18cbbfa5b15f0465b77a3" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getName</name></member>
      <member refid="d4/d76/a04177_1a0295aaff1f2219473910a6515b62ef11" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getPath</name></member>
      <member refid="d4/d76/a04177_1a1749aac707eda70b369b93ee14e9dc6f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getPixelFormat</name></member>
      <member refid="d4/d76/a04177_1a4215f34bf1753511b86e63e86166e203" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSlice</name></member>
      <member refid="d4/d76/a04177_1a5863d1bb31a52a2752c17ae174bf6c7f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSlice</name></member>
      <member refid="d4/d76/a04177_1af94e35eee693133f91a2e02f753a1e5d" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSlices3D</name></member>
      <member refid="d4/d76/a04177_1a1fcca4d61015357a7a4eaeef47cbcb69" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSliceView</name></member>
      <member refid="d4/d76/a04177_1a750bc028f687cfe4d495462381ec51fe" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getTexture</name></member>
      <member refid="d4/d76/a04177_1aa30180a30bda037b54d1d50366f68493" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getType</name></member>
      <member refid="d4/d76/a04177_1ac45025ba11c6894bc442bcc35104a2fa" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getWidth</name></member>
      <member refid="d4/d76/a04177_1ab4320c932e32d1041b038331e2195e6f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>initialise</name></member>
      <member refid="d4/d76/a04177_1ae59d4e9d282eb81098d4d934b4b6f2f8" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isCube</name></member>
      <member refid="d4/d76/a04177_1a7ac4c3253a9904801b669586d03b2957" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isInitialised</name></member>
      <member refid="d4/d76/a04177_1aced8052bf1d028ff37d23bac0aac02cc" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isStatic</name></member>
      <member refid="d4/d76/a04177_1a416b6b427d2aee2b519ecc1866a9068e" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_arrayView</name></member>
      <member refid="d4/d76/a04177_1ad1ad3e24470b8f254c937a9815288857" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_cubeView</name></member>
      <member refid="d4/d76/a04177_1acdc021024bf7b219739a157507bfda7d" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_defaultView</name></member>
      <member refid="d4/d76/a04177_1a14cee824776b5a145bd865e5321cc4a8" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_image</name></member>
      <member refid="d4/d76/a04177_1a893c83ce79ad0bf4b2cbf75a70897c54" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_info</name></member>
      <member refid="d4/d76/a04177_1abb4e7ba8bb8241f57f2667c84b320882" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_initialised</name></member>
      <member refid="d4/d76/a04177_1a5c42f303dd75d9348314ba355f59ed11" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_ownTexture</name></member>
      <member refid="d4/d76/a04177_1addb3faee8a01d6a5846f6cd95384894b" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_properties</name></member>
      <member refid="d4/d76/a04177_1aeee6bb4c7f7fe408b45d48c8450c0f39" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_sliceView</name></member>
      <member refid="d4/d76/a04177_1a9a9e73f297fb0010219f2cc8dd0b2ef1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_static</name></member>
      <member refid="d4/d76/a04177_1aa758d553938bac0f22e4a07da7fb8f3e" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_texture</name></member>
      <member refid="d4/d76/a04177_1a72dbb24d3d703a4861f92551b6b798ca" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>needsYInversion</name></member>
      <member refid="d4/d76/a04177_1ab9518cdf219da8f9882ee5c765062087" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceMipSource</name></member>
      <member refid="d4/d76/a04177_1a86adc488d3c0dc41ca77e4b9bb3a0754" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceMipSource</name></member>
      <member refid="d4/d76/a04177_1adbc242a9a0825e4382c9b65da708f7ae" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceMipSource</name></member>
      <member refid="d4/d76/a04177_1acef66817810e96e5d0d939395b4621b4" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceSource</name></member>
      <member refid="d4/d76/a04177_1ac23952e7f99ca3aedf81c9235f06fd4d" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceSource</name></member>
      <member refid="d4/d76/a04177_1a7608eca11de86cc66d43f8d323a38b10" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceSource</name></member>
      <member refid="d4/d76/a04177_1a15aa62671f60e38d23df373bcd7f30f0" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerMipSource</name></member>
      <member refid="d4/d76/a04177_1a75dc2ff6d1977e1d8dbb6c32ad8773a0" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerMipSource</name></member>
      <member refid="d4/d76/a04177_1ae1dadef43b5aacac3b7df99f6e81b6d3" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerMipSource</name></member>
      <member refid="d4/d76/a04177_1a383dd14141d8a87ed9fb7fb35ebe6aac" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerMipSource</name></member>
      <member refid="d4/d76/a04177_1ab5eaf288835a47efda83baa4c109fa42" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d4/d76/a04177_1a7432fd34c874fd25c59188f4b4aeeb48" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d4/d76/a04177_1ab5d16061661a41b88d21eb7a4684107d" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d4/d76/a04177_1af1bd0a5db462e9e367d68e2131fe7a42" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d4/d76/a04177_1a11b25984f33fbe350a931f5215802146" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d4/d76/a04177_1a9471b85819856f67f1617f719587b6fc" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d4/d76/a04177_1a1aad25df804f69a9c998cd9606f3652a" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d4/d76/a04177_1aff7685a313629e0be811112c2da0334a" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d4/d76/a04177_1aee81558bd667f6701ef019f4af1375f9" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d4/d76/a04177_1a70882c26b5e0900cb83d3bb68d56b782" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d4/d76/a04177_1ae6f8be6177279a23ec2efb0c9c2b83ac" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureLayout</name></member>
      <member refid="d4/d76/a04177_1ac6418e33f6cbc136e07cc79c77057733" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureLayout</name></member>
      <member refid="d4/d76/a04177_1a77ed83f4d34250f0daf619674791a08c" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureLayout</name></member>
      <member refid="d4/d76/a04177_1a38d122cc3c76362e353ea342b041636e" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureView</name></member>
      <member refid="d4/d76/a04177_1a78cacaa4597d5ac2129248b21d82cfbb" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>~TextureLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
