<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="d4/d44/a03065" kind="class" language="C++" prot="public">
    <compoundname>castor3d::Engine</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::Unique&lt; Engine &gt;</basecompoundref>
    <includes local="no">Engine.hpp</includes>
      <sectiondef kind="user-defined">
      <description><para>Getters. </para>
</description>
      <memberdef kind="function" id="d4/d44/a03065_1a6ce6ffa3979329585653cc681adfeefe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::Engine::getDefaultLightingModelName</definition>
        <argsstring>() const</argsstring>
        <name>getDefaultLightingModelName</name>
        <qualifiedname>castor3d::Engine::getDefaultLightingModelName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="678" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a13b3a6c70c52e44d5098d90b0dbebbb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1af3f5b17bb8afa2f5420a0639640aac4d" kindref="member">ToneMappingFactory</ref> const &amp;</type>
        <definition>C3D_API ToneMappingFactory const  &amp; castor3d::Engine::getToneMappingFactory</definition>
        <argsstring>() const</argsstring>
        <name>getToneMappingFactory</name>
        <qualifiedname>castor3d::Engine::getToneMappingFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="679" column="35"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a10fadbd04a658acc166eb327130e1c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1af3f5b17bb8afa2f5420a0639640aac4d" kindref="member">ToneMappingFactory</ref> &amp;</type>
        <definition>C3D_API ToneMappingFactory &amp; castor3d::Engine::getToneMappingFactory</definition>
        <argsstring>()</argsstring>
        <name>getToneMappingFactory</name>
        <qualifiedname>castor3d::Engine::getToneMappingFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="680" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a7061aeead1fde9eea7c71a78b9bffdf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1a8e32287e6c2687bb1d6efed3e7ef67b6" kindref="member">PostEffectFactory</ref> const &amp;</type>
        <definition>C3D_API PostEffectFactory const  &amp; castor3d::Engine::getPostEffectFactory</definition>
        <argsstring>() const</argsstring>
        <name>getPostEffectFactory</name>
        <qualifiedname>castor3d::Engine::getPostEffectFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="681" column="34"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a4124814e064257ff58b07516465d115a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1a8e32287e6c2687bb1d6efed3e7ef67b6" kindref="member">PostEffectFactory</ref> &amp;</type>
        <definition>C3D_API PostEffectFactory &amp; castor3d::Engine::getPostEffectFactory</definition>
        <argsstring>()</argsstring>
        <name>getPostEffectFactory</name>
        <qualifiedname>castor3d::Engine::getPostEffectFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="682" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a8641ffc3e359d15c0e1c7df354dd3b69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::Engine::getWantedFps</definition>
        <argsstring>() const</argsstring>
        <name>getWantedFps</name>
        <qualifiedname>castor3d::Engine::getWantedFps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="683" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aa7f130a0d0a7ae259c7b89e6c104d968" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1a2320dd05b1116fa04ae1b5afc6c832bb" kindref="member">castor3d::MaterialObs</ref></type>
        <definition>C3D_API castor3d::MaterialObs castor3d::Engine::getDefaultMaterial</definition>
        <argsstring>() const</argsstring>
        <name>getDefaultMaterial</name>
        <qualifiedname>castor3d::Engine::getDefaultMaterial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="684" column="31"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a8b8959435cfd02c78adb026f2803878c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Engine::hasMeshShaders</definition>
        <argsstring>() const</argsstring>
        <name>hasMeshShaders</name>
        <qualifiedname>castor3d::Engine::hasMeshShaders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="685" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a6ee0628c0f085ea60b5a9c94fc9af450" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::Engine::getMaxPassTypeCount</definition>
        <argsstring>() const</argsstring>
        <name>getMaxPassTypeCount</name>
        <qualifiedname>castor3d::Engine::getMaxPassTypeCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="686" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a357a196c28d35b877ff6e9d225a09125" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> *</type>
        <definition>C3D_API RenderDevice * castor3d::Engine::getRenderDevice</definition>
        <argsstring>() const</argsstring>
        <name>getRenderDevice</name>
        <qualifiedname>castor3d::Engine::getRenderDevice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="687" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ac88f73152455002444d00d9a8fe3be33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/da3/a03221" kindref="compound">ControlsManager</ref> *</type>
        <definition>C3D_API ControlsManager * castor3d::Engine::getControlsManager</definition>
        <argsstring>() const</argsstring>
        <name>getControlsManager</name>
        <qualifiedname>castor3d::Engine::getControlsManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="688" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a2a3070874bc9257b56735ed7090f1704" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::String const &amp;</type>
        <definition>castor::String const  &amp; castor3d::Engine::getAppName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getAppName</name>
        <qualifiedname>castor3d::Engine::getAppName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="690" column="23" bodyfile="Engine.hpp" bodystart="690" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ad67d083dab9477be09f1e357c5fd0809" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="de/dc5/a04521" kindref="compound">Version</ref> const &amp;</type>
        <definition>Version const  &amp; castor3d::Engine::getAppVersion</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getAppVersion</name>
        <qualifiedname>castor3d::Engine::getAppVersion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="695" column="16" bodyfile="Engine.hpp" bodystart="695" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::ImageCache const &amp;</type>
        <definition>castor::ImageCache const  &amp; castor3d::Engine::getImageCache</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImageCache</name>
        <qualifiedname>castor3d::Engine::getImageCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="700" column="27" bodyfile="Engine.hpp" bodystart="700" bodyend="703"/>
        <referencedby refid="d4/d44/a03065_1a1f26b1f69ade47399e32ee596ed77756" compoundref="d6/d82/a00293" startline="1019" endline="1024">addImage</referencedby>
        <referencedby refid="d4/d44/a03065_1a8e7137f1ee10104cab15245472a4dbeb" compoundref="d6/d82/a00293" startline="1012" endline="1017">addNewImage</referencedby>
        <referencedby refid="d4/d44/a03065_1af92ce0a62bfeb2923bf0a32c1094e9d4" compoundref="d6/d82/a00293" startline="1004" endline="1009">createImage</referencedby>
        <referencedby refid="d4/d44/a03065_1a0e3cae5eb336c27b42a7225bdbd1b38f" compoundref="d6/d82/a00293" startline="1032" endline="1035">findImage</referencedby>
        <referencedby refid="d4/d44/a03065_1ae7e13a16cf5c75af931f9e3f3ef0968d" compoundref="d6/d82/a00293" startline="1037" endline="1040">hasImage</referencedby>
        <referencedby refid="d4/d44/a03065_1a1cae454c199e0ccc5d67813a812dba75" compoundref="d6/d82/a00293" startline="1026" endline="1030">removeImage</referencedby>
        <referencedby refid="d4/d44/a03065_1ab079a7d5c089864cd6eb28d8ccaf83ea" compoundref="d6/d82/a00293" startline="1048" endline="1057">tryAddImage</referencedby>
        <referencedby refid="d4/d44/a03065_1a3279e895e623bdcb3eaf0ff99ed221b5" compoundref="d6/d82/a00293" startline="1042" endline="1045">tryFindImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a3a9cb1d980ba5575bae64306fb51b68a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::ImageCache &amp;</type>
        <definition>castor::ImageCache &amp; castor3d::Engine::getImageCache</definition>
        <argsstring>() noexcept</argsstring>
        <name>getImageCache</name>
        <qualifiedname>castor3d::Engine::getImageCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="705" column="21" bodyfile="Engine.hpp" bodystart="705" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::FontCache const &amp;</type>
        <definition>castor::FontCache const  &amp; castor3d::Engine::getFontCache</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFontCache</name>
        <qualifiedname>castor3d::Engine::getFontCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="710" column="26" bodyfile="Engine.hpp" bodystart="710" bodyend="713"/>
        <referencedby refid="d4/d44/a03065_1ac9abab737dc2b11ac9ee6f6ef31045c1" compoundref="d6/d82/a00293" startline="970" endline="975">addFont</referencedby>
        <referencedby refid="d4/d44/a03065_1a52cc49e29ffe7b2da28de2c4622913a6" compoundref="d6/d82/a00293" startline="963" endline="968">addNewFont</referencedby>
        <referencedby refid="d4/d44/a03065_1a0705231fef20a697973ac71b36bd0b57" compoundref="d6/d82/a00293" startline="955" endline="960">createFont</referencedby>
        <referencedby refid="d4/d44/a03065_1ad1ce4f92f240c0fa3c1c4ede63942bac" compoundref="d6/d82/a00293" startline="983" endline="986">findFont</referencedby>
        <referencedby refid="d4/d44/a03065_1ab139accf9826d7cb5103af76aab1ec15" compoundref="d6/d82/a00293" startline="988" endline="991">hasFont</referencedby>
        <referencedby refid="d4/d44/a03065_1addc711e1060765415a0812574efb17a7" compoundref="d6/d82/a00293" startline="977" endline="981">removeFont</referencedby>
        <referencedby refid="d4/d44/a03065_1ad1e115ab10d0a0a64bedd07035cbe6b2" compoundref="d6/d82/a00293" startline="993" endline="996">tryFindFont</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aa9163ff31a8feff9a7936a6ec250e8a2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::FontCache &amp;</type>
        <definition>castor::FontCache &amp; castor3d::Engine::getFontCache</definition>
        <argsstring>() noexcept</argsstring>
        <name>getFontCache</name>
        <qualifiedname>castor3d::Engine::getFontCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="715" column="20" bodyfile="Engine.hpp" bodystart="715" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ab54afdc724299a29514a2eed1a3fcc52" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>UserInputListenerRPtr</type>
        <definition>UserInputListenerRPtr castor3d::Engine::getUserInputListener</definition>
        <argsstring>() noexcept</argsstring>
        <name>getUserInputListener</name>
        <qualifiedname>castor3d::Engine::getUserInputListener</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="720" column="23" bodyfile="Engine.hpp" bodystart="720" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a615cb64827b7fcd2ff4438c061f37adc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d99/a05585" kindref="compound">RenderSystem</ref> *</type>
        <definition>RenderSystem * castor3d::Engine::getRenderSystem</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderSystem</name>
        <qualifiedname>castor3d::Engine::getRenderSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="725" column="15" bodyfile="Engine.hpp" bodystart="725" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aa40434af7c60405110529624930ab5bd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto castor3d::Engine::getDefaultSampler</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefaultSampler</name>
        <qualifiedname>castor3d::Engine::getDefaultSampler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="730" column="6" bodyfile="Engine.hpp" bodystart="730" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a68a4f02a41dd92eed22cfd21c06ed901" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto castor3d::Engine::getLightsSampler</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLightsSampler</name>
        <qualifiedname>castor3d::Engine::getLightsSampler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="735" column="6" bodyfile="Engine.hpp" bodystart="735" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a345fbab7e32bfbfaf61f2dcd432b134a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::map&lt; castor::String, castor::AdditionalParsers &gt; const &amp;</type>
        <definition>std::map&lt; castor::String, castor::AdditionalParsers &gt; const  &amp; castor3d::Engine::getAdditionalParsers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getAdditionalParsers</name>
        <qualifiedname>castor3d::Engine::getAdditionalParsers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="740" column="17" bodyfile="Engine.hpp" bodystart="740" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a5e2b90e04922bc497b47fb1390661e6b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="de/dc5/a04521" kindref="compound">Version</ref> const &amp;</type>
        <definition>Version const  &amp; castor3d::Engine::getVersion</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getVersion</name>
        <qualifiedname>castor3d::Engine::getVersion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="745" column="16" bodyfile="Engine.hpp" bodystart="745" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aac153d4798d15f1437d85b01439f90e2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isValidationEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isValidationEnabled</name>
        <qualifiedname>castor3d::Engine::isValidationEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="750" column="6" bodyfile="Engine.hpp" bodystart="750" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a4a1004261058877b0edba00131447acd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::enableUpdateOptimisations</definition>
        <argsstring>(bool value) noexcept</argsstring>
        <name>enableUpdateOptimisations</name>
        <qualifiedname>castor3d::Engine::enableUpdateOptimisations</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="755" column="6" bodyfile="Engine.hpp" bodystart="755" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a743391e0928f95513f7ae9b6b2744fed" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::areUpdateOptimisationsEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>areUpdateOptimisationsEnabled</name>
        <qualifiedname>castor3d::Engine::areUpdateOptimisationsEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="760" column="6" bodyfile="Engine.hpp" bodystart="760" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a9de029a3a2bacd457aa229244931b1c2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isRandomisationEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isRandomisationEnabled</name>
        <qualifiedname>castor3d::Engine::isRandomisationEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="765" column="6" bodyfile="Engine.hpp" bodystart="765" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a2fb8f87af4900d30db440bbf82aefefc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isApiTraceEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isApiTraceEnabled</name>
        <qualifiedname>castor3d::Engine::isApiTraceEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="770" column="6" bodyfile="Engine.hpp" bodystart="770" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a1d94424ff1a7658a1da6bd46556f927f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::hasRenderLoop</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasRenderLoop</name>
        <qualifiedname>castor3d::Engine::hasRenderLoop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="775" column="6" bodyfile="Engine.hpp" bodystart="775" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a5f96f85e2a9bfa2ea94e4e8b7e2acc57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d42/a05465" kindref="compound">RenderLoop</ref> &amp;</type>
        <definition>RenderLoop &amp; castor3d::Engine::getRenderLoop</definition>
        <argsstring>() const</argsstring>
        <name>getRenderLoop</name>
        <qualifiedname>castor3d::Engine::getRenderLoop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="780" column="13" bodyfile="Engine.hpp" bodystart="780" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ad8c443d105a15ce6d702d98a66a29c67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::isThreaded</definition>
        <argsstring>()</argsstring>
        <name>isThreaded</name>
        <qualifiedname>castor3d::Engine::isThreaded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="785" column="6" bodyfile="Engine.hpp" bodystart="785" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a90fc5a88b18924a71e6c485edef0eed9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d6/dd4/a04581" kindref="compound">MeshFactory</ref> &amp;</type>
        <definition>MeshFactory &amp; castor3d::Engine::getMeshFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getMeshFactory</name>
        <qualifiedname>castor3d::Engine::getMeshFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="790" column="14" bodyfile="Engine.hpp" bodystart="790" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1adc122d978b9651f6ea977ae2382f74d7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d0/d0f/a04085" kindref="compound">PassFactory</ref> &amp;</type>
        <definition>PassFactory &amp; castor3d::Engine::getPassFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPassFactory</name>
        <qualifiedname>castor3d::Engine::getPassFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="795" column="14" bodyfile="Engine.hpp" bodystart="795" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1abc343b079f08ff5800b2d6fe33ade917" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d7/dfc/a04061" kindref="compound">PassComponentRegister</ref> &amp;</type>
        <definition>PassComponentRegister &amp; castor3d::Engine::getPassComponentsRegister</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPassComponentsRegister</name>
        <qualifiedname>castor3d::Engine::getPassComponentsRegister</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="800" column="24" bodyfile="Engine.hpp" bodystart="800" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a1ca0c7f5a69e34b8fc64198c93775246" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="df/d15/a03321" kindref="compound">ImporterFileFactory</ref> &amp;</type>
        <definition>ImporterFileFactory &amp; castor3d::Engine::getImporterFileFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImporterFileFactory</name>
        <qualifiedname>castor3d::Engine::getImporterFileFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="805" column="22" bodyfile="Engine.hpp" bodystart="805" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ac643d09d5f347b9d9edda8060fa01412" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a01725_1af3859a26e600eadd4e743b8a1ed70bf0" kindref="member">ParticleFactory</ref> &amp;</type>
        <definition>ParticleFactory &amp; castor3d::Engine::getParticleFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getParticleFactory</name>
        <qualifiedname>castor3d::Engine::getParticleFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="810" column="18" bodyfile="Engine.hpp" bodystart="810" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aa74347335066184d5b74923a87cf0c1c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::CpuInformations const &amp;</type>
        <definition>castor::CpuInformations const  &amp; castor3d::Engine::getCpuInformations</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getCpuInformations</name>
        <qualifiedname>castor3d::Engine::getCpuInformations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="815" column="32" bodyfile="Engine.hpp" bodystart="815" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a8c11b9e48c91e4b88b61eadc48f244fb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d3/d5e/a01725_1a8fcaef546bc1fb19d2a89be57778f03a" kindref="member">LightingModelID</ref></type>
        <definition>LightingModelID castor3d::Engine::getDefaultLightingModel</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDefaultLightingModel</name>
        <qualifiedname>castor3d::Engine::getDefaultLightingModel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="820" column="17" bodyfile="Engine.hpp" bodystart="820" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a8b5e0aae55adeafea48200c6bb6a5c21" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::ImageLoader const &amp;</type>
        <definition>castor::ImageLoader const  &amp; castor3d::Engine::getImageLoader</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImageLoader</name>
        <qualifiedname>castor3d::Engine::getImageLoader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="825" column="28" bodyfile="Engine.hpp" bodystart="825" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a11f7c7cf274a9ede3c4ab62d2616774a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::ImageLoader &amp;</type>
        <definition>castor::ImageLoader &amp; castor3d::Engine::getImageLoader</definition>
        <argsstring>() noexcept</argsstring>
        <name>getImageLoader</name>
        <qualifiedname>castor3d::Engine::getImageLoader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="830" column="22" bodyfile="Engine.hpp" bodystart="830" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a16879a361b178e86595208ade2df8d19" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::ImageWriter const &amp;</type>
        <definition>castor::ImageWriter const  &amp; castor3d::Engine::getImageWriter</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getImageWriter</name>
        <qualifiedname>castor3d::Engine::getImageWriter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="835" column="28" bodyfile="Engine.hpp" bodystart="835" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a8669fcc5e33e514d52031d3365af50bc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ashes::RendererList const &amp;</type>
        <definition>ashes::RendererList const  &amp; castor3d::Engine::getRenderersList</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderersList</name>
        <qualifiedname>castor3d::Engine::getRenderersList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="840" column="28" bodyfile="Engine.hpp" bodystart="840" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a205cf2cde3639ef60bbc92e4e7933aee" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::LoggerInstance &amp;</type>
        <definition>castor::LoggerInstance &amp; castor3d::Engine::getLogger</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLogger</name>
        <qualifiedname>castor3d::Engine::getLogger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="845" column="25" bodyfile="Engine.hpp" bodystart="845" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a1fe8d3ce4a0436f48c8f5bb153d30477" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::getLpvGridSize</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLpvGridSize</name>
        <qualifiedname>castor3d::Engine::getLpvGridSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="850" column="10" bodyfile="Engine.hpp" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ac2d8afa9336ca07ea402ad14bfeb7c7f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::getMaxImageSize</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getMaxImageSize</name>
        <qualifiedname>castor3d::Engine::getMaxImageSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="855" column="10" bodyfile="Engine.hpp" bodystart="855" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a7f14a51f2b4131c467f153571135ab79" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::map&lt; castor::String, <ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref> * &gt; const &amp;</type>
        <definition>std::map&lt; castor::String, RenderWindow * &gt; const  &amp; castor3d::Engine::getRenderWindows</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRenderWindows</name>
        <qualifiedname>castor3d::Engine::getRenderWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="860" column="17" bodyfile="Engine.hpp" bodystart="860" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a3798850798a109677f2f1c8bf00c3d5b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>crg::ResourceHandler &amp;</type>
        <definition>crg::ResourceHandler &amp; castor3d::Engine::getGraphResourceHandler</definition>
        <argsstring>() noexcept</argsstring>
        <name>getGraphResourceHandler</name>
        <qualifiedname>castor3d::Engine::getGraphResourceHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="865" column="23" bodyfile="Engine.hpp" bodystart="865" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a55787bb512764bfbb00f4b3cce9c37c6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="de/d7d/a06309" kindref="compound">LightingModelFactory</ref> &amp;</type>
        <definition>LightingModelFactory &amp; castor3d::Engine::getLightingModelFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLightingModelFactory</name>
        <qualifiedname>castor3d::Engine::getLightingModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="870" column="23" bodyfile="Engine.hpp" bodystart="870" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ae6e7b6368605b517bfbfdcdb0158fa22" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="de/d0f/a01727_1a041412c5c365e01d313597f6943df211" kindref="member">shader::BackgroundModelFactory</ref> const &amp;</type>
        <definition>shader::BackgroundModelFactory const  &amp; castor3d::Engine::getBackgroundModelFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBackgroundModelFactory</name>
        <qualifiedname>castor3d::Engine::getBackgroundModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="875" column="39" bodyfile="Engine.hpp" bodystart="875" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a42b44de31e1bd004f5bb83e58719376a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="de/d0f/a01727_1a041412c5c365e01d313597f6943df211" kindref="member">shader::BackgroundModelFactory</ref> &amp;</type>
        <definition>shader::BackgroundModelFactory &amp; castor3d::Engine::getBackgroundModelFactory</definition>
        <argsstring>() noexcept</argsstring>
        <name>getBackgroundModelFactory</name>
        <qualifiedname>castor3d::Engine::getBackgroundModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="880" column="33" bodyfile="Engine.hpp" bodystart="880" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1acbd89114013a2d302ec3a3bc9d94d93e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>SceneRPtr</type>
        <definition>SceneRPtr castor3d::Engine::getLoadingScene</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLoadingScene</name>
        <qualifiedname>castor3d::Engine::getLoadingScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="885" column="11" bodyfile="Engine.hpp" bodystart="885" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aec9a939534fcd7a28c83cdd1959c219a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="df/ddb/a05729" kindref="compound">Texture</ref> const &amp;</type>
        <definition>Texture const  &amp; castor3d::Engine::getPrefilteredBrdfTexture</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPrefilteredBrdfTexture</name>
        <qualifiedname>castor3d::Engine::getPrefilteredBrdfTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="890" column="16" bodyfile="Engine.hpp" bodystart="890" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ab709206807e368c1809b4b232ce377e0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>castor::LengthUnit</type>
        <definition>castor::LengthUnit castor3d::Engine::getLengthUnit</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLengthUnit</name>
        <qualifiedname>castor3d::Engine::getLengthUnit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="895" column="20" bodyfile="Engine.hpp" bodystart="895" bodyend="898"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>Mutators. </para>
</description>
      <memberdef kind="function" id="d4/d44/a03065_1a418eee56faf8ecaee85aedff7f0bb004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::setLoadingScene</definition>
        <argsstring>(SceneUPtr scene)</argsstring>
        <name>setLoadingScene</name>
        <qualifiedname>castor3d::Engine::setLoadingScene</qualifiedname>
        <param>
          <type>SceneUPtr</type>
          <declname>scene</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="909" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a898d543d49adda4a3b346e5a10e047a8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setUserInputListener</definition>
        <argsstring>(UserInputListenerUPtr listener) noexcept</argsstring>
        <name>setUserInputListener</name>
        <qualifiedname>castor3d::Engine::setUserInputListener</qualifiedname>
        <param>
          <type>UserInputListenerUPtr</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="911" column="6" bodyfile="Engine.hpp" bodystart="911" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a1179ac445c323ab841a6f255a81e7cad" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ListenerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void castor3d::Engine::setUserInputListenerT</definition>
        <argsstring>(castor::UniquePtr&lt; ListenerT &gt; listener) noexcept</argsstring>
        <name>setUserInputListenerT</name>
        <qualifiedname>castor3d::Engine::setUserInputListenerT</qualifiedname>
        <param>
          <type>castor::UniquePtr&lt; ListenerT &gt;</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="917" column="6" bodyfile="Engine.hpp" bodystart="917" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a63ec9f4c7c88b62a3361e2a19bd05961" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setDefaultLightingModel</definition>
        <argsstring>(LightingModelID value) noexcept</argsstring>
        <name>setDefaultLightingModel</name>
        <qualifiedname>castor3d::Engine::setDefaultLightingModel</qualifiedname>
        <param>
          <type><ref refid="d3/d5e/a01725_1a8fcaef546bc1fb19d2a89be57778f03a" kindref="member">LightingModelID</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="922" column="6" bodyfile="Engine.hpp" bodystart="922" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a5ae0e718bdc1f2dcbc6b267fb31a8db8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setMaxImageSize</definition>
        <argsstring>(uint32_t size) noexcept</argsstring>
        <name>setMaxImageSize</name>
        <qualifiedname>castor3d::Engine::setMaxImageSize</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="927" column="6" bodyfile="Engine.hpp" bodystart="927" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aa69e5ab2e1776ec29536e1f5d2acefa1" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setLpvGridSize</definition>
        <argsstring>(uint32_t size) noexcept</argsstring>
        <name>setLpvGridSize</name>
        <qualifiedname>castor3d::Engine::setLpvGridSize</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="932" column="6" bodyfile="Engine.hpp" bodystart="932" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a57b9f140207dda3886fb311adcd8627b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ComponentT</type>
          </param>
        </templateparamlist>
        <type><ref refid="d3/d5e/a01725_1a5f413b599b618d042e26d27d4a0ee1ca" kindref="member">PassComponentID</ref></type>
        <definition>PassComponentID castor3d::Engine::registerPassComponent</definition>
        <argsstring>(CreatePassComponentPlugin createPlugin=&amp;ComponentT::createPlugin)</argsstring>
        <name>registerPassComponent</name>
        <qualifiedname>castor3d::Engine::registerPassComponent</qualifiedname>
        <param>
          <type><ref refid="d3/d5e/a01725_1acfdf826cc78216dc88316e3a64720e42" kindref="member">CreatePassComponentPlugin</ref></type>
          <declname>createPlugin</declname>
          <defval>&amp;ComponentT::createPlugin</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="938" column="17" bodyfile="Engine.hpp" bodystart="938" bodyend="942"/>
        <references refid="d4/d44/a03065_1adf455d2cfdb58f051f5b11ad909e7856">registerPassComponent</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a6a4c6e0bcc60e9419930e5173245876c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::setLengthUnit</definition>
        <argsstring>(castor::LengthUnit value) noexcept</argsstring>
        <name>setLengthUnit</name>
        <qualifiedname>castor3d::Engine::setLengthUnit</qualifiedname>
        <param>
          <type>castor::LengthUnit</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="944" column="6" bodyfile="Engine.hpp" bodystart="944" bodyend="947"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>Fonts. </para>
</description>
      <memberdef kind="function" id="d4/d44/a03065_1a0705231fef20a697973ac71b36bd0b57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type>castor::FontCache::ElementPtrT</type>
        <definition>castor::FontCache::ElementPtrT castor3d::Engine::createFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key, ParametersT &amp;&amp;... parameters) const</argsstring>
        <name>createFont</name>
        <qualifiedname>castor3d::Engine::createFont</qualifiedname>
        <param>
          <type>castor::FontCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d7/df7/a04493" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="955" column="32" bodyfile="Engine.hpp" bodystart="955" bodyend="960"/>
        <references refid="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" compoundref="d6/d82/a00293" startline="710" endline="713">getFontCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a52cc49e29ffe7b2da28de2c4622913a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type>castor::FontCache::ElementObsT</type>
        <definition>castor::FontCache::ElementObsT castor3d::Engine::addNewFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key, ParametersT &amp;&amp;... parameters)</argsstring>
        <name>addNewFont</name>
        <qualifiedname>castor3d::Engine::addNewFont</qualifiedname>
        <param>
          <type>castor::FontCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d7/df7/a04493" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="963" column="32" bodyfile="Engine.hpp" bodystart="963" bodyend="968"/>
        <references refid="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" compoundref="d6/d82/a00293" startline="710" endline="713">getFontCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ac9abab737dc2b11ac9ee6f6ef31045c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::FontCache::ElementObsT</type>
        <definition>castor::FontCache::ElementObsT castor3d::Engine::addFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key, castor::FontCache::ElementPtrT &amp;element, bool initialise=false)</argsstring>
        <name>addFont</name>
        <qualifiedname>castor3d::Engine::addFont</qualifiedname>
        <param>
          <type>castor::FontCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>castor::FontCache::ElementPtrT &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialise</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="970" column="32" bodyfile="Engine.hpp" bodystart="970" bodyend="975"/>
        <references refid="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" compoundref="d6/d82/a00293" startline="710" endline="713">getFontCache</references>
        <references refid="d4/d44/a03065_1af2f096aad3600390dec50bbe37e8e3b2">initialise</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1addc711e1060765415a0812574efb17a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::removeFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key, bool cleanup=false)</argsstring>
        <name>removeFont</name>
        <qualifiedname>castor3d::Engine::removeFont</qualifiedname>
        <param>
          <type>castor::FontCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cleanup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="977" column="6" bodyfile="Engine.hpp" bodystart="977" bodyend="981"/>
        <references refid="d4/d44/a03065_1a22e67669ad2954a42ce97e3d62c7f299">cleanup</references>
        <references refid="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" compoundref="d6/d82/a00293" startline="710" endline="713">getFontCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ad1ce4f92f240c0fa3c1c4ede63942bac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::FontCache::ElementObsT</type>
        <definition>castor::FontCache::ElementObsT castor3d::Engine::findFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key) const</argsstring>
        <name>findFont</name>
        <qualifiedname>castor3d::Engine::findFont</qualifiedname>
        <param>
          <type>castor::FontCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="983" column="32" bodyfile="Engine.hpp" bodystart="983" bodyend="986"/>
        <references refid="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" compoundref="d6/d82/a00293" startline="710" endline="713">getFontCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ab139accf9826d7cb5103af76aab1ec15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::hasFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key) const</argsstring>
        <name>hasFont</name>
        <qualifiedname>castor3d::Engine::hasFont</qualifiedname>
        <param>
          <type>castor::FontCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="988" column="6" bodyfile="Engine.hpp" bodystart="988" bodyend="991"/>
        <references refid="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" compoundref="d6/d82/a00293" startline="710" endline="713">getFontCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ad1e115ab10d0a0a64bedd07035cbe6b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::FontCache::ElementObsT</type>
        <definition>castor::FontCache::ElementObsT castor3d::Engine::tryFindFont</definition>
        <argsstring>(castor::FontCache::ElementKeyT const &amp;key) const</argsstring>
        <name>tryFindFont</name>
        <qualifiedname>castor3d::Engine::tryFindFont</qualifiedname>
        <param>
          <type>castor::FontCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="993" column="32" bodyfile="Engine.hpp" bodystart="993" bodyend="996"/>
        <references refid="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" compoundref="d6/d82/a00293" startline="710" endline="713">getFontCache</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>Images. </para>
</description>
      <memberdef kind="function" id="d4/d44/a03065_1af92ce0a62bfeb2923bf0a32c1094e9d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type>castor::ImageCache::ElementPtrT</type>
        <definition>castor::ImageCache::ElementPtrT castor3d::Engine::createImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key, ParametersT &amp;&amp;... parameters) const</argsstring>
        <name>createImage</name>
        <qualifiedname>castor3d::Engine::createImage</qualifiedname>
        <param>
          <type>castor::ImageCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d7/df7/a04493" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1004" column="33" bodyfile="Engine.hpp" bodystart="1004" bodyend="1009"/>
        <references refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="d6/d82/a00293" startline="700" endline="703">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a8e7137f1ee10104cab15245472a4dbeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type>castor::ImageCache::ElementObsT</type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::addNewImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key, ParametersT &amp;&amp;... parameters)</argsstring>
        <name>addNewImage</name>
        <qualifiedname>castor3d::Engine::addNewImage</qualifiedname>
        <param>
          <type>castor::ImageCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d7/df7/a04493" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1012" column="33" bodyfile="Engine.hpp" bodystart="1012" bodyend="1017"/>
        <references refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="d6/d82/a00293" startline="700" endline="703">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a1f26b1f69ade47399e32ee596ed77756" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::ImageCache::ElementObsT</type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::addImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key, castor::ImageCache::ElementPtrT &amp;element, bool initialise=false)</argsstring>
        <name>addImage</name>
        <qualifiedname>castor3d::Engine::addImage</qualifiedname>
        <param>
          <type>castor::ImageCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>castor::ImageCache::ElementPtrT &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialise</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1019" column="33" bodyfile="Engine.hpp" bodystart="1019" bodyend="1024"/>
        <references refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="d6/d82/a00293" startline="700" endline="703">getImageCache</references>
        <references refid="d4/d44/a03065_1af2f096aad3600390dec50bbe37e8e3b2">initialise</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a1cae454c199e0ccc5d67813a812dba75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::removeImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key, bool cleanup=false)</argsstring>
        <name>removeImage</name>
        <qualifiedname>castor3d::Engine::removeImage</qualifiedname>
        <param>
          <type>castor::ImageCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cleanup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1026" column="6" bodyfile="Engine.hpp" bodystart="1026" bodyend="1030"/>
        <references refid="d4/d44/a03065_1a22e67669ad2954a42ce97e3d62c7f299">cleanup</references>
        <references refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="d6/d82/a00293" startline="700" endline="703">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a0e3cae5eb336c27b42a7225bdbd1b38f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::ImageCache::ElementObsT</type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::findImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key) const</argsstring>
        <name>findImage</name>
        <qualifiedname>castor3d::Engine::findImage</qualifiedname>
        <param>
          <type>castor::ImageCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1032" column="33" bodyfile="Engine.hpp" bodystart="1032" bodyend="1035"/>
        <references refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="d6/d82/a00293" startline="700" endline="703">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ae7e13a16cf5c75af931f9e3f3ef0968d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Engine::hasImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key) const</argsstring>
        <name>hasImage</name>
        <qualifiedname>castor3d::Engine::hasImage</qualifiedname>
        <param>
          <type>castor::ImageCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1037" column="6" bodyfile="Engine.hpp" bodystart="1037" bodyend="1040"/>
        <references refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="d6/d82/a00293" startline="700" endline="703">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a3279e895e623bdcb3eaf0ff99ed221b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::ImageCache::ElementObsT</type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::tryFindImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;key) const</argsstring>
        <name>tryFindImage</name>
        <qualifiedname>castor3d::Engine::tryFindImage</qualifiedname>
        <param>
          <type>castor::ImageCache::ElementKeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1042" column="33" bodyfile="Engine.hpp" bodystart="1042" bodyend="1045"/>
        <references refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="d6/d82/a00293" startline="700" endline="703">getImageCache</references>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ab079a7d5c089864cd6eb28d8ccaf83ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>ParametersT</declname>
            <defname>ParametersT</defname>
          </param>
        </templateparamlist>
        <type>castor::ImageCache::ElementObsT</type>
        <definition>castor::ImageCache::ElementObsT castor3d::Engine::tryAddImage</definition>
        <argsstring>(castor::ImageCache::ElementKeyT const &amp;name, bool initialise, castor::ImageCache::ElementObsT &amp;created, ParametersT &amp;&amp;... parameters)</argsstring>
        <name>tryAddImage</name>
        <qualifiedname>castor3d::Engine::tryAddImage</qualifiedname>
        <param>
          <type>castor::ImageCache::ElementKeyT const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialise</declname>
        </param>
        <param>
          <type>castor::ImageCache::ElementObsT &amp;</type>
          <declname>created</declname>
        </param>
        <param>
          <type><ref refid="d7/df7/a04493" kindref="compound">ParametersT</ref> &amp;&amp;...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1048" column="33" bodyfile="Engine.hpp" bodystart="1048" bodyend="1057"/>
        <references refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" compoundref="d6/d82/a00293" startline="700" endline="703">getImageCache</references>
        <references refid="d4/d44/a03065_1af2f096aad3600390dec50bbe37e8e3b2">initialise</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/d44/a03065_1adca6ae1cedbb991c4a056260eac32c8a" prot="private" static="no" mutable="no">
        <type>castor::LoggerInstancePtr</type>
        <definition>castor::LoggerInstancePtr castor3d::Engine::m_ownedLogger</definition>
        <argsstring></argsstring>
        <name>m_ownedLogger</name>
        <qualifiedname>castor3d::Engine::m_ownedLogger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1064" column="27" bodyfile="Engine.hpp" bodystart="1064" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ae5b070260e89ea19d18a87703869c931" prot="private" static="no" mutable="no">
        <type>castor::LoggerInstance *</type>
        <definition>castor::LoggerInstance* castor3d::Engine::m_logger</definition>
        <argsstring></argsstring>
        <name>m_logger</name>
        <qualifiedname>castor3d::Engine::m_logger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1065" column="25" bodyfile="Engine.hpp" bodystart="1065" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a9a32c11d418721fcb557eecbb7b88177" prot="private" static="no" mutable="no">
        <type>castor::String const</type>
        <definition>castor::String const castor3d::Engine::m_appName</definition>
        <argsstring></argsstring>
        <name>m_appName</name>
        <qualifiedname>castor3d::Engine::m_appName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1066" column="22" bodyfile="Engine.hpp" bodystart="1066" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ab99239a425c0ee6fe046adf7c17a85b3" prot="private" static="no" mutable="no">
        <type><ref refid="de/dc5/a04521" kindref="compound">Version</ref> const</type>
        <definition>Version const castor3d::Engine::m_appVersion</definition>
        <argsstring></argsstring>
        <name>m_appVersion</name>
        <qualifiedname>castor3d::Engine::m_appVersion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1067" column="15" bodyfile="Engine.hpp" bodystart="1067" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a2480647f1b1863ca8a7a2ddd710de6c3" prot="private" static="no" mutable="no">
        <type>RenderLoopUPtr</type>
        <definition>RenderLoopUPtr castor3d::Engine::m_renderLoop</definition>
        <argsstring></argsstring>
        <name>m_renderLoop</name>
        <qualifiedname>castor3d::Engine::m_renderLoop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1068" column="16" bodyfile="Engine.hpp" bodystart="1068" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a44f73c181073f518a1c1fa2aa542c93e" prot="private" static="no" mutable="no">
        <type><ref refid="de/dc5/a04521" kindref="compound">Version</ref></type>
        <definition>Version castor3d::Engine::m_version</definition>
        <argsstring></argsstring>
        <name>m_version</name>
        <qualifiedname>castor3d::Engine::m_version</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1069" column="9" bodyfile="Engine.hpp" bodystart="1069" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a6586a471d2ad424749c11199bc7129a4" prot="private" static="no" mutable="no">
        <type>ashes::RendererList</type>
        <definition>ashes::RendererList castor3d::Engine::m_rendererList</definition>
        <argsstring></argsstring>
        <name>m_rendererList</name>
        <qualifiedname>castor3d::Engine::m_rendererList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1070" column="21" bodyfile="Engine.hpp" bodystart="1070" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ab82a4fcaca8adcd2c6aa9ec9e38fac39" prot="private" static="no" mutable="no">
        <type>RenderSystemUPtr</type>
        <definition>RenderSystemUPtr castor3d::Engine::m_renderSystem</definition>
        <argsstring></argsstring>
        <name>m_renderSystem</name>
        <qualifiedname>castor3d::Engine::m_renderSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1071" column="18" bodyfile="Engine.hpp" bodystart="1071" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a27851fde9153f557b64e6c094ddf50d6" prot="private" static="no" mutable="no">
        <type><ref refid="df/ddb/a05729" kindref="compound">Texture</ref></type>
        <definition>Texture castor3d::Engine::m_brdf</definition>
        <argsstring></argsstring>
        <name>m_brdf</name>
        <qualifiedname>castor3d::Engine::m_brdf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1072" column="9" bodyfile="Engine.hpp" bodystart="1072" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ab14f3f24ed0245f73c7fbc95fd48fabc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Engine::m_cleaned</definition>
        <argsstring></argsstring>
        <name>m_cleaned</name>
        <qualifiedname>castor3d::Engine::m_cleaned</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1073" column="6" bodyfile="Engine.hpp" bodystart="1073" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a68a7366c2794c4be7751c3df17052605" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Engine::m_threaded</definition>
        <argsstring></argsstring>
        <name>m_threaded</name>
        <qualifiedname>castor3d::Engine::m_threaded</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1074" column="6" bodyfile="Engine.hpp" bodystart="1074" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a2fb0fd0f29860410c52ea92029ea0b86" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d5e/a01725_1ac06fa1a6b2c8945eca9aa59aa8c1ea51" kindref="member">SamplerObs</ref></type>
        <definition>SamplerObs castor3d::Engine::m_defaultSampler</definition>
        <argsstring></argsstring>
        <name>m_defaultSampler</name>
        <qualifiedname>castor3d::Engine::m_defaultSampler</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1075" column="12" bodyfile="Engine.hpp" bodystart="1075" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a07f5d3d107bc93b922d2530c60296cb1" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d5e/a01725_1ac06fa1a6b2c8945eca9aa59aa8c1ea51" kindref="member">SamplerObs</ref></type>
        <definition>SamplerObs castor3d::Engine::m_lightsSampler</definition>
        <argsstring></argsstring>
        <name>m_lightsSampler</name>
        <qualifiedname>castor3d::Engine::m_lightsSampler</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1076" column="12" bodyfile="Engine.hpp" bodystart="1076" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1acada1e0302fab81df0117ff7c9dd5d18" prot="private" static="no" mutable="no">
        <type>castor::ImageLoader</type>
        <definition>castor::ImageLoader castor3d::Engine::m_imageLoader</definition>
        <argsstring></argsstring>
        <name>m_imageLoader</name>
        <qualifiedname>castor3d::Engine::m_imageLoader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1077" column="21" bodyfile="Engine.hpp" bodystart="1077" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1af7e2b42a01565863bebd7c0b6b4317f8" prot="private" static="no" mutable="no">
        <type>castor::ImageWriter</type>
        <definition>castor::ImageWriter castor3d::Engine::m_imageWriter</definition>
        <argsstring></argsstring>
        <name>m_imageWriter</name>
        <qualifiedname>castor3d::Engine::m_imageWriter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1078" column="21" bodyfile="Engine.hpp" bodystart="1078" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ac6c656b473c4872a0e986ca4c34f3dd1" prot="private" static="no" mutable="no">
        <type>FrameListenerRPtr</type>
        <definition>FrameListenerRPtr castor3d::Engine::m_defaultListener</definition>
        <argsstring></argsstring>
        <name>m_defaultListener</name>
        <qualifiedname>castor3d::Engine::m_defaultListener</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1086" column="19" bodyfile="Engine.hpp" bodystart="1086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1aa14e3bf330ad1ae56d99e4258b78effa" prot="private" static="no" mutable="no">
        <type>std::map&lt; castor::String, <ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref> * &gt;</type>
        <definition>std::map&lt; castor::String, RenderWindow * &gt; castor3d::Engine::m_renderWindows</definition>
        <argsstring></argsstring>
        <name>m_renderWindows</name>
        <qualifiedname>castor3d::Engine::m_renderWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1087" column="10" bodyfile="Engine.hpp" bodystart="1087" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1abd4ce81dde7894e4bf7833a300f4385d" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref> const *, UserInputListenerUPtr &gt;</type>
        <definition>std::map&lt; RenderWindow const *, UserInputListenerUPtr &gt; castor3d::Engine::m_windowInputListeners</definition>
        <argsstring></argsstring>
        <name>m_windowInputListeners</name>
        <qualifiedname>castor3d::Engine::m_windowInputListeners</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1088" column="10" bodyfile="Engine.hpp" bodystart="1088" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ae62c1dad2af66916c55904af755dc342" prot="private" static="no" mutable="no">
        <type>UserInputListenerUPtr</type>
        <definition>UserInputListenerUPtr castor3d::Engine::m_userInputListener</definition>
        <argsstring></argsstring>
        <name>m_userInputListener</name>
        <qualifiedname>castor3d::Engine::m_userInputListener</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1089" column="23" bodyfile="Engine.hpp" bodystart="1089" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ad06e6693779fea49a547c249c5ddc4d5" prot="private" static="no" mutable="no">
        <type>castor::FontCache</type>
        <definition>castor::FontCache castor3d::Engine::m_fontCache</definition>
        <argsstring></argsstring>
        <name>m_fontCache</name>
        <qualifiedname>castor3d::Engine::m_fontCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1092" column="19" bodyfile="Engine.hpp" bodystart="1092" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1aea4645095cf0e48ddbcc0670bc902925" prot="private" static="no" mutable="no">
        <type>castor::ImageCache</type>
        <definition>castor::ImageCache castor3d::Engine::m_imageCache</definition>
        <argsstring></argsstring>
        <name>m_imageCache</name>
        <qualifiedname>castor3d::Engine::m_imageCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1093" column="20" bodyfile="Engine.hpp" bodystart="1093" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a16d2c526f0d35cf37eebc96b9fc232bb" prot="private" static="no" mutable="no">
        <type>std::map&lt; castor::String, castor::AdditionalParsers &gt;</type>
        <definition>std::map&lt; castor::String, castor::AdditionalParsers &gt; castor3d::Engine::m_additionalParsers</definition>
        <argsstring></argsstring>
        <name>m_additionalParsers</name>
        <qualifiedname>castor3d::Engine::m_additionalParsers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1094" column="10" bodyfile="Engine.hpp" bodystart="1094" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1accbd13b635d98a9f2ee8c1edbefeb502" prot="private" static="no" mutable="no">
        <type>MeshFactoryUPtr</type>
        <definition>MeshFactoryUPtr castor3d::Engine::m_meshFactory</definition>
        <argsstring></argsstring>
        <name>m_meshFactory</name>
        <qualifiedname>castor3d::Engine::m_meshFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1095" column="17" bodyfile="Engine.hpp" bodystart="1095" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a28e60fb73fd323e55d6f3aefd8202431" prot="private" static="no" mutable="no">
        <type>ImporterFileFactoryUPtr</type>
        <definition>ImporterFileFactoryUPtr castor3d::Engine::m_importerFileFactory</definition>
        <argsstring></argsstring>
        <name>m_importerFileFactory</name>
        <qualifiedname>castor3d::Engine::m_importerFileFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1096" column="25" bodyfile="Engine.hpp" bodystart="1096" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a291a3e44f575ae144eba32fa085fb381" prot="private" static="no" mutable="no">
        <type>ParticleFactoryUPtr</type>
        <definition>ParticleFactoryUPtr castor3d::Engine::m_particleFactory</definition>
        <argsstring></argsstring>
        <name>m_particleFactory</name>
        <qualifiedname>castor3d::Engine::m_particleFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1097" column="21" bodyfile="Engine.hpp" bodystart="1097" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a740d8635671e84da06912ee94d34cfd5" prot="private" static="no" mutable="no">
        <type>PassFactoryUPtr</type>
        <definition>PassFactoryUPtr castor3d::Engine::m_passFactory</definition>
        <argsstring></argsstring>
        <name>m_passFactory</name>
        <qualifiedname>castor3d::Engine::m_passFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1098" column="17" bodyfile="Engine.hpp" bodystart="1098" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a6e536751738ebf5795dfa6ef83471298" prot="private" static="no" mutable="no">
        <type>PassComponentRegisterUPtr</type>
        <definition>PassComponentRegisterUPtr castor3d::Engine::m_passComponents</definition>
        <argsstring></argsstring>
        <name>m_passComponents</name>
        <qualifiedname>castor3d::Engine::m_passComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1099" column="27" bodyfile="Engine.hpp" bodystart="1099" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1afadb61514f5ec62166ba88d39e9fb65f" prot="private" static="no" mutable="no">
        <type>castor::CpuInformations</type>
        <definition>castor::CpuInformations castor3d::Engine::m_cpuInformations</definition>
        <argsstring></argsstring>
        <name>m_cpuInformations</name>
        <qualifiedname>castor3d::Engine::m_cpuInformations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1100" column="25" bodyfile="Engine.hpp" bodystart="1100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ab4dd08a318d7af3b80d45ea576a960f8" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d5e/a01725_1a8fcaef546bc1fb19d2a89be57778f03a" kindref="member">LightingModelID</ref></type>
        <definition>LightingModelID castor3d::Engine::m_lightingModelId</definition>
        <argsstring></argsstring>
        <name>m_lightingModelId</name>
        <qualifiedname>castor3d::Engine::m_lightingModelId</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1101" column="17" bodyfile="Engine.hpp" bodystart="1101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a16781d35239d9fbab194f333ce128deb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Engine::m_enableValidation</definition>
        <argsstring></argsstring>
        <name>m_enableValidation</name>
        <qualifiedname>castor3d::Engine::m_enableValidation</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1102" column="6" bodyfile="Engine.hpp" bodystart="1102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a90bc55d327c36440be23d86c300272c5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Engine::m_enableApiTrace</definition>
        <argsstring></argsstring>
        <name>m_enableApiTrace</name>
        <qualifiedname>castor3d::Engine::m_enableApiTrace</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1103" column="6" bodyfile="Engine.hpp" bodystart="1103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ab67fde8414f083c9ce73b088e1df45db" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Engine::m_enableUpdateOptimisations</definition>
        <argsstring></argsstring>
        <name>m_enableUpdateOptimisations</name>
        <qualifiedname>castor3d::Engine::m_enableUpdateOptimisations</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1104" column="6" bodyfile="Engine.hpp" bodystart="1104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a4862ee379fb3fe34c1964d24a7801c2a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Engine::m_enableRandom</definition>
        <argsstring></argsstring>
        <name>m_enableRandom</name>
        <qualifiedname>castor3d::Engine::m_enableRandom</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1105" column="6" bodyfile="Engine.hpp" bodystart="1105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1abacccda43e98535e6c797850abb622f0" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::m_lpvGridSize</definition>
        <argsstring></argsstring>
        <name>m_lpvGridSize</name>
        <qualifiedname>castor3d::Engine::m_lpvGridSize</qualifiedname>
        <initializer>{ 32u }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1106" column="10" bodyfile="Engine.hpp" bodystart="1106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a173c3212b8140a8f3cf54be640631496" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Engine::m_maxImageSize</definition>
        <argsstring></argsstring>
        <name>m_maxImageSize</name>
        <qualifiedname>castor3d::Engine::m_maxImageSize</qualifiedname>
        <initializer>{ 0xFFFFFFFF }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1107" column="10" bodyfile="Engine.hpp" bodystart="1107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a10f19e9ef04cd24c2ef0a1a4a8026815" prot="private" static="no" mutable="no">
        <type>castor::AsyncJobQueue</type>
        <definition>castor::AsyncJobQueue castor3d::Engine::m_cpuJobs</definition>
        <argsstring></argsstring>
        <name>m_cpuJobs</name>
        <qualifiedname>castor3d::Engine::m_cpuJobs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1108" column="23" bodyfile="Engine.hpp" bodystart="1108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a6834af8c0937c9582f78cdc7bff7f0b3" prot="private" static="no" mutable="no">
        <type>crg::ResourceHandler</type>
        <definition>crg::ResourceHandler castor3d::Engine::m_resourceHandler</definition>
        <argsstring></argsstring>
        <name>m_resourceHandler</name>
        <qualifiedname>castor3d::Engine::m_resourceHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1109" column="22" bodyfile="Engine.hpp" bodystart="1109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a798aedb79fb481bd0c46ddf869c6aa70" prot="private" static="no" mutable="no">
        <type>crg::ResourcesCache</type>
        <definition>crg::ResourcesCache castor3d::Engine::m_resources</definition>
        <argsstring></argsstring>
        <name>m_resources</name>
        <qualifiedname>castor3d::Engine::m_resources</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1110" column="21" bodyfile="Engine.hpp" bodystart="1110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a39bfeab9b11c45a4ebf504d301a2cb48" prot="private" static="no" mutable="no">
        <type>LightingModelFactoryUPtr</type>
        <definition>LightingModelFactoryUPtr castor3d::Engine::m_lightingModelFactory</definition>
        <argsstring></argsstring>
        <name>m_lightingModelFactory</name>
        <qualifiedname>castor3d::Engine::m_lightingModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1111" column="26" bodyfile="Engine.hpp" bodystart="1111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1af38554b5e3b64830fde6207e837aec97" prot="private" static="no" mutable="no">
        <type><ref refid="de/d0f/a01727_1a041412c5c365e01d313597f6943df211" kindref="member">shader::BackgroundModelFactory</ref></type>
        <definition>shader::BackgroundModelFactory castor3d::Engine::m_backgroundModelFactory</definition>
        <argsstring></argsstring>
        <name>m_backgroundModelFactory</name>
        <qualifiedname>castor3d::Engine::m_backgroundModelFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1112" column="32" bodyfile="Engine.hpp" bodystart="1112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1af9ea4d371aacdc4cadef5e9a3bbd34cb" prot="private" static="no" mutable="no">
        <type>SceneUPtr</type>
        <definition>SceneUPtr castor3d::Engine::m_loadingScene</definition>
        <argsstring></argsstring>
        <name>m_loadingScene</name>
        <qualifiedname>castor3d::Engine::m_loadingScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1113" column="11" bodyfile="Engine.hpp" bodystart="1113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1a208f7e38b20f1400a52c6a12d0517751" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; castor::String, castor::UniquePtr&lt; <ref refid="d0/d8e/a05537" kindref="compound">RenderPassRegisterInfo</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt; castor::String, castor::UniquePtr&lt; RenderPassRegisterInfo &gt; &gt; castor3d::Engine::m_passRenderPassTypes</definition>
        <argsstring></argsstring>
        <name>m_passRenderPassTypes</name>
        <qualifiedname>castor3d::Engine::m_passRenderPassTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1114" column="20" bodyfile="Engine.hpp" bodystart="1114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1ae09f892c49ba3c12df210c5a4034c131" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; castor::String, std::pair&lt; <ref refid="d3/d5e/a01725_1a567298c1844e69d8252f0b8c14206f60" kindref="member">RenderPassTypeID</ref>, <ref refid="d3/d5e/a01725_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt; castor::String, std::pair&lt; RenderPassTypeID, Parameters &gt; &gt; castor3d::Engine::m_renderPassTypes</definition>
        <argsstring></argsstring>
        <name>m_renderPassTypes</name>
        <qualifiedname>castor3d::Engine::m_renderPassTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1115" column="20" bodyfile="Engine.hpp" bodystart="1115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d44/a03065_1adc1b4f3ec2eb40b89608201c5062ab61" prot="private" static="no" mutable="no">
        <type>castor::LengthUnit</type>
        <definition>castor::LengthUnit castor3d::Engine::m_unit</definition>
        <argsstring></argsstring>
        <name>m_unit</name>
        <qualifiedname>castor3d::Engine::m_unit</qualifiedname>
        <initializer>{ castor::LengthUnit::eMetre }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1116" column="20" bodyfile="Engine.hpp" bodystart="1116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d4/d44/a03065_1ab3420823fe4d903b0033b94a53f4a75b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::Engine</definition>
        <argsstring>(castor::String const &amp;appName, Version const &amp;appVersion, bool enableValidation, bool enableRandom, castor::LoggerInstancePtr ownedLogger, castor::LoggerInstance *logger)</argsstring>
        <name>Engine</name>
        <qualifiedname>castor3d::Engine::Engine</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>appName</declname>
        </param>
        <param>
          <type><ref refid="de/dc5/a04521" kindref="compound">Version</ref> const &amp;</type>
          <declname>appVersion</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enableValidation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enableRandom</declname>
        </param>
        <param>
          <type>castor::LoggerInstancePtr</type>
          <declname>ownedLogger</declname>
        </param>
        <param>
          <type>castor::LoggerInstance *</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a1f1d132c75ad69c5a382c8ae567d1045" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Engine::doLoadCoreData</definition>
        <argsstring>()</argsstring>
        <name>doLoadCoreData</name>
        <qualifiedname>castor3d::Engine::doLoadCoreData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1061" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a6b4c4b02017e01f9ced45f2b455999cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</definition>
        <argsstring>(shader, ShaderProgram)</argsstring>
        <name>DECLARE_CACHE_MEMBER_MIN</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</qualifiedname>
        <param>
          <type>shader</type>
        </param>
        <param>
          <type><ref refid="d4/d92/a06317" kindref="compound">ShaderProgram</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1079" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a686aa285e6018bb1ff79849590864641" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(sampler, Sampler)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>sampler</type>
        </param>
        <param>
          <type><ref refid="d3/d63/a04141" kindref="compound">Sampler</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1080" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a9a7e0db0784fb2ed8d59a0cc48161e63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(material, Material)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>material</type>
        </param>
        <param>
          <type><ref refid="d8/d12/a03325" kindref="compound">Material</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1081" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a941ef9c8073dcebf9c22c1f94119b444" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(plugin, Plugin)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>plugin</type>
        </param>
        <param>
          <type><ref refid="db/d24/a04901" kindref="compound">Plugin</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1082" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a637d1479515a10d4f672e929694f7397" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(overlay, Overlay)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>overlay</type>
        </param>
        <param>
          <type><ref refid="d2/d68/a04825" kindref="compound">Overlay</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1083" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a060dad0acd301c2fcc68fd10c3bc2701" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(scene, Scene)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>scene</type>
        </param>
        <param>
          <type><ref refid="de/da7/a06097" kindref="compound">Scene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1084" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aabb4bd1dc0e9e0ffdeee598842a16985" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER</definition>
        <argsstring>(listener, FrameListener)</argsstring>
        <name>DECLARE_CACHE_MEMBER</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER</qualifiedname>
        <param>
          <type>listener</type>
        </param>
        <param>
          <type><ref refid="df/d92/a03097" kindref="compound">FrameListener</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1085" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ac2ad141a52a6a8e2f759aaf864522aa9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</definition>
        <argsstring>(target, RenderTarget)</argsstring>
        <name>DECLARE_CACHE_MEMBER_MIN</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</qualifiedname>
        <param>
          <type>target</type>
        </param>
        <param>
          <type><ref refid="df/d1e/a05593" kindref="compound">RenderTarget</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1090" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1afc8d4b137cb381e2d1a13b51db1b6b5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</definition>
        <argsstring>(texture, TextureUnit)</argsstring>
        <name>DECLARE_CACHE_MEMBER_MIN</name>
        <qualifiedname>castor3d::Engine::DECLARE_CACHE_MEMBER_MIN</qualifiedname>
        <param>
          <type>texture</type>
        </param>
        <param>
          <type><ref refid="d0/df4/a04201" kindref="compound">TextureUnit</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="1091" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/d44/a03065_1a9e1802d6acb1df00f7656c4e5a04faf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Engine::Engine</definition>
        <argsstring>(castor::String const &amp;appName, Version const &amp;appVersion, bool enableValidation, bool enableRandom)</argsstring>
        <name>Engine</name>
        <qualifiedname>castor3d::Engine::Engine</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>appName</declname>
        </param>
        <param>
          <type><ref refid="de/dc5/a04521" kindref="compound">Version</ref> const &amp;</type>
          <declname>appVersion</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enableValidation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enableRandom</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">appName</parametername>
</parameternamelist>
<parameterdescription>
<para>The user application name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>The user application version. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enableValidation</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable rendering API validation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enableRandom</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to generate random seeds at each run. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="88" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a7d3f6aa62ad93116caaae19200b61543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Engine::Engine</definition>
        <argsstring>(castor::String const &amp;appName, Version const &amp;appVersion, bool enableValidation, bool enableRandom, castor::LoggerInstance &amp;logger)</argsstring>
        <name>Engine</name>
        <qualifiedname>castor3d::Engine::Engine</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>appName</declname>
        </param>
        <param>
          <type><ref refid="de/dc5/a04521" kindref="compound">Version</ref> const &amp;</type>
          <declname>appVersion</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enableValidation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enableRandom</declname>
        </param>
        <param>
          <type>castor::LoggerInstance &amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">appName</parametername>
</parameternamelist>
<parameterdescription>
<para>The user application name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>The user application version. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enableValidation</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable rendering API validation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enableRandom</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to generate random seeds at each run. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">logger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="108" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ab5b9f6fe1e1603f76d259f30fc10fcee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Engine::~Engine</definition>
        <argsstring>()</argsstring>
        <name>~Engine</name>
        <qualifiedname>castor3d::Engine::~Engine</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="119" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1af2f096aad3600390dec50bbe37e8e3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::initialise</definition>
        <argsstring>(uint32_t wantedFPS=100, bool threaded=false)</argsstring>
        <name>initialise</name>
        <qualifiedname>castor3d::Engine::initialise</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>wantedFPS</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>threaded</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Initialisation function, Sets the wanted frame rate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wantedFPS</parametername>
</parameternamelist>
<parameterdescription>
<para>The wanted FPS count </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>false</computeroutput>, the render can&apos;t be threaded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="130" column="14"/>
        <referencedby refid="d4/d44/a03065_1ac9abab737dc2b11ac9ee6f6ef31045c1" compoundref="d6/d82/a00293" startline="970" endline="975">addFont</referencedby>
        <referencedby refid="d4/d44/a03065_1a1f26b1f69ade47399e32ee596ed77756" compoundref="d6/d82/a00293" startline="1019" endline="1024">addImage</referencedby>
        <referencedby refid="d4/d44/a03065_1ab079a7d5c089864cd6eb28d8ccaf83ea" compoundref="d6/d82/a00293" startline="1048" endline="1057">tryAddImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a22e67669ad2954a42ce97e3d62c7f299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>castor3d::Engine::cleanup</qualifiedname>
        <briefdescription>
<para>Cleanup function, destroys everything created from the beginning. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Destroys also RenderWindows, the only things left after that is <ref refid="d3/d99/a05585" kindref="compound">RenderSystem</ref> and loaded plug-ins </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="139" column="14"/>
        <referencedby refid="d4/d44/a03065_1addc711e1060765415a0812574efb17a7" compoundref="d6/d82/a00293" startline="977" endline="981">removeFont</referencedby>
        <referencedby refid="d4/d44/a03065_1a1cae454c199e0ccc5d67813a812dba75" compoundref="d6/d82/a00293" startline="1026" endline="1030">removeImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a726499108a0a5ced1d24055774e56e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Engine::loadRenderer</definition>
        <argsstring>(castor::String const &amp;type)</argsstring>
        <name>loadRenderer</name>
        <qualifiedname>castor3d::Engine::loadRenderer</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Loads a renderer plug-in, given the renderer type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The renderer type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if ok </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="150" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1abbf9a42e489446b4b5c16382e983446a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::loadRenderer</definition>
        <argsstring>(Renderer renderer)</argsstring>
        <name>loadRenderer</name>
        <qualifiedname>castor3d::Engine::loadRenderer</qualifiedname>
        <param>
          <type><ref refid="d7/df4/a05581" kindref="compound">Renderer</ref></type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
<para>Loads a renderer plug-in, given the renderer type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderer</parametername>
</parameternamelist>
<parameterdescription>
<para>The renderer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="159" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ad208d53de5087a0277e6edab25e7b7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d7/d5a/a03069" kindref="compound">CpuFrameEvent</ref> *</type>
        <definition>C3D_API CpuFrameEvent * castor3d::Engine::postEvent</definition>
        <argsstring>(CpuFrameEventUPtr event)</argsstring>
        <name>postEvent</name>
        <qualifiedname>castor3d::Engine::postEvent</qualifiedname>
        <param>
          <type>CpuFrameEventUPtr</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Posts a frame event to the default frame listener. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="168" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a6cf9e686b61f07c378f36547979b85ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::sendEvent</definition>
        <argsstring>(GpuFrameEventUPtr event)</argsstring>
        <name>sendEvent</name>
        <qualifiedname>castor3d::Engine::sendEvent</qualifiedname>
        <param>
          <type>GpuFrameEventUPtr</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>If a device is enabled, executes the given event, if not posts it to the default frame listener. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="177" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a0fab74074f72dd7b94bf6121a0a620d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d5/d43/a03101" kindref="compound">GpuFrameEvent</ref> *</type>
        <definition>C3D_API GpuFrameEvent * castor3d::Engine::postEvent</definition>
        <argsstring>(GpuFrameEventUPtr event)</argsstring>
        <name>postEvent</name>
        <qualifiedname>castor3d::Engine::postEvent</qualifiedname>
        <param>
          <type>GpuFrameEventUPtr</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Posts a frame event to the default frame listener. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="186" column="24"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ae51a988c9e823933e18e7a0addf7cd55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Engine::fireMouseMove</definition>
        <argsstring>(castor::Position const &amp;position, bool ctrl, bool alt, bool shift)</argsstring>
        <name>fireMouseMove</name>
        <qualifiedname>castor3d::Engine::fireMouseMove</qualifiedname>
        <param>
          <type>castor::Position const &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Fires a mouse move event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>The mouse position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Ctrl key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alt</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Alt key is down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the Shift key is down. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is processed by a handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="203" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1afcb9bb7a80246fa509954782c1d637a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::Engine::update</qualifiedname>
        <param>
          <type><ref refid="d5/de0/a05541" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the engine, CPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="215" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a31d9d09b962ca618773b12398765a95a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::update</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::Engine::update</qualifiedname>
        <param>
          <type><ref refid="d1/da9/a05549" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the engine, GPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="224" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ad47d3e46db36a434f3c21d0d9945ac9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::upload</definition>
        <argsstring>(ashes::CommandBuffer const &amp;commandBuffer)</argsstring>
        <name>upload</name>
        <qualifiedname>castor3d::Engine::upload</qualifiedname>
        <param>
          <type>ashes::CommandBuffer const &amp;</type>
          <declname>commandBuffer</declname>
        </param>
        <briefdescription>
<para>Updates the buffers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">commandBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the upload commands. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="233" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a3d5e53f761b14f7c95c34e76f8b34557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Engine::isCleaned</definition>
        <argsstring>()</argsstring>
        <name>isCleaned</name>
        <qualifiedname>castor3d::Engine::isCleaned</qualifiedname>
        <briefdescription>
<para>Retrieves the cleanup status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Thread-safe </para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if cleaned up </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="244" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a4e5529bdbb4f26d05fd47c23aa8276f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::setCleaned</definition>
        <argsstring>()</argsstring>
        <name>setCleaned</name>
        <qualifiedname>castor3d::Engine::setCleaned</qualifiedname>
        <briefdescription>
<para>Tells the engine is cleaned up. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Thread-safe </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="253" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1af1c22fb087f974e3b20b7d40893a0943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::pushCpuJob</definition>
        <argsstring>(castor::AsyncJobQueue::Job job)</argsstring>
        <name>pushCpuJob</name>
        <qualifiedname>castor3d::Engine::pushCpuJob</qualifiedname>
        <param>
          <type>castor::AsyncJobQueue::Job</type>
          <declname>job</declname>
        </param>
        <briefdescription>
<para>Enqueues the given CPU job. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">job</parametername>
</parameternamelist>
<parameterdescription>
<para>The job to execute. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="262" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a7c789b05f01100939d7e6ef5cf65140a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::RgbaColour</type>
        <definition>C3D_API castor::RgbaColour castor3d::Engine::getNextRainbowColour</definition>
        <argsstring>() const</argsstring>
        <name>getNextRainbowColour</name>
        <qualifiedname>castor3d::Engine::getNextRainbowColour</qualifiedname>
        <briefdescription>
<para>Retrieves a colour issued from a rainbow colours iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="269" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ac28328d51d84410eea9caeeec5614521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerWindow</definition>
        <argsstring>(RenderWindow &amp;window)</argsstring>
        <name>registerWindow</name>
        <qualifiedname>castor3d::Engine::registerWindow</qualifiedname>
        <param>
          <type><ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Registers a <ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="278" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a42feb3bee212879e63f7fab5a56baf87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterWindow</definition>
        <argsstring>(RenderWindow const &amp;window)</argsstring>
        <name>unregisterWindow</name>
        <qualifiedname>castor3d::Engine::unregisterWindow</qualifiedname>
        <param>
          <type><ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref> const &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Unregisters a <ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="db/d7d/a05625" kindref="compound">RenderWindow</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="287" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a40954838ab772d016892faf5041603e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerParsers</definition>
        <argsstring>(castor::String const &amp;name, castor::AttributeParsers const &amp;parsers, castor::StrUInt32Map const &amp;sections, castor::UserContextCreator contextCreator)</argsstring>
        <name>registerParsers</name>
        <qualifiedname>castor3d::Engine::registerParsers</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>castor::AttributeParsers const &amp;</type>
          <declname>parsers</declname>
        </param>
        <param>
          <type>castor::StrUInt32Map const &amp;</type>
          <declname>sections</declname>
        </param>
        <param>
          <type>castor::UserContextCreator</type>
          <declname>contextCreator</declname>
        </param>
        <briefdescription>
<para>Registers additional parsers for <ref refid="da/d28/a06117" kindref="compound">SceneFileParser</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The registering name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parsers</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sections</parametername>
</parameternamelist>
<parameterdescription>
<para>The sections. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">contextCreator</parametername>
</parameternamelist>
<parameterdescription>
<para>The user parser context creation function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="302" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a90feb7a6988c9a62dd07cf6e5202d404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterParsers</definition>
        <argsstring>(castor::String const &amp;name)</argsstring>
        <name>unregisterParsers</name>
        <qualifiedname>castor3d::Engine::unregisterParsers</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Unregisters parsers for <ref refid="da/d28/a06117" kindref="compound">SceneFileParser</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The registering name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="314" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ab5ffd2ed2eb94f3679bd98cc80d3d6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerTimer</definition>
        <argsstring>(castor::String const &amp;category, FramePassTimer &amp;timer)</argsstring>
        <name>registerTimer</name>
        <qualifiedname>castor3d::Engine::registerTimer</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>FramePassTimer &amp;</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Registers a render pass timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>The timer category name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timer</parametername>
</parameternamelist>
<parameterdescription>
<para>The timer to register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="325" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a6a3468413559f5f34ecb1181b26d4b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterTimer</definition>
        <argsstring>(castor::String const &amp;category, FramePassTimer &amp;timer)</argsstring>
        <name>unregisterTimer</name>
        <qualifiedname>castor3d::Engine::unregisterTimer</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>FramePassTimer &amp;</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Unregisters a render pass timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>The timer category name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timer</parametername>
</parameternamelist>
<parameterdescription>
<para>The timer to unregister. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="337" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aaba939e153b040393309262b200fc2bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1a8fcaef546bc1fb19d2a89be57778f03a" kindref="member">LightingModelID</ref></type>
        <definition>C3D_API LightingModelID castor3d::Engine::registerLightingModel</definition>
        <argsstring>(castor::String const &amp;name, shader::LightingModelCreator creator, BackgroundModelID backgroundModelId)</argsstring>
        <name>registerLightingModel</name>
        <qualifiedname>castor3d::Engine::registerLightingModel</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="de/d0f/a01727_1a4f6fc2ab5f8136a5172d811c9b08eba8" kindref="member">shader::LightingModelCreator</ref></type>
          <declname>creator</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1ab7fc2caff0f0879aa902ff48258d6c94" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <briefdescription>
<para>Registers a Lighting Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The model name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The background model ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">creator</parametername>
</parameternamelist>
<parameterdescription>
<para>The model creation function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The model ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="353" column="25"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1aa72d4bd6ef8ab6f62d41972096a49d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterLightingModel</definition>
        <argsstring>(LightingModelID lightingModelId, BackgroundModelID backgroundModelId)</argsstring>
        <name>unregisterLightingModel</name>
        <qualifiedname>castor3d::Engine::unregisterLightingModel</qualifiedname>
        <param>
          <type><ref refid="d3/d5e/a01725_1a8fcaef546bc1fb19d2a89be57778f03a" kindref="member">LightingModelID</ref></type>
          <declname>lightingModelId</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1ab7fc2caff0f0879aa902ff48258d6c94" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <briefdescription>
<para>Unregisters a combination of Lighting Model and Background Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lightingModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The lighting model ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The bavkground model ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="366" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ad97c12f6efb819f1f09952e30d5c8f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterLightingModel</definition>
        <argsstring>(castor::String const &amp;name, BackgroundModelID backgroundModelId)</argsstring>
        <name>unregisterLightingModel</name>
        <qualifiedname>castor3d::Engine::unregisterLightingModel</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1ab7fc2caff0f0879aa902ff48258d6c94" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <briefdescription>
<para>Unregisters a Lighting Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The model name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The background model ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="378" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a86d9ad059bf65ac455923d646025ecfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1ab7fc2caff0f0879aa902ff48258d6c94" kindref="member">BackgroundModelID</ref></type>
        <definition>C3D_API BackgroundModelID castor3d::Engine::registerBackgroundModel</definition>
        <argsstring>(castor::String const &amp;name, shader::BackgroundModelCreator creator)</argsstring>
        <name>registerBackgroundModel</name>
        <qualifiedname>castor3d::Engine::registerBackgroundModel</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="de/d0f/a01727_1a9a2d35265825e183f7139f80659b46e4" kindref="member">shader::BackgroundModelCreator</ref></type>
          <declname>creator</declname>
        </param>
        <briefdescription>
<para>Registers a Background Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The model name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">creator</parametername>
</parameternamelist>
<parameterdescription>
<para>The model creation function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The model ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="392" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a364eba80785f1a986af517bf6c3142ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1ab7fc2caff0f0879aa902ff48258d6c94" kindref="member">BackgroundModelID</ref></type>
        <definition>C3D_API BackgroundModelID castor3d::Engine::unregisterBackgroundModel</definition>
        <argsstring>(castor::String const &amp;name)</argsstring>
        <name>unregisterBackgroundModel</name>
        <qualifiedname>castor3d::Engine::unregisterBackgroundModel</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Unregisters a Background Model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The model name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="402" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a9e1c727f3a173627afa68e6caa68db15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerBuffer</definition>
        <argsstring>(ShaderBuffer const &amp;buffer)</argsstring>
        <name>registerBuffer</name>
        <qualifiedname>castor3d::Engine::registerBuffer</qualifiedname>
        <param>
          <type><ref refid="dd/dee/a06325" kindref="compound">ShaderBuffer</ref> const &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Registers a <ref refid="dd/dee/a06325" kindref="compound">ShaderBuffer</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="dd/dee/a06325" kindref="compound">ShaderBuffer</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="411" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ad9af55c3cbd118c52206bd791f14192c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterBuffer</definition>
        <argsstring>(ShaderBuffer const &amp;buffer)</argsstring>
        <name>unregisterBuffer</name>
        <qualifiedname>castor3d::Engine::unregisterBuffer</qualifiedname>
        <param>
          <type><ref refid="dd/dee/a06325" kindref="compound">ShaderBuffer</ref> const &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Unregisters a <ref refid="dd/dee/a06325" kindref="compound">ShaderBuffer</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="dd/dee/a06325" kindref="compound">ShaderBuffer</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="420" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a69ee04422f73b8ef3e370c23935a8445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerPassModel</definition>
        <argsstring>(BackgroundModelID backgroundModelId, PassRegisterInfo info)</argsstring>
        <name>registerPassModel</name>
        <qualifiedname>castor3d::Engine::registerPassModel</qualifiedname>
        <param>
          <type><ref refid="d3/d5e/a01725_1ab7fc2caff0f0879aa902ff48258d6c94" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <param>
          <type><ref refid="d2/d5a/a04081" kindref="compound">PassRegisterInfo</ref></type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Registers the pass info with given background model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The background model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass registering info. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="431" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a04c7a109df4e06a635586a09e767dadc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerPassModels</definition>
        <argsstring>(PassRegisterInfo info)</argsstring>
        <name>registerPassModels</name>
        <qualifiedname>castor3d::Engine::registerPassModels</qualifiedname>
        <param>
          <type><ref refid="d2/d5a/a04081" kindref="compound">PassRegisterInfo</ref></type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Registers the given pass info with all background models. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass registering info. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="441" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a3e170667f1e3503196e0f83538ec76bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterPassModel</definition>
        <argsstring>(BackgroundModelID backgroundModelId, LightingModelID lightingModelId)</argsstring>
        <name>unregisterPassModel</name>
        <qualifiedname>castor3d::Engine::unregisterPassModel</qualifiedname>
        <param>
          <type><ref refid="d3/d5e/a01725_1ab7fc2caff0f0879aa902ff48258d6c94" kindref="member">BackgroundModelID</ref></type>
          <declname>backgroundModelId</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a8fcaef546bc1fb19d2a89be57778f03a" kindref="member">LightingModelID</ref></type>
          <declname>lightingModelId</declname>
        </param>
        <briefdescription>
<para>Unregisters a combination of lighting model and background model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">backgroundModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The background model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lightingModelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The lighting model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="452" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1affb60b77798bfb40516df50adc36520b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterPassModels</definition>
        <argsstring>(castor::String const &amp;type)</argsstring>
        <name>unregisterPassModels</name>
        <qualifiedname>castor3d::Engine::unregisterPassModels</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Unregisters all combinations of given lighting model and background models. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The lighting model name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="462" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a036b1797d962aa73acde5e5f0d057ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerSpecificsBuffer</definition>
        <argsstring>(std::string const &amp;name, castor3d::SpecificsBuffer buffer)</argsstring>
        <name>registerSpecificsBuffer</name>
        <qualifiedname>castor3d::Engine::registerSpecificsBuffer</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="df/d65/a04089" kindref="compound">castor3d::SpecificsBuffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Registers a specific data shader buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader buffer name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="473" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a0a40a57b75df3d0c182e0319c1afd49e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterSpecificsBuffer</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>unregisterSpecificsBuffer</name>
        <qualifiedname>castor3d::Engine::unregisterSpecificsBuffer</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Unregisters a pass&apos; specific data buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader buffer name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="483" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a0fbd9991c3d7e9d49fce5c02eca52c7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::addSpecificsBuffersBindings</definition>
        <argsstring>(ashes::VkDescriptorSetLayoutBindingArray &amp;bindings, VkShaderStageFlags shaderStages, uint32_t &amp;index) const</argsstring>
        <name>addSpecificsBuffersBindings</name>
        <qualifiedname>castor3d::Engine::addSpecificsBuffersBindings</qualifiedname>
        <param>
          <type>ashes::VkDescriptorSetLayoutBindingArray &amp;</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>VkShaderStageFlags</type>
          <declname>shaderStages</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Addw the pass&apos; specific data buffer into the given descriptor layout bindings array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the buffers descriptor layout bindings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shaderStages</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader stage flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The binding index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="496" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a75eb585a6d15055f764bf6faa1a13814" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::addSpecificsBuffersDescriptors</definition>
        <argsstring>(ashes::WriteDescriptorSetArray &amp;descriptorWrites, uint32_t &amp;index) const</argsstring>
        <name>addSpecificsBuffersDescriptors</name>
        <qualifiedname>castor3d::Engine::addSpecificsBuffersDescriptors</qualifiedname>
        <param>
          <type>ashes::WriteDescriptorSetArray &amp;</type>
          <declname>descriptorWrites</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Writes the pass&apos; specific data buffer into the given descriptor writes array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">descriptorWrites</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the buffers descriptor writes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The binding index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="509" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a41023f71513999b33d43d7aae01586c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::createSpecificsBuffersPassBindings</definition>
        <argsstring>(crg::FramePass &amp;pass, uint32_t &amp;index) const</argsstring>
        <name>createSpecificsBuffersPassBindings</name>
        <qualifiedname>castor3d::Engine::createSpecificsBuffersPassBindings</qualifiedname>
        <param>
          <type>crg::FramePass &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Writes the pass&apos; specific data buffer bindings into given frame pass. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>The target frame pass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The binding index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="521" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a6bbc8bafdfb06ee373a240374466254d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::declareSpecificsShaderBuffers</definition>
        <argsstring>(sdw::ShaderWriter &amp;writer, std::map&lt; std::string, castor3d::shader::BufferBaseUPtr &gt; &amp;buffers, uint32_t &amp;binding, uint32_t set) const</argsstring>
        <name>declareSpecificsShaderBuffers</name>
        <qualifiedname>castor3d::Engine::declareSpecificsShaderBuffers</qualifiedname>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, castor3d::shader::BufferBaseUPtr &gt; &amp;</type>
          <declname>buffers</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>binding</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Declares pass&apos; specific data shader buffers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">writer</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader writer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffers</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the registered shader buffers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">binding</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor binding index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor set index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="537" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1adf455d2cfdb58f051f5b11ad909e7856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1a5f413b599b618d042e26d27d4a0ee1ca" kindref="member">PassComponentID</ref></type>
        <definition>C3D_API PassComponentID castor3d::Engine::registerPassComponent</definition>
        <argsstring>(castor::String const &amp;type, PassComponentPluginUPtr componentPlugin)</argsstring>
        <name>registerPassComponent</name>
        <qualifiedname>castor3d::Engine::registerPassComponent</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>PassComponentPluginUPtr</type>
          <declname>componentPlugin</declname>
        </param>
        <briefdescription>
<para>Registers a pass component. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The component type name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">componentPlugin</parametername>
</parameternamelist>
<parameterdescription>
<para>The component&apos;s specific functions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="551" column="25"/>
        <referencedby refid="d4/d44/a03065_1a57b9f140207dda3886fb311adcd8627b" compoundref="d6/d82/a00293" startline="938" endline="942">registerPassComponent</referencedby>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1adc1b1dbf4a6a2c3e1c3f5abc62a8a465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterPassComponent</definition>
        <argsstring>(castor::String const &amp;type)</argsstring>
        <name>unregisterPassComponent</name>
        <qualifiedname>castor3d::Engine::unregisterPassComponent</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Unregisters a pass component. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The component type name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="561" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a1660abbb7de131d2c4268e32ecccb013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::registerRenderPassType</definition>
        <argsstring>(castor::String const &amp;renderPassType, castor::UniquePtr&lt; RenderPassRegisterInfo &gt; info)</argsstring>
        <name>registerRenderPassType</name>
        <qualifiedname>castor3d::Engine::registerRenderPassType</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <param>
          <type>castor::UniquePtr&lt; <ref refid="d0/d8e/a05537" kindref="compound">RenderPassRegisterInfo</ref> &gt;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Registers a scene render pass type, used to render given material pass type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass type name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass creation informations. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="572" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ada4f71385eb54b14e1b53a88bf908bc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::setRenderPassTypeConfiguration</definition>
        <argsstring>(castor::String const &amp;renderPassType, Parameters parameters)</argsstring>
        <name>setRenderPassTypeConfiguration</name>
        <qualifiedname>castor3d::Engine::setRenderPassTypeConfiguration</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref></type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Registers a scene render pass type&apos;s configuration parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass type name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass configuration parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="584" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a676cf78c131cd7e409a648149408f953" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1acd099f112fdafb8d7d06ba8dc9cf4a47" kindref="member">Parameters</ref></type>
        <definition>C3D_API Parameters castor3d::Engine::getRenderPassTypeConfiguration</definition>
        <argsstring>(castor::String const &amp;renderPassType) const</argsstring>
        <name>getRenderPassTypeConfiguration</name>
        <qualifiedname>castor3d::Engine::getRenderPassTypeConfiguration</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <briefdescription>
<para>Retrieve a scene render pass type&apos;s configuration parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass type name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pass configuration parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="596" column="20"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a08c42ed7f3bdb24149e9a631e4af56e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d5e/a01725_1a567298c1844e69d8252f0b8c14206f60" kindref="member">RenderPassTypeID</ref></type>
        <definition>C3D_API RenderPassTypeID castor3d::Engine::getRenderPassTypeID</definition>
        <argsstring>(castor::String const &amp;renderPassType) const</argsstring>
        <name>getRenderPassTypeID</name>
        <qualifiedname>castor3d::Engine::getRenderPassTypeID</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <briefdescription>
<para>Retrieves the ID for given scene render pass type name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass type name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="605" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a68d0d2a2cd727a59b89542c78e7ad0ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d0/d8e/a05537" kindref="compound">RenderPassRegisterInfo</ref> *</type>
        <definition>C3D_API RenderPassRegisterInfo * castor3d::Engine::getRenderPassInfo</definition>
        <argsstring>(castor::String const &amp;renderPassType) const</argsstring>
        <name>getRenderPassInfo</name>
        <qualifiedname>castor3d::Engine::getRenderPassInfo</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <briefdescription>
<para>Retrieves a scene render pass type&apos;s creation informations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass type name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="614" column="33"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1ae51b47af4ba3f085b0eef42ac6458687" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::vector&lt; <ref refid="d0/d8e/a05537" kindref="compound">RenderPassRegisterInfo</ref> * &gt;</type>
        <definition>C3D_API std::vector&lt; RenderPassRegisterInfo * &gt; castor3d::Engine::getRenderPassInfos</definition>
        <argsstring>(TechniquePassEvent event) const</argsstring>
        <name>getRenderPassInfos</name>
        <qualifiedname>castor3d::Engine::getRenderPassInfos</qualifiedname>
        <param>
          <type><ref refid="d3/d5e/a01725_1aa022298cb8b50ea099829baffdfee684" kindref="member">TechniquePassEvent</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Retrieves the scene render passes type creation informations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type for wanted passes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="623" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a4f2120a7bd506dc9a1543228283abaed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Engine::unregisterRenderPassType</definition>
        <argsstring>(castor::String const &amp;renderPassType)</argsstring>
        <name>unregisterRenderPassType</name>
        <qualifiedname>castor3d::Engine::unregisterRenderPassType</qualifiedname>
        <param>
          <type>castor::String const &amp;</type>
          <declname>renderPassType</declname>
        </param>
        <briefdescription>
<para>Unregisters a scene render pass type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderPassType</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass type name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="632" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d4/d44/a03065_1a8595a13c9e108814708ba911a1409196" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Path</type>
        <definition>static C3D_API castor::Path castor3d::Engine::getPluginsDirectory</definition>
        <argsstring>()</argsstring>
        <name>getPluginsDirectory</name>
        <qualifiedname>castor3d::Engine::getPluginsDirectory</qualifiedname>
        <briefdescription>
<para>Retrieves plug-ins path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The plug-ins path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="641" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a4ec45b641127c8582854dc58161cf32a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Path</type>
        <definition>static C3D_API castor::Path castor3d::Engine::getEngineDirectory</definition>
        <argsstring>()</argsstring>
        <name>getEngineDirectory</name>
        <qualifiedname>castor3d::Engine::getEngineDirectory</qualifiedname>
        <briefdescription>
<para>Gives the Castor directory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The directory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="650" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1adf873786fbeb9e26015ac6c34b64bb65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Path</type>
        <definition>static C3D_API castor::Path castor3d::Engine::getDataDirectory</definition>
        <argsstring>()</argsstring>
        <name>getDataDirectory</name>
        <qualifiedname>castor3d::Engine::getDataDirectory</qualifiedname>
        <briefdescription>
<para>Retrieves data path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The data path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="659" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d4/d44/a03065_1a7af085fa1b00e28e39f1440f38684531" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> std::locale const &amp;</type>
        <definition>static C3D_API std::locale const  &amp; castor3d::Engine::getLocale</definition>
        <argsstring>()</argsstring>
        <name>getLocale</name>
        <qualifiedname>castor3d::Engine::getLocale</qualifiedname>
        <briefdescription>
<para>Retrieves data path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The data path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine.hpp" line="668" column="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::Engine</label>
        <link refid="d4/d44/a03065"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::Unique&lt; Engine &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>castor3d::Engine</label>
        <link refid="d4/d44/a03065"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::Unique&lt; Engine &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Engine.hpp" line="62" column="1" bodyfile="Engine.hpp" bodystart="64" bodyend="1117"/>
    <listofallmembers>
      <member refid="d4/d44/a03065_1ac9abab737dc2b11ac9ee6f6ef31045c1" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addFont</name></member>
      <member refid="d4/d44/a03065_1a1f26b1f69ade47399e32ee596ed77756" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addImage</name></member>
      <member refid="d4/d44/a03065_1a52cc49e29ffe7b2da28de2c4622913a6" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addNewFont</name></member>
      <member refid="d4/d44/a03065_1a8e7137f1ee10104cab15245472a4dbeb" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addNewImage</name></member>
      <member refid="d4/d44/a03065_1a0fbd9991c3d7e9d49fce5c02eca52c7c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addSpecificsBuffersBindings</name></member>
      <member refid="d4/d44/a03065_1a75eb585a6d15055f764bf6faa1a13814" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>addSpecificsBuffersDescriptors</name></member>
      <member refid="d4/d44/a03065_1a743391e0928f95513f7ae9b6b2744fed" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>areUpdateOptimisationsEnabled</name></member>
      <member refid="d4/d44/a03065_1a22e67669ad2954a42ce97e3d62c7f299" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>cleanup</name></member>
      <member refid="d4/d44/a03065_1a0705231fef20a697973ac71b36bd0b57" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>createFont</name></member>
      <member refid="d4/d44/a03065_1af92ce0a62bfeb2923bf0a32c1094e9d4" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>createImage</name></member>
      <member refid="d4/d44/a03065_1a41023f71513999b33d43d7aae01586c4" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>createSpecificsBuffersPassBindings</name></member>
      <member refid="d4/d44/a03065_1a686aa285e6018bb1ff79849590864641" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d4/d44/a03065_1a9a7e0db0784fb2ed8d59a0cc48161e63" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d4/d44/a03065_1a941ef9c8073dcebf9c22c1f94119b444" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d4/d44/a03065_1a637d1479515a10d4f672e929694f7397" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d4/d44/a03065_1a060dad0acd301c2fcc68fd10c3bc2701" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d4/d44/a03065_1aabb4bd1dc0e9e0ffdeee598842a16985" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER</name></member>
      <member refid="d4/d44/a03065_1a6b4c4b02017e01f9ced45f2b455999cd" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER_MIN</name></member>
      <member refid="d4/d44/a03065_1ac2ad141a52a6a8e2f759aaf864522aa9" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER_MIN</name></member>
      <member refid="d4/d44/a03065_1afc8d4b137cb381e2d1a13b51db1b6b5f" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>DECLARE_CACHE_MEMBER_MIN</name></member>
      <member refid="d4/d44/a03065_1a6bbc8bafdfb06ee373a240374466254d" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>declareSpecificsShaderBuffers</name></member>
      <member refid="d4/d44/a03065_1a1f1d132c75ad69c5a382c8ae567d1045" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>doLoadCoreData</name></member>
      <member refid="d4/d44/a03065_1a4a1004261058877b0edba00131447acd" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>enableUpdateOptimisations</name></member>
      <member refid="d4/d44/a03065_1ab3420823fe4d903b0033b94a53f4a75b" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>Engine</name></member>
      <member refid="d4/d44/a03065_1a9e1802d6acb1df00f7656c4e5a04faf5" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>Engine</name></member>
      <member refid="d4/d44/a03065_1a7d3f6aa62ad93116caaae19200b61543" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>Engine</name></member>
      <member refid="d4/d44/a03065_1ad1ce4f92f240c0fa3c1c4ede63942bac" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>findFont</name></member>
      <member refid="d4/d44/a03065_1a0e3cae5eb336c27b42a7225bdbd1b38f" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>findImage</name></member>
      <member refid="d4/d44/a03065_1ae51a988c9e823933e18e7a0addf7cd55" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>fireMouseMove</name></member>
      <member refid="d4/d44/a03065_1a345fbab7e32bfbfaf61f2dcd432b134a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getAdditionalParsers</name></member>
      <member refid="d4/d44/a03065_1a2a3070874bc9257b56735ed7090f1704" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getAppName</name></member>
      <member refid="d4/d44/a03065_1ad67d083dab9477be09f1e357c5fd0809" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getAppVersion</name></member>
      <member refid="d4/d44/a03065_1ae6e7b6368605b517bfbfdcdb0158fa22" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getBackgroundModelFactory</name></member>
      <member refid="d4/d44/a03065_1a42b44de31e1bd004f5bb83e58719376a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getBackgroundModelFactory</name></member>
      <member refid="d4/d44/a03065_1ac88f73152455002444d00d9a8fe3be33" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getControlsManager</name></member>
      <member refid="d4/d44/a03065_1aa74347335066184d5b74923a87cf0c1c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getCpuInformations</name></member>
      <member refid="d4/d44/a03065_1adf873786fbeb9e26015ac6c34b64bb65" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDataDirectory</name></member>
      <member refid="d4/d44/a03065_1a8c11b9e48c91e4b88b61eadc48f244fb" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDefaultLightingModel</name></member>
      <member refid="d4/d44/a03065_1a6ce6ffa3979329585653cc681adfeefe" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDefaultLightingModelName</name></member>
      <member refid="d4/d44/a03065_1aa7f130a0d0a7ae259c7b89e6c104d968" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDefaultMaterial</name></member>
      <member refid="d4/d44/a03065_1aa40434af7c60405110529624930ab5bd" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getDefaultSampler</name></member>
      <member refid="d4/d44/a03065_1a4ec45b641127c8582854dc58161cf32a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getEngineDirectory</name></member>
      <member refid="d4/d44/a03065_1a3e8c055c4faafee3fea08412919f39a9" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getFontCache</name></member>
      <member refid="d4/d44/a03065_1aa9163ff31a8feff9a7936a6ec250e8a2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getFontCache</name></member>
      <member refid="d4/d44/a03065_1a3798850798a109677f2f1c8bf00c3d5b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getGraphResourceHandler</name></member>
      <member refid="d4/d44/a03065_1a8c9229e35e7c50a5f2d1eecb3954ee58" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageCache</name></member>
      <member refid="d4/d44/a03065_1a3a9cb1d980ba5575bae64306fb51b68a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageCache</name></member>
      <member refid="d4/d44/a03065_1a8b5e0aae55adeafea48200c6bb6a5c21" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageLoader</name></member>
      <member refid="d4/d44/a03065_1a11f7c7cf274a9ede3c4ab62d2616774a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageLoader</name></member>
      <member refid="d4/d44/a03065_1a16879a361b178e86595208ade2df8d19" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImageWriter</name></member>
      <member refid="d4/d44/a03065_1a1ca0c7f5a69e34b8fc64198c93775246" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getImporterFileFactory</name></member>
      <member refid="d4/d44/a03065_1ab709206807e368c1809b4b232ce377e0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLengthUnit</name></member>
      <member refid="d4/d44/a03065_1a55787bb512764bfbb00f4b3cce9c37c6" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLightingModelFactory</name></member>
      <member refid="d4/d44/a03065_1a68a4f02a41dd92eed22cfd21c06ed901" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLightsSampler</name></member>
      <member refid="d4/d44/a03065_1acbd89114013a2d302ec3a3bc9d94d93e" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLoadingScene</name></member>
      <member refid="d4/d44/a03065_1a7af085fa1b00e28e39f1440f38684531" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLocale</name></member>
      <member refid="d4/d44/a03065_1a205cf2cde3639ef60bbc92e4e7933aee" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLogger</name></member>
      <member refid="d4/d44/a03065_1a1fe8d3ce4a0436f48c8f5bb153d30477" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getLpvGridSize</name></member>
      <member refid="d4/d44/a03065_1ac2d8afa9336ca07ea402ad14bfeb7c7f" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getMaxImageSize</name></member>
      <member refid="d4/d44/a03065_1a6ee0628c0f085ea60b5a9c94fc9af450" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getMaxPassTypeCount</name></member>
      <member refid="d4/d44/a03065_1a90fc5a88b18924a71e6c485edef0eed9" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getMeshFactory</name></member>
      <member refid="d4/d44/a03065_1a7c789b05f01100939d7e6ef5cf65140a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getNextRainbowColour</name></member>
      <member refid="d4/d44/a03065_1ac643d09d5f347b9d9edda8060fa01412" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getParticleFactory</name></member>
      <member refid="d4/d44/a03065_1abc343b079f08ff5800b2d6fe33ade917" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPassComponentsRegister</name></member>
      <member refid="d4/d44/a03065_1adc122d978b9651f6ea977ae2382f74d7" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPassFactory</name></member>
      <member refid="d4/d44/a03065_1a8595a13c9e108814708ba911a1409196" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPluginsDirectory</name></member>
      <member refid="d4/d44/a03065_1a7061aeead1fde9eea7c71a78b9bffdf0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPostEffectFactory</name></member>
      <member refid="d4/d44/a03065_1a4124814e064257ff58b07516465d115a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPostEffectFactory</name></member>
      <member refid="d4/d44/a03065_1aec9a939534fcd7a28c83cdd1959c219a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getPrefilteredBrdfTexture</name></member>
      <member refid="d4/d44/a03065_1a357a196c28d35b877ff6e9d225a09125" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderDevice</name></member>
      <member refid="d4/d44/a03065_1a8669fcc5e33e514d52031d3365af50bc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderersList</name></member>
      <member refid="d4/d44/a03065_1a5f96f85e2a9bfa2ea94e4e8b7e2acc57" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderLoop</name></member>
      <member refid="d4/d44/a03065_1a68d0d2a2cd727a59b89542c78e7ad0ee" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderPassInfo</name></member>
      <member refid="d4/d44/a03065_1ae51b47af4ba3f085b0eef42ac6458687" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderPassInfos</name></member>
      <member refid="d4/d44/a03065_1a676cf78c131cd7e409a648149408f953" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderPassTypeConfiguration</name></member>
      <member refid="d4/d44/a03065_1a08c42ed7f3bdb24149e9a631e4af56e7" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderPassTypeID</name></member>
      <member refid="d4/d44/a03065_1a615cb64827b7fcd2ff4438c061f37adc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderSystem</name></member>
      <member refid="d4/d44/a03065_1a7f14a51f2b4131c467f153571135ab79" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getRenderWindows</name></member>
      <member refid="d4/d44/a03065_1a13b3a6c70c52e44d5098d90b0dbebbb1" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getToneMappingFactory</name></member>
      <member refid="d4/d44/a03065_1a10fadbd04a658acc166eb327130e1c65" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getToneMappingFactory</name></member>
      <member refid="d4/d44/a03065_1ab54afdc724299a29514a2eed1a3fcc52" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getUserInputListener</name></member>
      <member refid="d4/d44/a03065_1a5e2b90e04922bc497b47fb1390661e6b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getVersion</name></member>
      <member refid="d4/d44/a03065_1a8641ffc3e359d15c0e1c7df354dd3b69" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>getWantedFps</name></member>
      <member refid="d4/d44/a03065_1ab139accf9826d7cb5103af76aab1ec15" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>hasFont</name></member>
      <member refid="d4/d44/a03065_1ae7e13a16cf5c75af931f9e3f3ef0968d" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>hasImage</name></member>
      <member refid="d4/d44/a03065_1a8b8959435cfd02c78adb026f2803878c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>hasMeshShaders</name></member>
      <member refid="d4/d44/a03065_1a1d94424ff1a7658a1da6bd46556f927f" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>hasRenderLoop</name></member>
      <member refid="d4/d44/a03065_1af2f096aad3600390dec50bbe37e8e3b2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>initialise</name></member>
      <member refid="d4/d44/a03065_1a2fb8f87af4900d30db440bbf82aefefc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isApiTraceEnabled</name></member>
      <member refid="d4/d44/a03065_1a3d5e53f761b14f7c95c34e76f8b34557" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isCleaned</name></member>
      <member refid="d4/d44/a03065_1a9de029a3a2bacd457aa229244931b1c2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isRandomisationEnabled</name></member>
      <member refid="d4/d44/a03065_1ad8c443d105a15ce6d702d98a66a29c67" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isThreaded</name></member>
      <member refid="d4/d44/a03065_1aac153d4798d15f1437d85b01439f90e2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>isValidationEnabled</name></member>
      <member refid="d4/d44/a03065_1a726499108a0a5ced1d24055774e56e87" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>loadRenderer</name></member>
      <member refid="d4/d44/a03065_1abbf9a42e489446b4b5c16382e983446a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>loadRenderer</name></member>
      <member refid="d4/d44/a03065_1a16d2c526f0d35cf37eebc96b9fc232bb" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_additionalParsers</name></member>
      <member refid="d4/d44/a03065_1a9a32c11d418721fcb557eecbb7b88177" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_appName</name></member>
      <member refid="d4/d44/a03065_1ab99239a425c0ee6fe046adf7c17a85b3" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_appVersion</name></member>
      <member refid="d4/d44/a03065_1af38554b5e3b64830fde6207e837aec97" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_backgroundModelFactory</name></member>
      <member refid="d4/d44/a03065_1a27851fde9153f557b64e6c094ddf50d6" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_brdf</name></member>
      <member refid="d4/d44/a03065_1ab14f3f24ed0245f73c7fbc95fd48fabc" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_cleaned</name></member>
      <member refid="d4/d44/a03065_1afadb61514f5ec62166ba88d39e9fb65f" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_cpuInformations</name></member>
      <member refid="d4/d44/a03065_1a10f19e9ef04cd24c2ef0a1a4a8026815" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_cpuJobs</name></member>
      <member refid="d4/d44/a03065_1ac6c656b473c4872a0e986ca4c34f3dd1" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_defaultListener</name></member>
      <member refid="d4/d44/a03065_1a2fb0fd0f29860410c52ea92029ea0b86" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_defaultSampler</name></member>
      <member refid="d4/d44/a03065_1a90bc55d327c36440be23d86c300272c5" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_enableApiTrace</name></member>
      <member refid="d4/d44/a03065_1a4862ee379fb3fe34c1964d24a7801c2a" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_enableRandom</name></member>
      <member refid="d4/d44/a03065_1ab67fde8414f083c9ce73b088e1df45db" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_enableUpdateOptimisations</name></member>
      <member refid="d4/d44/a03065_1a16781d35239d9fbab194f333ce128deb" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_enableValidation</name></member>
      <member refid="d4/d44/a03065_1ad06e6693779fea49a547c249c5ddc4d5" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_fontCache</name></member>
      <member refid="d4/d44/a03065_1aea4645095cf0e48ddbcc0670bc902925" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_imageCache</name></member>
      <member refid="d4/d44/a03065_1acada1e0302fab81df0117ff7c9dd5d18" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_imageLoader</name></member>
      <member refid="d4/d44/a03065_1af7e2b42a01565863bebd7c0b6b4317f8" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_imageWriter</name></member>
      <member refid="d4/d44/a03065_1a28e60fb73fd323e55d6f3aefd8202431" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_importerFileFactory</name></member>
      <member refid="d4/d44/a03065_1a39bfeab9b11c45a4ebf504d301a2cb48" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_lightingModelFactory</name></member>
      <member refid="d4/d44/a03065_1ab4dd08a318d7af3b80d45ea576a960f8" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_lightingModelId</name></member>
      <member refid="d4/d44/a03065_1a07f5d3d107bc93b922d2530c60296cb1" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_lightsSampler</name></member>
      <member refid="d4/d44/a03065_1af9ea4d371aacdc4cadef5e9a3bbd34cb" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_loadingScene</name></member>
      <member refid="d4/d44/a03065_1ae5b070260e89ea19d18a87703869c931" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_logger</name></member>
      <member refid="d4/d44/a03065_1abacccda43e98535e6c797850abb622f0" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_lpvGridSize</name></member>
      <member refid="d4/d44/a03065_1a173c3212b8140a8f3cf54be640631496" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_maxImageSize</name></member>
      <member refid="d4/d44/a03065_1accbd13b635d98a9f2ee8c1edbefeb502" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_meshFactory</name></member>
      <member refid="d4/d44/a03065_1adca6ae1cedbb991c4a056260eac32c8a" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_ownedLogger</name></member>
      <member refid="d4/d44/a03065_1a291a3e44f575ae144eba32fa085fb381" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_particleFactory</name></member>
      <member refid="d4/d44/a03065_1a6e536751738ebf5795dfa6ef83471298" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_passComponents</name></member>
      <member refid="d4/d44/a03065_1a740d8635671e84da06912ee94d34cfd5" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_passFactory</name></member>
      <member refid="d4/d44/a03065_1a208f7e38b20f1400a52c6a12d0517751" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_passRenderPassTypes</name></member>
      <member refid="d4/d44/a03065_1a6586a471d2ad424749c11199bc7129a4" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_rendererList</name></member>
      <member refid="d4/d44/a03065_1a2480647f1b1863ca8a7a2ddd710de6c3" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_renderLoop</name></member>
      <member refid="d4/d44/a03065_1ae09f892c49ba3c12df210c5a4034c131" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_renderPassTypes</name></member>
      <member refid="d4/d44/a03065_1ab82a4fcaca8adcd2c6aa9ec9e38fac39" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_renderSystem</name></member>
      <member refid="d4/d44/a03065_1aa14e3bf330ad1ae56d99e4258b78effa" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_renderWindows</name></member>
      <member refid="d4/d44/a03065_1a6834af8c0937c9582f78cdc7bff7f0b3" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_resourceHandler</name></member>
      <member refid="d4/d44/a03065_1a798aedb79fb481bd0c46ddf869c6aa70" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_resources</name></member>
      <member refid="d4/d44/a03065_1a68a7366c2794c4be7751c3df17052605" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_threaded</name></member>
      <member refid="d4/d44/a03065_1adc1b4f3ec2eb40b89608201c5062ab61" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_unit</name></member>
      <member refid="d4/d44/a03065_1ae62c1dad2af66916c55904af755dc342" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_userInputListener</name></member>
      <member refid="d4/d44/a03065_1a44f73c181073f518a1c1fa2aa542c93e" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_version</name></member>
      <member refid="d4/d44/a03065_1abd4ce81dde7894e4bf7833a300f4385d" prot="private" virt="non-virtual"><scope>castor3d::Engine</scope><name>m_windowInputListeners</name></member>
      <member refid="d4/d44/a03065_1ad208d53de5087a0277e6edab25e7b7d3" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>postEvent</name></member>
      <member refid="d4/d44/a03065_1a0fab74074f72dd7b94bf6121a0a620d7" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>postEvent</name></member>
      <member refid="d4/d44/a03065_1af1c22fb087f974e3b20b7d40893a0943" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>pushCpuJob</name></member>
      <member refid="d4/d44/a03065_1a86d9ad059bf65ac455923d646025ecfa" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerBackgroundModel</name></member>
      <member refid="d4/d44/a03065_1a9e1c727f3a173627afa68e6caa68db15" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerBuffer</name></member>
      <member refid="d4/d44/a03065_1aaba939e153b040393309262b200fc2bb" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerLightingModel</name></member>
      <member refid="d4/d44/a03065_1a40954838ab772d016892faf5041603e0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerParsers</name></member>
      <member refid="d4/d44/a03065_1adf455d2cfdb58f051f5b11ad909e7856" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerPassComponent</name></member>
      <member refid="d4/d44/a03065_1a57b9f140207dda3886fb311adcd8627b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerPassComponent</name></member>
      <member refid="d4/d44/a03065_1a69ee04422f73b8ef3e370c23935a8445" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerPassModel</name></member>
      <member refid="d4/d44/a03065_1a04c7a109df4e06a635586a09e767dadc" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerPassModels</name></member>
      <member refid="d4/d44/a03065_1a1660abbb7de131d2c4268e32ecccb013" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerRenderPassType</name></member>
      <member refid="d4/d44/a03065_1a036b1797d962aa73acde5e5f0d057ffd" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerSpecificsBuffer</name></member>
      <member refid="d4/d44/a03065_1ab5ffd2ed2eb94f3679bd98cc80d3d6b8" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerTimer</name></member>
      <member refid="d4/d44/a03065_1ac28328d51d84410eea9caeeec5614521" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>registerWindow</name></member>
      <member refid="d4/d44/a03065_1addc711e1060765415a0812574efb17a7" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>removeFont</name></member>
      <member refid="d4/d44/a03065_1a1cae454c199e0ccc5d67813a812dba75" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>removeImage</name></member>
      <member refid="d4/d44/a03065_1a6cf9e686b61f07c378f36547979b85ad" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>sendEvent</name></member>
      <member refid="d4/d44/a03065_1a4e5529bdbb4f26d05fd47c23aa8276f4" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setCleaned</name></member>
      <member refid="d4/d44/a03065_1a63ec9f4c7c88b62a3361e2a19bd05961" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setDefaultLightingModel</name></member>
      <member refid="d4/d44/a03065_1a6a4c6e0bcc60e9419930e5173245876c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setLengthUnit</name></member>
      <member refid="d4/d44/a03065_1a418eee56faf8ecaee85aedff7f0bb004" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setLoadingScene</name></member>
      <member refid="d4/d44/a03065_1aa69e5ab2e1776ec29536e1f5d2acefa1" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setLpvGridSize</name></member>
      <member refid="d4/d44/a03065_1a5ae0e718bdc1f2dcbc6b267fb31a8db8" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setMaxImageSize</name></member>
      <member refid="d4/d44/a03065_1ada4f71385eb54b14e1b53a88bf908bc0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setRenderPassTypeConfiguration</name></member>
      <member refid="d4/d44/a03065_1a898d543d49adda4a3b346e5a10e047a8" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setUserInputListener</name></member>
      <member refid="d4/d44/a03065_1a1179ac445c323ab841a6f255a81e7cad" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>setUserInputListenerT</name></member>
      <member refid="d4/d44/a03065_1ab079a7d5c089864cd6eb28d8ccaf83ea" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>tryAddImage</name></member>
      <member refid="d4/d44/a03065_1ad1e115ab10d0a0a64bedd07035cbe6b2" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>tryFindFont</name></member>
      <member refid="d4/d44/a03065_1a3279e895e623bdcb3eaf0ff99ed221b5" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>tryFindImage</name></member>
      <member refid="d4/d44/a03065_1a364eba80785f1a986af517bf6c3142ee" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterBackgroundModel</name></member>
      <member refid="d4/d44/a03065_1ad9af55c3cbd118c52206bd791f14192c" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterBuffer</name></member>
      <member refid="d4/d44/a03065_1aa72d4bd6ef8ab6f62d41972096a49d25" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterLightingModel</name></member>
      <member refid="d4/d44/a03065_1ad97c12f6efb819f1f09952e30d5c8f49" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterLightingModel</name></member>
      <member refid="d4/d44/a03065_1a90feb7a6988c9a62dd07cf6e5202d404" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterParsers</name></member>
      <member refid="d4/d44/a03065_1adc1b1dbf4a6a2c3e1c3f5abc62a8a465" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterPassComponent</name></member>
      <member refid="d4/d44/a03065_1a3e170667f1e3503196e0f83538ec76bf" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterPassModel</name></member>
      <member refid="d4/d44/a03065_1affb60b77798bfb40516df50adc36520b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterPassModels</name></member>
      <member refid="d4/d44/a03065_1a4f2120a7bd506dc9a1543228283abaed" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterRenderPassType</name></member>
      <member refid="d4/d44/a03065_1a0a40a57b75df3d0c182e0319c1afd49e" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterSpecificsBuffer</name></member>
      <member refid="d4/d44/a03065_1a6a3468413559f5f34ecb1181b26d4b5a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterTimer</name></member>
      <member refid="d4/d44/a03065_1a42feb3bee212879e63f7fab5a56baf87" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>unregisterWindow</name></member>
      <member refid="d4/d44/a03065_1afcb9bb7a80246fa509954782c1d637a0" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>update</name></member>
      <member refid="d4/d44/a03065_1a31d9d09b962ca618773b12398765a95a" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>update</name></member>
      <member refid="d4/d44/a03065_1ad47d3e46db36a434f3c21d0d9945ac9b" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>upload</name></member>
      <member refid="d4/d44/a03065_1ab5b9f6fe1e1603f76d259f30fc10fcee" prot="public" virt="non-virtual"><scope>castor3d::Engine</scope><name>~Engine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
