<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="d1/d18/a04993" kind="struct" language="C++" prot="private">
    <compoundname>castor3d::LightPropagationVolumesBase::LightLpv</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d1/d18/a04993_1a1cdc92dfe25dfc6b123d8c959f90348c" prot="public" static="no" mutable="no">
        <type><ref refid="d3/d5e/a01725_1a3bfbec2138a36dd26b425971c62d1248" kindref="member">LightCache</ref> const  &amp;</type>
        <definition>LightCache const&amp; castor3d::LightPropagationVolumesBase::LightLpv::lightCache</definition>
        <argsstring></argsstring>
        <name>lightCache</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::lightCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="89" column="19" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d18/a04993_1af1fb0f19df9bc70de36b14800f05edc2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="df/dfc/a06673" kindref="compound">LpvLightConfigUbo</ref> &gt;</type>
        <definition>std::vector&lt; LpvLightConfigUbo &gt; castor3d::LightPropagationVolumesBase::LightLpv::lpvLightConfigUbos</definition>
        <argsstring></argsstring>
        <name>lpvLightConfigUbos</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::lpvLightConfigUbos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="90" column="13" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d18/a04993_1a66f2c41011789cd6406f119cd40b37c5" prot="public" static="no" mutable="no">
        <type>crg::FramePass const  *</type>
        <definition>crg::FramePass const* castor3d::LightPropagationVolumesBase::LightLpv::lastPass</definition>
        <argsstring></argsstring>
        <name>lastPass</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::lastPass</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="91" column="23" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d18/a04993_1a51ae287a71b23b25e318e4202195fe9a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="df/d76/a04973" kindref="compound">LightInjectionPass</ref> * &gt;</type>
        <definition>std::vector&lt; LightInjectionPass * &gt; castor3d::LightPropagationVolumesBase::LightLpv::lightInjectionPasses</definition>
        <argsstring></argsstring>
        <name>lightInjectionPasses</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::lightInjectionPasses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="92" column="13" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d18/a04993_1a6488834794bdb7814f9b7a0bd1bea423" prot="public" static="no" mutable="no">
        <type>crg::FramePassArray</type>
        <definition>crg::FramePassArray castor3d::LightPropagationVolumesBase::LightLpv::lightInjectionPassDescs</definition>
        <argsstring></argsstring>
        <name>lightInjectionPassDescs</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::lightInjectionPassDescs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="93" column="21" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d18/a04993_1aafbd8af174a269cbc6738800c1ddb0ed" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dc/db4/a04953" kindref="compound">GeometryInjectionPass</ref> * &gt;</type>
        <definition>std::vector&lt; GeometryInjectionPass * &gt; castor3d::LightPropagationVolumesBase::LightLpv::geometryInjectionPasses</definition>
        <argsstring></argsstring>
        <name>geometryInjectionPasses</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::geometryInjectionPasses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="94" column="13" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d18/a04993_1ae6137097e71613c2e0237b1426b7b27a" prot="public" static="no" mutable="no">
        <type>crg::FramePassArray</type>
        <definition>crg::FramePassArray castor3d::LightPropagationVolumesBase::LightLpv::geometryInjectionPassDescs</definition>
        <argsstring></argsstring>
        <name>geometryInjectionPassDescs</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::geometryInjectionPassDescs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="95" column="21" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d18/a04993_1a5734a06e221c35364d658430d889be04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>castor3d::LightPropagationVolumesBase::LightLpv::LightLpv</definition>
        <argsstring>(crg::FrameGraph &amp;graph, crg::FramePass const &amp;previousPass, RenderDevice const &amp;device, castor::String const &amp;name, LightCache const &amp;lightCache, LightType lightType, ShadowMapResult const &amp;smResult, LpvGridConfigUbo const &amp;lpvGridConfigUbo, LightVolumePassResult const &amp;injection, Texture *geometry)</argsstring>
        <name>LightLpv</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::LightLpv</qualifiedname>
        <param>
          <type>crg::FrameGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePass const &amp;</type>
          <declname>previousPass</declname>
        </param>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a3bfbec2138a36dd26b425971c62d1248" kindref="member">LightCache</ref> const &amp;</type>
          <declname>lightCache</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>lightType</declname>
        </param>
        <param>
          <type><ref refid="d6/d6d/a05685" kindref="compound">ShadowMapResult</ref> const &amp;</type>
          <declname>smResult</declname>
        </param>
        <param>
          <type><ref refid="df/daa/a06665" kindref="compound">LpvGridConfigUbo</ref> const &amp;</type>
          <declname>lpvGridConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="d6/dd1/a05001" kindref="compound">LightVolumePassResult</ref> const &amp;</type>
          <declname>injection</declname>
        </param>
        <param>
          <type><ref refid="df/ddb/a05729" kindref="compound">Texture</ref> *</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/d18/a04993_1ac50f538c67ef8f2b67ea213f1f9052bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::LightPropagationVolumesBase::LightLpv::update</definition>
        <argsstring>(CpuUpdater &amp;updater, float lpvCellSize)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::update</qualifiedname>
        <param>
          <type><ref refid="d5/de0/a05541" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lpvCellSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="86" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d1/d18/a04993_1aefca64dac1bca8d105064a8d5f787606" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::FramePass const &amp;</type>
        <definition>crg::FramePass const  &amp; castor3d::LightPropagationVolumesBase::LightLpv::doCreateInjectionPass</definition>
        <argsstring>(crg::FrameGraph &amp;graph, RenderDevice const &amp;device, castor::String const &amp;name, LightType lightType, ShadowMapResult const &amp;smResult, LpvGridConfigUbo const &amp;lpvGridConfigUbo, LightVolumePassResult const &amp;injection)</argsstring>
        <name>doCreateInjectionPass</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::doCreateInjectionPass</qualifiedname>
        <param>
          <type>crg::FrameGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>lightType</declname>
        </param>
        <param>
          <type><ref refid="d6/d6d/a05685" kindref="compound">ShadowMapResult</ref> const &amp;</type>
          <declname>smResult</declname>
        </param>
        <param>
          <type><ref refid="df/daa/a06665" kindref="compound">LpvGridConfigUbo</ref> const &amp;</type>
          <declname>lpvGridConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="d6/dd1/a05001" kindref="compound">LightVolumePassResult</ref> const &amp;</type>
          <declname>injection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="98" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d1/d18/a04993_1ab1780f8f7da835c9e590d763af5b3337" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::FramePass const &amp;</type>
        <definition>crg::FramePass const  &amp; castor3d::LightPropagationVolumesBase::LightLpv::doCreateInjectionPass</definition>
        <argsstring>(crg::FrameGraph &amp;graph, RenderDevice const &amp;device, castor::String const &amp;name, std::vector&lt; crg::ImageViewId &gt; const &amp;arrayViews, CubeMapFace face, ShadowMapResult const &amp;smResult, LpvGridConfigUbo const &amp;lpvGridConfigUbo, LightVolumePassResult const &amp;injection)</argsstring>
        <name>doCreateInjectionPass</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::doCreateInjectionPass</qualifiedname>
        <param>
          <type>crg::FrameGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; crg::ImageViewId &gt; const &amp;</type>
          <declname>arrayViews</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type><ref refid="d6/d6d/a05685" kindref="compound">ShadowMapResult</ref> const &amp;</type>
          <declname>smResult</declname>
        </param>
        <param>
          <type><ref refid="df/daa/a06665" kindref="compound">LpvGridConfigUbo</ref> const &amp;</type>
          <declname>lpvGridConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="d6/dd1/a05001" kindref="compound">LightVolumePassResult</ref> const &amp;</type>
          <declname>injection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="105" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d1/d18/a04993_1a68b8578fa7b87ef5e75306df82e26e38" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::FramePassArray</type>
        <definition>crg::FramePassArray castor3d::LightPropagationVolumesBase::LightLpv::doCreateInjectionPasses</definition>
        <argsstring>(crg::FrameGraph &amp;graph, RenderDevice const &amp;device, castor::String const &amp;name, LightType lightType, ShadowMapResult const &amp;smResult, LpvGridConfigUbo const &amp;lpvGridConfigUbo, LightVolumePassResult const &amp;injection)</argsstring>
        <name>doCreateInjectionPasses</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::doCreateInjectionPasses</qualifiedname>
        <param>
          <type>crg::FrameGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>lightType</declname>
        </param>
        <param>
          <type><ref refid="d6/d6d/a05685" kindref="compound">ShadowMapResult</ref> const &amp;</type>
          <declname>smResult</declname>
        </param>
        <param>
          <type><ref refid="df/daa/a06665" kindref="compound">LpvGridConfigUbo</ref> const &amp;</type>
          <declname>lpvGridConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="d6/dd1/a05001" kindref="compound">LightVolumePassResult</ref> const &amp;</type>
          <declname>injection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="113" column="21"/>
      </memberdef>
      <memberdef kind="function" id="d1/d18/a04993_1afccdf66560e8a82feb680428e7751320" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::FramePass const &amp;</type>
        <definition>crg::FramePass const  &amp; castor3d::LightPropagationVolumesBase::LightLpv::doCreateGeometryPass</definition>
        <argsstring>(crg::FrameGraph &amp;graph, RenderDevice const &amp;device, castor::String const &amp;name, LightType lightType, ShadowMapResult const &amp;smResult, LpvGridConfigUbo const &amp;lpvGridConfigUbo, Texture &amp;geometry)</argsstring>
        <name>doCreateGeometryPass</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::doCreateGeometryPass</qualifiedname>
        <param>
          <type>crg::FrameGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>lightType</declname>
        </param>
        <param>
          <type><ref refid="d6/d6d/a05685" kindref="compound">ShadowMapResult</ref> const &amp;</type>
          <declname>smResult</declname>
        </param>
        <param>
          <type><ref refid="df/daa/a06665" kindref="compound">LpvGridConfigUbo</ref> const &amp;</type>
          <declname>lpvGridConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="df/ddb/a05729" kindref="compound">Texture</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="120" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d1/d18/a04993_1a58cb3b5bbd22a3619e8ba9c7531cfa4d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::FramePass const &amp;</type>
        <definition>crg::FramePass const  &amp; castor3d::LightPropagationVolumesBase::LightLpv::doCreateGeometryPass</definition>
        <argsstring>(crg::FrameGraph &amp;graph, RenderDevice const &amp;device, castor::String const &amp;name, std::vector&lt; crg::ImageViewId &gt; const &amp;arrayViews, CubeMapFace face, ShadowMapResult const &amp;smResult, LpvGridConfigUbo const &amp;lpvGridConfigUbo, Texture &amp;geometry)</argsstring>
        <name>doCreateGeometryPass</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::doCreateGeometryPass</qualifiedname>
        <param>
          <type>crg::FrameGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; crg::ImageViewId &gt; const &amp;</type>
          <declname>arrayViews</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type><ref refid="d6/d6d/a05685" kindref="compound">ShadowMapResult</ref> const &amp;</type>
          <declname>smResult</declname>
        </param>
        <param>
          <type><ref refid="df/daa/a06665" kindref="compound">LpvGridConfigUbo</ref> const &amp;</type>
          <declname>lpvGridConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="df/ddb/a05729" kindref="compound">Texture</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="127" column="23"/>
      </memberdef>
      <memberdef kind="function" id="d1/d18/a04993_1a138a54a9abd3a3eafb6457436c633cf8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::FramePassArray</type>
        <definition>crg::FramePassArray castor3d::LightPropagationVolumesBase::LightLpv::doCreateGeometryPasses</definition>
        <argsstring>(crg::FrameGraph &amp;graph, RenderDevice const &amp;device, castor::String const &amp;name, LightType lightType, ShadowMapResult const &amp;smResult, LpvGridConfigUbo const &amp;lpvGridConfigUbo, Texture &amp;geometry)</argsstring>
        <name>doCreateGeometryPasses</name>
        <qualifiedname>castor3d::LightPropagationVolumesBase::LightLpv::doCreateGeometryPasses</qualifiedname>
        <param>
          <type>crg::FrameGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="d6/d0f/a05457" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d3/d5e/a01725_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>lightType</declname>
        </param>
        <param>
          <type><ref refid="d6/d6d/a05685" kindref="compound">ShadowMapResult</ref> const &amp;</type>
          <declname>smResult</declname>
        </param>
        <param>
          <type><ref refid="df/daa/a06665" kindref="compound">LpvGridConfigUbo</ref> const &amp;</type>
          <declname>lpvGridConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="df/ddb/a05729" kindref="compound">Texture</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="135" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>castor3d::ObjectCacheBaseT&lt; Light, castor::String, LightCacheTraits &gt;</label>
        <link refid="d2/daa/a02997"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_engine</edgelabel>
        </childnode>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; Light, castor::String, LightCacheTraits &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>T</label>
      </node>
      <node id="6">
        <label>castor3d::Engine</label>
        <link refid="d4/d44/a03065"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>castor3d::GeometryInjectionPass</label>
        <link refid="dc/db4/a04953"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>castor3d::LightInjectionPass</label>
        <link refid="df/d76/a04973"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::LightPropagationVolumesBase::LightLpv</label>
        <childnode refid="2" relation="usage">
          <edgelabel>lightCache</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>lpvLightConfigUbos</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>lightInjectionPasses</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>geometryInjectionPasses</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>castor3d::LpvLightConfigUbo</label>
        <link refid="df/dfc/a06673"/>
      </node>
      <node id="8">
        <label>castor3d::ObjectCacheBaseT&lt; ObjT, KeyT, TraitsT &gt;</label>
        <link refid="d2/daa/a02997"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_engine</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::ObjectCacheT&lt; Light, castor::String, LightCacheTraits &gt;</label>
        <link refid="d1/db3/a03013"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>castor::Named</label>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Scene &gt;</label>
      </node>
      <node id="5">
        <label>castor::ResourceCacheBaseT&lt; Light, castor::String, LightCacheTraits &gt;</label>
      </node>
      <node id="9">
        <label>castor::ResourceCacheBaseT&lt; ObjT, KeyT, TraitsT &gt;</label>
      </node>
      <node id="7">
        <label>castor::Unique&lt; Engine &gt;</label>
      </node>
      <node id="17">
        <label>crg::RenderPass</label>
      </node>
      <node id="12">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="13" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::vector&lt; castor3d::GeometryInjectionPass * &gt;</label>
        <childnode refid="19" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; castor3d::GeometryInjectionPass * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::vector&lt; castor3d::LightInjectionPass * &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; castor3d::LightInjectionPass * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; castor3d::LpvLightConfigUbo &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; castor3d::LpvLightConfigUbo &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" line="74" column="1" bodyfile="Render/GlobalIllumination/LightPropagationVolumes/LightPropagationVolumes.hpp" bodystart="75" bodyend="142"/>
    <listofallmembers>
      <member refid="d1/d18/a04993_1afccdf66560e8a82feb680428e7751320" prot="private" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>doCreateGeometryPass</name></member>
      <member refid="d1/d18/a04993_1a58cb3b5bbd22a3619e8ba9c7531cfa4d" prot="private" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>doCreateGeometryPass</name></member>
      <member refid="d1/d18/a04993_1a138a54a9abd3a3eafb6457436c633cf8" prot="private" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>doCreateGeometryPasses</name></member>
      <member refid="d1/d18/a04993_1aefca64dac1bca8d105064a8d5f787606" prot="private" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>doCreateInjectionPass</name></member>
      <member refid="d1/d18/a04993_1ab1780f8f7da835c9e590d763af5b3337" prot="private" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>doCreateInjectionPass</name></member>
      <member refid="d1/d18/a04993_1a68b8578fa7b87ef5e75306df82e26e38" prot="private" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>doCreateInjectionPasses</name></member>
      <member refid="d1/d18/a04993_1ae6137097e71613c2e0237b1426b7b27a" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>geometryInjectionPassDescs</name></member>
      <member refid="d1/d18/a04993_1aafbd8af174a269cbc6738800c1ddb0ed" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>geometryInjectionPasses</name></member>
      <member refid="d1/d18/a04993_1a66f2c41011789cd6406f119cd40b37c5" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>lastPass</name></member>
      <member refid="d1/d18/a04993_1a1cdc92dfe25dfc6b123d8c959f90348c" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>lightCache</name></member>
      <member refid="d1/d18/a04993_1a6488834794bdb7814f9b7a0bd1bea423" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>lightInjectionPassDescs</name></member>
      <member refid="d1/d18/a04993_1a51ae287a71b23b25e318e4202195fe9a" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>lightInjectionPasses</name></member>
      <member refid="d1/d18/a04993_1a5734a06e221c35364d658430d889be04" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>LightLpv</name></member>
      <member refid="d1/d18/a04993_1af1fb0f19df9bc70de36b14800f05edc2" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>lpvLightConfigUbos</name></member>
      <member refid="d1/d18/a04993_1ac50f538c67ef8f2b67ea213f1f9052bd" prot="public" virt="non-virtual"><scope>castor3d::LightPropagationVolumesBase::LightLpv</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
