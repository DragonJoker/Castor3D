<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="d2/d4c/a02897" kind="class" language="C++" prot="public">
    <compoundname>castor3d::GpuBufferBase</compoundname>
    <derivedcompoundref refid="d4/d69/a02869" prot="public" virt="non-virtual">castor3d::GpuBufferT&lt; AllocatorT &gt;</derivedcompoundref>
    <includes local="no">GpuBuffer.hpp</includes>
    <innerclass refid="d1/dfc/a02901" prot="private">castor3d::GpuBufferBase::MemoryRange</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d2/d4c/a02897_1a5f73c06dc063fb909b7fa723b4ee90c8" prot="private" static="no">
        <type>std::vector&lt; MemoryRange &gt;</type>
        <definition>using castor3d::GpuBufferBase::MemoryRangeArray =  std::vector&lt; MemoryRange &gt;</definition>
        <argsstring></argsstring>
        <name>MemoryRangeArray</name>
        <qualifiedname>castor3d::GpuBufferBase::MemoryRangeArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="222" column="1" bodyfile="Buffer/GpuBuffer.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d2/d4c/a02897_1a01ce6a31562ddfd446c446f4a24ed188" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class GpuBufferPool</definition>
        <argsstring></argsstring>
        <name>GpuBufferPool</name>
        <qualifiedname>castor3d::GpuBufferBase::GpuBufferPool</qualifiedname>
        <param>
          <type><ref refid="d8/de8/a02925" kindref="compound">GpuBufferPool</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="25" column="14" bodyfile="Buffer/GpuBuffer.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d4c/a02897_1a9951e34699ca072e47a0dd28f80ff31c" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d99/a05585" kindref="compound">RenderSystem</ref> const  &amp;</type>
        <definition>RenderSystem const&amp; castor3d::GpuBufferBase::m_renderSystem</definition>
        <argsstring></argsstring>
        <name>m_renderSystem</name>
        <qualifiedname>castor3d::GpuBufferBase::m_renderSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="206" column="21" bodyfile="Buffer/GpuBuffer.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1ac93213c36218f65e9a8375fc2c567fdf" prot="private" static="no" mutable="no">
        <type>VkBufferUsageFlags</type>
        <definition>VkBufferUsageFlags castor3d::GpuBufferBase::m_usage</definition>
        <argsstring></argsstring>
        <name>m_usage</name>
        <qualifiedname>castor3d::GpuBufferBase::m_usage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="207" column="20" bodyfile="Buffer/GpuBuffer.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1a4c730337dc92891d1bd441f08e614955" prot="private" static="no" mutable="no">
        <type>VkMemoryPropertyFlags</type>
        <definition>VkMemoryPropertyFlags castor3d::GpuBufferBase::m_memoryFlags</definition>
        <argsstring></argsstring>
        <name>m_memoryFlags</name>
        <qualifiedname>castor3d::GpuBufferBase::m_memoryFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="208" column="23" bodyfile="Buffer/GpuBuffer.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1a392feb8ee91255bfffcadec61f4ea34d" prot="private" static="no" mutable="no">
        <type>ashes::QueueShare</type>
        <definition>ashes::QueueShare castor3d::GpuBufferBase::m_sharingMode</definition>
        <argsstring></argsstring>
        <name>m_sharingMode</name>
        <qualifiedname>castor3d::GpuBufferBase::m_sharingMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="209" column="19" bodyfile="Buffer/GpuBuffer.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1a587d96355485bef31424b29912a593a0" prot="private" static="no" mutable="no">
        <type>VkDeviceSize</type>
        <definition>VkDeviceSize castor3d::GpuBufferBase::m_allocatedSize</definition>
        <argsstring></argsstring>
        <name>m_allocatedSize</name>
        <qualifiedname>castor3d::GpuBufferBase::m_allocatedSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="210" column="14" bodyfile="Buffer/GpuBuffer.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1a9a7538519685faae7f6428fc3eb2cc83" prot="private" static="no" mutable="no">
        <type>ashes::BufferPtr&lt; uint8_t &gt;</type>
        <definition>ashes::BufferPtr&lt; uint8_t &gt; castor3d::GpuBufferBase::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <qualifiedname>castor3d::GpuBufferBase::m_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="211" column="18" bodyfile="Buffer/GpuBuffer.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1a70cb190f18fd0d79504e538b3d5370f1" prot="private" static="no" mutable="no">
        <type>ashes::StagingBufferPtr</type>
        <definition>ashes::StagingBufferPtr castor3d::GpuBufferBase::m_stagingBuffer</definition>
        <argsstring></argsstring>
        <name>m_stagingBuffer</name>
        <qualifiedname>castor3d::GpuBufferBase::m_stagingBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="212" column="25" bodyfile="Buffer/GpuBuffer.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1a22d827d0a42cfa72cd42ea3947460c4c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt; uint8_t &gt; castor3d::GpuBufferBase::m_ownData</definition>
        <argsstring></argsstring>
        <name>m_ownData</name>
        <qualifiedname>castor3d::GpuBufferBase::m_ownData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="213" column="13" bodyfile="Buffer/GpuBuffer.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1a2e69a28df19b20f94149211604e9232f" prot="private" static="no" mutable="no">
        <type>castor::ArrayView&lt; uint8_t &gt;</type>
        <definition>castor::ArrayView&lt; uint8_t &gt; castor3d::GpuBufferBase::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <qualifiedname>castor3d::GpuBufferBase::m_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="214" column="19" bodyfile="Buffer/GpuBuffer.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d4c/a02897_1ac7691c910eedc0c3c24ad3ab3032a53f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; size_t, MemoryRangeArray &gt;</type>
        <definition>std::unordered_map&lt; size_t, MemoryRangeArray &gt; castor3d::GpuBufferBase::m_ranges</definition>
        <argsstring></argsstring>
        <name>m_ranges</name>
        <qualifiedname>castor3d::GpuBufferBase::m_ranges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="223" column="20" bodyfile="Buffer/GpuBuffer.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d4c/a02897_1a4f0cb57ba7d81f99e64b3fa0096023fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::GpuBufferBase::GpuBufferBase</definition>
        <argsstring>(RenderSystem const &amp;renderSystem, VkBufferUsageFlags usage, VkMemoryPropertyFlags memoryFlags, castor::String debugName, ashes::QueueShare sharingMode, VkDeviceSize allocatedSize, bool smallData=false)</argsstring>
        <name>GpuBufferBase</name>
        <qualifiedname>castor3d::GpuBufferBase::GpuBufferBase</qualifiedname>
        <param>
          <type><ref refid="d3/d99/a05585" kindref="compound">RenderSystem</ref> const &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>memoryFlags</declname>
        </param>
        <param>
          <type>castor::String</type>
          <declname>debugName</declname>
        </param>
        <param>
          <type>ashes::QueueShare</type>
          <declname>sharingMode</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>allocatedSize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>smallData</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>The device on which the storage is allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">usage</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer targets. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">memoryFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer memory properties. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">debugName</parametername>
</parameternamelist>
<parameterdescription>
<para>The debug name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sharingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The sharing mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">allocatedSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">smallData</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the memory chunks allocated through this buffer are less than 65536 bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="48" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1a23305046cd563d8ec97a43b9ab41500f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::GpuBufferBase::upload</definition>
        <argsstring>(ashes::CommandBuffer const &amp;cb)</argsstring>
        <name>upload</name>
        <qualifiedname>castor3d::GpuBufferBase::upload</qualifiedname>
        <param>
          <type>ashes::CommandBuffer const &amp;</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Uploads all ready memory ranges to VRAM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The command buffer on which transfer commands are recorded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="63" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1adbd7c63833b19b5aeedc5c5ddbe10f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::GpuBufferBase::uploadDirect</definition>
        <argsstring>(ashes::Queue const &amp;queue, ashes::CommandPool const &amp;commandPool, VkDeviceSize offset, VkDeviceSize size, VkAccessFlags dstAccessFlags, VkPipelineStageFlags dstPipelineFlags)</argsstring>
        <name>uploadDirect</name>
        <qualifiedname>castor3d::GpuBufferBase::uploadDirect</qualifiedname>
        <param>
          <type>ashes::Queue const &amp;</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>ashes::CommandPool const &amp;</type>
          <declname>commandPool</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkAccessFlags</type>
          <declname>dstAccessFlags</declname>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>dstPipelineFlags</declname>
        </param>
        <briefdescription>
<para>Uploads a memory range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">queue</parametername>
</parameternamelist>
<parameterdescription>
<para>The queue to which the upload commands will be submitted to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">commandPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The command pool from which the command buffer will be created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstAccessFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>The access flags wanted after upload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstPipelineFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline stage flags wanted after upload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="80" column="14"/>
        <referencedby refid="df/d5c/a02933_1ab95abd80940cdaef3c701f874c4fdb4e" compoundref="dc/d9a/a00218" startline="82" endline="93">castor3d::ObjectBufferOffset::GpuBufferChunk::directUpload</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1a06f1c510406ae4dd17d134022e94a497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::GpuBufferBase::markDirty</definition>
        <argsstring>(VkDeviceSize offset, VkDeviceSize size, VkAccessFlags dstAccessFlags, VkPipelineStageFlags dstPipelineFlags)</argsstring>
        <name>markDirty</name>
        <qualifiedname>castor3d::GpuBufferBase::markDirty</qualifiedname>
        <param>
          <type>VkDeviceSize</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>VkDeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkAccessFlags</type>
          <declname>dstAccessFlags</declname>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>dstPipelineFlags</declname>
        </param>
        <briefdescription>
<para>Marks a memory range to be ready for upload. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstAccessFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>The access flags wanted after upload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstPipelineFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline stage flags wanted after upload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="98" column="14"/>
        <referencedby refid="d7/d13/a02873_1a82d29cdbd10db3d1c4cc8b91f2a3b585" compoundref="d3/de5/a00209" startline="123" endline="130">castor3d::GpuBufferOffsetT&lt; DataT &gt;::markDirty</referencedby>
        <referencedby refid="df/d5c/a02933_1a33c1c92e85f418affdc40f2486368e08" compoundref="dc/d9a/a00218" startline="65" endline="72">castor3d::ObjectBufferOffset::GpuBufferChunk::markDirty</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1a3f399bb8c877bc2155fe02aebd6c0329" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::GpuBufferBase::hasBuffer</definition>
        <argsstring>() const</argsstring>
        <name>hasBuffer</name>
        <qualifiedname>castor3d::GpuBufferBase::hasBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The internal buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="110" column="6" bodyfile="Buffer/GpuBuffer.hpp" bodystart="110" bodyend="113"/>
        <referencedby refid="d7/d13/a02873_1a661b1a290c461596f62b66adf4502835" compoundref="d3/de5/a00209" startline="76" endline="80">castor3d::GpuBufferOffsetT&lt; DataT &gt;::operator bool</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1a2e96ae884d0c9c48a92282e0c9d1b816" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; uint8_t &gt; const &amp;</type>
        <definition>ashes::Buffer&lt; uint8_t &gt; const  &amp; castor3d::GpuBufferBase::getBuffer</definition>
        <argsstring>() const</argsstring>
        <name>getBuffer</name>
        <qualifiedname>castor3d::GpuBufferBase::getBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The internal buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="122" column="22" bodyfile="Buffer/GpuBuffer.hpp" bodystart="122" bodyend="125"/>
        <referencedby refid="d7/d13/a02873_1aaf498e1f12b8c86de5b613e41e9fb87e" compoundref="d3/de5/a00209" startline="92" endline="95">castor3d::GpuBufferOffsetT&lt; DataT &gt;::getBuffer</referencedby>
        <referencedby refid="df/d5c/a02933_1ac8e2cc4cf9e8a4531300987d3bd38c07" compoundref="dc/d9a/a00218" startline="25" endline="28">castor3d::ObjectBufferOffset::GpuBufferChunk::getBuffer</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1ab0b76b8e65ce793ffd15dc6c5d65a70d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::GpuBufferBase::operator ashes::Buffer&lt; uint8_t &gt; const &amp;</definition>
        <argsstring>() const</argsstring>
        <name>operator ashes::Buffer&lt; uint8_t &gt; const &amp;</name>
        <qualifiedname>castor3d::GpuBufferBase::Buffer&lt; uint8_t &gt; const &amp;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="126" column="1" bodyfile="Buffer/GpuBuffer.hpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1ad5c0c039b286c923f49bfb1e7e6282e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; uint8_t &gt; &amp;</type>
        <definition>ashes::Buffer&lt; uint8_t &gt; &amp; castor3d::GpuBufferBase::getBuffer</definition>
        <argsstring>()</argsstring>
        <name>getBuffer</name>
        <qualifiedname>castor3d::GpuBufferBase::getBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The internal buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="138" column="16" bodyfile="Buffer/GpuBuffer.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1a91928d1e743ed5edbb8a3af9bd859af1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::GpuBufferBase::operator ashes::Buffer&lt; uint8_t &gt; &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator ashes::Buffer&lt; uint8_t &gt; &amp;</name>
        <qualifiedname>castor3d::GpuBufferBase::Buffer&lt; uint8_t &gt; &amp;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="142" column="1" bodyfile="Buffer/GpuBuffer.hpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1aa9ce48ae045bf1f7be2b87315bf56394" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataT</type>
          </param>
        </templateparamlist>
        <type>DataT const &amp;</type>
        <definition>DataT const  &amp; castor3d::GpuBufferBase::getData</definition>
        <argsstring>(VkDeviceSize offset) const</argsstring>
        <name>getData</name>
        <qualifiedname>castor3d::GpuBufferBase::getData</qualifiedname>
        <param>
          <type>VkDeviceSize</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The N-th instance of the data. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory chunk offset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="159" column="14" bodyfile="Buffer/GpuBuffer.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1a1c9e4696f89164001d11831b35f15f77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataT</type>
          </param>
        </templateparamlist>
        <type>DataT &amp;</type>
        <definition>DataT &amp; castor3d::GpuBufferBase::getData</definition>
        <argsstring>(VkDeviceSize offset)</argsstring>
        <name>getData</name>
        <qualifiedname>castor3d::GpuBufferBase::getData</qualifiedname>
        <param>
          <type>VkDeviceSize</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The N-th instance of the data. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory chunk offset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="176" column="8" bodyfile="Buffer/GpuBuffer.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1ae81d18fb4565a12c2d525b775cb4e27f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::ArrayView&lt; uint8_t &gt; const &amp;</type>
        <definition>castor::ArrayView&lt; uint8_t &gt; const  &amp; castor3d::GpuBufferBase::getDatas</definition>
        <argsstring>() const</argsstring>
        <name>getDatas</name>
        <qualifiedname>castor3d::GpuBufferBase::getDatas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="188" column="26" bodyfile="Buffer/GpuBuffer.hpp" bodystart="188" bodyend="191"/>
        <referencedby refid="d7/d13/a02873_1aab6c41b3e6bd874a2eea4fe95d769f68" compoundref="d3/de5/a00209" startline="117" endline="121">castor3d::GpuBufferOffsetT&lt; DataT &gt;::getData</referencedby>
        <referencedby refid="df/d5c/a02933_1a6e5b66e1fcf11fd2f1a773ad482c39ca" compoundref="dc/d9a/a00218" startline="41" endline="46">castor3d::ObjectBufferOffset::GpuBufferChunk::getData</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d4c/a02897_1af3d715f75b94aba18ba8d3a39b5e73d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::ArrayView&lt; uint8_t &gt; &amp;</type>
        <definition>castor::ArrayView&lt; uint8_t &gt; &amp; castor3d::GpuBufferBase::getDatas</definition>
        <argsstring>()</argsstring>
        <name>getDatas</name>
        <qualifiedname>castor3d::GpuBufferBase::getDatas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Buffer/GpuBuffer.hpp" line="200" column="20" bodyfile="Buffer/GpuBuffer.hpp" bodystart="200" bodyend="203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::GpuBufferBase</label>
        <link refid="d2/d4c/a02897"/>
      </node>
      <node id="2">
        <label>castor3d::GpuBufferT&lt; AllocatorT &gt;</label>
        <link refid="d4/d69/a02869"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="Buffer/GpuBuffer.hpp" line="23" column="1" bodyfile="Buffer/GpuBuffer.hpp" bodystart="24" bodyend="224"/>
    <listofallmembers>
      <member refid="d2/d4c/a02897_1a2e96ae884d0c9c48a92282e0c9d1b816" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getBuffer</name></member>
      <member refid="d2/d4c/a02897_1ad5c0c039b286c923f49bfb1e7e6282e8" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getBuffer</name></member>
      <member refid="d2/d4c/a02897_1aa9ce48ae045bf1f7be2b87315bf56394" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getData</name></member>
      <member refid="d2/d4c/a02897_1a1c9e4696f89164001d11831b35f15f77" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getData</name></member>
      <member refid="d2/d4c/a02897_1ae81d18fb4565a12c2d525b775cb4e27f" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getDatas</name></member>
      <member refid="d2/d4c/a02897_1af3d715f75b94aba18ba8d3a39b5e73d2" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>getDatas</name></member>
      <member refid="d2/d4c/a02897_1a4f0cb57ba7d81f99e64b3fa0096023fa" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>GpuBufferBase</name></member>
      <member refid="d2/d4c/a02897_1a01ce6a31562ddfd446c446f4a24ed188" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>GpuBufferPool</name></member>
      <member refid="d2/d4c/a02897_1a3f399bb8c877bc2155fe02aebd6c0329" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>hasBuffer</name></member>
      <member refid="d2/d4c/a02897_1a587d96355485bef31424b29912a593a0" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_allocatedSize</name></member>
      <member refid="d2/d4c/a02897_1a9a7538519685faae7f6428fc3eb2cc83" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_buffer</name></member>
      <member refid="d2/d4c/a02897_1a2e69a28df19b20f94149211604e9232f" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_data</name></member>
      <member refid="d2/d4c/a02897_1a4c730337dc92891d1bd441f08e614955" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_memoryFlags</name></member>
      <member refid="d2/d4c/a02897_1a22d827d0a42cfa72cd42ea3947460c4c" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_ownData</name></member>
      <member refid="d2/d4c/a02897_1ac7691c910eedc0c3c24ad3ab3032a53f" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_ranges</name></member>
      <member refid="d2/d4c/a02897_1a9951e34699ca072e47a0dd28f80ff31c" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_renderSystem</name></member>
      <member refid="d2/d4c/a02897_1a392feb8ee91255bfffcadec61f4ea34d" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_sharingMode</name></member>
      <member refid="d2/d4c/a02897_1a70cb190f18fd0d79504e538b3d5370f1" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_stagingBuffer</name></member>
      <member refid="d2/d4c/a02897_1ac93213c36218f65e9a8375fc2c567fdf" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>m_usage</name></member>
      <member refid="d2/d4c/a02897_1a06f1c510406ae4dd17d134022e94a497" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>markDirty</name></member>
      <member refid="d2/d4c/a02897_1a5f73c06dc063fb909b7fa723b4ee90c8" prot="private" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>MemoryRangeArray</name></member>
      <member refid="d2/d4c/a02897_1a91928d1e743ed5edbb8a3af9bd859af1" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>operator ashes::Buffer&lt; uint8_t &gt; &amp;</name></member>
      <member refid="d2/d4c/a02897_1ab0b76b8e65ce793ffd15dc6c5d65a70d" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>operator ashes::Buffer&lt; uint8_t &gt; const &amp;</name></member>
      <member refid="d2/d4c/a02897_1a23305046cd563d8ec97a43b9ab41500f" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>upload</name></member>
      <member refid="d2/d4c/a02897_1adbd7c63833b19b5aeedc5c5ddbe10f6d" prot="public" virt="non-virtual"><scope>castor3d::GpuBufferBase</scope><name>uploadDirect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
