<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="da/d3e/a03581" kind="struct" language="C++" prot="public">
    <compoundname>castor3d::RoughnessComponent</compoundname>
    <basecompoundref refid="d9/d11/a03445" prot="public" virt="non-virtual">castor3d::BaseDataPassComponentT&lt; castor::AtomicGroupChangeTracked&lt; float &gt; &gt;</basecompoundref>
    <includes local="no">RoughnessComponent.hpp</includes>
    <innerclass refid="d0/d92/a03585" prot="public">castor3d::RoughnessComponent::ComponentsShader</innerclass>
    <innerclass refid="d1/d3c/a03589" prot="public">castor3d::RoughnessComponent::MaterialShader</innerclass>
    <innerclass refid="d7/d7b/a03593" prot="public">castor3d::RoughnessComponent::Plugin</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="da/d3e/a03581_1af1616fe8a48a2a5f7a271b61de5eabb0" prot="public" static="yes" mutable="no">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String const</type>
        <definition>C3D_API castor::String const castor3d::RoughnessComponent::TypeName</definition>
        <argsstring></argsstring>
        <name>TypeName</name>
        <qualifiedname>castor3d::RoughnessComponent::TypeName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="117" column="37" bodyfile="Material/Pass/Component/Lighting/RoughnessComponent.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="da/d3e/a03581_1abaf2a95508ca96c91af6f7948eee890e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PassComponentPluginUPtr</type>
        <definition>static PassComponentPluginUPtr castor3d::RoughnessComponent::createPlugin</definition>
        <argsstring>(PassComponentRegister const &amp;passComponent)</argsstring>
        <name>createPlugin</name>
        <qualifiedname>castor3d::RoughnessComponent::createPlugin</qualifiedname>
        <param>
          <type><ref refid="d7/dfc/a04061" kindref="compound">PassComponentRegister</ref> const &amp;</type>
          <declname>passComponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="92" column="32" bodyfile="Material/Pass/Component/Lighting/RoughnessComponent.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d3e/a03581_1a11298ab70e5e139619e2d9fa71dde9cd" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::RoughnessComponent::RoughnessComponent</definition>
        <argsstring>(Pass &amp;pass, float defaultValue=1.0f)</argsstring>
        <name>RoughnessComponent</name>
        <qualifiedname>castor3d::RoughnessComponent::RoughnessComponent</qualifiedname>
        <param>
          <type><ref refid="d6/d16/a04077" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>float</type>
          <declname>defaultValue</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="97" column="18"/>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1a33d3b415f3ab37005561f71e6e7d46ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> float</type>
        <definition>C3D_API float castor3d::RoughnessComponent::getGlossiness</definition>
        <argsstring>() const</argsstring>
        <name>getGlossiness</name>
        <qualifiedname>castor3d::RoughnessComponent::getGlossiness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="100" column="15"/>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1afe08f6a97dc91f36d08850380753f728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RoughnessComponent::setGlossiness</definition>
        <argsstring>(float v)</argsstring>
        <name>setGlossiness</name>
        <qualifiedname>castor3d::RoughnessComponent::setGlossiness</qualifiedname>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="101" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1a149536373616a1321c0e4b967373c115" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> float</type>
        <definition>C3D_API float castor3d::RoughnessComponent::getShininess</definition>
        <argsstring>() const</argsstring>
        <name>getShininess</name>
        <qualifiedname>castor3d::RoughnessComponent::getShininess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="102" column="15"/>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1a7ae2895b84098826520094c54434c79c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RoughnessComponent::setShininess</definition>
        <argsstring>(float v)</argsstring>
        <name>setShininess</name>
        <qualifiedname>castor3d::RoughnessComponent::setShininess</qualifiedname>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="103" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1a0a685c222e29555e1b6dab39076f917e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="db/dc3/a00284_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::RoughnessComponent::accept</definition>
        <argsstring>(PassVisitorBase &amp;vis) override</argsstring>
        <name>accept</name>
        <qualifiedname>castor3d::RoughnessComponent::accept</qualifiedname>
        <reimplements refid="dc/d32/a04057_1a4e315225c20ace9097adfd65e8413e4f">accept</reimplements>
        <param>
          <type><ref refid="dd/d44/a04097" kindref="compound">PassVisitorBase</ref> &amp;</type>
          <declname>vis</declname>
        </param>
        <briefdescription>
<para><ref refid="d8/d7f/a04105" kindref="compound">PassVisitor</ref> acceptance function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vis</parametername>
</parameternamelist>
<parameterdescription>
<para>The ... visitor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="105" column="14"/>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1afe79bfd42a9e1ed8acf795319e81fe9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::RoughnessComponent::getRoughness</definition>
        <argsstring>() const</argsstring>
        <name>getRoughness</name>
        <qualifiedname>castor3d::RoughnessComponent::getRoughness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="107" column="7" bodyfile="Material/Pass/Component/Lighting/RoughnessComponent.hpp" bodystart="107" bodyend="110"/>
        <references refid="d9/d11/a03445_1a23ec881a6e2aa2e40c21e108cb6458f7" compoundref="db/d8e/a00482" startline="76" endline="79">castor3d::BaseDataPassComponentT&lt; castor::AtomicGroupChangeTracked&lt; float &gt; &gt;::getData</references>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1ab02a4e65ab65c2e1de523029a986c674" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::RoughnessComponent::setRoughness</definition>
        <argsstring>(float v)</argsstring>
        <name>setRoughness</name>
        <qualifiedname>castor3d::RoughnessComponent::setRoughness</qualifiedname>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="112" column="6" bodyfile="Material/Pass/Component/Lighting/RoughnessComponent.hpp" bodystart="112" bodyend="115"/>
        <references refid="d9/d11/a03445_1a074de9b2f9579c56a85617b514089545" compoundref="db/d8e/a00482" startline="56" endline="59">castor3d::BaseDataPassComponentT&lt; castor::AtomicGroupChangeTracked&lt; float &gt; &gt;::setData</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="da/d3e/a03581_1a6ee1a6840ed2a6a492fd19cc326e8912" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>PassComponentUPtr</type>
        <definition>PassComponentUPtr castor3d::RoughnessComponent::doClone</definition>
        <argsstring>(Pass &amp;pass) const override</argsstring>
        <name>doClone</name>
        <qualifiedname>castor3d::RoughnessComponent::doClone</qualifiedname>
        <reimplements refid="dc/d32/a04057_1ad87fbb1539bb6c5004cbcb02ddfcd46f">doClone</reimplements>
        <param>
          <type><ref refid="d6/d16/a04077" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Clones this component into given pass. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the cloned component. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="120" column="19"/>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1ad97fcfc0367c285632ba4497a382605f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool castor3d::RoughnessComponent::doWriteText</definition>
        <argsstring>(castor::String const &amp;tabs, castor::Path const &amp;folder, castor::String const &amp;subfolder, castor::StringStream &amp;file) const override</argsstring>
        <name>doWriteText</name>
        <qualifiedname>castor3d::RoughnessComponent::doWriteText</qualifiedname>
        <reimplements refid="dc/d32/a04057_1af8c7cb8f4c2e0753c0ebbb6adf802c9c">doWriteText</reimplements>
        <param>
          <type>castor::String const &amp;</type>
          <declname>tabs</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>subfolder</declname>
        </param>
        <param>
          <type>castor::StringStream &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Writes the component content to text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tabs</parametername>
</parameternamelist>
<parameterdescription>
<para>The current tabulation level. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">folder</parametername>
</parameternamelist>
<parameterdescription>
<para>The resources folder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subfolder</parametername>
</parameternamelist>
<parameterdescription>
<para>The resources subfolder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">file</parametername>
</parameternamelist>
<parameterdescription>
<para>The output file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="121" column="6"/>
      </memberdef>
      <memberdef kind="function" id="da/d3e/a03581_1ae188921a051750646d42231d93d71271" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::RoughnessComponent::doFillBuffer</definition>
        <argsstring>(PassBuffer &amp;buffer) const override</argsstring>
        <name>doFillBuffer</name>
        <qualifiedname>castor3d::RoughnessComponent::doFillBuffer</qualifiedname>
        <reimplements refid="dc/d32/a04057_1a3b157d130e41a31b1a6313ef26cd675c">doFillBuffer</reimplements>
        <param>
          <type><ref refid="de/d0d/a06341" kindref="compound">PassBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Fills the pass buffer with this pass data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="125" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor3d::BaseDataPassComponentT&lt; castor::AtomicGroupChangeTracked&lt; float &gt; &gt;</label>
        <link refid="d9/d11/a03445"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; castor::AtomicGroupChangeTracked&lt; float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor3d::BaseDataPassComponentT&lt; DataT &gt;</label>
        <link refid="d9/d11/a03445"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::PassComponent</label>
        <link refid="dc/d32/a04057"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::RoughnessComponent</label>
        <link refid="da/d3e/a03581"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Pass &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>castor3d::BaseDataPassComponentT&lt; castor::AtomicGroupChangeTracked&lt; float &gt; &gt;</label>
        <link refid="d9/d11/a03445"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; castor::AtomicGroupChangeTracked&lt; float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>castor3d::BaseDataPassComponentT&lt; DataT &gt;</label>
        <link refid="d9/d11/a03445"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::PassComponent</label>
        <link refid="dc/d32/a04057"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_plugin</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_materialShader</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor3d::PassComponentPlugin</label>
        <link refid="d9/d35/a04053"/>
      </node>
      <node id="1">
        <label>castor3d::RoughnessComponent</label>
        <link refid="da/d3e/a03581"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>castor3d::shader::PassMaterialShader</label>
        <link refid="db/dfa/a04049"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>castor3d::shader::PassShader</label>
        <link refid="d8/de8/a04041"/>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Pass &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Material/Pass/Component/Lighting/RoughnessComponent.hpp" line="14" column="1" bodyfile="Material/Pass/Component/Lighting/RoughnessComponent.hpp" bodystart="16" bodyend="126"/>
    <listofallmembers>
      <member refid="da/d3e/a03581_1a0a685c222e29555e1b6dab39076f917e" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>accept</name></member>
      <member refid="dc/d32/a04057_1a2847d512604b766b3a315e4c4e9dc0ea" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>areNormalsInverted</name></member>
      <member refid="d9/d11/a03445_1afb1743ea21712dcfe9765639815fc59d" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>BaseDataPassComponentT</name></member>
      <member refid="dc/d32/a04057_1ae7c88041d1aae747532e537b23e41d24" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>clone</name></member>
      <member refid="da/d3e/a03581_1abaf2a95508ca96c91af6f7948eee890e" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>createPlugin</name></member>
      <member refid="da/d3e/a03581_1a6ee1a6840ed2a6a492fd19cc326e8912" prot="private" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>doClone</name></member>
      <member refid="da/d3e/a03581_1ae188921a051750646d42231d93d71271" prot="private" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>doFillBuffer</name></member>
      <member refid="da/d3e/a03581_1ad97fcfc0367c285632ba4497a382605f" prot="private" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>doWriteText</name></member>
      <member refid="dc/d32/a04057_1a8f6b8c698164310e2052be733834224a" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>fillBuffer</name></member>
      <member refid="dc/d32/a04057_1a32dba2f2f6b92d5119c677d4faa6a324" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>fillChannel</name></member>
      <member refid="dc/d32/a04057_1ae53af67cd5f807b90d8e31e52d6582af" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>fillConfig</name></member>
      <member refid="dc/d32/a04057_1a89e385760304300908e5b308b2f1da4e" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>getColour</name></member>
      <member refid="d9/d11/a03445_1a23ec881a6e2aa2e40c21e108cb6458f7" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getData</name></member>
      <member refid="d9/d11/a03445_1aa79468a338c3ff3c31682894db721fab" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getData</name></member>
      <member refid="dc/d32/a04057_1a32748929920ba651a4c5a1d5af435e77" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getDependencies</name></member>
      <member refid="da/d3e/a03581_1a33d3b415f3ab37005561f71e6e7d46ac" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getGlossiness</name></member>
      <member refid="dc/d32/a04057_1a625adfcb001824768e8a99a3c03dcbb1" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getId</name></member>
      <member refid="dc/d32/a04057_1af015484800f32c718d067a80b76709e9" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>getPassFlags</name></member>
      <member refid="dc/d32/a04057_1a5da51664f6736be0199d66266779b395" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getPlugin</name></member>
      <member refid="da/d3e/a03581_1afe79bfd42a9e1ed8acf795319e81fe9a" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getRoughness</name></member>
      <member refid="da/d3e/a03581_1a149536373616a1321c0e4b967373c115" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getShininess</name></member>
      <member refid="dc/d32/a04057_1a6aae2659952d2e9a76caabf56d69fba5" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>getType</name></member>
      <member refid="dc/d32/a04057_1a5af951f374ee82fd61e57f96e6193f1c" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>hasColour</name></member>
      <member refid="dc/d32/a04057_1a7c90ef14fa9721b433d361c8492c3112" prot="protected" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>m_dependencies</name></member>
      <member refid="dc/d32/a04057_1a01ecec7d563666b63d7d888061e84ab1" prot="protected" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>m_dirty</name></member>
      <member refid="dc/d32/a04057_1a3d2b1319d92ba70ff8450c7873492b67" prot="protected" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>m_id</name></member>
      <member refid="dc/d32/a04057_1abc188311e9251e933a838a256802c4c6" prot="protected" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>m_materialShader</name></member>
      <member refid="dc/d32/a04057_1ae62babd07d3faf3014f1d0af1ab03357" prot="protected" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>m_plugin</name></member>
      <member refid="dc/d32/a04057_1ae5775b9cf42c79c375cbd4a033e6629f" prot="protected" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>m_type</name></member>
      <member refid="d9/d11/a03445_1aa297ac5faf886e6b766533f5fc0b25d1" prot="protected" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>m_value</name></member>
      <member refid="dc/d32/a04057_1a68b747d970c85a2799fb63b6825b0fc4" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>PassComponent</name></member>
      <member refid="da/d3e/a03581_1a11298ab70e5e139619e2d9fa71dde9cd" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>RoughnessComponent</name></member>
      <member refid="dc/d32/a04057_1a2541aa58a662bd8566c602335387cb98" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>setColour</name></member>
      <member refid="dc/d32/a04057_1ab6a5bf94fc25210c03c9bed7ddf1ae31" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>setColour</name></member>
      <member refid="dc/d32/a04057_1a61fa7c8562281c049a874b1ebc2635e4" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>setColour</name></member>
      <member refid="dc/d32/a04057_1a2256e542753e1f85e6812de7e6fdc261" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>setColour</name></member>
      <member refid="d9/d11/a03445_1a074de9b2f9579c56a85617b514089545" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>setData</name></member>
      <member refid="d9/d11/a03445_1abf51560ee823896159de61bea9326391" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>setData</name></member>
      <member refid="da/d3e/a03581_1afe08f6a97dc91f36d08850380753f728" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>setGlossiness</name></member>
      <member refid="da/d3e/a03581_1ab02a4e65ab65c2e1de523029a986c674" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>setRoughness</name></member>
      <member refid="da/d3e/a03581_1a7ae2895b84098826520094c54434c79c" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>setShininess</name></member>
      <member refid="da/d3e/a03581_1af1616fe8a48a2a5f7a271b61de5eabb0" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>TypeName</name></member>
      <member refid="dc/d32/a04057_1acfedf31a75536a40a891b3308083d738" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>update</name></member>
      <member refid="dc/d32/a04057_1a967ba1259e24663e4a89352251acf841" prot="public" virt="non-virtual"><scope>castor3d::RoughnessComponent</scope><name>writeText</name></member>
      <member refid="dc/d32/a04057_1a6a3e343b81806ff616280b4eca87140b" prot="public" virt="virtual"><scope>castor3d::RoughnessComponent</scope><name>~PassComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
