<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d0/dcf/a05131" kind="class" language="C++" prot="public">
    <compoundname>castor3d::Camera</compoundname>
    <basecompoundref refid="dc/d66/a05171" prot="public" virt="non-virtual">castor3d::MovableObject</basecompoundref>
    <includes local="no">Camera.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d0/dcf/a05131_1a03764fa6a55c8362c2f99fdc24e51881" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d40/a04987" kindref="compound">Viewport</ref> const  &amp;</type>
        <definition>Viewport const&amp; castor3d::Camera::getViewport</definition>
        <argsstring>() const</argsstring>
        <name>getViewport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="126" column="1" bodyfile="Scene/Camera.hpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a80edfa1d402a85fd7ab5098998dd6b4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/d40/a04987" kindref="compound">Viewport</ref> &amp;</type>
        <definition>Viewport&amp; castor3d::Camera::getViewport</definition>
        <argsstring>()</argsstring>
        <name>getViewport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="131" column="1" bodyfile="Scene/Camera.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a90ec2d73c93408d4265f5c5da33caa4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Matrix4x4f const  &amp;</type>
        <definition>castor::Matrix4x4f const&amp; castor3d::Camera::getView</definition>
        <argsstring>() const</argsstring>
        <name>getView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="136" column="1" bodyfile="Scene/Camera.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a38d0da01038ff4d2ce9e7fe21368d744" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Matrix4x4f const  &amp;</type>
        <definition>castor::Matrix4x4f const&amp; castor3d::Camera::getProjection</definition>
        <argsstring>() const</argsstring>
        <name>getProjection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="141" column="1" bodyfile="Scene/Camera.hpp" bodystart="141" bodyend="146"/>
        <references refid="db/d40/a04987_1a9e3a1034f936eb7f6aca607c5075de64" compoundref="d9/d9a/a00998" startline="223" endline="226">castor3d::Viewport::getProjection</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1aae63db3ab522039fe77511b7978f6960" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/dd1/a01458_1a4141612e14f3113f10b3872630c29b3d" kindref="member">ViewportType</ref></type>
        <definition>ViewportType castor3d::Camera::getViewportType</definition>
        <argsstring>() const</argsstring>
        <name>getViewportType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="148" column="1" bodyfile="Scene/Camera.hpp" bodystart="148" bodyend="151"/>
        <references refid="db/d40/a04987_1ad418ed8f2e5a15652c5becc3455474b5" compoundref="d9/d9a/a00998" startline="163" endline="166">castor3d::Viewport::getType</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a017bb78344abeafec06fa6291400a0fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Size const  &amp;</type>
        <definition>castor::Size const&amp; castor3d::Camera::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="153" column="1" bodyfile="Scene/Camera.hpp" bodystart="153" bodyend="156"/>
        <references refid="db/d40/a04987_1a3eeb6499f4a2f7232f4930507a219d1e" compoundref="d9/d9a/a00998" startline="153" endline="156">castor3d::Viewport::getSize</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a88448f9caa3d89b98746bc56c9accb12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Camera::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="158" column="1" bodyfile="Scene/Camera.hpp" bodystart="158" bodyend="161"/>
        <references refid="db/d40/a04987_1a0ed606731174457e7c63c702d56937d1" compoundref="d9/d9a/a00998" startline="208" endline="211">castor3d::Viewport::getWidth</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a373035b448a6bef453a5a4232cfdfa14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::Camera::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="163" column="1" bodyfile="Scene/Camera.hpp" bodystart="163" bodyend="166"/>
        <references refid="db/d40/a04987_1a367ac40887c86996224ea2f0a9d20148" compoundref="d9/d9a/a00998" startline="213" endline="216">castor3d::Viewport::getHeight</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1acc1ad416e4f51169cd16661c049801f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getNear</definition>
        <argsstring>() const</argsstring>
        <name>getNear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="168" column="1" bodyfile="Scene/Camera.hpp" bodystart="168" bodyend="171"/>
        <references refid="db/d40/a04987_1a8fa3ee4eff6d1cc9852b72755ff043dd" compoundref="d9/d9a/a00998" startline="173" endline="176">castor3d::Viewport::getNear</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a348da0fb22ffb751d5741d897c33da27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getFar</definition>
        <argsstring>() const</argsstring>
        <name>getFar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="173" column="1" bodyfile="Scene/Camera.hpp" bodystart="173" bodyend="176"/>
        <references refid="db/d40/a04987_1a4f415390f17f4cea72f210c6b24d3827" compoundref="d9/d9a/a00998" startline="178" endline="181">castor3d::Viewport::getFar</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a198f38c9471f61b49d93b6ee20964e55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getRatio</definition>
        <argsstring>() const</argsstring>
        <name>getRatio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="178" column="1" bodyfile="Scene/Camera.hpp" bodystart="178" bodyend="181"/>
        <references refid="db/d40/a04987_1ad6118a5db50bc41619b348b1e79e6269" compoundref="d9/d9a/a00998" startline="168" endline="171">castor3d::Viewport::getRatio</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a650b2189e9c22fe1659550cf03f64296" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Angle const  &amp;</type>
        <definition>castor::Angle const&amp; castor3d::Camera::getFovY</definition>
        <argsstring>() const</argsstring>
        <name>getFovY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="183" column="1" bodyfile="Scene/Camera.hpp" bodystart="183" bodyend="186"/>
        <references refid="db/d40/a04987_1a58b91be3e2b4bc16896a8099b3f54f41" compoundref="d9/d9a/a00998" startline="183" endline="186">castor3d::Viewport::getFovY</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a83cfb19ac57357fb76621be586d9fa0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::Camera::getProjectionScale</definition>
        <argsstring>() const</argsstring>
        <name>getProjectionScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="188" column="1" bodyfile="Scene/Camera.hpp" bodystart="188" bodyend="191"/>
        <references refid="db/d40/a04987_1ac3b37a37a142d60a0880741f94887bac">castor3d::Viewport::getProjectionScale</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a4b024cf5dd96bcf933c8b90a70d2c183" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::BoundingBox const &amp;box, castor::Matrix4x4f const &amp;transformations) const</argsstring>
        <name>isVisible</name>
        <param>
          <type>castor::BoundingBox const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>transformations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="193" column="1" bodyfile="Scene/Camera.hpp" bodystart="193" bodyend="198"/>
        <references refid="d2/db0/a04227_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a280f2138072e46efb3985c004be52bcc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::BoundingSphere const &amp;sphere, castor::Matrix4x4f const &amp;transformations, castor::Point3f const &amp;scale) const</argsstring>
        <name>isVisible</name>
        <param>
          <type>castor::BoundingSphere const &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>transformations</declname>
        </param>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="200" column="1" bodyfile="Scene/Camera.hpp" bodystart="200" bodyend="207"/>
        <references refid="d2/db0/a04227_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a14d86d5d44e0415b042e80f52d4a015e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::Camera::isVisible</definition>
        <argsstring>(castor::Point3f const &amp;point) const</argsstring>
        <name>isVisible</name>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="209" column="1" bodyfile="Scene/Camera.hpp" bodystart="209" bodyend="212"/>
        <references refid="d2/db0/a04227_1ae48bac21e01ee4fb795ccbd9c9362def">castor3d::Frustum::isVisible</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a844f6f7b5f7f9fa1e34dfde72f907443" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/db0/a04227" kindref="compound">Frustum</ref> const  &amp;</type>
        <definition>Frustum const&amp; castor3d::Camera::getFrustum</definition>
        <argsstring>() const</argsstring>
        <name>getFrustum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="214" column="1" bodyfile="Scene/Camera.hpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1adb754ee7b08cdd3e3073c254abae1dc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d4c/a04931" kindref="compound">HdrConfig</ref> const  &amp;</type>
        <definition>HdrConfig const&amp; castor3d::Camera::getHdrConfig</definition>
        <argsstring>() const</argsstring>
        <name>getHdrConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="219" column="1" bodyfile="Scene/Camera.hpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a55f5b955a653af61409f59c64a99e9f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d4c/a04931" kindref="compound">HdrConfig</ref> &amp;</type>
        <definition>HdrConfig&amp; castor3d::Camera::getHdrConfig</definition>
        <argsstring>()</argsstring>
        <name>getHdrConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="224" column="1" bodyfile="Scene/Camera.hpp" bodystart="224" bodyend="227"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d0/dcf/a05131_1ae8bb96f14872d17f9c01d458e5058ed5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setView</definition>
        <argsstring>(castor::Matrix4x4f const &amp;view)</argsstring>
        <name>setView</name>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Mutators. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="238" column="1" bodyfile="Scene/Camera.hpp" bodystart="238" bodyend="242"/>
        <references refid="d0/dcf/a05131_1a98ed3a4aecd26d9e0f07664192895ce2" compoundref="d2/df3/a01085" startline="283">onChanged</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1aba6e8288a09d2614b0f25a7e8a8ab043" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::resize</definition>
        <argsstring>(uint32_t width, uint32_t height)</argsstring>
        <name>resize</name>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="244" column="1" bodyfile="Scene/Camera.hpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a38dae7d74ec72af0fa347c0eefb8872b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::resize</definition>
        <argsstring>(castor::Size const &amp;size)</argsstring>
        <name>resize</name>
        <param>
          <type>castor::Size const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="249" column="1" bodyfile="Scene/Camera.hpp" bodystart="249" bodyend="256"/>
        <references refid="db/d40/a04987_1a3eeb6499f4a2f7232f4930507a219d1e" compoundref="d9/d9a/a00998" startline="153" endline="156">castor3d::Viewport::getSize</references>
        <references refid="d0/dcf/a05131_1a98ed3a4aecd26d9e0f07664192895ce2" compoundref="d2/df3/a01085" startline="283">onChanged</references>
        <references refid="db/d40/a04987_1a6bf22fe2482397222b93c41f6a0464ed">castor3d::Viewport::resize</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1abfa6db9cee09d6cc4f1ca671b5968d5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setViewportType</definition>
        <argsstring>(ViewportType value)</argsstring>
        <name>setViewportType</name>
        <param>
          <type><ref refid="d7/dd1/a01458_1a4141612e14f3113f10b3872630c29b3d" kindref="member">ViewportType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="258" column="1" bodyfile="Scene/Camera.hpp" bodystart="258" bodyend="262"/>
        <references refid="d0/dcf/a05131_1a98ed3a4aecd26d9e0f07664192895ce2" compoundref="d2/df3/a01085" startline="283">onChanged</references>
        <references refid="db/d40/a04987_1a677639be80d4b552b5ff93332cd607a8" compoundref="d9/d9a/a00998" startline="257" endline="260">castor3d::Viewport::updateType</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a3164f41de67e9bb9b4df3e39a3bc4433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setExposure</definition>
        <argsstring>(float value)</argsstring>
        <name>setExposure</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="264" column="1" bodyfile="Scene/Camera.hpp" bodystart="264" bodyend="268"/>
        <references refid="d8/d4c/a04931_1ac8fd9583280cdc34d0a26e1237764a0d" compoundref="df/d88/a00962" startline="18">castor3d::HdrConfig::exposure</references>
        <references refid="d0/dcf/a05131_1a98ed3a4aecd26d9e0f07664192895ce2" compoundref="d2/df3/a01085" startline="283">onChanged</references>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1af59eaccd54cff1df69b3ef0f406a2e06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::setGamma</definition>
        <argsstring>(float value)</argsstring>
        <name>setGamma</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="270" column="1" bodyfile="Scene/Camera.hpp" bodystart="270" bodyend="274"/>
        <references refid="d8/d4c/a04931_1a9d5123b1dbd5da1ebb2517854c23fb26" compoundref="df/d88/a00962" startline="21">castor3d::HdrConfig::gamma</references>
        <references refid="d0/dcf/a05131_1a98ed3a4aecd26d9e0f07664192895ce2" compoundref="d2/df3/a01085" startline="283">onChanged</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d0/dcf/a05131_1a98ed3a4aecd26d9e0f07664192895ce2" prot="public" static="no" mutable="yes">
        <type><ref refid="d7/dd1/a01458_1a105ab8eb9af9fadc029838d711c7fb08" kindref="member">OnCameraChanged</ref></type>
        <definition>OnCameraChanged castor3d::Camera::onChanged</definition>
        <argsstring></argsstring>
        <name>onChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The signal raised when the camera has changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="283" column="1" bodyfile="Scene/Camera.hpp" bodystart="283" bodyend="-1"/>
        <referencedby refid="d0/dcf/a05131_1a38dae7d74ec72af0fa347c0eefb8872b" compoundref="d2/df3/a01085" startline="249" endline="256">resize</referencedby>
        <referencedby refid="d0/dcf/a05131_1a3164f41de67e9bb9b4df3e39a3bc4433" compoundref="d2/df3/a01085" startline="264" endline="268">setExposure</referencedby>
        <referencedby refid="d0/dcf/a05131_1af59eaccd54cff1df69b3ef0f406a2e06" compoundref="d2/df3/a01085" startline="270" endline="274">setGamma</referencedby>
        <referencedby refid="d0/dcf/a05131_1ae8bb96f14872d17f9c01d458e5058ed5" compoundref="d2/df3/a01085" startline="238" endline="242">setView</referencedby>
        <referencedby refid="d0/dcf/a05131_1abfa6db9cee09d6cc4f1ca671b5968d5d" compoundref="d2/df3/a01085" startline="258" endline="262">setViewportType</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d0/dcf/a05131_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Scene</definition>
        <argsstring></argsstring>
        <name>Scene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="286" column="1" bodyfile="Scene/Camera.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d0/dcf/a05131_1a748e34ededfa429fe2a814fceb82aadc" prot="private" static="no" mutable="no">
        <type><ref refid="db/d40/a04987" kindref="compound">Viewport</ref></type>
        <definition>Viewport castor3d::Camera::m_viewport</definition>
        <argsstring></argsstring>
        <name>m_viewport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="287" column="1" bodyfile="Scene/Camera.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/dcf/a05131_1ad4b4db2e4c8bad122de676b528aa1678" prot="private" static="no" mutable="no">
        <type><ref refid="d2/db0/a04227" kindref="compound">Frustum</ref></type>
        <definition>Frustum castor3d::Camera::m_frustum</definition>
        <argsstring></argsstring>
        <name>m_frustum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="288" column="1" bodyfile="Scene/Camera.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/dcf/a05131_1aae19d878cd49f84a6b7345ab4efaf4fc" prot="private" static="no" mutable="no">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::Camera::m_view</definition>
        <argsstring></argsstring>
        <name>m_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="289" column="1" bodyfile="Scene/Camera.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/dcf/a05131_1a95d8e9b76a35949cb779725b1703d922" prot="private" static="no" mutable="no">
        <type><ref refid="d8/d4c/a04931" kindref="compound">HdrConfig</ref></type>
        <definition>HdrConfig castor3d::Camera::m_hdrConfig</definition>
        <argsstring></argsstring>
        <name>m_hdrConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="290" column="1" bodyfile="Scene/Camera.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/dcf/a05131_1a1fc021ff1bd1442f9c9128e4e86d7e94" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Camera::m_nodeChanged</definition>
        <argsstring></argsstring>
        <name>m_nodeChanged</name>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="291" column="1" bodyfile="Scene/Camera.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/dcf/a05131_1aa956cef384f2757c82e20f7c3a4b97a0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::Camera::m_ownProjection</definition>
        <argsstring></argsstring>
        <name>m_ownProjection</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="292" column="1" bodyfile="Scene/Camera.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/dcf/a05131_1a03d3edece27ba6cf2f59ac4254cf9d45" prot="private" static="no" mutable="no">
        <type>castor::Matrix4x4f</type>
        <definition>castor::Matrix4x4f castor3d::Camera::m_projection</definition>
        <argsstring></argsstring>
        <name>m_projection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="293" column="1" bodyfile="Scene/Camera.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/dcf/a05131_1a7b76d7d3f8dca9678a029d9a8e615203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Camera::Camera</definition>
        <argsstring>(castor::String const &amp;name, Scene &amp;scene, SceneNode &amp;node, Viewport viewport, bool ownProjMtx=false)</argsstring>
        <name>Camera</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d00/a05223" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type><ref refid="d8/dd0/a05235" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="db/d40/a04987" kindref="compound">Viewport</ref></type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ownProjMtx</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent scene. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent scene node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">viewport</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="db/d40/a04987" kindref="compound">Viewport</ref> to copy. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ownProjMtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the projection matrix is held by the viewport <computeroutput>false</computeroutput>, or not <computeroutput>true</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a87e6d3e814064e377c961b449064010c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Camera::Camera</definition>
        <argsstring>(castor::String const &amp;name, Scene &amp;scene, SceneNode &amp;node, bool ownProjMtx=false)</argsstring>
        <name>Camera</name>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d00/a05223" kindref="compound">Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <param>
          <type><ref refid="d8/dd0/a05235" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ownProjMtx</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor, needs the camera renderer, the name, window size and projection type. Creates a viewport renderer and a viewport. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scene</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent scene. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent scene node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ownProjMtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the projection matrix is held by the viewport <computeroutput>false</computeroutput>, or not <computeroutput>true</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a2e4601b532b330731458260730cb0e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::Camera::~Camera</definition>
        <argsstring>()</argsstring>
        <name>~Camera</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a080f008a2f6e09cb5600032f72c2701d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::attachTo</definition>
        <argsstring>(SceneNode &amp;node) override</argsstring>
        <name>attachTo</name>
        <reimplements refid="dc/d66/a05171_1ab2169299d3e08b4e50066e400d1d86dc">attachTo</reimplements>
        <param>
          <type><ref refid="d8/dd0/a05235" kindref="compound">SceneNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Attaches this light to a <ref refid="dd/db2/a02563" kindref="compound">Material</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The new light&apos;s parent node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1aed868197191aca547df5624ad61f37c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::updateFrustum</definition>
        <argsstring>()</argsstring>
        <name>updateFrustum</name>
        <briefdescription>
<para>Updates the frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a8c92fa71ede63c925d81b9fe41be3e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
<para>Updates the viewport, the view matrix, and the frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a979e2f2c2bc6e3e61ea8651f2493ebb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::Camera::setProjection</definition>
        <argsstring>(castor::Matrix4x4f const &amp;projection)</argsstring>
        <name>setProjection</name>
        <param>
          <type>castor::Matrix4x4f const &amp;</type>
          <declname>projection</declname>
        </param>
        <briefdescription>
<para>Sets the projection matrix, updates the viewport and the frustum. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">projection</parametername>
</parameternamelist>
<parameterdescription>
<para>The projection matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/dcf/a05131_1a6da0f58f9fb8f8cbb815ca084f4d18ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::Camera::isVisible</definition>
        <argsstring>(Geometry const &amp;geometry, Submesh const &amp;submesh) const</argsstring>
        <name>isVisible</name>
        <param>
          <type><ref refid="db/d6b/a05139" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type><ref refid="d0/dce/a03971" kindref="compound">Submesh</ref> const &amp;</type>
          <declname>submesh</declname>
        </param>
        <briefdescription>
<para>Checks if a submesh is visible, through a geometry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submesh</parametername>
</parameternamelist>
<parameterdescription>
<para>The submesh. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if the submesh is not visible. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="116" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d0/dcf/a05131_1af3ceb60c904abfa472766c7066ffc457" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::Camera::onNodeChanged</definition>
        <argsstring>(SceneNode const &amp;node)</argsstring>
        <name>onNodeChanged</name>
        <param>
          <type><ref refid="d8/dd0/a05235" kindref="compound">SceneNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Camera.hpp" line="278" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="639">
        <label>castor3d::Camera</label>
        <link refid="d0/dcf/a05131"/>
        <childnode refid="640" relation="public-inheritance">
        </childnode>
      </node>
      <node id="640">
        <label>castor3d::MovableObject</label>
        <link refid="dc/d66/a05171"/>
        <childnode refid="641" relation="public-inheritance">
        </childnode>
        <childnode refid="643" relation="public-inheritance">
        </childnode>
      </node>
      <node id="643">
        <label>Named</label>
      </node>
      <node id="641">
        <label>Animable</label>
        <link refid="de/d0a/a02015"/>
        <childnode refid="642" relation="public-inheritance">
        </childnode>
      </node>
      <node id="642">
        <label>castor::OwnedBy&lt; AnimableHanlerT &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="648">
        <label>std::map&lt; castor::String, AnimationPtr &gt;</label>
        <childnode refid="649" relation="template-instance">
          <edgelabel>&lt; castor::String, AnimationPtr &gt;</edgelabel>
        </childnode>
      </node>
      <node id="650">
        <label>K</label>
      </node>
      <node id="651">
        <label>T</label>
      </node>
      <node id="644">
        <label>castor3d::Camera</label>
        <link refid="d0/dcf/a05131"/>
        <childnode refid="645" relation="public-inheritance">
        </childnode>
      </node>
      <node id="653">
        <label>castor3d::SceneNode</label>
        <link refid="d8/dd0/a05235"/>
        <childnode refid="654" relation="public-inheritance">
        </childnode>
        <childnode refid="655" relation="public-inheritance">
        </childnode>
        <childnode refid="652" relation="public-inheritance">
        </childnode>
      </node>
      <node id="655">
        <label>castor::OwnedBy&lt; Scene &gt;</label>
      </node>
      <node id="649">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="650" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="651" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="654">
        <label>std::enable_shared_from_this&lt; SceneNode &gt;</label>
      </node>
      <node id="645">
        <label>castor3d::MovableObject</label>
        <link refid="dc/d66/a05171"/>
        <childnode refid="646" relation="public-inheritance">
        </childnode>
        <childnode refid="652" relation="public-inheritance">
        </childnode>
        <childnode refid="653" relation="usage">
          <edgelabel>m_sceneNode</edgelabel>
        </childnode>
        <childnode refid="656" relation="usage">
          <edgelabel>m_scene</edgelabel>
        </childnode>
      </node>
      <node id="652">
        <label>Named</label>
      </node>
      <node id="657">
        <label>std::enable_shared_from_this&lt; Scene &gt;</label>
      </node>
      <node id="646">
        <label>Animable</label>
        <link refid="de/d0a/a02015"/>
        <childnode refid="647" relation="public-inheritance">
        </childnode>
        <childnode refid="648" relation="usage">
          <edgelabel>m_animations</edgelabel>
        </childnode>
      </node>
      <node id="647">
        <label>castor::OwnedBy&lt; AnimableHanlerT &gt;</label>
      </node>
      <node id="658">
        <label>castor::OwnedBy&lt; Engine &gt;</label>
      </node>
      <node id="656">
        <label>castor3d::Scene</label>
        <link refid="d7/d00/a05223"/>
        <childnode refid="657" relation="public-inheritance">
        </childnode>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
        <childnode refid="652" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Scene/Camera.hpp" line="23" column="1" bodyfile="Scene/Camera.hpp" bodystart="21" bodyend="294"/>
    <listofallmembers>
      <member refid="de/d0a/a02015_1ad7eba8a02433ff32863bebcc5969f09e" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>addAnimation</name></member>
      <member refid="de/d0a/a02015_1a299fd668f3d9d65aeb7d0dbc259f921b" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>AnimableT</name></member>
      <member refid="de/d0a/a02015_1ad87437d17aba848283c70537eeeea2f9" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>AnimableT</name></member>
      <member refid="de/d0a/a02015_1a09051c18d0af770f8a622b62f707a90e" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>AnimableT</name></member>
      <member refid="de/d0a/a02015_1af166df7163a5b574419988ded46251ec" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>Animation</name></member>
      <member refid="de/d0a/a02015_1aa3dd4f795f385e026ec4137d1b3d53f7" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>AnimationPtr</name></member>
      <member refid="de/d0a/a02015_1a20eee9b6a0eff7dc185a62905823ce8c" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>AnimationPtrStrMap</name></member>
      <member refid="d0/dcf/a05131_1a080f008a2f6e09cb5600032f72c2701d" prot="public" virt="virtual"><scope>castor3d::Camera</scope><name>attachTo</name></member>
      <member refid="d0/dcf/a05131_1a7b76d7d3f8dca9678a029d9a8e615203" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>Camera</name></member>
      <member refid="d0/dcf/a05131_1a87e6d3e814064e377c961b449064010c" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>Camera</name></member>
      <member refid="de/d0a/a02015_1a55e0aa0f614359a89b2c4f8b85c90b96" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>cleanupAnimations</name></member>
      <member refid="dc/d66/a05171_1afbef8194f2a0b9e15c9cc483221a08ee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>detach</name></member>
      <member refid="de/d0a/a02015_1af490514e33d457d6ccb9a5f6417b9857" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>doGetAnimation</name></member>
      <member refid="de/d0a/a02015_1a5cea5dff71a256fd1f56afd64d4ac065" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>doRemoveAnimation</name></member>
      <member refid="de/d0a/a02015_1a56b5cc702f8369124b1bd0f74d5de9f8" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getAnimation</name></member>
      <member refid="de/d0a/a02015_1a4501da7f825e9b8a41fc8ab4f1aacfb0" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getAnimation</name></member>
      <member refid="de/d0a/a02015_1a0f731e4fa9d105d9dda6f409e552a755" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getAnimations</name></member>
      <member refid="d0/dcf/a05131_1a348da0fb22ffb751d5741d897c33da27" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFar</name></member>
      <member refid="d0/dcf/a05131_1a650b2189e9c22fe1659550cf03f64296" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFovY</name></member>
      <member refid="d0/dcf/a05131_1a844f6f7b5f7f9fa1e34dfde72f907443" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getFrustum</name></member>
      <member refid="d0/dcf/a05131_1adb754ee7b08cdd3e3073c254abae1dc8" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHdrConfig</name></member>
      <member refid="d0/dcf/a05131_1a55f5b955a653af61409f59c64a99e9f8" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHdrConfig</name></member>
      <member refid="d0/dcf/a05131_1a373035b448a6bef453a5a4232cfdfa14" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getHeight</name></member>
      <member refid="d0/dcf/a05131_1acc1ad416e4f51169cd16661c049801f2" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getNear</name></member>
      <member refid="dc/d66/a05171_1aeb1f1e4e6b8dcc933bb8aed4278458ce" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getParent</name></member>
      <member refid="d0/dcf/a05131_1a38d0da01038ff4d2ce9e7fe21368d744" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getProjection</name></member>
      <member refid="d0/dcf/a05131_1a83cfb19ac57357fb76621be586d9fa0b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getProjectionScale</name></member>
      <member refid="d0/dcf/a05131_1a198f38c9471f61b49d93b6ee20964e55" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getRatio</name></member>
      <member refid="dc/d66/a05171_1a7b093c3d281c312dab1605bd8a189206" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getScene</name></member>
      <member refid="d0/dcf/a05131_1a017bb78344abeafec06fa6291400a0fb" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getSize</name></member>
      <member refid="dc/d66/a05171_1acf2dafd94427b63121981ac18ac652a7" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getType</name></member>
      <member refid="d0/dcf/a05131_1a90ec2d73c93408d4265f5c5da33caa4e" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getView</name></member>
      <member refid="d0/dcf/a05131_1a03764fa6a55c8362c2f99fdc24e51881" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewport</name></member>
      <member refid="d0/dcf/a05131_1a80edfa1d402a85fd7ab5098998dd6b4a" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewport</name></member>
      <member refid="d0/dcf/a05131_1aae63db3ab522039fe77511b7978f6960" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getViewportType</name></member>
      <member refid="d0/dcf/a05131_1a88448f9caa3d89b98746bc56c9accb12" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>getWidth</name></member>
      <member refid="de/d0a/a02015_1a599c19a3b4de9a4b80ad9a04d9dcdce3" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>hasAnimation</name></member>
      <member refid="d0/dcf/a05131_1a6da0f58f9fb8f8cbb815ca084f4d18ee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="d0/dcf/a05131_1a4b024cf5dd96bcf933c8b90a70d2c183" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="d0/dcf/a05131_1a280f2138072e46efb3985c004be52bcc" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="d0/dcf/a05131_1a14d86d5d44e0415b042e80f52d4a015e" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>isVisible</name></member>
      <member refid="de/d0a/a02015_1ae1eba45f60f9583c766623aa1165415e" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_animations</name></member>
      <member refid="d0/dcf/a05131_1ad4b4db2e4c8bad122de676b528aa1678" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_frustum</name></member>
      <member refid="d0/dcf/a05131_1a95d8e9b76a35949cb779725b1703d922" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_hdrConfig</name></member>
      <member refid="d0/dcf/a05131_1a1fc021ff1bd1442f9c9128e4e86d7e94" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_nodeChanged</name></member>
      <member refid="dc/d66/a05171_1a8385c7c8fd9aee20a3c6de804cb09514" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_notifyIndex</name></member>
      <member refid="d0/dcf/a05131_1aa956cef384f2757c82e20f7c3a4b97a0" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_ownProjection</name></member>
      <member refid="d0/dcf/a05131_1a03d3edece27ba6cf2f59ac4254cf9d45" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_projection</name></member>
      <member refid="dc/d66/a05171_1a3870fc0cca376a6cbab09a432ace4f0a" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_scene</name></member>
      <member refid="dc/d66/a05171_1aa058c86365c45c7d4b85a04ce56a9d22" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_sceneNode</name></member>
      <member refid="dc/d66/a05171_1ab9493ad12e9af9b47db11e76d372a156" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_strNodeName</name></member>
      <member refid="dc/d66/a05171_1acf6726e80bb3098468fe1fcd5a1f720e" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_type</name></member>
      <member refid="d0/dcf/a05131_1aae19d878cd49f84a6b7345ab4efaf4fc" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_view</name></member>
      <member refid="d0/dcf/a05131_1a748e34ededfa429fe2a814fceb82aadc" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>m_viewport</name></member>
      <member refid="dc/d66/a05171_1a40b0fe7602fb945cb5b89de71a8cf4d8" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>MovableObject</name></member>
      <member refid="dc/d66/a05171_1acf7517058566afbb2290a7856fc9dfee" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>MovableObject</name></member>
      <member refid="d0/dcf/a05131_1a98ed3a4aecd26d9e0f07664192895ce2" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>onChanged</name></member>
      <member refid="d0/dcf/a05131_1af3ceb60c904abfa472766c7066ffc457" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>onNodeChanged</name></member>
      <member refid="de/d0a/a02015_1ac175c65ac8b324cee120925fd7d10773" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>operator=</name></member>
      <member refid="de/d0a/a02015_1a6d58963898645284c95c86d7da5c23ee" prot="protected" virt="non-virtual"><scope>castor3d::Camera</scope><name>operator=</name></member>
      <member refid="d0/dcf/a05131_1aba6e8288a09d2614b0f25a7e8a8ab043" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>resize</name></member>
      <member refid="d0/dcf/a05131_1a38dae7d74ec72af0fa347c0eefb8872b" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>resize</name></member>
      <member refid="d0/dcf/a05131_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" virt="non-virtual"><scope>castor3d::Camera</scope><name>Scene</name></member>
      <member refid="d0/dcf/a05131_1a3164f41de67e9bb9b4df3e39a3bc4433" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setExposure</name></member>
      <member refid="d0/dcf/a05131_1af59eaccd54cff1df69b3ef0f406a2e06" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setGamma</name></member>
      <member refid="d0/dcf/a05131_1a979e2f2c2bc6e3e61ea8651f2493ebb6" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setProjection</name></member>
      <member refid="d0/dcf/a05131_1ae8bb96f14872d17f9c01d458e5058ed5" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setView</name></member>
      <member refid="d0/dcf/a05131_1abfa6db9cee09d6cc4f1ca671b5968d5d" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>setViewportType</name></member>
      <member refid="d0/dcf/a05131_1a8c92fa71ede63c925d81b9fe41be3e33" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>update</name></member>
      <member refid="d0/dcf/a05131_1aed868197191aca547df5624ad61f37c0" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>updateFrustum</name></member>
      <member refid="de/d0a/a02015_1a31508c53a42741c828ca42c079631d69" prot="protected" virt="virtual"><scope>castor3d::Camera</scope><name>~AnimableT</name></member>
      <member refid="d0/dcf/a05131_1a2e4601b532b330731458260730cb0e84" prot="public" virt="non-virtual"><scope>castor3d::Camera</scope><name>~Camera</name></member>
      <member refid="dc/d66/a05171_1a05bd8e8940d26cb4361fccfa67733b03" prot="public" virt="virtual"><scope>castor3d::Camera</scope><name>~MovableObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
