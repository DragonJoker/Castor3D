<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d4/ddd/a02040" kind="class" language="C++" prot="public">
    <compoundname>castor3d::AnimationT</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Named</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; AnimableT&lt; AnimableHanlerT &gt; &gt;</basecompoundref>
    <includes local="no">AnimationModule.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>AnimableHanlerT</declname>
        <defname>AnimableHanlerT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d4/ddd/a02040_1afe22ac2e2bd29215faafabffbe96006e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::AnimationT&lt; AnimableHanlerT &gt;::AnimationT</definition>
        <argsstring>(AnimationT &amp;&amp;rhs)=default</argsstring>
        <name>AnimationT</name>
        <param>
          <type><ref refid="d4/ddd/a02040" kindref="compound">AnimationT</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Copy / Move. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a34b281bf0aa0f1ff768a015dcb884550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d4/ddd/a02040" kindref="compound">AnimationT</ref> &amp;</type>
        <definition>C3D_API AnimationT&amp; castor3d::AnimationT&lt; AnimableHanlerT &gt;::operator=</definition>
        <argsstring>(AnimationT &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="d4/ddd/a02040" kindref="compound">AnimationT</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1aa3f2119086382d2e0b3dec3300666348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::AnimationT&lt; AnimableHanlerT &gt;::AnimationT</definition>
        <argsstring>(AnimationT const &amp;rhs)=delete</argsstring>
        <name>AnimationT</name>
        <param>
          <type><ref refid="d4/ddd/a02040" kindref="compound">AnimationT</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1ad3f88e807e572471e5c215ef47bdd407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d35/a00266_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d4/ddd/a02040" kindref="compound">AnimationT</ref> &amp;</type>
        <definition>C3D_API AnimationT&amp; castor3d::AnimationT&lt; AnimableHanlerT &gt;::operator=</definition>
        <argsstring>(AnimationT const &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="d4/ddd/a02040" kindref="compound">AnimationT</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="31" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d4/ddd/a02040_1a8b4274c7dc7b0a73e47adab8278af444" prot="protected" static="no" mutable="no">
        <type><ref refid="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5" kindref="member">AnimationType</ref></type>
        <definition>AnimationType castor3d::AnimationT&lt; AnimableHanlerT &gt;::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <initializer>{ <ref refid="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5ae558bb69fadec037d9eae46601a4df8e" kindref="member">AnimationType::eCount</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The animation type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="169" column="1" bodyfile="Animation/Animation.hpp" bodystart="169" bodyend="-1"/>
        <referencedby refid="d4/ddd/a02040_1a71a9f86d812205eab4df5e9f2eb70c47" compoundref="d1/d09/a00077" startline="151" endline="154">castor3d::AnimationT&lt; Engine &gt;::getType</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d4/ddd/a02040_1a58a4f320f81091bc1ae4cc842a8bac3b" prot="protected" static="no" mutable="no">
        <type>castor::Milliseconds</type>
        <definition>castor::Milliseconds castor3d::AnimationT&lt; AnimableHanlerT &gt;::m_length</definition>
        <argsstring></argsstring>
        <name>m_length</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The animation length. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="172" column="1" bodyfile="Animation/Animation.hpp" bodystart="172" bodyend="-1"/>
        <referencedby refid="d4/ddd/a02040_1adf144d2b848b3dc3ba80aaef91b612f8" compoundref="d1/d09/a00077" startline="161" endline="164">castor3d::AnimationT&lt; Engine &gt;::getLength</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d4/ddd/a02040_1a4b5a218a7941d711bb940443f1942c62" prot="protected" static="no" mutable="no">
        <type>AnimationKeyFrameArray</type>
        <definition>AnimationKeyFrameArray castor3d::AnimationT&lt; AnimableHanlerT &gt;::m_keyframes</definition>
        <argsstring></argsstring>
        <name>m_keyframes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The key frames. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="175" column="1" bodyfile="Animation/Animation.hpp" bodystart="175" bodyend="-1"/>
        <referencedby refid="d4/ddd/a02040_1a7a8da5fb6ad1b361409bcc6b6cfc7506" compoundref="d1/d09/a00077" startline="111" endline="114">castor3d::AnimationT&lt; Engine &gt;::begin</referencedby>
        <referencedby refid="d4/ddd/a02040_1afa0954678ef3a2e35929747013e656a5" compoundref="d1/d09/a00077" startline="131" endline="134">castor3d::AnimationT&lt; Engine &gt;::end</referencedby>
        <referencedby refid="d4/ddd/a02040_1a06fb4576770bdac68740667d550637cb" compoundref="d1/d09/a00077" startline="101" endline="104">castor3d::AnimationT&lt; Engine &gt;::isEmpty</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d4/ddd/a02040_1a7e26f15a7ab5adb5bfd78c8e38a06cbe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class BinaryWriter&lt; AnimationT &gt;</definition>
        <argsstring></argsstring>
        <name>BinaryWriter&lt; AnimationT &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="175" column="1" bodyfile="Animation/Animation.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="d4/ddd/a02040_1ad6e2214b2b9e5b501d9521d80d6aa33c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class BinaryParser&lt; AnimationT &gt;</definition>
        <argsstring></argsstring>
        <name>BinaryParser&lt; AnimationT &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="175" column="1" bodyfile="Animation/Animation.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/ddd/a02040_1a42f1f842d2f44280ccd2bc9f75e047ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::AnimationT&lt; AnimableHanlerT &gt;::AnimationT</definition>
        <argsstring>(AnimationType type, AnimableT&lt; AnimableHanlerT &gt; &amp;animable, castor::String const &amp;name=castor::cuEmptyString)</argsstring>
        <name>AnimationT</name>
        <param>
          <type><ref refid="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5" kindref="member">AnimationType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="d7/db2/a02036" kindref="compound">AnimableT</ref>&lt; AnimableHanlerT &gt; &amp;</type>
          <declname>animable</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
          <defval>castor::cuEmptyString</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the animation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">animable</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent animable object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the animation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a44db1b1a7ad80923fc5ff79f9218136f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::AnimationT&lt; AnimableHanlerT &gt;::~AnimationT</definition>
        <argsstring>()</argsstring>
        <name>~AnimationT</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a8b983f54e732b6ddb51883c6afb7b74d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::AnimationT&lt; AnimableHanlerT &gt;::addKeyFrame</definition>
        <argsstring>(AnimationKeyFrameUPtr keyFrame)</argsstring>
        <name>addKeyFrame</name>
        <param>
          <type>AnimationKeyFrameUPtr</type>
          <declname>keyFrame</declname>
        </param>
        <briefdescription>
<para>Adds a keyframe to the animation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">keyFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyframe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a81ba800dd4c829c20ebc7927b0f441a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AnimationKeyFrameArray::iterator</type>
        <definition>AnimationKeyFrameArray::iterator castor3d::AnimationT&lt; AnimableHanlerT &gt;::find</definition>
        <argsstring>(castor::Milliseconds const &amp;time)</argsstring>
        <name>find</name>
        <param>
          <type>castor::Milliseconds const &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Finds a keyframe given a time index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a23e5a482945b9977aa68e9581106d8cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::AnimationT&lt; AnimableHanlerT &gt;::findKeyFrame</definition>
        <argsstring>(castor::Milliseconds const &amp;time, AnimationKeyFrameArray::iterator &amp;prv, AnimationKeyFrameArray::iterator &amp;cur) const</argsstring>
        <name>findKeyFrame</name>
        <param>
          <type>castor::Milliseconds const &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>AnimationKeyFrameArray::iterator &amp;</type>
          <declname>prv</declname>
        </param>
        <param>
          <type>AnimationKeyFrameArray::iterator &amp;</type>
          <declname>cur</declname>
        </param>
        <briefdescription>
<para>Finds a keyframe given a time index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">prv</parametername>
</parameternamelist>
<parameterdescription>
<para>The previous keyframe, receives the new previous keyframe, if there is a change. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">cur</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the current keyframe, receives the new current keyframe, if there is a change. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a02ed8b05e3af8e18394530bbf9833d44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::AnimationT&lt; AnimableHanlerT &gt;::updateLength</definition>
        <argsstring>()</argsstring>
        <name>updateLength</name>
        <briefdescription>
<para>Updates the animation length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a06fb4576770bdac68740667d550637cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::AnimationT&lt; AnimableHanlerT &gt;::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the key frames list is empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="101" column="1" bodyfile="Animation/Animation.hpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a7a8da5fb6ad1b361409bcc6b6cfc7506" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AnimationKeyFrameArray::const_iterator</type>
        <definition>AnimationKeyFrameArray::const_iterator castor3d::AnimationT&lt; AnimableHanlerT &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The beginning of the key frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="111" column="1" bodyfile="Animation/Animation.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a16f0adb1f5328cf5438c023384f7a2b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AnimationKeyFrameArray::iterator</type>
        <definition>AnimationKeyFrameArray::iterator castor3d::AnimationT&lt; AnimableHanlerT &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The beginning of the key frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="121" column="1" bodyfile="Animation/Animation.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1afa0954678ef3a2e35929747013e656a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AnimationKeyFrameArray::const_iterator</type>
        <definition>AnimationKeyFrameArray::const_iterator castor3d::AnimationT&lt; AnimableHanlerT &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The end of the key frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="131" column="1" bodyfile="Animation/Animation.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a75e55d0c6feef67fd169a31abd060e7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AnimationKeyFrameArray::iterator</type>
        <definition>AnimationKeyFrameArray::iterator castor3d::AnimationT&lt; AnimableHanlerT &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The end of the key frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="141" column="1" bodyfile="Animation/Animation.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1a71a9f86d812205eab4df5e9f2eb70c47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d1e/a01479_1a62712d9ea9e9184dffafc59c48e8e6e5" kindref="member">AnimationType</ref></type>
        <definition>AnimationType castor3d::AnimationT&lt; AnimableHanlerT &gt;::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The animation type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="151" column="1" bodyfile="Animation/Animation.hpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/a02040_1adf144d2b848b3dc3ba80aaef91b612f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Milliseconds const  &amp;</type>
        <definition>castor::Milliseconds const&amp; castor3d::AnimationT&lt; AnimableHanlerT &gt;::getLength</definition>
        <argsstring>() const</argsstring>
        <name>getLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The animation length. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Animation/Animation.hpp" line="161" column="1" bodyfile="Animation/Animation.hpp" bodystart="161" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Animation base class. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para>An animation is played using an <ref refid="d2/d8c/a05064" kindref="compound">AnimationInstance</ref>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="109">
        <label>castor3d::SkeletonAnimation</label>
        <link refid="d0/d36/a04008"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="110">
        <label>castor3d::TextureAnimation</label>
        <link refid="d4/d7d/a02628"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="105">
        <label>Named</label>
      </node>
      <node id="108">
        <label>castor3d::MeshAnimation</label>
        <link refid="d3/d10/a03856"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>castor3d::AnimationT&lt; AnimableHanlerT &gt;</label>
        <link refid="d4/ddd/a02040"/>
        <childnode refid="105" relation="public-inheritance">
        </childnode>
        <childnode refid="106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>castor::OwnedBy&lt; AnimableT&lt; AnimableHanlerT &gt; &gt;</label>
      </node>
      <node id="107">
        <label>castor3d::AnimationT&lt; Engine &gt;</label>
        <link refid="d4/ddd/a02040"/>
        <childnode refid="104" relation="template-instance">
          <edgelabel>&lt; Engine &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="112">
        <label>Named</label>
      </node>
      <node id="111">
        <label>castor3d::AnimationT&lt; AnimableHanlerT &gt;</label>
        <link refid="d4/ddd/a02040"/>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>castor::OwnedBy&lt; AnimableT&lt; AnimableHanlerT &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Animation/Animation.hpp" line="19" column="1" bodyfile="Animation/Animation.hpp" bodystart="16" bodyend="179"/>
    <listofallmembers>
      <member refid="d4/ddd/a02040_1a8b983f54e732b6ddb51883c6afb7b74d" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>addKeyFrame</name></member>
      <member refid="d4/ddd/a02040_1afe22ac2e2bd29215faafabffbe96006e" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>AnimationT</name></member>
      <member refid="d4/ddd/a02040_1aa3f2119086382d2e0b3dec3300666348" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>AnimationT</name></member>
      <member refid="d4/ddd/a02040_1a42f1f842d2f44280ccd2bc9f75e047ca" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>AnimationT</name></member>
      <member refid="d4/ddd/a02040_1a7a8da5fb6ad1b361409bcc6b6cfc7506" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>begin</name></member>
      <member refid="d4/ddd/a02040_1a16f0adb1f5328cf5438c023384f7a2b2" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>begin</name></member>
      <member refid="d4/ddd/a02040_1ad6e2214b2b9e5b501d9521d80d6aa33c" prot="protected" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>BinaryParser&lt; AnimationT &gt;</name></member>
      <member refid="d4/ddd/a02040_1a7e26f15a7ab5adb5bfd78c8e38a06cbe" prot="protected" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>BinaryWriter&lt; AnimationT &gt;</name></member>
      <member refid="d4/ddd/a02040_1afa0954678ef3a2e35929747013e656a5" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>end</name></member>
      <member refid="d4/ddd/a02040_1a75e55d0c6feef67fd169a31abd060e7d" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>end</name></member>
      <member refid="d4/ddd/a02040_1a81ba800dd4c829c20ebc7927b0f441a6" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>find</name></member>
      <member refid="d4/ddd/a02040_1a23e5a482945b9977aa68e9581106d8cb" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>findKeyFrame</name></member>
      <member refid="d4/ddd/a02040_1adf144d2b848b3dc3ba80aaef91b612f8" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>getLength</name></member>
      <member refid="d4/ddd/a02040_1a71a9f86d812205eab4df5e9f2eb70c47" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>getType</name></member>
      <member refid="d4/ddd/a02040_1a06fb4576770bdac68740667d550637cb" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>isEmpty</name></member>
      <member refid="d4/ddd/a02040_1a4b5a218a7941d711bb940443f1942c62" prot="protected" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>m_keyframes</name></member>
      <member refid="d4/ddd/a02040_1a58a4f320f81091bc1ae4cc842a8bac3b" prot="protected" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>m_length</name></member>
      <member refid="d4/ddd/a02040_1a8b4274c7dc7b0a73e47adab8278af444" prot="protected" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>m_type</name></member>
      <member refid="d4/ddd/a02040_1a34b281bf0aa0f1ff768a015dcb884550" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>operator=</name></member>
      <member refid="d4/ddd/a02040_1ad3f88e807e572471e5c215ef47bdd407" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>operator=</name></member>
      <member refid="d4/ddd/a02040_1a02ed8b05e3af8e18394530bbf9833d44" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>updateLength</name></member>
      <member refid="d4/ddd/a02040_1a44db1b1a7ad80923fc5ff79f9218136f" prot="public" virt="non-virtual"><scope>castor3d::AnimationT</scope><name>~AnimationT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
