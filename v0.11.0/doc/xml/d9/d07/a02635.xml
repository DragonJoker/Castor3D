<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d9/d07/a02635" kind="class" language="C++" prot="public">
    <compoundname>castor3d::TextureLayout</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; RenderSystem &gt;</basecompoundref>
    <includes local="no">TextureLayout.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Whole texture access.</header>
      <memberdef kind="function" id="d9/d07/a02635_1a8b1a4cae2adb069628163e614868042c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::PxBufferBaseSPtr buffer, uint32_t bufferOrigLevels, bool isStatic=false)</argsstring>
        <name>setSource</name>
        <param>
          <type>castor::PxBufferBaseSPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bufferOrigLevels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the whole layout source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="257" column="1"/>
        <referencedby refid="d9/d07/a02635_1a70882c26b5e0900cb83d3bb68d56b782" compoundref="dc/d84/a00338" startline="266" endline="271">setSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1acbeb71420a9c65033124193235fc6178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::PxBufferBaseSPtr buffer, bool isStatic=false)</argsstring>
        <name>setSource</name>
        <param>
          <type>castor::PxBufferBaseSPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a988aacb6f287e248c22aecf1b21dd210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(castor::Path const &amp;folder, castor::Path const &amp;relative)</argsstring>
        <name>setSource</name>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1aee81558bd667f6701ef019f4af1375f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setSource</definition>
        <argsstring>(VkExtent3D const &amp;extent, VkFormat format)</argsstring>
        <name>setSource</name>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a70882c26b5e0900cb83d3bb68d56b782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setSource</definition>
        <argsstring>(VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setSource</name>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="266" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="266" bodyend="271"/>
        <references refid="d9/d07/a02635_1a8b1a4cae2adb069628163e614868042c">setSource</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters.</header>
      <memberdef kind="function" id="d9/d07/a02635_1a7c8048bdd41dee1940c71305fe3adce8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> const  &amp;</type>
        <definition>TextureView const&amp; castor3d::TextureLayout::getDefaultView</definition>
        <argsstring>() const</argsstring>
        <name>getDefaultView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="276" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="276" bodyend="280"/>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a3f2565ccba4bc82cfb66583092d82c49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView&amp; castor3d::TextureLayout::getDefaultView</definition>
        <argsstring>()</argsstring>
        <name>getDefaultView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="282" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="282" bodyend="286"/>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1aa5f286de7d4403119bf89c7063e27e47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/dfd/a02619" kindref="compound">MipView</ref> const  &amp;</type>
        <definition>MipView const&amp; castor3d::TextureLayout::getDefault</definition>
        <argsstring>() const</argsstring>
        <name>getDefault</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="288" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="288" bodyend="291"/>
        <referencedby refid="d9/d07/a02635_1aca42d4a2be1eae8de97fdaa7ac5215e2" compoundref="dc/d84/a00338" startline="299" endline="303">getMipView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1af8c17d35e42c3d2df4d2ee91f21d2b16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getLayersCount</definition>
        <argsstring>() const</argsstring>
        <name>getLayersCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="344" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="344" bodyend="347"/>
        <referencedby refid="d9/d07/a02635_1a600f2071eeb488d5bfd7a54755114aab" compoundref="dc/d84/a00338" startline="354" endline="361">getLayer2D</referencedby>
        <referencedby refid="d9/d07/a02635_1a3e189c6afff1e6c98055d16f74f528c8" compoundref="dc/d84/a00338" startline="462" endline="467">isCube</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1abaff2bce0f0f5ef888b9fca002656ffe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d34/a02627" kindref="compound">ArrayView</ref>&lt; <ref refid="da/dfd/a02619" kindref="compound">MipView</ref> &gt; const  &amp;</type>
        <definition>ArrayView&lt; MipView &gt; const&amp; castor3d::TextureLayout::getArray2D</definition>
        <argsstring>() const</argsstring>
        <name>getArray2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="349" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="349" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a600f2071eeb488d5bfd7a54755114aab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/dfd/a02619" kindref="compound">MipView</ref> const  &amp;</type>
        <definition>MipView const&amp; castor3d::TextureLayout::getLayer2D</definition>
        <argsstring>(size_t layer) const</argsstring>
        <name>getLayer2D</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="354" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="354" bodyend="361"/>
        <references refid="d9/d07/a02635_1af8c17d35e42c3d2df4d2ee91f21d2b16" compoundref="dc/d84/a00338" startline="344" endline="347">getLayersCount</references>
        <referencedby refid="d9/d07/a02635_1ac22d9e54727e717cb817d318d70c7334" compoundref="dc/d84/a00338" startline="372" endline="376">getLayer2DView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1ac2c940f1fc42466ac0993d152134c836" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/dfd/a02619" kindref="compound">MipView</ref> &amp;</type>
        <definition>MipView&amp; castor3d::TextureLayout::getLayer2D</definition>
        <argsstring>(size_t layer)</argsstring>
        <name>getLayer2D</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="363" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="363" bodyend="370"/>
        <references refid="d9/d07/a02635_1af8c17d35e42c3d2df4d2ee91f21d2b16" compoundref="dc/d84/a00338" startline="344" endline="347">getLayersCount</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1ac22d9e54727e717cb817d318d70c7334" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> const  &amp;</type>
        <definition>TextureView const&amp; castor3d::TextureLayout::getLayer2DView</definition>
        <argsstring>(size_t layer) const</argsstring>
        <name>getLayer2DView</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="372" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="372" bodyend="376"/>
        <references refid="d9/d07/a02635_1a600f2071eeb488d5bfd7a54755114aab" compoundref="dc/d84/a00338" startline="354" endline="361">getLayer2D</references>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a326bcae49db53b16a4fb6badff6ded50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView&amp; castor3d::TextureLayout::getLayer2DView</definition>
        <argsstring>(size_t layer)</argsstring>
        <name>getLayer2DView</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="378" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="378" bodyend="382"/>
        <references refid="d9/d07/a02635_1a600f2071eeb488d5bfd7a54755114aab" compoundref="dc/d84/a00338" startline="354" endline="361">getLayer2D</references>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>2D texture&apos;s mip level access. </para>
</description>
      <memberdef kind="function" id="d9/d07/a02635_1aca42d4a2be1eae8de97fdaa7ac5215e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> const  &amp;</type>
        <definition>TextureView const&amp; castor3d::TextureLayout::getMipView</definition>
        <argsstring>(size_t level) const</argsstring>
        <name>getMipView</name>
        <param>
          <type>size_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="299" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="299" bodyend="303"/>
        <references refid="d9/d07/a02635_1aa5f286de7d4403119bf89c7063e27e47" compoundref="dc/d84/a00338" startline="288" endline="291">getDefault</references>
        <references refid="da/dfd/a02619_1af1ba49261a22ad78a07f148018293b05" compoundref="dc/d84/a00338" startline="23">castor3d::MipView::levels</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a901ce060cbd2531ea36d6defe8554192" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView&amp; castor3d::TextureLayout::getMipView</definition>
        <argsstring>(size_t level)</argsstring>
        <name>getMipView</name>
        <param>
          <type>size_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="305" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="305" bodyend="309"/>
        <references refid="d9/d07/a02635_1aa5f286de7d4403119bf89c7063e27e47" compoundref="dc/d84/a00338" startline="288" endline="291">getDefault</references>
        <references refid="da/dfd/a02619_1af1ba49261a22ad78a07f148018293b05" compoundref="dc/d84/a00338" startline="23">castor3d::MipView::levels</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Texture array&apos;s layer access.</header>
      <memberdef kind="function" id="d9/d07/a02635_1aab75779d6d465aff62e7f2f0aadedab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, castor::PxBufferBaseSPtr buffer, uint32_t bufferOrigLevels)</argsstring>
        <name>setLayerSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseSPtr</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bufferOrigLevels</declname>
        </param>
        <briefdescription>
<para>Sets the source for all mip lever of one layer in the layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="321" column="1"/>
        <referencedby refid="d9/d07/a02635_1a11b25984f33fbe350a931f5215802146" compoundref="dc/d84/a00338" startline="332" endline="339">setLayerSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a3142cca95a5b0ab3237aa0ed88628c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, castor::PxBufferBaseSPtr buffer)</argsstring>
        <name>setLayerSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseSPtr</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1aed596e9031b0f210545fb963d565958a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, castor::Path const &amp;folder, castor::Path const &amp;relative)</argsstring>
        <name>setLayerSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1af1bd0a5db462e9e367d68e2131fe7a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, VkExtent3D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a11b25984f33fbe350a931f5215802146" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setLayerSource</definition>
        <argsstring>(uint32_t index, VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="332" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="332" bodyend="339"/>
        <references refid="d9/d07/a02635_1aab75779d6d465aff62e7f2f0aadedab1">setLayerSource</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Texture array layer&apos;s mip level access.</header>
      <memberdef kind="function" id="d9/d07/a02635_1a4dacfd44ffe655b1bd66f627a31e8dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerMipSource</definition>
        <argsstring>(uint32_t index, uint32_t level, castor::PxBufferBaseSPtr buffer)</argsstring>
        <name>setLayerMipSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseSPtr</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Sets the source for one mip level of a layer in the layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="394" column="1"/>
        <referencedby refid="d9/d07/a02635_1a383dd14141d8a87ed9fb7fb35ebe6aac" compoundref="dc/d84/a00338" startline="405" endline="414">setLayerMipSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a67e6804414ba40cea749f94ef8ca228c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerMipSource</definition>
        <argsstring>(uint32_t index, uint32_t level, castor::Path const &amp;folder, castor::Path const &amp;relative)</argsstring>
        <name>setLayerMipSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1ae1dadef43b5aacac3b7df99f6e81b6d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerMipSource</definition>
        <argsstring>(uint32_t index, uint32_t level, VkExtent3D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerMipSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>VkExtent3D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a383dd14141d8a87ed9fb7fb35ebe6aac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setLayerMipSource</definition>
        <argsstring>(uint32_t index, uint32_t level, VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerMipSource</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="405" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="405" bodyend="414"/>
        <references refid="d9/d07/a02635_1a4dacfd44ffe655b1bd66f627a31e8dd4">setLayerMipSource</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>3D texture&apos;s slice access.</header>
      <memberdef kind="function" id="d9/d07/a02635_1add84f41ba4f5f84268fbce4764081652" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d9a/a02631" kindref="compound">SliceView</ref>&lt; <ref refid="da/dfd/a02619" kindref="compound">MipView</ref> &gt; const  &amp;</type>
        <definition>SliceView&lt; MipView &gt; const&amp; castor3d::TextureLayout::getSlices3D</definition>
        <argsstring>() const</argsstring>
        <name>getSlices3D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="420" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a21da58acc11519a95942f126c7de5557" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/dfd/a02619" kindref="compound">MipView</ref> const  &amp;</type>
        <definition>MipView const&amp; castor3d::TextureLayout::getSlice</definition>
        <argsstring>(size_t slice) const</argsstring>
        <name>getSlice</name>
        <param>
          <type>size_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="425" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="425" bodyend="432"/>
        <references refid="d9/d07/a02635_1a966144c5556a163b0b26ca95dc628c6b" compoundref="dc/d84/a00338" startline="647" endline="650">getDepth</references>
        <referencedby refid="d9/d07/a02635_1a92a40da08e26ed794fe67161021c7cb4" compoundref="dc/d84/a00338" startline="443" endline="447">getSliceView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a250f464972ae758ee3f787a06c722555" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/dfd/a02619" kindref="compound">MipView</ref> &amp;</type>
        <definition>MipView&amp; castor3d::TextureLayout::getSlice</definition>
        <argsstring>(size_t slice)</argsstring>
        <name>getSlice</name>
        <param>
          <type>size_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="434" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="434" bodyend="441"/>
        <references refid="d9/d07/a02635_1a966144c5556a163b0b26ca95dc628c6b" compoundref="dc/d84/a00338" startline="647" endline="650">getDepth</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a92a40da08e26ed794fe67161021c7cb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> const  &amp;</type>
        <definition>TextureView const&amp; castor3d::TextureLayout::getSliceView</definition>
        <argsstring>(size_t slice) const</argsstring>
        <name>getSliceView</name>
        <param>
          <type>size_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="443" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="443" bodyend="447"/>
        <references refid="d9/d07/a02635_1a21da58acc11519a95942f126c7de5557" compoundref="dc/d84/a00338" startline="425" endline="432">getSlice</references>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a7e07a288a87494dbba68fd25e8cfac09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView&amp; castor3d::TextureLayout::getSliceView</definition>
        <argsstring>(size_t slice)</argsstring>
        <name>getSliceView</name>
        <param>
          <type>size_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="449" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="449" bodyend="453"/>
        <references refid="d9/d07/a02635_1a21da58acc11519a95942f126c7de5557" compoundref="dc/d84/a00338" startline="425" endline="432">getSlice</references>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para><ref refid="d5/d12/a03851" kindref="compound">Cube</ref> array&apos;s texture access. <simplesect kind="remark"><para>A simple cube texture is a cube array of size 1. </para>
</simplesect>
</para>
</description>
      <memberdef kind="function" id="d9/d07/a02635_1a3e189c6afff1e6c98055d16f74f528c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::isCube</definition>
        <argsstring>() const</argsstring>
        <name>isCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="462" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="462" bodyend="467"/>
        <references refid="d9/d07/a02635_1af8c17d35e42c3d2df4d2ee91f21d2b16" compoundref="dc/d84/a00338" startline="344" endline="347">getLayersCount</references>
        <referencedby refid="d9/d07/a02635_1ac90b6af34d534c6bf4f40e502b8442e4" compoundref="dc/d84/a00338" startline="474" endline="481">getLayerCube</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a94f9bbda7475ed241c8a7fac6766de5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d34/a02627" kindref="compound">ArrayView</ref>&lt; <ref refid="d4/d29/a02623" kindref="compound">CubeView</ref> &gt; const  &amp;</type>
        <definition>ArrayView&lt; CubeView &gt; const&amp; castor3d::TextureLayout::getArrayCube</definition>
        <argsstring>() const</argsstring>
        <name>getArrayCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="469" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="469" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1ac90b6af34d534c6bf4f40e502b8442e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d29/a02623" kindref="compound">CubeView</ref> const  &amp;</type>
        <definition>CubeView const&amp; castor3d::TextureLayout::getLayerCube</definition>
        <argsstring>(size_t layer) const</argsstring>
        <name>getLayerCube</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="474" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="474" bodyend="481"/>
        <references refid="d9/d07/a02635_1a3e189c6afff1e6c98055d16f74f528c8" compoundref="dc/d84/a00338" startline="462" endline="467">isCube</references>
        <referencedby refid="d9/d07/a02635_1a1bc7c519652b89173942b38d632e8b1d" compoundref="dc/d84/a00338" startline="508" endline="512">getLayerCubeFace</referencedby>
        <referencedby refid="d9/d07/a02635_1a8fb683f04ef28ae07e604492bebd92da" compoundref="dc/d84/a00338" startline="492" endline="496">getLayerCubeView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a3316e6328b1196af9d5262637eb25c74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d29/a02623" kindref="compound">CubeView</ref> &amp;</type>
        <definition>CubeView&amp; castor3d::TextureLayout::getLayerCube</definition>
        <argsstring>(size_t layer)</argsstring>
        <name>getLayerCube</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="483" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="483" bodyend="490"/>
        <references refid="d9/d07/a02635_1a3e189c6afff1e6c98055d16f74f528c8" compoundref="dc/d84/a00338" startline="462" endline="467">isCube</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a8fb683f04ef28ae07e604492bebd92da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> const  &amp;</type>
        <definition>TextureView const&amp; castor3d::TextureLayout::getLayerCubeView</definition>
        <argsstring>(size_t layer) const</argsstring>
        <name>getLayerCubeView</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="492" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="492" bodyend="496"/>
        <references refid="d9/d07/a02635_1ac90b6af34d534c6bf4f40e502b8442e4" compoundref="dc/d84/a00338" startline="474" endline="481">getLayerCube</references>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
        <references refid="d4/d29/a02623_1a80994da423e22c00a0e265a66debd84d" compoundref="dc/d84/a00338" startline="70">castor3d::CubeView::view</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a019c1ce44e1e31ef7bf3685c172d16aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView&amp; castor3d::TextureLayout::getLayerCubeView</definition>
        <argsstring>(size_t layer)</argsstring>
        <name>getLayerCubeView</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="498" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="498" bodyend="502"/>
        <references refid="d9/d07/a02635_1ac90b6af34d534c6bf4f40e502b8442e4" compoundref="dc/d84/a00338" startline="474" endline="481">getLayerCube</references>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
        <references refid="d4/d29/a02623_1a80994da423e22c00a0e265a66debd84d" compoundref="dc/d84/a00338" startline="70">castor3d::CubeView::view</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cube array texture layer&apos;s face access.</header>
      <memberdef kind="function" id="d9/d07/a02635_1a1bc7c519652b89173942b38d632e8b1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/dfd/a02619" kindref="compound">MipView</ref> const  &amp;</type>
        <definition>MipView const&amp; castor3d::TextureLayout::getLayerCubeFace</definition>
        <argsstring>(size_t layer, CubeMapFace face) const</argsstring>
        <name>getLayerCubeFace</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="508" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="508" bodyend="512"/>
        <references refid="d4/d29/a02623_1a0fe245e7abfe95bd67276e81bcc0c059" compoundref="dc/d84/a00338" startline="71">castor3d::CubeView::faces</references>
        <references refid="d9/d07/a02635_1ac90b6af34d534c6bf4f40e502b8442e4" compoundref="dc/d84/a00338" startline="474" endline="481">getLayerCube</references>
        <referencedby refid="d9/d07/a02635_1ada63029043555e657c99244914c30917" compoundref="dc/d84/a00338" startline="557" endline="564">getLayerCubeFaceMipView</referencedby>
        <referencedby refid="d9/d07/a02635_1aa675de5ca1657240d789471b7a9ef3cf" compoundref="dc/d84/a00338" startline="520" endline="525">getLayerCubeFaceView</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1aa9c7a70474b5723f15e062bccd8f239e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/dfd/a02619" kindref="compound">MipView</ref> &amp;</type>
        <definition>MipView&amp; castor3d::TextureLayout::getLayerCubeFace</definition>
        <argsstring>(size_t layer, CubeMapFace face)</argsstring>
        <name>getLayerCubeFace</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="514" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="514" bodyend="518"/>
        <references refid="d4/d29/a02623_1a0fe245e7abfe95bd67276e81bcc0c059" compoundref="dc/d84/a00338" startline="71">castor3d::CubeView::faces</references>
        <references refid="d9/d07/a02635_1ac90b6af34d534c6bf4f40e502b8442e4" compoundref="dc/d84/a00338" startline="474" endline="481">getLayerCube</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1aa675de5ca1657240d789471b7a9ef3cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> const  &amp;</type>
        <definition>TextureView const&amp; castor3d::TextureLayout::getLayerCubeFaceView</definition>
        <argsstring>(size_t layer, CubeMapFace face) const</argsstring>
        <name>getLayerCubeFaceView</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="520" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="520" bodyend="525"/>
        <references refid="d9/d07/a02635_1a1bc7c519652b89173942b38d632e8b1d" compoundref="dc/d84/a00338" startline="508" endline="512">getLayerCubeFace</references>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a4ba4c685d6071c16d2a9ef4d188f409d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView&amp; castor3d::TextureLayout::getLayerCubeFaceView</definition>
        <argsstring>(size_t layer, CubeMapFace face)</argsstring>
        <name>getLayerCubeFaceView</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="527" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="527" bodyend="532"/>
        <references refid="d9/d07/a02635_1a1bc7c519652b89173942b38d632e8b1d" compoundref="dc/d84/a00338" startline="508" endline="512">getLayerCubeFace</references>
        <references refid="da/dfd/a02619_1ad7934d51067a1952360f589a74f18775" compoundref="dc/d84/a00338" startline="22">castor3d::MipView::view</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1aa2b7cb629f1af8f25eb3256a53d4e10f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerCubeFaceSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, castor::PxBufferBaseSPtr buffer)</argsstring>
        <name>setLayerCubeFaceSource</name>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseSPtr</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Sets the source for a layer cube&apos;s face in the layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a71f8287df80ab96262038356c58296c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerCubeFaceSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, castor::Path const &amp;folder, castor::Path const &amp;relative)</argsstring>
        <name>setLayerCubeFaceSource</name>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a7608eca11de86cc66d43f8d323a38b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setLayerCubeFaceSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerCubeFaceSource</name>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="547" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cube array texture layer face&apos;s mip level access.</header>
      <memberdef kind="function" id="d9/d07/a02635_1ada63029043555e657c99244914c30917" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> const  &amp;</type>
        <definition>TextureView const&amp; castor3d::TextureLayout::getLayerCubeFaceMipView</definition>
        <argsstring>(size_t layer, CubeMapFace face, uint32_t level) const</argsstring>
        <name>getLayerCubeFaceMipView</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="557" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="557" bodyend="564"/>
        <references refid="d9/d07/a02635_1a1bc7c519652b89173942b38d632e8b1d" compoundref="dc/d84/a00338" startline="508" endline="512">getLayerCubeFace</references>
        <references refid="da/dfd/a02619_1af1ba49261a22ad78a07f148018293b05" compoundref="dc/d84/a00338" startline="23">castor3d::MipView::levels</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1aa2c526748bf381ac1c93118e2f2e071a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d11/a02647" kindref="compound">TextureView</ref> &amp;</type>
        <definition>TextureView&amp; castor3d::TextureLayout::getLayerCubeFaceMipView</definition>
        <argsstring>(size_t layer, CubeMapFace face, uint32_t level)</argsstring>
        <name>getLayerCubeFaceMipView</name>
        <param>
          <type>size_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="566" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="566" bodyend="573"/>
        <references refid="d9/d07/a02635_1a1bc7c519652b89173942b38d632e8b1d" compoundref="dc/d84/a00338" startline="508" endline="512">getLayerCubeFace</references>
        <references refid="da/dfd/a02619_1af1ba49261a22ad78a07f148018293b05" compoundref="dc/d84/a00338" startline="23">castor3d::MipView::levels</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1aecdf43b76e0f3b72edeb6751baf85fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerCubeFaceMipSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, uint32_t level, castor::PxBufferBaseSPtr buffer)</argsstring>
        <name>setLayerCubeFaceMipSource</name>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>castor::PxBufferBaseSPtr</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Sets the source for a face of layer in the layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="581" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a6c7771d2e2df0ad4c622bfb8770a4d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::setLayerCubeFaceMipSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, uint32_t level, castor::Path const &amp;folder, castor::Path const &amp;relative)</argsstring>
        <name>setLayerCubeFaceMipSource</name>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1adbc242a9a0825e4382c9b65da708f7ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::setLayerCubeFaceMipSource</definition>
        <argsstring>(uint32_t layer, CubeMapFace face, uint32_t level, VkExtent2D const &amp;extent, VkFormat format)</argsstring>
        <name>setLayerCubeFaceMipSource</name>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="d7/dd1/a01458_1a13e6b0c4ce255c1deb4c525562111e5b" kindref="member">CubeMapFace</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>VkExtent2D const &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="590" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d9/d07/a02635_1a93e6ea5882f18cbbfa5b15f0465b77a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String</type>
        <definition>C3D_API castor::String castor3d::TextureLayout::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="602" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a0295aaff1f2219473910a6515b62ef11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Path</type>
        <definition>C3D_API castor::Path castor3d::TextureLayout::getPath</definition>
        <argsstring>() const</argsstring>
        <name>getPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a72dbb24d3d703a4861f92551b6b798ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::TextureLayout::needsYInversion</definition>
        <argsstring>() const</argsstring>
        <name>needsYInversion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a2494537b45df96be10fdb00ce5fdce79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::isInitialised</definition>
        <argsstring>() const</argsstring>
        <name>isInitialised</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="606" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a4facf4ec1a23e581f6588ea1ed010a93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::isStatic</definition>
        <argsstring>() const</argsstring>
        <name>isStatic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="611" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="611" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a987b7c0a8500a6a8d2a624b78adf6fc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkImageType</type>
        <definition>VkImageType castor3d::TextureLayout::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="616" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="616" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a24ac6e727e95c38ebaa1f11d1e58b311" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Image const  &amp;</type>
        <definition>castor::Image const&amp; castor3d::TextureLayout::getImage</definition>
        <argsstring>() const</argsstring>
        <name>getImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="621" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="621" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a3287c0da78e1b9639b2f47acf86fb62b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Image &amp;</type>
        <definition>castor::Image&amp; castor3d::TextureLayout::getImage</definition>
        <argsstring>()</argsstring>
        <name>getImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="626" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="626" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a445625c2da3005d913a8cc40a7fabede" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Image const  &amp;</type>
        <definition>ashes::Image const&amp; castor3d::TextureLayout::getTexture</definition>
        <argsstring>() const</argsstring>
        <name>getTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="631" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="631" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a9e41e7e305e91a8f778a9bb7785d2a2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="637" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="637" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a1f7f9c58be8687b635d9c42035bd878e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="642" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="642" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a966144c5556a163b0b26ca95dc628c6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getDepth</definition>
        <argsstring>() const</argsstring>
        <name>getDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="647" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="647" bodyend="650"/>
        <referencedby refid="d9/d07/a02635_1a21da58acc11519a95942f126c7de5557" compoundref="dc/d84/a00338" startline="425" endline="432">getSlice</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a49ea57d0a65e6dce7c2ae46f81dcf0d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::getMipmapCount</definition>
        <argsstring>() const</argsstring>
        <name>getMipmapCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="652" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="652" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a0a17f13a8837a8066cf6749994aa5f17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkExtent3D const  &amp;</type>
        <definition>VkExtent3D const&amp; castor3d::TextureLayout::getDimensions</definition>
        <argsstring>() const</argsstring>
        <name>getDimensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="657" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="657" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a404f38407a61a79225e6e432b9b09073" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat castor3d::TextureLayout::getPixelFormat</definition>
        <argsstring>() const</argsstring>
        <name>getPixelFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="662" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="662" bodyend="665"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d9/d07/a02635_1ac81cdcc9deac35d38d45bf5085b92bcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FuncT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void castor3d::TextureLayout::forEachView</definition>
        <argsstring>(FuncT function) const</argsstring>
        <name>forEachView</name>
        <param>
          <type>FuncT</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Views parsing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="677" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="677" bodyend="693"/>
        <references refid="da/dfd/a02619_1ac23bed4d978ef4c38473672b09fe4e25" compoundref="dc/d84/a00338" startline="48" endline="52">castor3d::MipView::forEachView</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1abd9e4b858ad805cfa5746588031566ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FuncT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void castor3d::TextureLayout::forEachFirstMipView</definition>
        <argsstring>(FuncT function) const</argsstring>
        <name>forEachFirstMipView</name>
        <param>
          <type>FuncT</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="696" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="696" bodyend="714"/>
        <references refid="da/dfd/a02619_1a63ac7209185df2c391cab3451317221e" compoundref="dc/d84/a00338" startline="55" endline="65">castor3d::MipView::forEachFirstMipView</references>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1ab14de992a49bb8077063c1976a0e62e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FuncT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void castor3d::TextureLayout::forEachLeafView</definition>
        <argsstring>(FuncT function) const</argsstring>
        <name>forEachLeafView</name>
        <param>
          <type>FuncT</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="717" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="717" bodyend="731"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d9/d07/a02635_1a38d122cc3c76362e353ea342b041636e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TextureView</definition>
        <argsstring></argsstring>
        <name>TextureView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="180" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d07/a02635_1abb4e7ba8bb8241f57f2667c84b320882" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::m_initialised</definition>
        <argsstring></argsstring>
        <name>m_initialised</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="743" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1a9a9e73f297fb0010219f2cc8dd0b2ef1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::TextureLayout::m_static</definition>
        <argsstring></argsstring>
        <name>m_static</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="744" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1a893c83ce79ad0bf4b2cbf75a70897c54" prot="private" static="no" mutable="no">
        <type>ashes::ImageCreateInfo</type>
        <definition>ashes::ImageCreateInfo castor3d::TextureLayout::m_info</definition>
        <argsstring></argsstring>
        <name>m_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="745" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1addb3faee8a01d6a5846f6cd95384894b" prot="private" static="no" mutable="no">
        <type>VkMemoryPropertyFlags</type>
        <definition>VkMemoryPropertyFlags castor3d::TextureLayout::m_properties</definition>
        <argsstring></argsstring>
        <name>m_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="746" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1a14cee824776b5a145bd865e5321cc4a8" prot="private" static="no" mutable="no">
        <type>castor::Image</type>
        <definition>castor::Image castor3d::TextureLayout::m_image</definition>
        <argsstring></argsstring>
        <name>m_image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="747" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="747" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1acdc021024bf7b219739a157507bfda7d" prot="private" static="no" mutable="no">
        <type><ref refid="da/dfd/a02619" kindref="compound">MipView</ref></type>
        <definition>MipView castor3d::TextureLayout::m_defaultView</definition>
        <argsstring></argsstring>
        <name>m_defaultView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="748" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1a416b6b427d2aee2b519ecc1866a9068e" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d34/a02627" kindref="compound">ArrayView</ref>&lt; <ref refid="da/dfd/a02619" kindref="compound">MipView</ref> &gt;</type>
        <definition>ArrayView&lt; MipView &gt; castor3d::TextureLayout::m_arrayView</definition>
        <argsstring></argsstring>
        <name>m_arrayView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="749" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1ad1ad3e24470b8f254c937a9815288857" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d34/a02627" kindref="compound">ArrayView</ref>&lt; <ref refid="d4/d29/a02623" kindref="compound">CubeView</ref> &gt;</type>
        <definition>ArrayView&lt; CubeView &gt; castor3d::TextureLayout::m_cubeView</definition>
        <argsstring></argsstring>
        <name>m_cubeView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="750" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1aeee6bb4c7f7fe408b45d48c8450c0f39" prot="private" static="no" mutable="no">
        <type><ref refid="d0/d9a/a02631" kindref="compound">SliceView</ref>&lt; <ref refid="da/dfd/a02619" kindref="compound">MipView</ref> &gt;</type>
        <definition>SliceView&lt; MipView &gt; castor3d::TextureLayout::m_sliceView</definition>
        <argsstring></argsstring>
        <name>m_sliceView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="751" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d07/a02635_1a4ed4ae5f65b1b148f0e16608556d6c86" prot="private" static="no" mutable="no">
        <type>ashes::ImagePtr</type>
        <definition>ashes::ImagePtr castor3d::TextureLayout::m_texture</definition>
        <argsstring></argsstring>
        <name>m_texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="752" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="752" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d07/a02635_1ae6f8be6177279a23ec2efb0c9c2b83ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::TextureLayout</definition>
        <argsstring>(RenderSystem &amp;renderSystem, ashes::ImageCreateInfo info, VkMemoryPropertyFlags memoryProperties, castor::String debugName, bool isStatic=false)</argsstring>
        <name>TextureLayout</name>
        <param>
          <type><ref refid="d6/d55/a04603" kindref="compound">RenderSystem</ref> &amp;</type>
          <declname>renderSystem</declname>
        </param>
        <param>
          <type>ashes::ImageCreateInfo</type>
          <declname>info</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>memoryProperties</declname>
        </param>
        <param>
          <type>castor::String</type>
          <declname>debugName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">renderSystem</parametername>
</parameternamelist>
<parameterdescription>
<para>The render system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>The image informations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">memoryProperties</parametername>
</parameternamelist>
<parameterdescription>
<para>The required memory properties. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">debugName</parametername>
</parameternamelist>
<parameterdescription>
<para>The debug name for this layout. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isStatic</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if this layout is static. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a78cacaa4597d5ac2129248b21d82cfbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::TextureLayout::~TextureLayout</definition>
        <argsstring>()</argsstring>
        <name>~TextureLayout</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1ab53c134a96809f04ad6a962301cc7cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::TextureLayout::initialise</definition>
        <argsstring>(RenderDevice const &amp;device)</argsstring>
        <name>initialise</name>
        <param>
          <type><ref refid="de/ddb/a04491" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Initialises the texture and all its views. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if OK. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a3ef716cd4701738d3650079621d93b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <briefdescription>
<para>Cleans up the texture and all its views. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a61d1737427296a9df3cefa49ab639d8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::generateMipmaps</definition>
        <argsstring>(RenderDevice const &amp;device) const</argsstring>
        <name>generateMipmaps</name>
        <param>
          <type><ref refid="de/ddb/a04491" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Generate texture mipmaps. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1ad24e11ea1f50eea59a543605b8d609ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::TextureLayout::generateMipmaps</definition>
        <argsstring>(ashes::CommandBuffer &amp;cmd) const</argsstring>
        <name>generateMipmaps</name>
        <param>
          <type>ashes::CommandBuffer &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Generate texture mipmaps. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>The command buffer recording the commands. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="246" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/d07/a02635_1a904fc55c9b0e4f4cd81b8a1bf63db545" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::TextureLayout::doUpdateViews</definition>
        <argsstring>()</argsstring>
        <name>doUpdateViews</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="735" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a4677c01162c04db13e48533de65befc1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateCreateInfo</definition>
        <argsstring>(castor::ImageLayout const &amp;layout)</argsstring>
        <name>doUpdateCreateInfo</name>
        <param>
          <type>castor::ImageLayout const &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="736" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1abaaf1d7120d5a2fe3ad6222b818c16ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateFromFirstImage</definition>
        <argsstring>(uint32_t mipLevel, castor::ImageLayout layout)</argsstring>
        <name>doUpdateFromFirstImage</name>
        <param>
          <type>uint32_t</type>
          <declname>mipLevel</declname>
        </param>
        <param>
          <type>castor::ImageLayout</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="737" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1adc7d6cc07ea8817267166df58172c1d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateMips</definition>
        <argsstring>(bool genNeeded, uint32_t mipLevels)</argsstring>
        <name>doUpdateMips</name>
        <param>
          <type>bool</type>
          <declname>genNeeded</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipLevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="738" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a32305b9ef49022bdeb278501565df89a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateLayerMip</definition>
        <argsstring>(bool genNeeded, uint32_t layer, uint32_t level)</argsstring>
        <name>doUpdateLayerMip</name>
        <param>
          <type>bool</type>
          <declname>genNeeded</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d9/d07/a02635_1a9322e8c732a84beeb59e93a7aa2c485c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::TextureLayout::doUpdateLayerMips</definition>
        <argsstring>(bool genNeeded, uint32_t layer, uint32_t mipLevels)</argsstring>
        <name>doUpdateLayerMips</name>
        <param>
          <type>bool</type>
          <declname>genNeeded</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipLevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Texture/TextureLayout.hpp" line="740" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4425">
        <label>castor::OwnedBy&lt; RenderSystem &gt;</label>
      </node>
      <node id="4424">
        <label>castor3d::TextureLayout</label>
        <link refid="d9/d07/a02635"/>
        <childnode refid="4425" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4427">
        <label>castor::OwnedBy&lt; RenderSystem &gt;</label>
      </node>
      <node id="4426">
        <label>castor3d::TextureLayout</label>
        <link refid="d9/d07/a02635"/>
        <childnode refid="4427" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Material/Texture/TextureLayout.hpp" line="179" column="1" bodyfile="Material/Texture/TextureLayout.hpp" bodystart="177" bodyend="753"/>
    <listofallmembers>
      <member refid="d9/d07/a02635_1a3ef716cd4701738d3650079621d93b4e" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>cleanup</name></member>
      <member refid="d9/d07/a02635_1a4677c01162c04db13e48533de65befc1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateCreateInfo</name></member>
      <member refid="d9/d07/a02635_1abaaf1d7120d5a2fe3ad6222b818c16ee" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateFromFirstImage</name></member>
      <member refid="d9/d07/a02635_1a32305b9ef49022bdeb278501565df89a" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateLayerMip</name></member>
      <member refid="d9/d07/a02635_1a9322e8c732a84beeb59e93a7aa2c485c" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateLayerMips</name></member>
      <member refid="d9/d07/a02635_1adc7d6cc07ea8817267166df58172c1d1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateMips</name></member>
      <member refid="d9/d07/a02635_1a904fc55c9b0e4f4cd81b8a1bf63db545" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>doUpdateViews</name></member>
      <member refid="d9/d07/a02635_1abd9e4b858ad805cfa5746588031566ff" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>forEachFirstMipView</name></member>
      <member refid="d9/d07/a02635_1ab14de992a49bb8077063c1976a0e62e4" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>forEachLeafView</name></member>
      <member refid="d9/d07/a02635_1ac81cdcc9deac35d38d45bf5085b92bcf" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>forEachView</name></member>
      <member refid="d9/d07/a02635_1a61d1737427296a9df3cefa49ab639d8b" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>generateMipmaps</name></member>
      <member refid="d9/d07/a02635_1ad24e11ea1f50eea59a543605b8d609ab" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>generateMipmaps</name></member>
      <member refid="d9/d07/a02635_1abaff2bce0f0f5ef888b9fca002656ffe" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getArray2D</name></member>
      <member refid="d9/d07/a02635_1a94f9bbda7475ed241c8a7fac6766de5f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getArrayCube</name></member>
      <member refid="d9/d07/a02635_1aa5f286de7d4403119bf89c7063e27e47" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefault</name></member>
      <member refid="d9/d07/a02635_1a7c8048bdd41dee1940c71305fe3adce8" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefaultView</name></member>
      <member refid="d9/d07/a02635_1a3f2565ccba4bc82cfb66583092d82c49" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDefaultView</name></member>
      <member refid="d9/d07/a02635_1a966144c5556a163b0b26ca95dc628c6b" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDepth</name></member>
      <member refid="d9/d07/a02635_1a0a17f13a8837a8066cf6749994aa5f17" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getDimensions</name></member>
      <member refid="d9/d07/a02635_1a1f7f9c58be8687b635d9c42035bd878e" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getHeight</name></member>
      <member refid="d9/d07/a02635_1a24ac6e727e95c38ebaa1f11d1e58b311" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getImage</name></member>
      <member refid="d9/d07/a02635_1a3287c0da78e1b9639b2f47acf86fb62b" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getImage</name></member>
      <member refid="d9/d07/a02635_1a600f2071eeb488d5bfd7a54755114aab" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayer2D</name></member>
      <member refid="d9/d07/a02635_1ac2c940f1fc42466ac0993d152134c836" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayer2D</name></member>
      <member refid="d9/d07/a02635_1ac22d9e54727e717cb817d318d70c7334" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayer2DView</name></member>
      <member refid="d9/d07/a02635_1a326bcae49db53b16a4fb6badff6ded50" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayer2DView</name></member>
      <member refid="d9/d07/a02635_1ac90b6af34d534c6bf4f40e502b8442e4" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCube</name></member>
      <member refid="d9/d07/a02635_1a3316e6328b1196af9d5262637eb25c74" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCube</name></member>
      <member refid="d9/d07/a02635_1a1bc7c519652b89173942b38d632e8b1d" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFace</name></member>
      <member refid="d9/d07/a02635_1aa9c7a70474b5723f15e062bccd8f239e" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFace</name></member>
      <member refid="d9/d07/a02635_1ada63029043555e657c99244914c30917" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFaceMipView</name></member>
      <member refid="d9/d07/a02635_1aa2c526748bf381ac1c93118e2f2e071a" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFaceMipView</name></member>
      <member refid="d9/d07/a02635_1aa675de5ca1657240d789471b7a9ef3cf" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFaceView</name></member>
      <member refid="d9/d07/a02635_1a4ba4c685d6071c16d2a9ef4d188f409d" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeFaceView</name></member>
      <member refid="d9/d07/a02635_1a8fb683f04ef28ae07e604492bebd92da" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeView</name></member>
      <member refid="d9/d07/a02635_1a019c1ce44e1e31ef7bf3685c172d16aa" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayerCubeView</name></member>
      <member refid="d9/d07/a02635_1af8c17d35e42c3d2df4d2ee91f21d2b16" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getLayersCount</name></member>
      <member refid="d9/d07/a02635_1a49ea57d0a65e6dce7c2ae46f81dcf0d8" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getMipmapCount</name></member>
      <member refid="d9/d07/a02635_1aca42d4a2be1eae8de97fdaa7ac5215e2" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getMipView</name></member>
      <member refid="d9/d07/a02635_1a901ce060cbd2531ea36d6defe8554192" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getMipView</name></member>
      <member refid="d9/d07/a02635_1a93e6ea5882f18cbbfa5b15f0465b77a3" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getName</name></member>
      <member refid="d9/d07/a02635_1a0295aaff1f2219473910a6515b62ef11" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getPath</name></member>
      <member refid="d9/d07/a02635_1a404f38407a61a79225e6e432b9b09073" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getPixelFormat</name></member>
      <member refid="d9/d07/a02635_1a21da58acc11519a95942f126c7de5557" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSlice</name></member>
      <member refid="d9/d07/a02635_1a250f464972ae758ee3f787a06c722555" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSlice</name></member>
      <member refid="d9/d07/a02635_1add84f41ba4f5f84268fbce4764081652" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSlices3D</name></member>
      <member refid="d9/d07/a02635_1a92a40da08e26ed794fe67161021c7cb4" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSliceView</name></member>
      <member refid="d9/d07/a02635_1a7e07a288a87494dbba68fd25e8cfac09" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getSliceView</name></member>
      <member refid="d9/d07/a02635_1a445625c2da3005d913a8cc40a7fabede" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getTexture</name></member>
      <member refid="d9/d07/a02635_1a987b7c0a8500a6a8d2a624b78adf6fc8" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getType</name></member>
      <member refid="d9/d07/a02635_1a9e41e7e305e91a8f778a9bb7785d2a2b" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>getWidth</name></member>
      <member refid="d9/d07/a02635_1ab53c134a96809f04ad6a962301cc7cf5" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>initialise</name></member>
      <member refid="d9/d07/a02635_1a3e189c6afff1e6c98055d16f74f528c8" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isCube</name></member>
      <member refid="d9/d07/a02635_1a2494537b45df96be10fdb00ce5fdce79" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isInitialised</name></member>
      <member refid="d9/d07/a02635_1a4facf4ec1a23e581f6588ea1ed010a93" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>isStatic</name></member>
      <member refid="d9/d07/a02635_1a416b6b427d2aee2b519ecc1866a9068e" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_arrayView</name></member>
      <member refid="d9/d07/a02635_1ad1ad3e24470b8f254c937a9815288857" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_cubeView</name></member>
      <member refid="d9/d07/a02635_1acdc021024bf7b219739a157507bfda7d" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_defaultView</name></member>
      <member refid="d9/d07/a02635_1a14cee824776b5a145bd865e5321cc4a8" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_image</name></member>
      <member refid="d9/d07/a02635_1a893c83ce79ad0bf4b2cbf75a70897c54" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_info</name></member>
      <member refid="d9/d07/a02635_1abb4e7ba8bb8241f57f2667c84b320882" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_initialised</name></member>
      <member refid="d9/d07/a02635_1addb3faee8a01d6a5846f6cd95384894b" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_properties</name></member>
      <member refid="d9/d07/a02635_1aeee6bb4c7f7fe408b45d48c8450c0f39" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_sliceView</name></member>
      <member refid="d9/d07/a02635_1a9a9e73f297fb0010219f2cc8dd0b2ef1" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_static</name></member>
      <member refid="d9/d07/a02635_1a4ed4ae5f65b1b148f0e16608556d6c86" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>m_texture</name></member>
      <member refid="d9/d07/a02635_1a72dbb24d3d703a4861f92551b6b798ca" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>needsYInversion</name></member>
      <member refid="d9/d07/a02635_1aecdf43b76e0f3b72edeb6751baf85fea" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceMipSource</name></member>
      <member refid="d9/d07/a02635_1a6c7771d2e2df0ad4c622bfb8770a4d09" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceMipSource</name></member>
      <member refid="d9/d07/a02635_1adbc242a9a0825e4382c9b65da708f7ae" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceMipSource</name></member>
      <member refid="d9/d07/a02635_1aa2b7cb629f1af8f25eb3256a53d4e10f" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceSource</name></member>
      <member refid="d9/d07/a02635_1a71f8287df80ab96262038356c58296c6" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceSource</name></member>
      <member refid="d9/d07/a02635_1a7608eca11de86cc66d43f8d323a38b10" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerCubeFaceSource</name></member>
      <member refid="d9/d07/a02635_1a4dacfd44ffe655b1bd66f627a31e8dd4" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerMipSource</name></member>
      <member refid="d9/d07/a02635_1a67e6804414ba40cea749f94ef8ca228c" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerMipSource</name></member>
      <member refid="d9/d07/a02635_1ae1dadef43b5aacac3b7df99f6e81b6d3" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerMipSource</name></member>
      <member refid="d9/d07/a02635_1a383dd14141d8a87ed9fb7fb35ebe6aac" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerMipSource</name></member>
      <member refid="d9/d07/a02635_1aab75779d6d465aff62e7f2f0aadedab1" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d9/d07/a02635_1a3142cca95a5b0ab3237aa0ed88628c2d" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d9/d07/a02635_1aed596e9031b0f210545fb963d565958a" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d9/d07/a02635_1af1bd0a5db462e9e367d68e2131fe7a42" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d9/d07/a02635_1a11b25984f33fbe350a931f5215802146" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setLayerSource</name></member>
      <member refid="d9/d07/a02635_1a8b1a4cae2adb069628163e614868042c" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d9/d07/a02635_1acbeb71420a9c65033124193235fc6178" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d9/d07/a02635_1a988aacb6f287e248c22aecf1b21dd210" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d9/d07/a02635_1aee81558bd667f6701ef019f4af1375f9" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d9/d07/a02635_1a70882c26b5e0900cb83d3bb68d56b782" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>setSource</name></member>
      <member refid="d9/d07/a02635_1ae6f8be6177279a23ec2efb0c9c2b83ac" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureLayout</name></member>
      <member refid="d9/d07/a02635_1a38d122cc3c76362e353ea342b041636e" prot="private" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>TextureView</name></member>
      <member refid="d9/d07/a02635_1a78cacaa4597d5ac2129248b21d82cfbb" prot="public" virt="non-virtual"><scope>castor3d::TextureLayout</scope><name>~TextureLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
