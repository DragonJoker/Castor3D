<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="d1/d69/a03834" kind="struct" language="C++" prot="public">
    <compoundname>castor3d::SceneRenderNodes</compoundname>
    <basecompoundref prot="public" virt="non-virtual">castor::OwnedBy&lt; Scene const &gt;</basecompoundref>
    <includes local="no">SceneRenderNodes.hpp</includes>
    <innerclass refid="d1/d5c/a03838" prot="public">castor3d::SceneRenderNodes::NodeData</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d1/d69/a03834_1abacbf267c230bb0cf8b2b6a63c8869c5" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename NodeT</type>
          </param>
        </templateparamlist>
        <type>std::unordered_map&lt; size_t, castor::UniquePtr&lt; NodeT &gt; &gt;</type>
        <definition>using castor3d::SceneRenderNodes::NodesPtrMapT =  std::unordered_map&lt; size_t, castor::UniquePtr&lt; NodeT &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>NodesPtrMapT</name>
        <qualifiedname>castor3d::SceneRenderNodes::NodesPtrMapT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="32" column="1" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d1/d69/a03834_1a26fc89cde3c457f34382889d4ea63adb" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename NodeT</type>
          </param>
        </templateparamlist>
        <type>std::unordered_map&lt; size_t, <ref refid="d1/d69/a03834_1abacbf267c230bb0cf8b2b6a63c8869c5" kindref="member">NodesPtrMapT</ref>&lt; NodeT &gt; &gt;</type>
        <definition>using castor3d::SceneRenderNodes::NodesPtrFlagsMapT =  std::unordered_map&lt; size_t, NodesPtrMapT&lt; NodeT &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>NodesPtrFlagsMapT</name>
        <qualifiedname>castor3d::SceneRenderNodes::NodesPtrFlagsMapT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="34" column="1" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d1/d69/a03834_1a3daa48602d8a8676a76dbf5fa38c034d" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d1/d5c/a03838" kindref="compound">NodeData</ref> &gt;</type>
        <definition>using castor3d::SceneRenderNodes::NodeDataArray =  std::vector&lt; NodeData &gt;</definition>
        <argsstring></argsstring>
        <name>NodeDataArray</name>
        <qualifiedname>castor3d::SceneRenderNodes::NodeDataArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="41" column="1" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d1/d69/a03834_1a2d3398a23e211c94c7a39a7f692799ca" prot="private" static="no" mutable="no">
        <type><ref refid="df/d75/a04010" kindref="compound">RenderDevice</ref> const  &amp;</type>
        <definition>RenderDevice const&amp; castor3d::SceneRenderNodes::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="98" column="21" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a6eda63edca5905fce9088a21301f27c8" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex castor3d::SceneRenderNodes::m_nodesMutex</definition>
        <argsstring></argsstring>
        <name>m_nodesMutex</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_nodesMutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="99" column="12" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a1eb56e65edae02871745ef50a4d3cfa0" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d69/a03834_1a26fc89cde3c457f34382889d4ea63adb" kindref="member">NodesPtrFlagsMapT</ref>&lt; <ref refid="dd/d51/a03842" kindref="compound">SubmeshRenderNode</ref> &gt;</type>
        <definition>NodesPtrFlagsMapT&lt; SubmeshRenderNode &gt; castor3d::SceneRenderNodes::m_submeshNodes</definition>
        <argsstring></argsstring>
        <name>m_submeshNodes</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_submeshNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="100" column="19" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a7045646362b195e24626bb070ebed3ec" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d69/a03834_1a26fc89cde3c457f34382889d4ea63adb" kindref="member">NodesPtrFlagsMapT</ref>&lt; <ref refid="de/de0/a03814" kindref="compound">BillboardRenderNode</ref> &gt;</type>
        <definition>NodesPtrFlagsMapT&lt; BillboardRenderNode &gt; castor3d::SceneRenderNodes::m_billboardNodes</definition>
        <argsstring></argsstring>
        <name>m_billboardNodes</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_billboardNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="101" column="19" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1aacaa6187aab6ef98265fe241916975f8" prot="private" static="no" mutable="no">
        <type>ashes::BufferPtr&lt; <ref refid="d4/d69/a05166" kindref="compound">ModelBufferConfiguration</ref> &gt;</type>
        <definition>ashes::BufferPtr&lt; ModelBufferConfiguration &gt; castor3d::SceneRenderNodes::m_modelsData</definition>
        <argsstring></argsstring>
        <name>m_modelsData</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_modelsData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="102" column="18" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1abf349f1753d5c9a7c1f937c902f97e7d" prot="private" static="no" mutable="no">
        <type>ashes::BufferPtr&lt; <ref refid="d2/dc4/a05134" kindref="compound">BillboardUboConfiguration</ref> &gt;</type>
        <definition>ashes::BufferPtr&lt; BillboardUboConfiguration &gt; castor3d::SceneRenderNodes::m_billboardsData</definition>
        <argsstring></argsstring>
        <name>m_billboardsData</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_billboardsData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="103" column="18" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a423ff5f7134726007a5ad11b8f821d10" prot="private" static="no" mutable="no">
        <type><ref refid="d4/d69/a05166" kindref="compound">ModelBufferConfiguration</ref> *</type>
        <definition>ModelBufferConfiguration* castor3d::SceneRenderNodes::m_modelsBuffer</definition>
        <argsstring></argsstring>
        <name>m_modelsBuffer</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_modelsBuffer</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="104" column="27" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a08fd61fbe5df447b392916d882bb8314" prot="private" static="no" mutable="no">
        <type><ref refid="d2/dc4/a05134" kindref="compound">BillboardUboConfiguration</ref> *</type>
        <definition>BillboardUboConfiguration* castor3d::SceneRenderNodes::m_billboardsBuffer</definition>
        <argsstring></argsstring>
        <name>m_billboardsBuffer</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_billboardsBuffer</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="105" column="28" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a8f80033be1cc8aae5a7950c523a91409" prot="private" static="no" mutable="no">
        <type>FramePassTimerUPtr</type>
        <definition>FramePassTimerUPtr castor3d::SceneRenderNodes::m_timerRenderNodes</definition>
        <argsstring></argsstring>
        <name>m_timerRenderNodes</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_timerRenderNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="106" column="20" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a30b1f283777483e173bb89097558e0cd" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d69/a03834_1a3daa48602d8a8676a76dbf5fa38c034d" kindref="member">NodeDataArray</ref></type>
        <definition>NodeDataArray castor3d::SceneRenderNodes::m_nodesData</definition>
        <argsstring></argsstring>
        <name>m_nodesData</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_nodesData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="107" column="15" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a3aebddcfd1390b0c439005343725358e" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::SceneRenderNodes::m_nodeId</definition>
        <argsstring></argsstring>
        <name>m_nodeId</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_nodeId</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="108" column="10" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1af5536559bb80017a7e870ae41742b2ea" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d94/a03698" kindref="compound">SceneCuller</ref> * &gt;</type>
        <definition>std::vector&lt; SceneCuller * &gt; castor3d::SceneRenderNodes::m_cullers</definition>
        <argsstring></argsstring>
        <name>m_cullers</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_cullers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="109" column="13" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1a3536321271c30ef61799020fe01e9ce2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderNodes::m_dirty</definition>
        <argsstring></argsstring>
        <name>m_dirty</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_dirty</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="110" column="6" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d69/a03834_1af6eac675c0aedf0a3240e9e50a05957f" prot="private" static="no" mutable="no">
        <type>VertexTransformingUPtr</type>
        <definition>VertexTransformingUPtr castor3d::SceneRenderNodes::m_vertexTransform</definition>
        <argsstring></argsstring>
        <name>m_vertexTransform</name>
        <qualifiedname>castor3d::SceneRenderNodes::m_vertexTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="111" column="24" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d69/a03834_1ab1c964fb284696a9647ca8e33d84a312" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneRenderNodes::SceneRenderNodes</definition>
        <argsstring>(Scene const &amp;scene)</argsstring>
        <name>SceneRenderNodes</name>
        <qualifiedname>castor3d::SceneRenderNodes::SceneRenderNodes</qualifiedname>
        <param>
          <type><ref refid="d8/d12/a04694" kindref="compound">Scene</ref> const &amp;</type>
          <declname>scene</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="44" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1ad5d364548be59446f1a4ae027e080876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::SceneRenderNodes::~SceneRenderNodes</definition>
        <argsstring>()</argsstring>
        <name>~SceneRenderNodes</name>
        <qualifiedname>castor3d::SceneRenderNodes::~SceneRenderNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="45" column="9"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a21cd1530f8c6257bcb41ee370f0cb9d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderNodes::registerCuller</definition>
        <argsstring>(SceneCuller &amp;culler)</argsstring>
        <name>registerCuller</name>
        <qualifiedname>castor3d::SceneRenderNodes::registerCuller</qualifiedname>
        <param>
          <type><ref refid="d3/d94/a03698" kindref="compound">SceneCuller</ref> &amp;</type>
          <declname>culler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="47" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1ada6b3fa56c2c09da9cdc67d03b998367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderNodes::unregisterCuller</definition>
        <argsstring>(SceneCuller &amp;culler)</argsstring>
        <name>unregisterCuller</name>
        <qualifiedname>castor3d::SceneRenderNodes::unregisterCuller</qualifiedname>
        <param>
          <type><ref refid="d3/d94/a03698" kindref="compound">SceneCuller</ref> &amp;</type>
          <declname>culler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="48" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a524ae6b3f2e9a79a6f8c871a43ad80df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderNodes::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>castor3d::SceneRenderNodes::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="49" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1ab379f91ba869bcd440c763f27fd11784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="dd/d51/a03842" kindref="compound">SubmeshRenderNode</ref> &amp;</type>
        <definition>C3D_API SubmeshRenderNode &amp; castor3d::SceneRenderNodes::createNode</definition>
        <argsstring>(Pass &amp;pass, Submesh &amp;data, Geometry &amp;instance, AnimatedMesh *mesh, AnimatedSkeleton *skeleton)</argsstring>
        <name>createNode</name>
        <qualifiedname>castor3d::SceneRenderNodes::createNode</qualifiedname>
        <param>
          <type><ref refid="d7/d8a/a02830" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d4/d60/a03446" kindref="compound">Submesh</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="d5/d03/a04582" kindref="compound">Geometry</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="dd/dc6/a04462" kindref="compound">AnimatedMesh</ref> *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="d1/d6c/a04478" kindref="compound">AnimatedSkeleton</ref> *</type>
          <declname>skeleton</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="50" column="28"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1ae2ef34dab43a2a989112be1f23c81621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/de0/a03814" kindref="compound">BillboardRenderNode</ref> &amp;</type>
        <definition>C3D_API BillboardRenderNode &amp; castor3d::SceneRenderNodes::createNode</definition>
        <argsstring>(Pass &amp;pass, BillboardBase &amp;instance)</argsstring>
        <name>createNode</name>
        <qualifiedname>castor3d::SceneRenderNodes::createNode</qualifiedname>
        <param>
          <type><ref refid="d7/d8a/a02830" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d1/d2a/a04566" kindref="compound">BillboardBase</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="55" column="30"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a9de88c3f056fa067ba96adf9ffa5a89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="dd/d51/a03842" kindref="compound">SubmeshRenderNode</ref> const *</type>
        <definition>C3D_API SubmeshRenderNode const  * castor3d::SceneRenderNodes::getSubmeshNode</definition>
        <argsstring>(uint32_t nodeId)</argsstring>
        <name>getSubmeshNode</name>
        <qualifiedname>castor3d::SceneRenderNodes::getSubmeshNode</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>nodeId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="57" column="34"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a3e3dd2976367540e3ac13bce74e7d1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="de/de0/a03814" kindref="compound">BillboardRenderNode</ref> const *</type>
        <definition>C3D_API BillboardRenderNode const  * castor3d::SceneRenderNodes::getBillboardNode</definition>
        <argsstring>(uint32_t nodeId)</argsstring>
        <name>getBillboardNode</name>
        <qualifiedname>castor3d::SceneRenderNodes::getBillboardNode</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>nodeId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="58" column="36"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a5da278b03369b92609ee43314826abfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderNodes::reportPassChange</definition>
        <argsstring>(Submesh &amp;data, Geometry &amp;instance, Material const &amp;oldMaterial, Material const &amp;newMaterial)</argsstring>
        <name>reportPassChange</name>
        <qualifiedname>castor3d::SceneRenderNodes::reportPassChange</qualifiedname>
        <param>
          <type><ref refid="d4/d60/a03446" kindref="compound">Submesh</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="d5/d03/a04582" kindref="compound">Geometry</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="df/d11/a02814" kindref="compound">Material</ref> const &amp;</type>
          <declname>oldMaterial</declname>
        </param>
        <param>
          <type><ref refid="df/d11/a02814" kindref="compound">Material</ref> const &amp;</type>
          <declname>newMaterial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="59" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a3b3cde74e1ccae2ddffd7d7759acf7af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderNodes::reportPassChange</definition>
        <argsstring>(BillboardBase &amp;billboard, Material const &amp;oldMaterial, Material const &amp;newMaterial)</argsstring>
        <name>reportPassChange</name>
        <qualifiedname>castor3d::SceneRenderNodes::reportPassChange</qualifiedname>
        <param>
          <type><ref refid="d1/d2a/a04566" kindref="compound">BillboardBase</ref> &amp;</type>
          <declname>billboard</declname>
        </param>
        <param>
          <type><ref refid="df/d11/a02814" kindref="compound">Material</ref> const &amp;</type>
          <declname>oldMaterial</declname>
        </param>
        <param>
          <type><ref refid="df/d11/a02814" kindref="compound">Material</ref> const &amp;</type>
          <declname>newMaterial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="63" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1aba7cb7618d0a2dc7481d822eb76441fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderNodes::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::SceneRenderNodes::update</qualifiedname>
        <param>
          <type><ref refid="df/d4e/a04094" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="66" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1aae15f63631fdd89ca1e06ff84a36f654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::SceneRenderNodes::update</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::SceneRenderNodes::update</qualifiedname>
        <param>
          <type><ref refid="d4/da2/a04102" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="67" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1abc06ae22c636176c5c40b5a47bf24670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> crg::FramePass const &amp;</type>
        <definition>C3D_API crg::FramePass const  &amp; castor3d::SceneRenderNodes::createVertexTransformPass</definition>
        <argsstring>(crg::FrameGraph &amp;graph)</argsstring>
        <name>createVertexTransformPass</name>
        <qualifiedname>castor3d::SceneRenderNodes::createVertexTransformPass</qualifiedname>
        <param>
          <type>crg::FrameGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="69" column="31"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1ace4c873a85b167a87eca23469296709d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::SceneRenderNodes::hasNodes</definition>
        <argsstring>() const</argsstring>
        <name>hasNodes</name>
        <qualifiedname>castor3d::SceneRenderNodes::hasNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="71" column="6" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a85310421bcca0e96f69b8e375b7e21a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; <ref refid="d4/d69/a05166" kindref="compound">ModelBufferConfiguration</ref> &gt; const &amp;</type>
        <definition>ashes::Buffer&lt; ModelBufferConfiguration &gt; const  &amp; castor3d::SceneRenderNodes::getModelBuffer</definition>
        <argsstring>() const</argsstring>
        <name>getModelBuffer</name>
        <qualifiedname>castor3d::SceneRenderNodes::getModelBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="77" column="22" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a400586d1bd292459b8ef9991e9eaa7aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ashes::Buffer&lt; <ref refid="d2/dc4/a05134" kindref="compound">BillboardUboConfiguration</ref> &gt; const &amp;</type>
        <definition>ashes::Buffer&lt; BillboardUboConfiguration &gt; const  &amp; castor3d::SceneRenderNodes::getBillboardsBuffer</definition>
        <argsstring>() const</argsstring>
        <name>getBillboardsBuffer</name>
        <qualifiedname>castor3d::SceneRenderNodes::getBillboardsBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="82" column="22" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1a67d980dd9b3c14e751dbdaa417e163e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d69/a03834_1a26fc89cde3c457f34382889d4ea63adb" kindref="member">NodesPtrFlagsMapT</ref>&lt; <ref refid="dd/d51/a03842" kindref="compound">SubmeshRenderNode</ref> &gt; const &amp;</type>
        <definition>NodesPtrFlagsMapT&lt; SubmeshRenderNode &gt; const  &amp; castor3d::SceneRenderNodes::getSubmeshNodes</definition>
        <argsstring>() const</argsstring>
        <name>getSubmeshNodes</name>
        <qualifiedname>castor3d::SceneRenderNodes::getSubmeshNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="87" column="26" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="d1/d69/a03834_1aa2066d1e24ceb33f09ba096d0bfc7786" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d69/a03834_1a26fc89cde3c457f34382889d4ea63adb" kindref="member">NodesPtrFlagsMapT</ref>&lt; <ref refid="de/de0/a03814" kindref="compound">BillboardRenderNode</ref> &gt; const &amp;</type>
        <definition>NodesPtrFlagsMapT&lt; BillboardRenderNode &gt; const  &amp; castor3d::SceneRenderNodes::getBillboardNodes</definition>
        <argsstring>() const</argsstring>
        <name>getBillboardNodes</name>
        <qualifiedname>castor3d::SceneRenderNodes::getBillboardNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Node/SceneRenderNodes.hpp" line="92" column="26" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::SceneRenderNodes</label>
        <link refid="d1/d69/a03834"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Scene const &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>castor3d::SceneRenderNodes</label>
        <link refid="d1/d69/a03834"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor::OwnedBy&lt; Scene const &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Render/Node/SceneRenderNodes.hpp" line="27" column="1" bodyfile="Render/Node/SceneRenderNodes.hpp" bodystart="29" bodyend="112"/>
    <listofallmembers>
      <member refid="d1/d69/a03834_1a524ae6b3f2e9a79a6f8c871a43ad80df" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>clear</name></member>
      <member refid="d1/d69/a03834_1ab379f91ba869bcd440c763f27fd11784" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>createNode</name></member>
      <member refid="d1/d69/a03834_1ae2ef34dab43a2a989112be1f23c81621" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>createNode</name></member>
      <member refid="d1/d69/a03834_1abc06ae22c636176c5c40b5a47bf24670" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>createVertexTransformPass</name></member>
      <member refid="d1/d69/a03834_1a3e3dd2976367540e3ac13bce74e7d1aa" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>getBillboardNode</name></member>
      <member refid="d1/d69/a03834_1aa2066d1e24ceb33f09ba096d0bfc7786" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>getBillboardNodes</name></member>
      <member refid="d1/d69/a03834_1a400586d1bd292459b8ef9991e9eaa7aa" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>getBillboardsBuffer</name></member>
      <member refid="d1/d69/a03834_1a85310421bcca0e96f69b8e375b7e21a6" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>getModelBuffer</name></member>
      <member refid="d1/d69/a03834_1a9de88c3f056fa067ba96adf9ffa5a89d" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>getSubmeshNode</name></member>
      <member refid="d1/d69/a03834_1a67d980dd9b3c14e751dbdaa417e163e4" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>getSubmeshNodes</name></member>
      <member refid="d1/d69/a03834_1ace4c873a85b167a87eca23469296709d" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>hasNodes</name></member>
      <member refid="d1/d69/a03834_1a7045646362b195e24626bb070ebed3ec" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_billboardNodes</name></member>
      <member refid="d1/d69/a03834_1a08fd61fbe5df447b392916d882bb8314" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_billboardsBuffer</name></member>
      <member refid="d1/d69/a03834_1abf349f1753d5c9a7c1f937c902f97e7d" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_billboardsData</name></member>
      <member refid="d1/d69/a03834_1af5536559bb80017a7e870ae41742b2ea" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_cullers</name></member>
      <member refid="d1/d69/a03834_1a2d3398a23e211c94c7a39a7f692799ca" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_device</name></member>
      <member refid="d1/d69/a03834_1a3536321271c30ef61799020fe01e9ce2" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_dirty</name></member>
      <member refid="d1/d69/a03834_1a423ff5f7134726007a5ad11b8f821d10" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_modelsBuffer</name></member>
      <member refid="d1/d69/a03834_1aacaa6187aab6ef98265fe241916975f8" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_modelsData</name></member>
      <member refid="d1/d69/a03834_1a3aebddcfd1390b0c439005343725358e" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_nodeId</name></member>
      <member refid="d1/d69/a03834_1a30b1f283777483e173bb89097558e0cd" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_nodesData</name></member>
      <member refid="d1/d69/a03834_1a6eda63edca5905fce9088a21301f27c8" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_nodesMutex</name></member>
      <member refid="d1/d69/a03834_1a1eb56e65edae02871745ef50a4d3cfa0" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_submeshNodes</name></member>
      <member refid="d1/d69/a03834_1a8f80033be1cc8aae5a7950c523a91409" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_timerRenderNodes</name></member>
      <member refid="d1/d69/a03834_1af6eac675c0aedf0a3240e9e50a05957f" prot="private" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>m_vertexTransform</name></member>
      <member refid="d1/d69/a03834_1a3daa48602d8a8676a76dbf5fa38c034d" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>NodeDataArray</name></member>
      <member refid="d1/d69/a03834_1a26fc89cde3c457f34382889d4ea63adb" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>NodesPtrFlagsMapT</name></member>
      <member refid="d1/d69/a03834_1abacbf267c230bb0cf8b2b6a63c8869c5" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>NodesPtrMapT</name></member>
      <member refid="d1/d69/a03834_1a21cd1530f8c6257bcb41ee370f0cb9d0" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>registerCuller</name></member>
      <member refid="d1/d69/a03834_1a5da278b03369b92609ee43314826abfe" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>reportPassChange</name></member>
      <member refid="d1/d69/a03834_1a3b3cde74e1ccae2ddffd7d7759acf7af" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>reportPassChange</name></member>
      <member refid="d1/d69/a03834_1ab1c964fb284696a9647ca8e33d84a312" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>SceneRenderNodes</name></member>
      <member refid="d1/d69/a03834_1ada6b3fa56c2c09da9cdc67d03b998367" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>unregisterCuller</name></member>
      <member refid="d1/d69/a03834_1aba7cb7618d0a2dc7481d822eb76441fc" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>update</name></member>
      <member refid="d1/d69/a03834_1aae15f63631fdd89ca1e06ff84a36f654" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>update</name></member>
      <member refid="d1/d69/a03834_1ad5d364548be59446f1a4ae027e080876" prot="public" virt="non-virtual"><scope>castor3d::SceneRenderNodes</scope><name>~SceneRenderNodes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
