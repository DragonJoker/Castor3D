<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="dd/d3b/a02291" kind="class" language="C++" prot="public">
    <compoundname>castor3d::BinaryChunk</compoundname>
    <includes local="no">BinaryChunk.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/d3b/a02291_1a5dfb1c3fbdc326cdaf84215c3be977e5" prot="private" static="no" mutable="no">
        <type><ref refid="da/de3/a01398_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
        <definition>ChunkType castor3d::BinaryChunk::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <qualifiedname>castor3d::BinaryChunk::m_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="368" column="11" bodyfile="Binary/BinaryChunk.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d3b/a02291_1a059735da6503db76252c057fc6709ee3" prot="private" static="no" mutable="no">
        <type>castor::ByteArray</type>
        <definition>castor::ByteArray castor3d::BinaryChunk::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <qualifiedname>castor3d::BinaryChunk::m_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="369" column="19" bodyfile="Binary/BinaryChunk.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d3b/a02291_1a015fcb63f067ac5b03be85fb8083a343" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::BinaryChunk::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <qualifiedname>castor3d::BinaryChunk::m_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="370" column="10" bodyfile="Binary/BinaryChunk.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d3b/a02291_1a832aab7e0a978eb5f93cfed8fdee6585" prot="private" static="no" mutable="no">
        <type>std::list&lt; castor::ByteArray &gt;</type>
        <definition>std::list&lt; castor::ByteArray &gt; castor3d::BinaryChunk::m_addedData</definition>
        <argsstring></argsstring>
        <name>m_addedData</name>
        <qualifiedname>castor3d::BinaryChunk::m_addedData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="371" column="11" bodyfile="Binary/BinaryChunk.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d3b/a02291_1a1d9e53f4c699bc1d98fd0ee89a62cc09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::BinaryChunk::BinaryChunk</definition>
        <argsstring>()</argsstring>
        <name>BinaryChunk</name>
        <qualifiedname>castor3d::BinaryChunk::BinaryChunk</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="148" column="9"/>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1aed1a8ade3e7aa65e73874b88d1b764a8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::BinaryChunk::BinaryChunk</definition>
        <argsstring>(ChunkType type)</argsstring>
        <name>BinaryChunk</name>
        <qualifiedname>castor3d::BinaryChunk::BinaryChunk</qualifiedname>
        <param>
          <type><ref refid="da/de3/a01398_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The chunk type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="157" column="18"/>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1abbed73a8f9ab118d0b9ba81219a919b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::BinaryChunk::finalise</definition>
        <argsstring>()</argsstring>
        <name>finalise</name>
        <qualifiedname>castor3d::BinaryChunk::finalise</qualifiedname>
        <briefdescription>
<para>Computes the final data buffer from each one added until this call. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="164" column="14"/>
        <referencedby refid="d2/da6/a02339_1a3b4ae75e6ecd0bdf9f5dc26381633dab" compoundref="d5/db1/a00140" startline="59" endline="71">castor3d::BinaryWriterBase&lt; TWritten &gt;::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1abb64f14b109e38fe0aaddab9ac52f8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::BinaryChunk::add</definition>
        <argsstring>(uint8_t *data, uint32_t size)</argsstring>
        <name>add</name>
        <qualifiedname>castor3d::BinaryChunk::add</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>adds data to the chunk </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="175" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a7c1bb3cf53d6b4a6856c9964c54fac11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::BinaryChunk::get</definition>
        <argsstring>(uint8_t *data, uint32_t size)</argsstring>
        <name>get</name>
        <qualifiedname>castor3d::BinaryChunk::get</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Retrieves data from the chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data buffer to fill </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="186" column="14"/>
        <referencedby refid="dc/d6a/a02463_1a062463121032ba679336be2382c508d0" compoundref="d9/db6/a00146" startline="30" endline="42">castor3d::ChunkParserBase::parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1af711032d94753cb2d482fe2bcf3afb17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::BinaryChunk::checkAvailable</definition>
        <argsstring>(uint32_t size=0) const</argsstring>
        <name>checkAvailable</name>
        <qualifiedname>castor3d::BinaryChunk::checkAvailable</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Checks that the remaining place can hold the given size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="195" column="14"/>
        <referencedby refid="d5/d1b/a02331_1ab5f9ba53ad5865f967b41e5a27ed73a9" compoundref="d4/d81/a00110" startline="489" endline="500">castor3d::BinaryParserBase&lt; TParsed &gt;::doGetSubChunk</referencedby>
        <referencedby refid="d5/d1b/a02331_1a035881aba2b64571b30a5efd3faaf3d9" compoundref="d4/d81/a00110" startline="322" endline="385">castor3d::BinaryParserBase&lt; TParsed &gt;::doParseHeader</referencedby>
        <referencedby refid="d2/d70/a02475_1ab3e16eea9051bc679aff2782279aafea" compoundref="d9/db6/a00146" startline="183" endline="203">castor3d::ChunkParser&lt; castor::Path &gt;::parse</referencedby>
        <referencedby refid="d1/ded/a02471_1acf5c3a4513e23e175339295361d35119" compoundref="d9/db6/a00146" startline="135" endline="155">castor3d::ChunkParser&lt; castor::String &gt;::parse</referencedby>
        <referencedby refid="d5/d1b/a02331_1a5db83668684ca219f67de3a381898e64" compoundref="d4/d81/a00110" startline="48" endline="86">castor3d::BinaryParserBase&lt; TParsed &gt;::parse</referencedby>
        <referencedby refid="dc/d6a/a02463_1a062463121032ba679336be2382c508d0" compoundref="d9/db6/a00146" startline="30" endline="42">castor3d::ChunkParserBase::parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a2819c7ddf95251296b5a61bf40435358" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::BinaryChunk::getRemaining</definition>
        <argsstring>() const</argsstring>
        <name>getRemaining</name>
        <qualifiedname>castor3d::BinaryChunk::getRemaining</qualifiedname>
        <briefdescription>
<para>Retrieves the remaining place. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="204" column="18"/>
        <referencedby refid="d2/d70/a02475_1ab3e16eea9051bc679aff2782279aafea" compoundref="d9/db6/a00146" startline="183" endline="203">castor3d::ChunkParser&lt; castor::Path &gt;::parse</referencedby>
        <referencedby refid="d1/ded/a02471_1acf5c3a4513e23e175339295361d35119" compoundref="d9/db6/a00146" startline="135" endline="155">castor3d::ChunkParser&lt; castor::String &gt;::parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1ab3148d763e8fca01e746ec01991db22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::BinaryChunk::getSubChunk</definition>
        <argsstring>(BinaryChunk &amp;subchunk)</argsstring>
        <name>getSubChunk</name>
        <qualifiedname>castor3d::BinaryChunk::getSubChunk</qualifiedname>
        <param>
          <type><ref refid="dd/d3b/a02291" kindref="compound">BinaryChunk</ref> &amp;</type>
          <declname>subchunk</declname>
        </param>
        <briefdescription>
<para>Retrieves a subchunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">subchunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the subchunk </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if any error occured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="215" column="14"/>
        <referencedby refid="d5/d1b/a02331_1ab5f9ba53ad5865f967b41e5a27ed73a9" compoundref="d4/d81/a00110" startline="489" endline="500">castor3d::BinaryParserBase&lt; TParsed &gt;::doGetSubChunk</referencedby>
        <referencedby refid="d5/d1b/a02331_1a035881aba2b64571b30a5efd3faaf3d9" compoundref="d4/d81/a00110" startline="322" endline="385">castor3d::BinaryParserBase&lt; TParsed &gt;::doParseHeader</referencedby>
        <referencedby refid="d5/d1b/a02331_1a5db83668684ca219f67de3a381898e64" compoundref="d4/d81/a00110" startline="48" endline="86">castor3d::BinaryParserBase&lt; TParsed &gt;::parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a05ffb50a92f97be91612f8f91ceeed8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::BinaryChunk::addSubChunk</definition>
        <argsstring>(BinaryChunk const &amp;subchunk)</argsstring>
        <name>addSubChunk</name>
        <qualifiedname>castor3d::BinaryChunk::addSubChunk</qualifiedname>
        <param>
          <type><ref refid="dd/d3b/a02291" kindref="compound">BinaryChunk</ref> const &amp;</type>
          <declname>subchunk</declname>
        </param>
        <briefdescription>
<para>Writes a subchunk into a chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">subchunk</parametername>
</parameternamelist>
<parameterdescription>
<para>The subchunk </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if any error occured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="226" column="14"/>
        <referencedby refid="d2/da6/a02339_1a8828d359b7a61ea2b657d5aada2dd87b" compoundref="d5/db1/a00140" startline="84" endline="103">castor3d::BinaryWriterBase&lt; TWritten &gt;::doWriteHeader</referencedby>
        <referencedby refid="d2/da6/a02339_1a3b4ae75e6ecd0bdf9f5dc26381633dab" compoundref="d5/db1/a00140" startline="59" endline="71">castor3d::BinaryWriterBase&lt; TWritten &gt;::write</referencedby>
        <referencedby refid="d7/dc4/a02479_1a6d5639d69c83f6b59094817e85f17398" compoundref="da/d1e/a00149" startline="32" endline="51">castor3d::ChunkWriterBase::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1ae0ed432fd2e24e10f545b4d34d1d9a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::BinaryChunk::write</definition>
        <argsstring>(castor::BinaryFile &amp;file)</argsstring>
        <name>write</name>
        <qualifiedname>castor3d::BinaryChunk::write</qualifiedname>
        <param>
          <type>castor::BinaryFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>To chunk writer function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if any error occured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="237" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1aef0d7f6fbdd6f0ace675b5c4784b4089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> bool</type>
        <definition>C3D_API bool castor3d::BinaryChunk::read</definition>
        <argsstring>(castor::BinaryFile &amp;file)</argsstring>
        <name>read</name>
        <qualifiedname>castor3d::BinaryChunk::read</qualifiedname>
        <param>
          <type>castor::BinaryFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>From file reader function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file containing the chunk </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if any error occured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="248" column="14"/>
        <referencedby refid="d5/d1b/a02331_1a5db83668684ca219f67de3a381898e64" compoundref="d4/d81/a00110" startline="48" endline="86">castor3d::BinaryParserBase&lt; TParsed &gt;::parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a866e46180b6501c20d8c646b72174ac1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const *</type>
        <definition>uint8_t const  * castor3d::BinaryChunk::getRemainingData</definition>
        <argsstring>() const</argsstring>
        <name>getRemainingData</name>
        <qualifiedname>castor3d::BinaryChunk::getRemainingData</qualifiedname>
        <briefdescription>
<para>Retrieves the remaining data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="257" column="23" bodyfile="Binary/BinaryChunk.hpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a4b542ea9ab36cf0aaa73e9f1fed8967b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/de3/a01398_1a742783d4e4b7354fac3e375ae107414d" kindref="member">ChunkType</ref></type>
        <definition>ChunkType castor3d::BinaryChunk::getChunkType</definition>
        <argsstring>() const</argsstring>
        <name>getChunkType</name>
        <qualifiedname>castor3d::BinaryChunk::getChunkType</qualifiedname>
        <briefdescription>
<para>Retrieves the chunk type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="269" column="18" bodyfile="Binary/BinaryChunk.hpp" bodystart="269" bodyend="272"/>
        <referencedby refid="d5/d1b/a02331_1a035881aba2b64571b30a5efd3faaf3d9" compoundref="d4/d81/a00110" startline="322" endline="385">castor3d::BinaryParserBase&lt; TParsed &gt;::doParseHeader</referencedby>
        <referencedby refid="d5/d1b/a02331_1a5db83668684ca219f67de3a381898e64" compoundref="d4/d81/a00110" startline="48" endline="86">castor3d::BinaryParserBase&lt; TParsed &gt;::parse</referencedby>
        <referencedby refid="d5/d1b/a02331_1a61b02dbf69d89569eff5be22facd5f07" compoundref="d4/d81/a00110" startline="162" endline="189">castor3d::BinaryParserBase&lt; TParsed &gt;::parse_v1_1</referencedby>
        <referencedby refid="d5/d1b/a02331_1a95788692ddd6fae91074c299b674aaab" compoundref="d4/d81/a00110" startline="202" endline="229">castor3d::BinaryParserBase&lt; TParsed &gt;::parse_v1_2</referencedby>
        <referencedby refid="d5/d1b/a02331_1a6f39b66d980e4a65660016f71115a89c" compoundref="d4/d81/a00110" startline="242" endline="269">castor3d::BinaryParserBase&lt; TParsed &gt;::parse_v1_3</referencedby>
        <referencedby refid="d5/d1b/a02331_1aabc068daf8d99718497aa35f7a17c346" compoundref="d4/d81/a00110" startline="282" endline="309">castor3d::BinaryParserBase&lt; TParsed &gt;::parse_v1_4</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a897d1fd01c2b6d1ac85de9c3c501b3a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t castor3d::BinaryChunk::getDataSize</definition>
        <argsstring>() const</argsstring>
        <name>getDataSize</name>
        <qualifiedname>castor3d::BinaryChunk::getDataSize</qualifiedname>
        <briefdescription>
<para>Retrieves the chunk data size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="281" column="17" bodyfile="Binary/BinaryChunk.hpp" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a56f8f486a9cd589ac3c6d10ccf83830e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t const *</type>
        <definition>uint8_t const  * castor3d::BinaryChunk::getData</definition>
        <argsstring>() const</argsstring>
        <name>getData</name>
        <qualifiedname>castor3d::BinaryChunk::getData</qualifiedname>
        <briefdescription>
<para>Retrieves the chunk data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="293" column="23" bodyfile="Binary/BinaryChunk.hpp" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1aa21722c40ca9e697b02b6612e81e41c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::BinaryChunk::setData</definition>
        <argsstring>(uint8_t const *begin, uint8_t const *end)</argsstring>
        <name>setData</name>
        <qualifiedname>castor3d::BinaryChunk::setData</qualifiedname>
        <param>
          <type>uint8_t const *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Sets the chunk&apos;s data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>The data buffer&apos;s begin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>The data buffer&apos;s end </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="307" column="13" bodyfile="Binary/BinaryChunk.hpp" bodystart="307" bodyend="311"/>
        <referencedby refid="d7/dc4/a02479_1a6d5639d69c83f6b59094817e85f17398" compoundref="da/d1e/a00149" startline="32" endline="51">castor3d::ChunkWriterBase::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a08e242acd79584a8c061b89c14f68452" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::BinaryChunk::endParse</definition>
        <argsstring>()</argsstring>
        <name>endParse</name>
        <qualifiedname>castor3d::BinaryChunk::endParse</qualifiedname>
        <briefdescription>
<para>Retrieves the chunk data size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="318" column="6" bodyfile="Binary/BinaryChunk.hpp" bodystart="318" bodyend="321"/>
        <referencedby refid="d5/d1b/a02331_1a035881aba2b64571b30a5efd3faaf3d9" compoundref="d4/d81/a00110" startline="322" endline="385">castor3d::BinaryParserBase&lt; TParsed &gt;::doParseHeader</referencedby>
        <referencedby refid="d5/d1b/a02331_1a6bbbb529f463085c7d259600ae1b3e99" compoundref="d4/d81/a00110" startline="99" endline="149">castor3d::BinaryParserBase&lt; TParsed &gt;::parse</referencedby>
        <referencedby refid="d5/d1b/a02331_1a61b02dbf69d89569eff5be22facd5f07" compoundref="d4/d81/a00110" startline="162" endline="189">castor3d::BinaryParserBase&lt; TParsed &gt;::parse_v1_1</referencedby>
        <referencedby refid="d5/d1b/a02331_1a95788692ddd6fae91074c299b674aaab" compoundref="d4/d81/a00110" startline="202" endline="229">castor3d::BinaryParserBase&lt; TParsed &gt;::parse_v1_2</referencedby>
        <referencedby refid="d5/d1b/a02331_1a6f39b66d980e4a65660016f71115a89c" compoundref="d4/d81/a00110" startline="242" endline="269">castor3d::BinaryParserBase&lt; TParsed &gt;::parse_v1_3</referencedby>
        <referencedby refid="d5/d1b/a02331_1aabc068daf8d99718497aa35f7a17c346" compoundref="d4/d81/a00110" startline="282" endline="309">castor3d::BinaryParserBase&lt; TParsed &gt;::parse_v1_4</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1a7a755e5c70676c80e150d61574442c2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::BinaryChunk::resetParse</definition>
        <argsstring>()</argsstring>
        <name>resetParse</name>
        <qualifiedname>castor3d::BinaryChunk::resetParse</qualifiedname>
        <briefdescription>
<para>Resets the chunk, to be able to reparse it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="328" column="6" bodyfile="Binary/BinaryChunk.hpp" bodystart="328" bodyend="331"/>
        <referencedby refid="d5/d1b/a02331_1a6bbbb529f463085c7d259600ae1b3e99" compoundref="d4/d81/a00110" startline="99" endline="149">castor3d::BinaryParserBase&lt; TParsed &gt;::parse</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="dd/d3b/a02291_1a7f1fb9ce9dd3bc07fecd4f019350944a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d22/a00245_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::BinaryChunk::binaryError</definition>
        <argsstring>(std::string_view view)</argsstring>
        <name>binaryError</name>
        <qualifiedname>castor3d::BinaryChunk::binaryError</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="334" column="14"/>
      </memberdef>
      <memberdef kind="function" id="dd/d3b/a02291_1ae29dfd79c3cae3e844d9baa06769afed" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool castor3d::BinaryChunk::doRead</definition>
        <argsstring>(T *values, uint32_t count)</argsstring>
        <name>doRead</name>
        <qualifiedname>castor3d::BinaryChunk::doRead</qualifiedname>
        <param>
          <type>T *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Binary/BinaryChunk.hpp" line="338" column="13" bodyfile="Binary/BinaryChunk.hpp" bodystart="338" bodyend="365"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Binary/BinaryChunk.hpp" line="139" column="1" bodyfile="Binary/BinaryChunk.hpp" bodystart="140" bodyend="372"/>
    <listofallmembers>
      <member refid="dd/d3b/a02291_1abb64f14b109e38fe0aaddab9ac52f8b2" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>add</name></member>
      <member refid="dd/d3b/a02291_1a05ffb50a92f97be91612f8f91ceeed8e" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>addSubChunk</name></member>
      <member refid="dd/d3b/a02291_1a1d9e53f4c699bc1d98fd0ee89a62cc09" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>BinaryChunk</name></member>
      <member refid="dd/d3b/a02291_1aed1a8ade3e7aa65e73874b88d1b764a8" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>BinaryChunk</name></member>
      <member refid="dd/d3b/a02291_1a7f1fb9ce9dd3bc07fecd4f019350944a" prot="private" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>binaryError</name></member>
      <member refid="dd/d3b/a02291_1af711032d94753cb2d482fe2bcf3afb17" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>checkAvailable</name></member>
      <member refid="dd/d3b/a02291_1ae29dfd79c3cae3e844d9baa06769afed" prot="private" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>doRead</name></member>
      <member refid="dd/d3b/a02291_1a08e242acd79584a8c061b89c14f68452" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>endParse</name></member>
      <member refid="dd/d3b/a02291_1abbed73a8f9ab118d0b9ba81219a919b6" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>finalise</name></member>
      <member refid="dd/d3b/a02291_1a7c1bb3cf53d6b4a6856c9964c54fac11" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>get</name></member>
      <member refid="dd/d3b/a02291_1a4b542ea9ab36cf0aaa73e9f1fed8967b" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>getChunkType</name></member>
      <member refid="dd/d3b/a02291_1a56f8f486a9cd589ac3c6d10ccf83830e" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>getData</name></member>
      <member refid="dd/d3b/a02291_1a897d1fd01c2b6d1ac85de9c3c501b3a6" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>getDataSize</name></member>
      <member refid="dd/d3b/a02291_1a2819c7ddf95251296b5a61bf40435358" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>getRemaining</name></member>
      <member refid="dd/d3b/a02291_1a866e46180b6501c20d8c646b72174ac1" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>getRemainingData</name></member>
      <member refid="dd/d3b/a02291_1ab3148d763e8fca01e746ec01991db22b" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>getSubChunk</name></member>
      <member refid="dd/d3b/a02291_1a832aab7e0a978eb5f93cfed8fdee6585" prot="private" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>m_addedData</name></member>
      <member refid="dd/d3b/a02291_1a059735da6503db76252c057fc6709ee3" prot="private" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>m_data</name></member>
      <member refid="dd/d3b/a02291_1a015fcb63f067ac5b03be85fb8083a343" prot="private" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>m_index</name></member>
      <member refid="dd/d3b/a02291_1a5dfb1c3fbdc326cdaf84215c3be977e5" prot="private" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>m_type</name></member>
      <member refid="dd/d3b/a02291_1aef0d7f6fbdd6f0ace675b5c4784b4089" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>read</name></member>
      <member refid="dd/d3b/a02291_1a7a755e5c70676c80e150d61574442c2c" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>resetParse</name></member>
      <member refid="dd/d3b/a02291_1aa21722c40ca9e697b02b6612e81e41c9" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>setData</name></member>
      <member refid="dd/d3b/a02291_1ae0ed432fd2e24e10f545b4d34d1d9a82" prot="public" virt="non-virtual"><scope>castor3d::BinaryChunk</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
