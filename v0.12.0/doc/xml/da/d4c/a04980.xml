<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="da/d4c/a04980" kind="class" language="C++" prot="public">
    <compoundname>castor3d::SkinningUbo</compoundname>
    <includes local="no">SkinningUbo.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="da/d4c/a04980_1a30a15bc7ffadd3d75696274b111dc12c" prot="public" static="no">
        <type><ref refid="db/df9/a05044" kindref="compound">SkinningTransformsConfiguration</ref></type>
        <definition>using castor3d::SkinningUbo::Configuration =  SkinningTransformsConfiguration</definition>
        <argsstring></argsstring>
        <name>Configuration</name>
        <qualifiedname>castor3d::SkinningUbo::Configuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/SkinningUbo.hpp" line="28" column="1" bodyfile="Shader/Ubos/SkinningUbo.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="da/d4c/a04980_1ac79a4280ebe9232da516cc3c7ce3a67e" prot="public" static="yes" mutable="no">
        <type><ref refid="d2/dc8/a00242_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String const</type>
        <definition>C3D_API castor::String const castor3d::SkinningUbo::BufferSkinning</definition>
        <argsstring></argsstring>
        <name>BufferSkinning</name>
        <qualifiedname>castor3d::SkinningUbo::BufferSkinning</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of the skinning animation frame variable buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/SkinningUbo.hpp" line="118" column="37" bodyfile="Shader/Ubos/SkinningUbo.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d4c/a04980_1a676e025469152f3d89b778faa3802046" prot="public" static="yes" mutable="no">
        <type><ref refid="d2/dc8/a00242_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String const</type>
        <definition>C3D_API castor::String const castor3d::SkinningUbo::Bones</definition>
        <argsstring></argsstring>
        <name>Bones</name>
        <qualifiedname>castor3d::SkinningUbo::Bones</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of the bones matrices attribute. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/SkinningUbo.hpp" line="121" column="37" bodyfile="Shader/Ubos/SkinningUbo.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="da/d4c/a04980_1adfc63047bd72ba44a42ae30162727457" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc8/a00242_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d8/dbe/a04976" kindref="compound">shader::SkinningData</ref></type>
        <definition>static C3D_API shader::SkinningData castor3d::SkinningUbo::declare</definition>
        <argsstring>(sdw::ShaderWriter &amp;writer, uint32_t transformsBinding, uint32_t transformsSet, ProgramFlags const &amp;flags)</argsstring>
        <name>declare</name>
        <qualifiedname>castor3d::SkinningUbo::declare</qualifiedname>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>transformsBinding</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>transformsSet</declname>
        </param>
        <param>
          <type><ref refid="d2/df5/a01395_1ab503144f281345b45ccc3f3a94543dce" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Declares the variables needed to compute skinning in vertex shader. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">writer</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader writer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uboBinding</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor set binding point for UBO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sboBinding</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor set binding point for SBO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor set index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The program flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The skinning data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/SkinningUbo.hpp" line="49" column="37"/>
      </memberdef>
      <memberdef kind="function" id="da/d4c/a04980_1a3fd7f15178f2599d81698151187385b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc8/a00242_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> sdw::Mat4</type>
        <definition>static C3D_API sdw::Mat4 castor3d::SkinningUbo::computeTransform</definition>
        <argsstring>(shader::SkinningData const &amp;data, sdw::Mat4 transform, sdw::ShaderWriter &amp;writer, ProgramFlags const &amp;flags, sdw::Mat4 const &amp;curMtxModel, sdw::UInt const &amp;skinningId, sdw::UVec4 const &amp;boneIds0, sdw::UVec4 const &amp;boneIds1, sdw::Vec4 const &amp;boneWeights0, sdw::Vec4 const &amp;boneWeights1)</argsstring>
        <name>computeTransform</name>
        <qualifiedname>castor3d::SkinningUbo::computeTransform</qualifiedname>
        <param>
          <type><ref refid="d8/dbe/a04976" kindref="compound">shader::SkinningData</ref> const &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>sdw::Mat4</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="d2/df5/a01395_1ab503144f281345b45ccc3f3a94543dce" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>sdw::Mat4 const &amp;</type>
          <declname>curMtxModel</declname>
        </param>
        <param>
          <type>sdw::UInt const &amp;</type>
          <declname>skinningId</declname>
        </param>
        <param>
          <type>sdw::UVec4 const &amp;</type>
          <declname>boneIds0</declname>
        </param>
        <param>
          <type>sdw::UVec4 const &amp;</type>
          <declname>boneIds1</declname>
        </param>
        <param>
          <type>sdw::Vec4 const &amp;</type>
          <declname>boneWeights0</declname>
        </param>
        <param>
          <type>sdw::Vec4 const &amp;</type>
          <declname>boneWeights1</declname>
        </param>
        <briefdescription>
<para>Computes skinning transformation in vertex shader. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The skinning data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">writer</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader writer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The program flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The resulting matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/SkinningUbo.hpp" line="67" column="26"/>
        <referencedby refid="da/d4c/a04980_1ae0ca0826de1e2b6da239d95b8d847752" compoundref="da/dd8/a01265" startline="92" endline="113">computeTransform</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d4c/a04980_1ae0ca0826de1e2b6da239d95b8d847752" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ast::var::Flag</type>
            <declname>FlagT</declname>
            <defname>FlagT</defname>
          </param>
        </templateparamlist>
        <type>sdw::Mat4</type>
        <definition>static sdw::Mat4 castor3d::SkinningUbo::computeTransform</definition>
        <argsstring>(shader::SkinningData const &amp;data, shader::VertexSurfaceT&lt; FlagT &gt; const &amp;surface, sdw::ShaderWriter &amp;writer, ProgramFlags const &amp;flags, sdw::Mat4 const &amp;curMtxModel, sdw::Int const &amp;instanceIndex, sdw::UVec4 const &amp;boneIds0, sdw::UVec4 const &amp;boneIds1, sdw::Vec4 const &amp;boneWeights0, sdw::Vec4 const &amp;boneWeights1)</argsstring>
        <name>computeTransform</name>
        <qualifiedname>castor3d::SkinningUbo::computeTransform</qualifiedname>
        <param>
          <type><ref refid="d8/dbe/a04976" kindref="compound">shader::SkinningData</ref> const &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="dc/d4a/a04832" kindref="compound">shader::VertexSurfaceT</ref>&lt; FlagT &gt; const &amp;</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>sdw::ShaderWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="d2/df5/a01395_1ab503144f281345b45ccc3f3a94543dce" kindref="member">ProgramFlags</ref> const &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>sdw::Mat4 const &amp;</type>
          <declname>curMtxModel</declname>
        </param>
        <param>
          <type>sdw::Int const &amp;</type>
          <declname>instanceIndex</declname>
        </param>
        <param>
          <type>sdw::UVec4 const &amp;</type>
          <declname>boneIds0</declname>
        </param>
        <param>
          <type>sdw::UVec4 const &amp;</type>
          <declname>boneIds1</declname>
        </param>
        <param>
          <type>sdw::Vec4 const &amp;</type>
          <declname>boneWeights0</declname>
        </param>
        <param>
          <type>sdw::Vec4 const &amp;</type>
          <declname>boneWeights1</declname>
        </param>
        <briefdescription>
<para>Computes skinning transformation in vertex shader. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The skinning data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">writer</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader writer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The program flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The resulting matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Shader/Ubos/SkinningUbo.hpp" line="92" column="18" bodyfile="Shader/Ubos/SkinningUbo.hpp" bodystart="92" bodyend="113"/>
        <references refid="da/d4c/a04980_1a3fd7f15178f2599d81698151187385b7">computeTransform</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Shader/Ubos/SkinningUbo.hpp" line="25" column="1" bodyfile="Shader/Ubos/SkinningUbo.hpp" bodystart="26" bodyend="122"/>
    <listofallmembers>
      <member refid="da/d4c/a04980_1a676e025469152f3d89b778faa3802046" prot="public" virt="non-virtual"><scope>castor3d::SkinningUbo</scope><name>Bones</name></member>
      <member refid="da/d4c/a04980_1ac79a4280ebe9232da516cc3c7ce3a67e" prot="public" virt="non-virtual"><scope>castor3d::SkinningUbo</scope><name>BufferSkinning</name></member>
      <member refid="da/d4c/a04980_1a3fd7f15178f2599d81698151187385b7" prot="public" virt="non-virtual"><scope>castor3d::SkinningUbo</scope><name>computeTransform</name></member>
      <member refid="da/d4c/a04980_1ae0ca0826de1e2b6da239d95b8d847752" prot="public" virt="non-virtual"><scope>castor3d::SkinningUbo</scope><name>computeTransform</name></member>
      <member refid="da/d4c/a04980_1a30a15bc7ffadd3d75696274b111dc12c" prot="public" virt="non-virtual"><scope>castor3d::SkinningUbo</scope><name>Configuration</name></member>
      <member refid="da/d4c/a04980_1adfc63047bd72ba44a42ae30162727457" prot="public" virt="non-virtual"><scope>castor3d::SkinningUbo</scope><name>declare</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
