<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="d8/d4c/a04506" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>castor3d::LightCategory</compoundname>
    <derivedcompoundref refid="dc/dd0/a04498" prot="public" virt="non-virtual">castor3d::DirectionalLight</derivedcompoundref>
    <derivedcompoundref refid="d8/d1c/a04522" prot="public" virt="non-virtual">castor3d::PointLight</derivedcompoundref>
    <derivedcompoundref refid="db/da2/a04526" prot="public" virt="non-virtual">castor3d::SpotLight</derivedcompoundref>
    <includes local="no">LightCategory.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d8/d4c/a04506_1a1fdb3e7afdb8be2e8b3d1f5453cf72fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> uint32_t</type>
        <definition>C3D_API uint32_t castor3d::LightCategory::getVolumetricSteps</definition>
        <argsstring>() const</argsstring>
        <name>getVolumetricSteps</name>
        <qualifiedname>castor3d::LightCategory::getVolumetricSteps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Getters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="67" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a4b0881f2bdcfa98c6e36aaeceb8f937a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> float</type>
        <definition>C3D_API float castor3d::LightCategory::getVolumetricScatteringFactor</definition>
        <argsstring>() const</argsstring>
        <name>getVolumetricScatteringFactor</name>
        <qualifiedname>castor3d::LightCategory::getVolumetricScatteringFactor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="68" column="15"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1ad344cbddb177d6c50b8d9485513f17da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Point2f const &amp;</type>
        <definition>C3D_API castor::Point2f const  &amp; castor3d::LightCategory::getShadowRawOffsets</definition>
        <argsstring>() const</argsstring>
        <name>getShadowRawOffsets</name>
        <qualifiedname>castor3d::LightCategory::getShadowRawOffsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="69" column="32"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a23f5abcfb09f64189d2f28a05f1f1cc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Point2f const &amp;</type>
        <definition>C3D_API castor::Point2f const  &amp; castor3d::LightCategory::getShadowPcfOffsets</definition>
        <argsstring>() const</argsstring>
        <name>getShadowPcfOffsets</name>
        <qualifiedname>castor3d::LightCategory::getShadowPcfOffsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="70" column="32"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a26a8abdb227d0925732ec6c325192347" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::Point2f const &amp;</type>
        <definition>C3D_API castor::Point2f const  &amp; castor3d::LightCategory::getShadowVariance</definition>
        <argsstring>() const</argsstring>
        <name>getShadowVariance</name>
        <qualifiedname>castor3d::LightCategory::getShadowVariance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="71" column="32"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a1012a2f07cb70d5e2780a9990b02bd15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d2/d33/a04654" kindref="compound">ShadowConfig</ref> const &amp;</type>
        <definition>C3D_API ShadowConfig const  &amp; castor3d::LightCategory::getShadowConfig</definition>
        <argsstring>() const</argsstring>
        <name>getShadowConfig</name>
        <qualifiedname>castor3d::LightCategory::getShadowConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="72" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1ac46de7e96a04cf6d0dd8c34b17297ffc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d1/d24/a04514" kindref="compound">RsmConfig</ref> const &amp;</type>
        <definition>C3D_API RsmConfig const  &amp; castor3d::LightCategory::getRsmConfig</definition>
        <argsstring>() const</argsstring>
        <name>getRsmConfig</name>
        <qualifiedname>castor3d::LightCategory::getRsmConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="73" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1adcb072b802c78c888dad48607a603bf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="dd/da0/a03742" kindref="compound">LpvConfig</ref> const &amp;</type>
        <definition>C3D_API LpvConfig const  &amp; castor3d::LightCategory::getLpvConfig</definition>
        <argsstring>() const</argsstring>
        <name>getLpvConfig</name>
        <qualifiedname>castor3d::LightCategory::getLpvConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="74" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a64522c60f1f11b59f7ae2e9968140ab4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/df4/a01401_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
        <definition>LightType castor3d::LightCategory::getLightType</definition>
        <argsstring>() const</argsstring>
        <name>getLightType</name>
        <qualifiedname>castor3d::LightCategory::getLightType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="76" column="11" bodyfile="Scene/Light/LightCategory.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a0e953d6e6965fb1ef782e3bdd6fe469d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::LightCategory::getDiffuseIntensity</definition>
        <argsstring>() const</argsstring>
        <name>getDiffuseIntensity</name>
        <qualifiedname>castor3d::LightCategory::getDiffuseIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="81" column="7" bodyfile="Scene/Light/LightCategory.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a9189a1586f231e8bb99f7bdbaa432284" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::LightCategory::getSpecularIntensity</definition>
        <argsstring>() const</argsstring>
        <name>getSpecularIntensity</name>
        <qualifiedname>castor3d::LightCategory::getSpecularIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="86" column="7" bodyfile="Scene/Light/LightCategory.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a357763c66670a16d97628ee55b7739f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point2f const &amp;</type>
        <definition>castor::Point2f const  &amp; castor3d::LightCategory::getIntensity</definition>
        <argsstring>() const</argsstring>
        <name>getIntensity</name>
        <qualifiedname>castor3d::LightCategory::getIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="91" column="24" bodyfile="Scene/Light/LightCategory.hpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1ab6f2d4d170e620f0f84c642b45bcc0fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::LightCategory::getFarPlane</definition>
        <argsstring>() const</argsstring>
        <name>getFarPlane</name>
        <qualifiedname>castor3d::LightCategory::getFarPlane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="96" column="7" bodyfile="Scene/Light/LightCategory.hpp" bodystart="96" bodyend="99"/>
        <references refid="d8/d4c/a04506_1a510f474ea2102b2cdb6ea5683f165d66" compoundref="dd/df1/a01082" startline="182">m_farPlane</references>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a1dd1f113237c1d296c0dbdbf06088800" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point3f const &amp;</type>
        <definition>castor::Point3f const  &amp; castor3d::LightCategory::getColour</definition>
        <argsstring>() const</argsstring>
        <name>getColour</name>
        <qualifiedname>castor3d::LightCategory::getColour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="101" column="24" bodyfile="Scene/Light/LightCategory.hpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1acb29137feb5442673c0f39896c507fac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/dba/a04502" kindref="compound">Light</ref> const &amp;</type>
        <definition>Light const  &amp; castor3d::LightCategory::getLight</definition>
        <argsstring>() const</argsstring>
        <name>getLight</name>
        <qualifiedname>castor3d::LightCategory::getLight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="106" column="14" bodyfile="Scene/Light/LightCategory.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a0de76278c61625bfd8fc05a9fd612970" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::BoundingBox const &amp;</type>
        <definition>castor::BoundingBox const  &amp; castor3d::LightCategory::getBoundingBox</definition>
        <argsstring>() const</argsstring>
        <name>getBoundingBox</name>
        <qualifiedname>castor3d::LightCategory::getBoundingBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="111" column="28" bodyfile="Scene/Light/LightCategory.hpp" bodystart="111" bodyend="114"/>
        <references refid="d8/d4c/a04506_1a28a4f8b94fa6ff89c9aa57e2dae75672" compoundref="dd/df1/a01082" startline="179">m_cubeBox</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="d8/d4c/a04506_1a92e545bfabd12248ac2aa0409d9b1fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setVolumetricSteps</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>setVolumetricSteps</name>
        <qualifiedname>castor3d::LightCategory::setVolumetricSteps</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>name Mutators. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="125" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a540bf2d551c26998f6257cbf3862abe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setVolumetricScatteringFactor</definition>
        <argsstring>(float value)</argsstring>
        <name>setVolumetricScatteringFactor</name>
        <qualifiedname>castor3d::LightCategory::setVolumetricScatteringFactor</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="126" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a4a20cb9dd9760352ebacffcbd8febaec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setRawMinOffset</definition>
        <argsstring>(float value)</argsstring>
        <name>setRawMinOffset</name>
        <qualifiedname>castor3d::LightCategory::setRawMinOffset</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="127" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a74565f5a3f7bdfdb7ebc0aee97a55960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setRawMaxSlopeOffset</definition>
        <argsstring>(float value)</argsstring>
        <name>setRawMaxSlopeOffset</name>
        <qualifiedname>castor3d::LightCategory::setRawMaxSlopeOffset</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="128" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1abbb7ac4dd057bd9b5c809822d2600959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setPcfMinOffset</definition>
        <argsstring>(float value)</argsstring>
        <name>setPcfMinOffset</name>
        <qualifiedname>castor3d::LightCategory::setPcfMinOffset</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="129" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1ae0babdad467b1d890595403c7aa02065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setPcfMaxSlopeOffset</definition>
        <argsstring>(float value)</argsstring>
        <name>setPcfMaxSlopeOffset</name>
        <qualifiedname>castor3d::LightCategory::setPcfMaxSlopeOffset</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="130" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a16d5062cf84f27747c4ce162d67c9574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setVsmMaxVariance</definition>
        <argsstring>(float value)</argsstring>
        <name>setVsmMaxVariance</name>
        <qualifiedname>castor3d::LightCategory::setVsmMaxVariance</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="131" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a4ea67513754e906298182d145da36aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setVsmVarianceBias</definition>
        <argsstring>(float value)</argsstring>
        <name>setVsmVarianceBias</name>
        <qualifiedname>castor3d::LightCategory::setVsmVarianceBias</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="132" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1aed6673624b672394258be181c447eb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setColour</definition>
        <argsstring>(castor::Point3f const &amp;value)</argsstring>
        <name>setColour</name>
        <qualifiedname>castor3d::LightCategory::setColour</qualifiedname>
        <param>
          <type>castor::Point3f const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="133" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1ac031bef3179ebbec519eedcc0b192dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setIntensity</definition>
        <argsstring>(castor::Point2f const &amp;value)</argsstring>
        <name>setIntensity</name>
        <qualifiedname>castor3d::LightCategory::setIntensity</qualifiedname>
        <param>
          <type>castor::Point2f const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="134" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1ab28a4cda00a38263af9d9bf743eab34b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setDiffuseIntensity</definition>
        <argsstring>(float value)</argsstring>
        <name>setDiffuseIntensity</name>
        <qualifiedname>castor3d::LightCategory::setDiffuseIntensity</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="135" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a525add2d3b3f08be7bb332b3f079b2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::setSpecularIntensity</definition>
        <argsstring>(float value)</argsstring>
        <name>setSpecularIntensity</name>
        <qualifiedname>castor3d::LightCategory::setSpecularIntensity</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="136" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a1f973301722581e083d5a8a2893ee88e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/dba/a04502" kindref="compound">Light</ref> &amp;</type>
        <definition>Light &amp; castor3d::LightCategory::getLight</definition>
        <argsstring>()</argsstring>
        <name>getLight</name>
        <qualifiedname>castor3d::LightCategory::getLight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="138" column="8" bodyfile="Scene/Light/LightCategory.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a67ab3b182b474ea5f4bf2b59d7d1344e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point3f &amp;</type>
        <definition>castor::Point3f &amp; castor3d::LightCategory::getColour</definition>
        <argsstring>()</argsstring>
        <name>getColour</name>
        <qualifiedname>castor3d::LightCategory::getColour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="143" column="18" bodyfile="Scene/Light/LightCategory.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a3ed7681f80c08f39f442f45a1c976bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>castor::Point2f &amp;</type>
        <definition>castor::Point2f &amp; castor3d::LightCategory::getIntensity</definition>
        <argsstring>()</argsstring>
        <name>getIntensity</name>
        <qualifiedname>castor3d::LightCategory::getIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="148" column="18" bodyfile="Scene/Light/LightCategory.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d8/d4c/a04506_1a27862a9fe512b352f98ec1c054680edd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Light</definition>
        <argsstring></argsstring>
        <name>Light</name>
        <qualifiedname>castor3d::LightCategory::Light</qualifiedname>
        <param>
          <type><ref refid="d7/dba/a04502" kindref="compound">Light</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="19" column="14" bodyfile="Scene/Light/LightCategory.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d8/d4c/a04506_1a28a4f8b94fa6ff89c9aa57e2dae75672" prot="protected" static="no" mutable="no">
        <type>castor::BoundingBox</type>
        <definition>castor::BoundingBox castor3d::LightCategory::m_cubeBox</definition>
        <argsstring></argsstring>
        <name>m_cubeBox</name>
        <qualifiedname>castor3d::LightCategory::m_cubeBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The cube box for the light volume of effect. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="179" column="21" bodyfile="Scene/Light/LightCategory.hpp" bodystart="179" bodyend="-1"/>
        <referencedby refid="d8/d4c/a04506_1a0de76278c61625bfd8fc05a9fd612970" compoundref="dd/df1/a01082" startline="111" endline="114">getBoundingBox</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/d4c/a04506_1a510f474ea2102b2cdb6ea5683f165d66" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float castor3d::LightCategory::m_farPlane</definition>
        <argsstring></argsstring>
        <name>m_farPlane</name>
        <qualifiedname>castor3d::LightCategory::m_farPlane</qualifiedname>
        <initializer>{ 1.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The far plane&apos;s depth. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="182" column="7" bodyfile="Scene/Light/LightCategory.hpp" bodystart="182" bodyend="-1"/>
        <referencedby refid="d8/d4c/a04506_1ab6f2d4d170e620f0f84c642b45bcc0fd" compoundref="dd/df1/a01082" startline="96" endline="99">getFarPlane</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/d4c/a04506_1a5610c8434110c708f038cea4d565ff1f" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t castor3d::LightCategory::m_shadowMapIndex</definition>
        <argsstring></argsstring>
        <name>m_shadowMapIndex</name>
        <qualifiedname>castor3d::LightCategory::m_shadowMapIndex</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The light source shadow map index. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="185" column="9" bodyfile="Scene/Light/LightCategory.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d4c/a04506_1a42e688cef4bd84519bf211c023018d62" prot="private" static="no" mutable="no">
        <type><ref refid="dc/df4/a01401_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
        <definition>LightType castor3d::LightCategory::m_lightType</definition>
        <argsstring></argsstring>
        <name>m_lightType</name>
        <qualifiedname>castor3d::LightCategory::m_lightType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="188" column="11" bodyfile="Scene/Light/LightCategory.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4c/a04506_1a3b3f6f3faa9d1760154ad47129eff4c9" prot="private" static="no" mutable="no">
        <type><ref refid="d7/dba/a04502" kindref="compound">Light</ref> &amp;</type>
        <definition>Light&amp; castor3d::LightCategory::m_light</definition>
        <argsstring></argsstring>
        <name>m_light</name>
        <qualifiedname>castor3d::LightCategory::m_light</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="189" column="8" bodyfile="Scene/Light/LightCategory.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4c/a04506_1a39cc643d1072dfb5ba0cabf2185cd7cd" prot="private" static="no" mutable="no">
        <type>castor::Point3f</type>
        <definition>castor::Point3f castor3d::LightCategory::m_colour</definition>
        <argsstring></argsstring>
        <name>m_colour</name>
        <qualifiedname>castor3d::LightCategory::m_colour</qualifiedname>
        <initializer>{ 1.0, 1.0, 1.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="190" column="17" bodyfile="Scene/Light/LightCategory.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4c/a04506_1aee05883af967c7aaa619b9f3d1098949" prot="private" static="no" mutable="no">
        <type>castor::Point2f</type>
        <definition>castor::Point2f castor3d::LightCategory::m_intensity</definition>
        <argsstring></argsstring>
        <name>m_intensity</name>
        <qualifiedname>castor3d::LightCategory::m_intensity</qualifiedname>
        <initializer>{ 1.0, 1.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="191" column="17" bodyfile="Scene/Light/LightCategory.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d8/d4c/a04506_1ac90799b0033274a99a53394753dc1f35" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::LightCategory::LightCategory</definition>
        <argsstring>(LightType lightType, Light &amp;light)</argsstring>
        <name>LightCategory</name>
        <qualifiedname>castor3d::LightCategory::LightCategory</qualifiedname>
        <param>
          <type><ref refid="dc/df4/a01401_1a381718aa9accc88c20afd97d76c30ed8" kindref="member">LightType</ref></type>
          <declname>lightType</declname>
        </param>
        <param>
          <type><ref refid="d7/dba/a04502" kindref="compound">Light</ref> &amp;</type>
          <declname>light</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lightType</parametername>
</parameternamelist>
<parameterdescription>
<para>The light category type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">light</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <ref refid="d7/dba/a04502" kindref="compound">Light</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="32" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a5c6bae82aa8c9c378b075c744ba546ef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::LightCategory::updateNode</definition>
        <argsstring>(SceneNode const &amp;node)=0</argsstring>
        <name>updateNode</name>
        <qualifiedname>castor3d::LightCategory::updateNode</qualifiedname>
        <reimplementedby refid="dc/dd0/a04498_1ab7d792085b39f49dad8d019ab15fd73b">updateNode</reimplementedby>
        <reimplementedby refid="d8/d1c/a04522_1aca6cbf77413d8b803221cded97139c47">updateNode</reimplementedby>
        <reimplementedby refid="db/da2/a04526_1a5e6a9cd032057f15eb7a2f1314db25dc">updateNode</reimplementedby>
        <param>
          <type><ref refid="dd/d6a/a04642" kindref="compound">SceneNode</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Updates the light source&apos;s informations related to the scene node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="163" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d4c/a04506_1a27be1577394d8762a28400a2ed0b93f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>virtual C3D_API castor3d::LightCategory::~LightCategory</definition>
        <argsstring>()=default</argsstring>
        <name>~LightCategory</name>
        <qualifiedname>castor3d::LightCategory::~LightCategory</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="41" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a34386a8cdce8cddd885daa4e906ad4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::LightCategory::update</definition>
        <argsstring>()=0</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::LightCategory::update</qualifiedname>
        <reimplementedby refid="dc/dd0/a04498_1a4aac08296c8c137f835e418d3276963f">update</reimplementedby>
        <reimplementedby refid="d8/d1c/a04522_1a0cabf7c21bd275943f54e6c7a6c1bf49">update</reimplementedby>
        <reimplementedby refid="db/da2/a04526_1a89ee1f4b1d6931fd838eada16da3e410">update</reimplementedby>
        <briefdescription>
<para>Updates the light. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="48" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4c/a04506_1a2e3bd07a31ad872b99c26b2b5f1f1cc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::LightCategory::fillBuffer</definition>
        <argsstring>(LightBuffer::LightData &amp;data) const</argsstring>
        <name>fillBuffer</name>
        <qualifiedname>castor3d::LightCategory::fillBuffer</qualifiedname>
        <param>
          <type><ref refid="d4/d7b/a04698" kindref="compound">LightBuffer::LightData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Puts the light into the given texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the light&apos;s data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="57" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d4c/a04506_1a59be298872379b939a10ac186392b222" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dd7/a00248_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>virtual C3D_API void castor3d::LightCategory::doFillBuffer</definition>
        <argsstring>(LightBuffer::LightData &amp;data) const =0</argsstring>
        <name>doFillBuffer</name>
        <qualifiedname>castor3d::LightCategory::doFillBuffer</qualifiedname>
        <reimplementedby refid="dc/dd0/a04498_1aa0760ad29f0509bb0b5f2a0644e02f5e">doFillBuffer</reimplementedby>
        <reimplementedby refid="d8/d1c/a04522_1a5ae765f5093fd57b3aa7651aa94dc639">doFillBuffer</reimplementedby>
        <reimplementedby refid="db/da2/a04526_1a332e58d2415a609a38db0dad6671a3a5">doFillBuffer</reimplementedby>
        <param>
          <type><ref refid="d4/d7b/a04698" kindref="compound">LightBuffer::LightData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Puts the light into the given texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the light&apos;s data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Scene/Light/LightCategory.hpp" line="174" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor3d::DirectionalLight</label>
        <link refid="dc/dd0/a04498"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::LightCategory</label>
        <link refid="d8/d4c/a04506"/>
      </node>
      <node id="3">
        <label>castor3d::PointLight</label>
        <link refid="d8/d1c/a04522"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor3d::SpotLight</label>
        <link refid="db/da2/a04526"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="Scene/Light/LightCategory.hpp" line="16" column="1" bodyfile="Scene/Light/LightCategory.hpp" bodystart="17" bodyend="192"/>
    <listofallmembers>
      <member refid="d8/d4c/a04506_1a59be298872379b939a10ac186392b222" prot="private" virt="pure-virtual"><scope>castor3d::LightCategory</scope><name>doFillBuffer</name></member>
      <member refid="d8/d4c/a04506_1a2e3bd07a31ad872b99c26b2b5f1f1cc9" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>fillBuffer</name></member>
      <member refid="d8/d4c/a04506_1a0de76278c61625bfd8fc05a9fd612970" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getBoundingBox</name></member>
      <member refid="d8/d4c/a04506_1a1dd1f113237c1d296c0dbdbf06088800" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getColour</name></member>
      <member refid="d8/d4c/a04506_1a67ab3b182b474ea5f4bf2b59d7d1344e" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getColour</name></member>
      <member refid="d8/d4c/a04506_1a0e953d6e6965fb1ef782e3bdd6fe469d" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getDiffuseIntensity</name></member>
      <member refid="d8/d4c/a04506_1ab6f2d4d170e620f0f84c642b45bcc0fd" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getFarPlane</name></member>
      <member refid="d8/d4c/a04506_1a357763c66670a16d97628ee55b7739f6" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getIntensity</name></member>
      <member refid="d8/d4c/a04506_1a3ed7681f80c08f39f442f45a1c976bc4" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getIntensity</name></member>
      <member refid="d8/d4c/a04506_1acb29137feb5442673c0f39896c507fac" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLight</name></member>
      <member refid="d8/d4c/a04506_1a1f973301722581e083d5a8a2893ee88e" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLight</name></member>
      <member refid="d8/d4c/a04506_1a64522c60f1f11b59f7ae2e9968140ab4" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLightType</name></member>
      <member refid="d8/d4c/a04506_1adcb072b802c78c888dad48607a603bf6" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getLpvConfig</name></member>
      <member refid="d8/d4c/a04506_1ac46de7e96a04cf6d0dd8c34b17297ffc" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getRsmConfig</name></member>
      <member refid="d8/d4c/a04506_1a1012a2f07cb70d5e2780a9990b02bd15" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowConfig</name></member>
      <member refid="d8/d4c/a04506_1a23f5abcfb09f64189d2f28a05f1f1cc4" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowPcfOffsets</name></member>
      <member refid="d8/d4c/a04506_1ad344cbddb177d6c50b8d9485513f17da" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowRawOffsets</name></member>
      <member refid="d8/d4c/a04506_1a26a8abdb227d0925732ec6c325192347" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getShadowVariance</name></member>
      <member refid="d8/d4c/a04506_1a9189a1586f231e8bb99f7bdbaa432284" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getSpecularIntensity</name></member>
      <member refid="d8/d4c/a04506_1a4b0881f2bdcfa98c6e36aaeceb8f937a" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getVolumetricScatteringFactor</name></member>
      <member refid="d8/d4c/a04506_1a1fdb3e7afdb8be2e8b3d1f5453cf72fc" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>getVolumetricSteps</name></member>
      <member refid="d8/d4c/a04506_1a27862a9fe512b352f98ec1c054680edd" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>Light</name></member>
      <member refid="d8/d4c/a04506_1ac90799b0033274a99a53394753dc1f35" prot="protected" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>LightCategory</name></member>
      <member refid="d8/d4c/a04506_1a39cc643d1072dfb5ba0cabf2185cd7cd" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_colour</name></member>
      <member refid="d8/d4c/a04506_1a28a4f8b94fa6ff89c9aa57e2dae75672" prot="protected" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_cubeBox</name></member>
      <member refid="d8/d4c/a04506_1a510f474ea2102b2cdb6ea5683f165d66" prot="protected" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_farPlane</name></member>
      <member refid="d8/d4c/a04506_1aee05883af967c7aaa619b9f3d1098949" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_intensity</name></member>
      <member refid="d8/d4c/a04506_1a3b3f6f3faa9d1760154ad47129eff4c9" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_light</name></member>
      <member refid="d8/d4c/a04506_1a42e688cef4bd84519bf211c023018d62" prot="private" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_lightType</name></member>
      <member refid="d8/d4c/a04506_1a5610c8434110c708f038cea4d565ff1f" prot="protected" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>m_shadowMapIndex</name></member>
      <member refid="d8/d4c/a04506_1aed6673624b672394258be181c447eb8a" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setColour</name></member>
      <member refid="d8/d4c/a04506_1ab28a4cda00a38263af9d9bf743eab34b" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setDiffuseIntensity</name></member>
      <member refid="d8/d4c/a04506_1ac031bef3179ebbec519eedcc0b192dbf" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setIntensity</name></member>
      <member refid="d8/d4c/a04506_1ae0babdad467b1d890595403c7aa02065" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setPcfMaxSlopeOffset</name></member>
      <member refid="d8/d4c/a04506_1abbb7ac4dd057bd9b5c809822d2600959" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setPcfMinOffset</name></member>
      <member refid="d8/d4c/a04506_1a74565f5a3f7bdfdb7ebc0aee97a55960" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setRawMaxSlopeOffset</name></member>
      <member refid="d8/d4c/a04506_1a4a20cb9dd9760352ebacffcbd8febaec" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setRawMinOffset</name></member>
      <member refid="d8/d4c/a04506_1a525add2d3b3f08be7bb332b3f079b2db" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setSpecularIntensity</name></member>
      <member refid="d8/d4c/a04506_1a540bf2d551c26998f6257cbf3862abe4" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setVolumetricScatteringFactor</name></member>
      <member refid="d8/d4c/a04506_1a92e545bfabd12248ac2aa0409d9b1fee" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setVolumetricSteps</name></member>
      <member refid="d8/d4c/a04506_1a16d5062cf84f27747c4ce162d67c9574" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setVsmMaxVariance</name></member>
      <member refid="d8/d4c/a04506_1a4ea67513754e906298182d145da36aa0" prot="public" virt="non-virtual"><scope>castor3d::LightCategory</scope><name>setVsmVarianceBias</name></member>
      <member refid="d8/d4c/a04506_1a34386a8cdce8cddd885daa4e906ad4ba" prot="public" virt="pure-virtual"><scope>castor3d::LightCategory</scope><name>update</name></member>
      <member refid="d8/d4c/a04506_1a5c6bae82aa8c9c378b075c744ba546ef" prot="protected" virt="pure-virtual"><scope>castor3d::LightCategory</scope><name>updateNode</name></member>
      <member refid="d8/d4c/a04506_1a27be1577394d8762a28400a2ed0b93f4" prot="public" virt="virtual"><scope>castor3d::LightCategory</scope><name>~LightCategory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
