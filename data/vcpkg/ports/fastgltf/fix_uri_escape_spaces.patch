diff --git a/src/fastgltf.cpp b/src/fastgltf.cpp
index a5d1206..eca5ad0 100644
--- a/src/fastgltf.cpp
+++ b/src/fastgltf.cpp
@@ -1864,7 +1864,8 @@ fg::Error fg::Parser::parseBuffers(simdjson::dom::array& buffers, Asset& asset)
         // file. Otherwise, data must be specified in the "uri" field.
         std::string_view uriString;
         if (bufferObject["uri"].get_string().get(uriString) == SUCCESS) FASTGLTF_LIKELY {
-			URIView uriView(uriString);
+            fg::URI uri(uriString);
+            URIView uriView(uri);
 
             if (!uriView.valid()) {
                 return Error::InvalidURI;
@@ -2255,7 +2256,8 @@ fg::Error fg::Parser::parseImages(simdjson::dom::array& images, Asset& asset) {
                 return Error::InvalidGltf;
             }
 
-            URIView uriView(uriString);
+            fg::URI uri(uriString);
+            URIView uriView(uri);
             if (!uriView.valid()) {
                 return Error::InvalidURI;
             }
@@ -3451,14 +3453,14 @@ fg::Error fg::Parser::parseNodes(simdjson::dom::array& nodes, Asset& asset) {
         if (nodeObject["extensions"].get_object().get(extensionsObject) == SUCCESS) FASTGLTF_LIKELY {
 			if (hasBit(config.extensions, Extensions::KHR_lights_punctual)) {
 				dom::object lightsObject;
-				if (extensionsObject[extensions::KHR_lights_punctual].get_object().get(lightsObject) == SUCCESS) FASTGLTF_LIKELY {
+				if (auto lightsError = extensionsObject[extensions::KHR_lights_punctual].get_object().get(lightsObject) == SUCCESS) FASTGLTF_LIKELY {
 					std::uint64_t light;
 					if (auto lightError = lightsObject["light"].get_uint64().get(light); lightError == SUCCESS) FASTGLTF_LIKELY {
 						node.lightIndex = static_cast<std::size_t>(light);
 					} else {
 						return lightError == NO_SUCH_FIELD || lightError == INCORRECT_TYPE ? Error::InvalidGltf : Error::InvalidJson;
 					}
-				} else if (error != NO_SUCH_FIELD) {
+				} else if (lightsError != NO_SUCH_FIELD) {
 					return Error::InvalidGltf;
 				}
 			}
