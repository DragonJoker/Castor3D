vcpkg_minimum_required(VERSION 2022-10-12) # for ${VERSION}

vcpkg_from_github(OUT_SOURCE_PATH SOURCE_PATH
    REPO DragonJoker/ShaderWriter
    REF d040c89bb543b2e1d646714e36a190816b8e06ef
    HEAD_REF development
    SHA512 9f95604f866f2cdc3b392c135ae34b93075a004f60319b00f5fbd2251361c68d7ca68ae00709adc435e387b3cf1b6659e643b7d200c0e6c734aa29f66491e947
)

vcpkg_from_github(OUT_SOURCE_PATH CMAKE_SOURCE_PATH
    REPO DragonJoker/CMakeUtils
    REF 7d355194fa795c437ce970cecf00e23ae10fc686
    HEAD_REF master
    SHA512 ca25b19bdeb3e8fda7abc32f8548731f0ba1cd09889a70f6f287ad76d2fdfa0fedbb7f6f65b26d356ea51543bed8926c6bb463f8e8461b7d51d3b7b33134374c
)

file(REMOVE_RECURSE "${SOURCE_PATH}/CMake")
file(COPY "${CMAKE_SOURCE_PATH}/" DESTINATION "${SOURCE_PATH}/CMake")

string(COMPARE EQUAL "${VCPKG_LIBRARY_LINKAGE}" "static" BUILD_STATIC)

set(BUILD_SPIRV OFF)
set(BUILD_GLSL OFF)
set(BUILD_HLSL OFF)

if ("spirv" IN_LIST FEATURES)
    set(BUILD_SPIRV ON)
elseif ("$ENV{BUILD_SDW_SPIRV}" STREQUAL "1")
    set(BUILD_SPIRV ON)
endif()

if ("glsl" IN_LIST FEATURES)
    set(BUILD_GLSL ON)
elseif ("$ENV{BUILD_SDW_GLSL}" STREQUAL "1")
    set(BUILD_GLSL ON)
endif()

if ("glsl" IN_LIST FEATURES)
    set(BUILD_HLSL ON)
elseif ("$ENV{BUILD_SDW_HLSL}" STREQUAL "1")
    set(BUILD_HLSL ON)
endif()

vcpkg_cmake_configure(
    SOURCE_PATH ${SOURCE_PATH}
    OPTIONS
        -DPROJECTS_USE_PRECOMPILED_HEADERS=OFF
        -DSDW_GENERATE_SOURCE=OFF
        -DSDW_BUILD_VULKAN_LAYER=OFF
        -DSDW_BUILD_TESTS=OFF
        -DSDW_BUILD_EXPORTER_SPIRV=${BUILD_SPIRV}
        -DSDW_BUILD_EXPORTER_HLSL=${BUILD_HLSL}
        -DSDW_BUILD_EXPORTER_GLSL=${BUILD_GLSL}
        -DSDW_BUILD_STATIC_SDW=${BUILD_STATIC}
        -DSDW_BUILD_STATIC_SDAST=${BUILD_STATIC}
        -DSDW_UNITY_BUILD=ON
)

vcpkg_copy_pdbs()
vcpkg_cmake_install()
vcpkg_cmake_config_fixup(PACKAGE_NAME ShaderWriter CONFIG_PATH lib/cmake/shaderwriter)

file(INSTALL ${SOURCE_PATH}/LICENSE DESTINATION ${CURRENT_PACKAGES_DIR}/share/${PORT} RENAME copyright)
