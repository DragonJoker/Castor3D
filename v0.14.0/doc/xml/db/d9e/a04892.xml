<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="db/d9e/a04892" kind="class" language="C++" prot="public">
    <compoundname>castor3d::BackgroundRenderer</compoundname>
    <includes local="no">BackgroundRenderer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="db/d9e/a04892_1a8e2e9aff6153e4fcdb37f22a766c0b69" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const  &amp;</type>
        <definition>RenderDevice const&amp; castor3d::BackgroundRenderer::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <qualifiedname>castor3d::BackgroundRenderer::m_device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="280" column="21" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d9e/a04892_1aa71200352d9a512a8cee5cbe9b8ba3c5" prot="private" static="no" mutable="no">
        <type>crg::ImageData const  *</type>
        <definition>crg::ImageData const* castor3d::BackgroundRenderer::m_colour</definition>
        <argsstring></argsstring>
        <name>m_colour</name>
        <qualifiedname>castor3d::BackgroundRenderer::m_colour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="281" column="23" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d9e/a04892_1af7833b55557c5b5d000ea5cbb4763845" prot="private" static="no" mutable="no">
        <type><ref refid="df/df2/a06208" kindref="compound">MatrixUbo</ref></type>
        <definition>MatrixUbo castor3d::BackgroundRenderer::m_matrixUbo</definition>
        <argsstring></argsstring>
        <name>m_matrixUbo</name>
        <qualifiedname>castor3d::BackgroundRenderer::m_matrixUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="282" column="11" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d9e/a04892_1a7d5d50cb55e39fee88ed5eaa6c375a68" prot="private" static="no" mutable="no">
        <type><ref refid="db/d59/a02728" kindref="compound">UniformBufferOffsetT</ref>&lt; <ref refid="dd/db3/a06320" kindref="compound">ModelBufferConfiguration</ref> &gt;</type>
        <definition>UniformBufferOffsetT&lt; ModelBufferConfiguration &gt; castor3d::BackgroundRenderer::m_modelUbo</definition>
        <argsstring></argsstring>
        <name>m_modelUbo</name>
        <qualifiedname>castor3d::BackgroundRenderer::m_modelUbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="283" column="22" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d9e/a04892_1a97d4d63e8e5f76e68bc6fe9dd8dfea8b" prot="private" static="no" mutable="no">
        <type>crg::FramePass const  *</type>
        <definition>crg::FramePass const* castor3d::BackgroundRenderer::m_backgroundPassDesc</definition>
        <argsstring></argsstring>
        <name>m_backgroundPassDesc</name>
        <qualifiedname>castor3d::BackgroundRenderer::m_backgroundPassDesc</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="284" column="23" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d9e/a04892_1ac050a218d8726df0bfcde511f8363feb" prot="private" static="no" mutable="no">
        <type><ref refid="d0/d62/a04888" kindref="compound">BackgroundPassBase</ref> *</type>
        <definition>BackgroundPassBase* castor3d::BackgroundRenderer::m_backgroundPass</definition>
        <argsstring></argsstring>
        <name>m_backgroundPass</name>
        <qualifiedname>castor3d::BackgroundRenderer::m_backgroundPass</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="285" column="21" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="db/d9e/a04892_1aeaabe60942d1f686a32be66d12ec7ad9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePassArray previousPasses, RenderDevice const &amp;device, ProgressBar *progress, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour, crg::ImageViewId const *depth, crg::ImageViewId const *depthObj)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePassArray</type>
          <declname>previousPasses</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
        </param>
        <param>
          <type>crg::ImageViewId const *</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>crg::ImageViewId const *</type>
          <declname>depthObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="15" column="9"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1ae0f291affefb66105df24e0f118b2b8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>crg::FramePass const &amp;</type>
        <definition>crg::FramePass const  &amp; castor3d::BackgroundRenderer::doCreatePass</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePassArray previousPasses, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour, crg::ImageViewId const *depth, crg::ImageViewId const *depthObj, ProgressBar *progress)</argsstring>
        <name>doCreatePass</name>
        <qualifiedname>castor3d::BackgroundRenderer::doCreatePass</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePassArray</type>
          <declname>previousPasses</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
        </param>
        <param>
          <type>crg::ImageViewId const *</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>crg::ImageViewId const *</type>
          <declname>depthObj</declname>
        </param>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="267" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d9e/a04892_1a68cad6951cb58e7138bbfc206058070f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePass const *previousPass, RenderDevice const &amp;device, ProgressBar *progress, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour=true)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePass const *</type>
          <declname>previousPass</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="29" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="29" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1a929a19901c6cd0bfc357ff7491c69b29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePass const *previousPass, RenderDevice const &amp;device, ProgressBar *progress, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour, crg::ImageViewId const &amp;depth, crg::ImageViewId const *depthObj)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePass const *</type>
          <declname>previousPass</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>crg::ImageViewId const *</type>
          <declname>depthObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="56" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="56" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1a99bd93d494cdba34aa8142461d686f0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePass const *previousPass, RenderDevice const &amp;device, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour=true)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePass const *</type>
          <declname>previousPass</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="85" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="85" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1af4afe05e152fc385a23246ee8a0e7508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePass const *previousPass, RenderDevice const &amp;device, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour, crg::ImageViewId const &amp;depth, crg::ImageViewId const *depthObj)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePass const *</type>
          <declname>previousPass</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>crg::ImageViewId const *</type>
          <declname>depthObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="111" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="111" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1abebbc47ebb14b63738a11b0da1b961df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePassArray previousPasses, RenderDevice const &amp;device, ProgressBar *progress, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour=true)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePassArray</type>
          <declname>previousPasses</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="139" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="139" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1aeef1ee7aa1e3457f9596b71486274065" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePassArray previousPasses, RenderDevice const &amp;device, ProgressBar *progress, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour, crg::ImageViewId const &amp;depth, crg::ImageViewId const *depthObj)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePassArray</type>
          <declname>previousPasses</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="d6/dea/a04180" kindref="compound">ProgressBar</ref> *</type>
          <declname>progress</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>crg::ImageViewId const *</type>
          <declname>depthObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="164" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="164" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1ad11daf4009ff6420fc144638afc816e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePassArray previousPasses, RenderDevice const &amp;device, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour=true)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePassArray</type>
          <declname>previousPasses</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="191" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="191" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1a5727debe2b56f530e09ec3e4b7493ed0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::BackgroundRenderer::BackgroundRenderer</definition>
        <argsstring>(crg::FramePassGroup &amp;graph, crg::FramePassArray previousPasses, RenderDevice const &amp;device, castor::String const &amp;name, SceneBackground &amp;background, HdrConfigUbo const &amp;hdrConfigUbo, SceneUbo const &amp;sceneUbo, crg::ImageViewId const &amp;colour, bool clearColour, crg::ImageViewId const &amp;depth, crg::ImageViewId const *depthObj)</argsstring>
        <name>BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::BackgroundRenderer</qualifiedname>
        <param>
          <type>crg::FramePassGroup &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>crg::FramePassArray</type>
          <declname>previousPasses</declname>
        </param>
        <param>
          <type><ref refid="d3/d96/a05072" kindref="compound">RenderDevice</ref> const &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/d56/a05508" kindref="compound">SceneBackground</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="de/d5a/a06176" kindref="compound">HdrConfigUbo</ref> const &amp;</type>
          <declname>hdrConfigUbo</declname>
        </param>
        <param>
          <type><ref refid="db/d2c/a06256" kindref="compound">SceneUbo</ref> const &amp;</type>
          <declname>sceneUbo</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearColour</declname>
        </param>
        <param>
          <type>crg::ImageViewId const &amp;</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>crg::ImageViewId const *</type>
          <declname>depthObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="215" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="215" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1a7f2159c23110f490b4dd8ada5a7470e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::BackgroundRenderer::~BackgroundRenderer</definition>
        <argsstring>()</argsstring>
        <name>~BackgroundRenderer</name>
        <qualifiedname>castor3d::BackgroundRenderer::~BackgroundRenderer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="241" column="9"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1a3541a7297a03c2b940d820ee2e8ed5be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::BackgroundRenderer::update</definition>
        <argsstring>(CpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::BackgroundRenderer::update</qualifiedname>
        <param>
          <type><ref refid="d7/d13/a05156" kindref="compound">CpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the render pass, CPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="250" column="14"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1aec8523deb3d9dcc6c8d059c2ca366795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::BackgroundRenderer::update</definition>
        <argsstring>(GpuUpdater &amp;updater)</argsstring>
        <name>update</name>
        <qualifiedname>castor3d::BackgroundRenderer::update</qualifiedname>
        <param>
          <type><ref refid="d9/dab/a05164" kindref="compound">GpuUpdater</ref> &amp;</type>
          <declname>updater</declname>
        </param>
        <briefdescription>
<para>Updates the render pass, GPU wise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">updater</parametername>
</parameternamelist>
<parameterdescription>
<para>The update data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="259" column="14"/>
      </memberdef>
      <memberdef kind="function" id="db/d9e/a04892_1a1ac7f6c26a6b62981ff73c14ca9e09da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>crg::FramePass const &amp;</type>
        <definition>crg::FramePass const  &amp; castor3d::BackgroundRenderer::getPass</definition>
        <argsstring>() const</argsstring>
        <name>getPass</name>
        <qualifiedname>castor3d::BackgroundRenderer::getPass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Render/Passes/BackgroundRenderer.hpp" line="261" column="23" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="261" bodyend="264"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Render/Passes/BackgroundRenderer.hpp" line="12" column="1" bodyfile="Render/Passes/BackgroundRenderer.hpp" bodystart="13" bodyend="286"/>
    <listofallmembers>
      <member refid="db/d9e/a04892_1aeaabe60942d1f686a32be66d12ec7ad9" prot="private" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1a68cad6951cb58e7138bbfc206058070f" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1a929a19901c6cd0bfc357ff7491c69b29" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1a99bd93d494cdba34aa8142461d686f0b" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1af4afe05e152fc385a23246ee8a0e7508" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1abebbc47ebb14b63738a11b0da1b961df" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1aeef1ee7aa1e3457f9596b71486274065" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1ad11daf4009ff6420fc144638afc816e6" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1a5727debe2b56f530e09ec3e4b7493ed0" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>BackgroundRenderer</name></member>
      <member refid="db/d9e/a04892_1ae0f291affefb66105df24e0f118b2b8f" prot="private" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>doCreatePass</name></member>
      <member refid="db/d9e/a04892_1a1ac7f6c26a6b62981ff73c14ca9e09da" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>getPass</name></member>
      <member refid="db/d9e/a04892_1ac050a218d8726df0bfcde511f8363feb" prot="private" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>m_backgroundPass</name></member>
      <member refid="db/d9e/a04892_1a97d4d63e8e5f76e68bc6fe9dd8dfea8b" prot="private" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>m_backgroundPassDesc</name></member>
      <member refid="db/d9e/a04892_1aa71200352d9a512a8cee5cbe9b8ba3c5" prot="private" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>m_colour</name></member>
      <member refid="db/d9e/a04892_1a8e2e9aff6153e4fcdb37f22a766c0b69" prot="private" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>m_device</name></member>
      <member refid="db/d9e/a04892_1af7833b55557c5b5d000ea5cbb4763845" prot="private" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>m_matrixUbo</name></member>
      <member refid="db/d9e/a04892_1a7d5d50cb55e39fee88ed5eaa6c375a68" prot="private" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>m_modelUbo</name></member>
      <member refid="db/d9e/a04892_1a3541a7297a03c2b940d820ee2e8ed5be" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>update</name></member>
      <member refid="db/d9e/a04892_1aec8523deb3d9dcc6c8d059c2ca366795" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>update</name></member>
      <member refid="db/d9e/a04892_1a7f2159c23110f490b4dd8ada5a7470e5" prot="public" virt="non-virtual"><scope>castor3d::BackgroundRenderer</scope><name>~BackgroundRenderer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
