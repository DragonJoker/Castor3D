<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="d1/d43/a03612" kind="class" language="C++" prot="public">
    <compoundname>castor3d::AlphaTestComponent::Plugin</compoundname>
    <basecompoundref refid="dc/d0d/a03708" prot="public" virt="non-virtual">castor3d::PassComponentPlugin</basecompoundref>
    <includes local="no">AlphaTestComponent.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d43/a03612_1ae09a1b3f9fd8835fb428d13c416ff2db" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>castor3d::AlphaTestComponent::Plugin::Plugin</definition>
        <argsstring>(PassComponentRegister const &amp;passComponent)</argsstring>
        <name>Plugin</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::Plugin</qualifiedname>
        <param>
          <type><ref refid="d5/d35/a03716" kindref="compound">PassComponentRegister</ref> const &amp;</type>
          <declname>passComponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="68" column="10" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="d1/d43/a03612_1af12161d91897082400e5eea06368690d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::AlphaTestComponent::Plugin::createParsers</definition>
        <argsstring>(castor::AttributeParsers &amp;parsers, ChannelFillers &amp;channelFillers) const override</argsstring>
        <name>createParsers</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::createParsers</qualifiedname>
        <reimplements refid="dc/d0d/a03708_1a03565ed4fc5d52779331284917b83f43">createParsers</reimplements>
        <param>
          <type>castor::AttributeParsers &amp;</type>
          <declname>parsers</declname>
        </param>
        <param>
          <type><ref refid="d3/d22/a01572_1a9b5de35c544238dd9dd2382417fa2587" kindref="member">ChannelFillers</ref> &amp;</type>
          <declname>channelFillers</declname>
        </param>
        <briefdescription>
<para>Fills the given lists with this component&apos;s parsers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">parsers</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the parsers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">channelFillers</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the texture channels and the way to fill them. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="73" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d1/d43/a03612_1a0411c2de3d67528a230017a0733901d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::AlphaTestComponent::Plugin::zeroBuffer</definition>
        <argsstring>(Pass const &amp;pass, shader::PassMaterialShader const &amp;materialShader, PassBuffer &amp;buffer) const override</argsstring>
        <name>zeroBuffer</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::zeroBuffer</qualifiedname>
        <reimplements refid="dc/d0d/a03708_1a34c8ea983d45a29036ad4bd72fd27652">zeroBuffer</reimplements>
        <param>
          <type><ref refid="d3/d86/a03732" kindref="compound">Pass</ref> const &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type><ref refid="d7/da2/a03704" kindref="compound">shader::PassMaterialShader</ref> const &amp;</type>
          <declname>materialShader</declname>
        </param>
        <param>
          <type><ref refid="db/dbf/a05920" kindref="compound">PassBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Fills the material buffer with zero values fot the component data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>To find its data in the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">materialShader</parametername>
</parameternamelist>
<parameterdescription>
<para>To find the component&apos;s data in the pass entry into the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="75" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d1/d43/a03612_1ab3c80b9d067b3288c646323523e78d33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool castor3d::AlphaTestComponent::Plugin::isComponentNeeded</definition>
        <argsstring>(TextureCombine const &amp;textures, ComponentModeFlags const &amp;filter) const override</argsstring>
        <name>isComponentNeeded</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::isComponentNeeded</qualifiedname>
        <reimplements refid="dc/d0d/a03708_1ae36bd47493f7d615418cde61ed7f6717">isComponentNeeded</reimplements>
        <param>
          <type><ref refid="de/d0b/a03040" kindref="compound">TextureCombine</ref> const &amp;</type>
          <declname>textures</declname>
        </param>
        <param>
          <type><ref refid="d3/d22/a01572_1afa74b47fdeea208a304fc7d1d8a4b1dd" kindref="member">ComponentModeFlags</ref> const &amp;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Tells if the component&apos;s lighting shaders are needed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">textures</parametername>
</parameternamelist>
<parameterdescription>
<para>To check from texturing viewpoint. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">filter</parametername>
</parameternamelist>
<parameterdescription>
<para>To check from render pass viewpoint. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="78" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d1/d43/a03612_1ad19e499a460d54702032b9e214474b77" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/df5/a01574_1a95bc90ce5717e2d571430b21c84436dd" kindref="member">shader::PassComponentsShaderPtr</ref></type>
        <definition>shader::PassComponentsShaderPtr castor3d::AlphaTestComponent::Plugin::createComponentsShader</definition>
        <argsstring>() const override</argsstring>
        <name>createComponentsShader</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::createComponentsShader</qualifiedname>
        <reimplements refid="dc/d0d/a03708_1aa124938351f50e44e4f2d28cfdbfedbc">createComponentsShader</reimplements>
        <briefdescription>
<para>Creates the component&apos;s lighting shaders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="81" column="33" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="d1/d43/a03612_1ae09262d7b3db9f5f0ee5f363a3f0118d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/df5/a01574_1ac4fa0f588a31267202da5ab1c011831c" kindref="member">shader::PassMaterialShaderPtr</ref></type>
        <definition>shader::PassMaterialShaderPtr castor3d::AlphaTestComponent::Plugin::createMaterialShader</definition>
        <argsstring>() const override</argsstring>
        <name>createMaterialShader</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::createMaterialShader</qualifiedname>
        <reimplements refid="dc/d0d/a03708_1a2e178e79ea995d0e8674559acfbc4447">createMaterialShader</reimplements>
        <briefdescription>
<para>Creates the component&apos;s material shaders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="86" column="31" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="d1/d43/a03612_1ae79f731f904bfd6baa625ecd9c9de3ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d3/d22/a01572_1a9c5abb1c7b30c2de4e67a8f9f64c08a6" kindref="member">PassComponentFlag</ref></type>
        <definition>PassComponentFlag castor3d::AlphaTestComponent::Plugin::getAlphaTestFlag</definition>
        <argsstring>() const override</argsstring>
        <name>getAlphaTestFlag</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::getAlphaTestFlag</qualifiedname>
        <reimplements refid="dc/d0d/a03708_1ac0444937fb369fb5027dd293be4fa094">getAlphaTestFlag</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The flags for alpha test. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="91" column="19" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="91" bodyend="94"/>
        <references refid="d1/d43/a03612_1a5d5687645447557ed1f5738230f803e3" compoundref="d1/d0b/a00452" startline="96" endline="99">getComponentFlags</references>
      </memberdef>
      <memberdef kind="function" id="d1/d43/a03612_1a5d5687645447557ed1f5738230f803e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d3/d22/a01572_1a9c5abb1c7b30c2de4e67a8f9f64c08a6" kindref="member">PassComponentFlag</ref></type>
        <definition>PassComponentFlag castor3d::AlphaTestComponent::Plugin::getComponentFlags</definition>
        <argsstring>() const override</argsstring>
        <name>getComponentFlags</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::getComponentFlags</qualifiedname>
        <reimplements refid="dc/d0d/a03708_1aefb50eb6d6e24464451c862ec58c6f05">getComponentFlags</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The pass flags for this component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="96" column="19" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="96" bodyend="99"/>
        <references refid="df/d81/a03600_1ab6f9fc47a4ffa7b83a3e27079de614ba" compoundref="d1/d0b/a00452" startline="31">castor3d::AlphaTestComponent::eAlphaTest</references>
        <references refid="dc/d0d/a03708_1a3d4ca319e7c6e2dc3e40e81211846fee" compoundref="d0/d29/a00470" startline="1001" endline="1004">castor3d::PassComponentPlugin::getId</references>
        <references refid="d3/d22/a01572_1a337a580df6760b157e78a64b55014233" compoundref="de/d55/a00323" startline="78" endline="83">castor3d::makePassComponentFlag</references>
        <referencedby refid="d1/d43/a03612_1acf1d29f482c0d41d61dbcff5bec0340e" compoundref="d1/d0b/a00452" startline="101" endline="108">filterComponentFlags</referencedby>
        <referencedby refid="d1/d43/a03612_1ae79f731f904bfd6baa625ecd9c9de3ad" compoundref="d1/d0b/a00452" startline="91" endline="94">getAlphaTestFlag</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d43/a03612_1acf1d29f482c0d41d61dbcff5bec0340e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void castor3d::AlphaTestComponent::Plugin::filterComponentFlags</definition>
        <argsstring>(ComponentModeFlags filter, PassComponentCombine &amp;componentsFlags) const override</argsstring>
        <name>filterComponentFlags</name>
        <qualifiedname>castor3d::AlphaTestComponent::Plugin::filterComponentFlags</qualifiedname>
        <reimplements refid="dc/d0d/a03708_1abc8e6df1a7fd3efc21bad6893a1faf40">filterComponentFlags</reimplements>
        <param>
          <type><ref refid="d3/d22/a01572_1afa74b47fdeea208a304fc7d1d8a4b1dd" kindref="member">ComponentModeFlags</ref></type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="d0/d9f/a03152" kindref="compound">PassComponentCombine</ref> &amp;</type>
          <declname>componentsFlags</declname>
        </param>
        <briefdescription>
<para>Removes from given component flags the ones that are useless given the provided filter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="101" column="6" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="101" bodyend="108"/>
        <references refid="d3/d22/a01572_1aff53303d5484577f7e5e747a6a602c2f">castor3d::checkFlag</references>
        <references refid="d3/d22/a01572_1a5a21f743634dd3f3fbe545a01fd7c536aa3a957357b758bcbb55d221bf975b545">castor3d::eOpacity</references>
        <references refid="d1/d43/a03612_1a5d5687645447557ed1f5738230f803e3" compoundref="d1/d0b/a00452" startline="96" endline="99">getComponentFlags</references>
        <references refid="d3/d22/a01572_1ad3d63b41dd70de2c73275db13818a77d">castor3d::remFlags</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>castor3d::AlphaTestComponent::Plugin</label>
        <link refid="d1/d43/a03612"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::PassComponentPlugin</label>
        <link refid="dc/d0d/a03708"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>castor3d::AlphaTestComponent::Plugin</label>
        <link refid="d1/d43/a03612"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>castor3d::PassComponentPlugin</label>
        <link refid="dc/d0d/a03708"/>
      </node>
    </collaborationgraph>
    <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="64" column="1" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="66" bodyend="109"/>
    <listofallmembers>
      <member refid="d1/d43/a03612_1ad19e499a460d54702032b9e214474b77" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>createComponentsShader</name></member>
      <member refid="dc/d0d/a03708_1a1e6a85dd32f4b3ef8b5acd253712c989" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>createMapComponent</name></member>
      <member refid="d1/d43/a03612_1ae09262d7b3db9f5f0ee5f363a3f0118d" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>createMaterialShader</name></member>
      <member refid="d1/d43/a03612_1af12161d91897082400e5eea06368690d" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>createParsers</name></member>
      <member refid="dc/d0d/a03708_1a682e78ef2f8f5d7b3e292ccda2f35246" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>createSections</name></member>
      <member refid="dc/d0d/a03708_1a906cb616e5d7d7a63d3f070ca76e7a11" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>fillTextureConfiguration</name></member>
      <member refid="d1/d43/a03612_1acf1d29f482c0d41d61dbcff5bec0340e" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>filterComponentFlags</name></member>
      <member refid="dc/d0d/a03708_1a2024dbae92bf8babbfbaa7dad9d6c564" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>filterTextureFlags</name></member>
      <member refid="dc/d0d/a03708_1a33ade4752a210d4244a56a623e15ec5c" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>finishComponent</name></member>
      <member refid="dc/d0d/a03708_1ad3c669e54d61cc035d47d4d8e2bb31c4" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getAlphaBlendingFlag</name></member>
      <member refid="d1/d43/a03612_1ae79f731f904bfd6baa625ecd9c9de3ad" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getAlphaTestFlag</name></member>
      <member refid="dc/d0d/a03708_1a7812f3b1ee259188bc7c8279b47d3a2b" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getBaseTextureConfiguration</name></member>
      <member refid="dc/d0d/a03708_1aee7e3af3cda6d7c8d54be36dfbb00547" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getColourMapFlags</name></member>
      <member refid="d1/d43/a03612_1a5d5687645447557ed1f5738230f803e3" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getComponentFlags</name></member>
      <member refid="dc/d0d/a03708_1a1dded831fff02eed2257ee6bb90b98ae" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getHeightMapFlags</name></member>
      <member refid="dc/d0d/a03708_1a3d4ca319e7c6e2dc3e40e81211846fee" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getId</name></member>
      <member refid="dc/d0d/a03708_1ab678401d89828bd889d148263bbee8e1" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getNormalMapFlags</name></member>
      <member refid="dc/d0d/a03708_1a360b4fe120d634b660ac783c9bac5e89" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getOcclusionMapFlags</name></member>
      <member refid="dc/d0d/a03708_1a67e7c95405499797a50911bc1b757750" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getOpacityMapFlags</name></member>
      <member refid="dc/d0d/a03708_1a10e44068acfd0a7a5954e133af2c501a" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getParallaxOcclusionMappingOneFlag</name></member>
      <member refid="dc/d0d/a03708_1aa8bb9186a42b13732f02d592d022eaf0" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getParallaxOcclusionMappingRepeatFlag</name></member>
      <member refid="dc/d0d/a03708_1a8ae21dee0e6e02f4ef142d1912a1c0da" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getRegister</name></member>
      <member refid="dc/d0d/a03708_1af4fd935719c75c665f67aff1c05e780b" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getTextureFlags</name></member>
      <member refid="dc/d0d/a03708_1af066b3208f0c2c71d7da481988aa748d" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getTextureFlagsName</name></member>
      <member refid="dc/d0d/a03708_1aec5a74b05eab81dfd6a6e68e2784c3bc" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>getTransmissionFlag</name></member>
      <member refid="dc/d0d/a03708_1a2f8e460d4e850283ba56ae0d30783240" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>hasTexcoordModif</name></member>
      <member refid="d1/d43/a03612_1ab3c80b9d067b3288c646323523e78d33" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>isComponentNeeded</name></member>
      <member refid="dc/d0d/a03708_1ae06b854e0cc17ad1cc044d1316c1b752" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>isMapComponent</name></member>
      <member refid="dc/d0d/a03708_1a12838a9228bf978ec3f360d997e37488" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>operator=</name></member>
      <member refid="dc/d0d/a03708_1a6f5838b953671b6324c33ca78bdebf53" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>operator=</name></member>
      <member refid="dc/d0d/a03708_1aa76b0d332cde3ba881e14c7128a1686e" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>PassComponentPlugin</name></member>
      <member refid="dc/d0d/a03708_1a79e806f976aef2b773c0988af61fd513" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>PassComponentPlugin</name></member>
      <member refid="dc/d0d/a03708_1a3b414cc7a359c09a69374e6f51fe723b" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>PassComponentPlugin</name></member>
      <member refid="d1/d43/a03612_1ae09a1b3f9fd8835fb428d13c416ff2db" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>Plugin</name></member>
      <member refid="dc/d0d/a03708_1a40b00cfb3f94741567b4836449c9eb25" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>replacesMapSampling</name></member>
      <member refid="dc/d0d/a03708_1a8af4e83de626dbaa70d30f65f8174d85" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>updateComponent</name></member>
      <member refid="dc/d0d/a03708_1a48f721f6e193e5239453328aa2f89418" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>writeTextureConfig</name></member>
      <member refid="d1/d43/a03612_1a0411c2de3d67528a230017a0733901d3" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>zeroBuffer</name></member>
      <member refid="dc/d0d/a03708_1a8442a3dd6abd51dddef6e25443d573ef" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent::Plugin</scope><name>~PassComponentPlugin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
