<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="df/d81/a03600" kind="struct" language="C++" prot="public">
    <compoundname>castor3d::AlphaTestComponent</compoundname>
    <basecompoundref refid="d0/dcc/a03148" prot="public" virt="non-virtual">castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;</basecompoundref>
    <includes local="no">AlphaTestComponent.hpp</includes>
    <innerclass refid="d9/dbd/a03604" prot="public">castor3d::AlphaTestComponent::ComponentsShader</innerclass>
    <innerclass refid="d3/dce/a03608" prot="public">castor3d::AlphaTestComponent::MaterialShader</innerclass>
    <innerclass refid="d1/d43/a03612" prot="public">castor3d::AlphaTestComponent::Plugin</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="df/d81/a03600_1ab6f9fc47a4ffa7b83a3e27079de614ba" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="d3/d22/a01572_1a043cb84a97fa62d2b78e9f4ec3238f70" kindref="member">PassFlag</ref></type>
        <definition>constexpr PassFlag castor3d::AlphaTestComponent::eAlphaTest</definition>
        <argsstring></argsstring>
        <name>eAlphaTest</name>
        <qualifiedname>castor3d::AlphaTestComponent::eAlphaTest</qualifiedname>
        <initializer>= <ref refid="d3/d22/a01572_1a043cb84a97fa62d2b78e9f4ec3238f70" kindref="member">PassFlag</ref>( 0x01u )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="31" column="27" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="d1/d43/a03612_1a5d5687645447557ed1f5738230f803e3" compoundref="d1/d0b/a00452" startline="96" endline="99">castor3d::AlphaTestComponent::Plugin::getComponentFlags</referencedby>
        <referencedby refid="df/d81/a03600_1addbf3f1aba8dab82064cd2c50f410f7f" compoundref="d1/d0b/a00452" startline="120" endline="126">getPassFlags</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/d81/a03600_1a8152fcc18672af57e81312bec2b0a554" prot="public" static="yes" mutable="no">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> castor::String const</type>
        <definition>C3D_API castor::String const castor3d::AlphaTestComponent::TypeName</definition>
        <argsstring></argsstring>
        <name>TypeName</name>
        <qualifiedname>castor3d::AlphaTestComponent::TypeName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="168" column="37" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="df/d81/a03600_1a5337638f58444122b178f1e487b7ecae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PassComponentPluginUPtr</type>
        <definition>static PassComponentPluginUPtr castor3d::AlphaTestComponent::createPlugin</definition>
        <argsstring>(PassComponentRegister const &amp;passComponent)</argsstring>
        <name>createPlugin</name>
        <qualifiedname>castor3d::AlphaTestComponent::createPlugin</qualifiedname>
        <param>
          <type><ref refid="d5/d35/a03716" kindref="compound">PassComponentRegister</ref> const &amp;</type>
          <declname>passComponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="111" column="32" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d81/a03600_1a821dc491e92c59a2f316fa34aa899ee6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref></type>
        <definition>C3D_API castor3d::AlphaTestComponent::AlphaTestComponent</definition>
        <argsstring>(Pass &amp;pass)</argsstring>
        <name>AlphaTestComponent</name>
        <qualifiedname>castor3d::AlphaTestComponent::AlphaTestComponent</qualifiedname>
        <param>
          <type><ref refid="d3/d86/a03732" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="116" column="18"/>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1a3aefa2c3046789d71d768cf35d0ac7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> void</type>
        <definition>C3D_API void castor3d::AlphaTestComponent::accept</definition>
        <argsstring>(PassVisitorBase &amp;vis) override</argsstring>
        <name>accept</name>
        <qualifiedname>castor3d::AlphaTestComponent::accept</qualifiedname>
        <reimplements refid="d8/d23/a03712_1a4e315225c20ace9097adfd65e8413e4f">accept</reimplements>
        <param>
          <type><ref refid="d6/db4/a03748" kindref="compound">PassVisitorBase</ref> &amp;</type>
          <declname>vis</declname>
        </param>
        <briefdescription>
<para><ref refid="d1/d5d/a03756" kindref="compound">PassVisitor</ref> acceptance function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vis</parametername>
</parameternamelist>
<parameterdescription>
<para>The ... visitor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="118" column="14"/>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1addbf3f1aba8dab82064cd2c50f410f7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="dd/dd7/a00260_1ab7d762f315ad9902201ba70979ed2ef0" kindref="member">C3D_API</ref> <ref refid="d3/d22/a01572_1a9c5abb1c7b30c2de4e67a8f9f64c08a6" kindref="member">PassComponentFlag</ref></type>
        <definition>C3D_API PassComponentFlag castor3d::AlphaTestComponent::getPassFlags</definition>
        <argsstring>() const override</argsstring>
        <name>getPassFlags</name>
        <qualifiedname>castor3d::AlphaTestComponent::getPassFlags</qualifiedname>
        <reimplements refid="d8/d23/a03712_1af015484800f32c718d067a80b76709e9">getPassFlags</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="120" column="27" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="120" bodyend="126"/>
        <references refid="df/d81/a03600_1ab6f9fc47a4ffa7b83a3e27079de614ba" compoundref="d1/d0b/a00452" startline="31">eAlphaTest</references>
        <references refid="d3/d22/a01572_1a043cb84a97fa62d2b78e9f4ec3238f70abe988781e4e1de1c6a36fb698afbbe1f">castor3d::eNone</references>
        <references refid="d8/d23/a03712_1a625adfcb001824768e8a99a3c03dcbb1" compoundref="d0/d29/a00470" startline="1195" endline="1198">castor3d::PassComponent::getId</references>
        <references refid="df/d81/a03600_1a137c269ae438fb6fe778496fc5b614f8" compoundref="d1/d0b/a00452" startline="128" endline="131">hasAlphaTest</references>
        <references refid="df/d81/a03600_1a5be0388dd1f83405e435ea92465d203e" compoundref="d1/d0b/a00452" startline="133" endline="136">hasBlendAlphaTest</references>
        <references refid="d3/d22/a01572_1a337a580df6760b157e78a64b55014233" compoundref="de/d55/a00323" startline="78" endline="83">castor3d::makePassComponentFlag</references>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1a137c269ae438fb6fe778496fc5b614f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::AlphaTestComponent::hasAlphaTest</definition>
        <argsstring>() const</argsstring>
        <name>hasAlphaTest</name>
        <qualifiedname>castor3d::AlphaTestComponent::hasAlphaTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="128" column="6" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="128" bodyend="131"/>
        <references refid="df/d81/a03600_1a7c828e1ee08e6c2e6008e71c0a18fe00" compoundref="d1/d0b/a00452" startline="138" endline="141">getAlphaFunc</references>
        <referencedby refid="df/d81/a03600_1addbf3f1aba8dab82064cd2c50f410f7f" compoundref="d1/d0b/a00452" startline="120" endline="126">getPassFlags</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1a5be0388dd1f83405e435ea92465d203e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool castor3d::AlphaTestComponent::hasBlendAlphaTest</definition>
        <argsstring>() const</argsstring>
        <name>hasBlendAlphaTest</name>
        <qualifiedname>castor3d::AlphaTestComponent::hasBlendAlphaTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="133" column="6" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="133" bodyend="136"/>
        <references refid="df/d81/a03600_1aba39d0761c4bceba3cc2b1ba891310ae" compoundref="d1/d0b/a00452" startline="143" endline="146">getBlendAlphaFunc</references>
        <referencedby refid="df/d81/a03600_1addbf3f1aba8dab82064cd2c50f410f7f" compoundref="d1/d0b/a00452" startline="120" endline="126">getPassFlags</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1a7c828e1ee08e6c2e6008e71c0a18fe00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkCompareOp</type>
        <definition>VkCompareOp castor3d::AlphaTestComponent::getAlphaFunc</definition>
        <argsstring>() const</argsstring>
        <name>getAlphaFunc</name>
        <qualifiedname>castor3d::AlphaTestComponent::getAlphaFunc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="138" column="13" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="138" bodyend="141"/>
        <references refid="d5/d74/a03596_1a7262474d933efe3086ab0685c7b02c32" compoundref="d1/d0b/a00452" startline="24">castor3d::AlphaTestData::alphaFunc</references>
        <references refid="d0/dcc/a03148_1aa297ac5faf886e6b766533f5fc0b25d1" compoundref="db/ddc/a00353" startline="85">castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;::m_value</references>
        <referencedby refid="df/d81/a03600_1a137c269ae438fb6fe778496fc5b614f8" compoundref="d1/d0b/a00452" startline="128" endline="131">hasAlphaTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1aba39d0761c4bceba3cc2b1ba891310ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkCompareOp</type>
        <definition>VkCompareOp castor3d::AlphaTestComponent::getBlendAlphaFunc</definition>
        <argsstring>() const</argsstring>
        <name>getBlendAlphaFunc</name>
        <qualifiedname>castor3d::AlphaTestComponent::getBlendAlphaFunc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="143" column="13" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="143" bodyend="146"/>
        <references refid="d5/d74/a03596_1a1d0cf932b2779cc14ee53a491361dc4b" compoundref="d1/d0b/a00452" startline="25">castor3d::AlphaTestData::blendAlphaFunc</references>
        <references refid="d0/dcc/a03148_1aa297ac5faf886e6b766533f5fc0b25d1" compoundref="db/ddc/a00353" startline="85">castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;::m_value</references>
        <referencedby refid="df/d81/a03600_1a5be0388dd1f83405e435ea92465d203e" compoundref="d1/d0b/a00452" startline="133" endline="136">hasBlendAlphaTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1ae8efd3dc94a6f987aeecf10b75568544" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float castor3d::AlphaTestComponent::getAlphaRefValue</definition>
        <argsstring>() const</argsstring>
        <name>getAlphaRefValue</name>
        <qualifiedname>castor3d::AlphaTestComponent::getAlphaRefValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="148" column="7" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="148" bodyend="151"/>
        <references refid="d5/d74/a03596_1ac30aff4023156bf75520f691360595eb" compoundref="d1/d0b/a00452" startline="23">castor3d::AlphaTestData::alphaRefValue</references>
        <references refid="d0/dcc/a03148_1aa297ac5faf886e6b766533f5fc0b25d1" compoundref="db/ddc/a00353" startline="85">castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;::m_value</references>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1a36ba6ae5f7214cb7b89ae06187521743" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::AlphaTestComponent::setAlphaFunc</definition>
        <argsstring>(VkCompareOp value)</argsstring>
        <name>setAlphaFunc</name>
        <qualifiedname>castor3d::AlphaTestComponent::setAlphaFunc</qualifiedname>
        <param>
          <type>VkCompareOp</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="153" column="6" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="153" bodyend="156"/>
        <references refid="d5/d74/a03596_1a7262474d933efe3086ab0685c7b02c32" compoundref="d1/d0b/a00452" startline="24">castor3d::AlphaTestData::alphaFunc</references>
        <references refid="d0/dcc/a03148_1aa297ac5faf886e6b766533f5fc0b25d1" compoundref="db/ddc/a00353" startline="85">castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;::m_value</references>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1a3e73b39f06a68fde1fe995a84a9d01cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::AlphaTestComponent::setBlendAlphaFunc</definition>
        <argsstring>(VkCompareOp value)</argsstring>
        <name>setBlendAlphaFunc</name>
        <qualifiedname>castor3d::AlphaTestComponent::setBlendAlphaFunc</qualifiedname>
        <param>
          <type>VkCompareOp</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="158" column="6" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="158" bodyend="161"/>
        <references refid="d5/d74/a03596_1a1d0cf932b2779cc14ee53a491361dc4b" compoundref="d1/d0b/a00452" startline="25">castor3d::AlphaTestData::blendAlphaFunc</references>
        <references refid="d0/dcc/a03148_1aa297ac5faf886e6b766533f5fc0b25d1" compoundref="db/ddc/a00353" startline="85">castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;::m_value</references>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1a5a8839fe6c4bedd72190996431514e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void castor3d::AlphaTestComponent::setAlphaRefValue</definition>
        <argsstring>(float value)</argsstring>
        <name>setAlphaRefValue</name>
        <qualifiedname>castor3d::AlphaTestComponent::setAlphaRefValue</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="163" column="6" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="163" bodyend="166"/>
        <references refid="d5/d74/a03596_1ac30aff4023156bf75520f691360595eb" compoundref="d1/d0b/a00452" startline="23">castor3d::AlphaTestData::alphaRefValue</references>
        <references refid="d0/dcc/a03148_1aa297ac5faf886e6b766533f5fc0b25d1" compoundref="db/ddc/a00353" startline="85">castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;::m_value</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="df/d81/a03600_1aaedfb4cbdceca52ed46b40b4ab3a6c96" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>PassComponentUPtr</type>
        <definition>PassComponentUPtr castor3d::AlphaTestComponent::doClone</definition>
        <argsstring>(Pass &amp;pass) const override</argsstring>
        <name>doClone</name>
        <qualifiedname>castor3d::AlphaTestComponent::doClone</qualifiedname>
        <reimplements refid="d8/d23/a03712_1ad87fbb1539bb6c5004cbcb02ddfcd46f">doClone</reimplements>
        <param>
          <type><ref refid="d3/d86/a03732" kindref="compound">Pass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Clones this component into given pass. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pass</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the cloned component. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="171" column="19"/>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1a05f6ddfff0bd96e8fb06abb34d1e0ad7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool castor3d::AlphaTestComponent::doWriteText</definition>
        <argsstring>(castor::String const &amp;tabs, castor::Path const &amp;folder, castor::String const &amp;subfolder, castor::StringStream &amp;file) const override</argsstring>
        <name>doWriteText</name>
        <qualifiedname>castor3d::AlphaTestComponent::doWriteText</qualifiedname>
        <reimplements refid="d8/d23/a03712_1af8c7cb8f4c2e0753c0ebbb6adf802c9c">doWriteText</reimplements>
        <param>
          <type>castor::String const &amp;</type>
          <declname>tabs</declname>
        </param>
        <param>
          <type>castor::Path const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>castor::String const &amp;</type>
          <declname>subfolder</declname>
        </param>
        <param>
          <type>castor::StringStream &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Writes the component content to text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tabs</parametername>
</parameternamelist>
<parameterdescription>
<para>The current tabulation level. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">folder</parametername>
</parameternamelist>
<parameterdescription>
<para>The resources folder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subfolder</parametername>
</parameternamelist>
<parameterdescription>
<para>The resources subfolder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">file</parametername>
</parameternamelist>
<parameterdescription>
<para>The output file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="172" column="6"/>
      </memberdef>
      <memberdef kind="function" id="df/d81/a03600_1af0255b24e60768a6bf66c80dce978e83" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void castor3d::AlphaTestComponent::doFillBuffer</definition>
        <argsstring>(PassBuffer &amp;buffer) const override</argsstring>
        <name>doFillBuffer</name>
        <qualifiedname>castor3d::AlphaTestComponent::doFillBuffer</qualifiedname>
        <reimplements refid="d8/d23/a03712_1a3b157d130e41a31b1a6313ef26cd675c">doFillBuffer</reimplements>
        <param>
          <type><ref refid="db/dbf/a05920" kindref="compound">PassBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Fills the pass buffer with this pass data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="176" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;</label>
        <link refid="d0/dcc/a03148"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; AlphaTestData &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::AlphaTestComponent</label>
        <link refid="df/d81/a03600"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>castor3d::BaseDataPassComponentT&lt; DataT &gt;</label>
        <link refid="d0/dcc/a03148"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::PassComponent</label>
        <link refid="d8/d23/a03712"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Pass &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>castor3d::BaseDataPassComponentT&lt; AlphaTestData &gt;</label>
        <link refid="d0/dcc/a03148"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_value</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; AlphaTestData &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>castor3d::AlphaTestComponent</label>
        <link refid="df/d81/a03600"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>castor3d::AlphaTestData</label>
        <link refid="d5/d74/a03596"/>
      </node>
      <node id="9">
        <label>castor3d::BaseDataPassComponentT&lt; DataT &gt;</label>
        <link refid="d0/dcc/a03148"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>castor3d::PassComponent</label>
        <link refid="d8/d23/a03712"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_plugin</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_materialShader</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>castor3d::PassComponentPlugin</label>
        <link refid="dc/d0d/a03708"/>
      </node>
      <node id="6">
        <label>castor3d::shader::PassMaterialShader</label>
        <link refid="d7/da2/a03704"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>castor3d::shader::PassShader</label>
        <link refid="df/d9f/a03696"/>
      </node>
      <node id="4">
        <label>castor::OwnedBy&lt; Pass &gt;</label>
      </node>
    </collaborationgraph>
    <location file="Material/Pass/Component/Other/AlphaTestComponent.hpp" line="28" column="1" bodyfile="Material/Pass/Component/Other/AlphaTestComponent.hpp" bodystart="30" bodyend="177"/>
    <listofallmembers>
      <member refid="df/d81/a03600_1a3aefa2c3046789d71d768cf35d0ac7e8" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>accept</name></member>
      <member refid="df/d81/a03600_1a821dc491e92c59a2f316fa34aa899ee6" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>AlphaTestComponent</name></member>
      <member refid="d0/dcc/a03148_1adda77c8f497beaa00a738357311190a7" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>BaseDataPassComponentT</name></member>
      <member refid="d8/d23/a03712_1ae7c88041d1aae747532e537b23e41d24" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>clone</name></member>
      <member refid="df/d81/a03600_1a5337638f58444122b178f1e487b7ecae" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>createPlugin</name></member>
      <member refid="df/d81/a03600_1aaedfb4cbdceca52ed46b40b4ab3a6c96" prot="private" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>doClone</name></member>
      <member refid="df/d81/a03600_1af0255b24e60768a6bf66c80dce978e83" prot="private" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>doFillBuffer</name></member>
      <member refid="df/d81/a03600_1a05f6ddfff0bd96e8fb06abb34d1e0ad7" prot="private" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>doWriteText</name></member>
      <member refid="df/d81/a03600_1ab6f9fc47a4ffa7b83a3e27079de614ba" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>eAlphaTest</name></member>
      <member refid="d8/d23/a03712_1a8f6b8c698164310e2052be733834224a" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>fillBuffer</name></member>
      <member refid="d8/d23/a03712_1a32dba2f2f6b92d5119c677d4faa6a324" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>fillChannel</name></member>
      <member refid="d8/d23/a03712_1ae53af67cd5f807b90d8e31e52d6582af" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>fillConfig</name></member>
      <member refid="df/d81/a03600_1a7c828e1ee08e6c2e6008e71c0a18fe00" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>getAlphaFunc</name></member>
      <member refid="df/d81/a03600_1ae8efd3dc94a6f987aeecf10b75568544" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>getAlphaRefValue</name></member>
      <member refid="df/d81/a03600_1aba39d0761c4bceba3cc2b1ba891310ae" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>getBlendAlphaFunc</name></member>
      <member refid="d8/d23/a03712_1a89e385760304300908e5b308b2f1da4e" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>getColour</name></member>
      <member refid="d0/dcc/a03148_1a23ec881a6e2aa2e40c21e108cb6458f7" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>getData</name></member>
      <member refid="d0/dcc/a03148_1aa79468a338c3ff3c31682894db721fab" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>getData</name></member>
      <member refid="d8/d23/a03712_1a625adfcb001824768e8a99a3c03dcbb1" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>getId</name></member>
      <member refid="df/d81/a03600_1addbf3f1aba8dab82064cd2c50f410f7f" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>getPassFlags</name></member>
      <member refid="d8/d23/a03712_1a5da51664f6736be0199d66266779b395" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>getPlugin</name></member>
      <member refid="d8/d23/a03712_1a6aae2659952d2e9a76caabf56d69fba5" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>getType</name></member>
      <member refid="df/d81/a03600_1a137c269ae438fb6fe778496fc5b614f8" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>hasAlphaTest</name></member>
      <member refid="df/d81/a03600_1a5be0388dd1f83405e435ea92465d203e" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>hasBlendAlphaTest</name></member>
      <member refid="d8/d23/a03712_1a5af951f374ee82fd61e57f96e6193f1c" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>hasColour</name></member>
      <member refid="d8/d23/a03712_1a01ecec7d563666b63d7d888061e84ab1" prot="protected" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>m_dirty</name></member>
      <member refid="d8/d23/a03712_1a3d2b1319d92ba70ff8450c7873492b67" prot="protected" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>m_id</name></member>
      <member refid="d8/d23/a03712_1abc188311e9251e933a838a256802c4c6" prot="protected" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>m_materialShader</name></member>
      <member refid="d8/d23/a03712_1ae62babd07d3faf3014f1d0af1ab03357" prot="protected" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>m_plugin</name></member>
      <member refid="d8/d23/a03712_1ae5775b9cf42c79c375cbd4a033e6629f" prot="protected" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>m_type</name></member>
      <member refid="d0/dcc/a03148_1aa297ac5faf886e6b766533f5fc0b25d1" prot="protected" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>m_value</name></member>
      <member refid="d8/d23/a03712_1a24173c973bd439f4c1c145cd70573bca" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>PassComponent</name></member>
      <member refid="df/d81/a03600_1a36ba6ae5f7214cb7b89ae06187521743" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>setAlphaFunc</name></member>
      <member refid="df/d81/a03600_1a5a8839fe6c4bedd72190996431514e7a" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>setAlphaRefValue</name></member>
      <member refid="df/d81/a03600_1a3e73b39f06a68fde1fe995a84a9d01cf" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>setBlendAlphaFunc</name></member>
      <member refid="d8/d23/a03712_1a2541aa58a662bd8566c602335387cb98" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>setColour</name></member>
      <member refid="d8/d23/a03712_1ab6a5bf94fc25210c03c9bed7ddf1ae31" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>setColour</name></member>
      <member refid="d8/d23/a03712_1a61fa7c8562281c049a874b1ebc2635e4" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>setColour</name></member>
      <member refid="d8/d23/a03712_1a2256e542753e1f85e6812de7e6fdc261" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>setColour</name></member>
      <member refid="d0/dcc/a03148_1a074de9b2f9579c56a85617b514089545" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>setData</name></member>
      <member refid="d0/dcc/a03148_1abf51560ee823896159de61bea9326391" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>setData</name></member>
      <member refid="df/d81/a03600_1a8152fcc18672af57e81312bec2b0a554" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>TypeName</name></member>
      <member refid="d8/d23/a03712_1acfedf31a75536a40a891b3308083d738" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>update</name></member>
      <member refid="d8/d23/a03712_1a967ba1259e24663e4a89352251acf841" prot="public" virt="non-virtual"><scope>castor3d::AlphaTestComponent</scope><name>writeText</name></member>
      <member refid="d8/d23/a03712_1a6a3e343b81806ff616280b4eca87140b" prot="public" virt="virtual"><scope>castor3d::AlphaTestComponent</scope><name>~PassComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
