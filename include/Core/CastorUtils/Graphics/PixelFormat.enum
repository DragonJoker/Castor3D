/*
See LICENSE file in root folder
*/
#ifndef CUPF_ENUM_BEGIN
#	define CUPF_ENUM_BEGIN( x )
#endif

#ifndef CUPF_ENUM_END
#	define CUPF_ENUM_END( x )
#endif

#ifndef CUPF_ENUM_VALUE
#	define CUPF_ENUM_VALUE( name, value, components, alpha, colour, depth, stencil, compressed )
#endif

#ifndef CUPF_ENUM_VALUE_COLOR
#	define CUPF_ENUM_VALUE_COLOR( name, value, components, alpha ) CUPF_ENUM_VALUE( name, value, components, alpha, true, false, false, false )
#endif

#ifndef CUPF_ENUM_VALUE_DEPTH_OR_STENCIL
#	define CUPF_ENUM_VALUE_DEPTH_OR_STENCIL( name, value, components, depth, stencil ) CUPF_ENUM_VALUE( name, value, 1, false, false, depth, stencil, false )
#endif

#ifndef CUPF_ENUM_VALUE_DEPTH_STENCIL
#	define CUPF_ENUM_VALUE_DEPTH_STENCIL( name, value ) CUPF_ENUM_VALUE_DEPTH_OR_STENCIL( name, value, 2, true, true )
#endif

#ifndef CUPF_ENUM_VALUE_DEPTH
#	define CUPF_ENUM_VALUE_DEPTH( name, value ) CUPF_ENUM_VALUE_DEPTH_OR_STENCIL( name, value, 1, true, false )
#endif

#ifndef CUPF_ENUM_VALUE_STENCIL
#	define CUPF_ENUM_VALUE_STENCIL( name, value ) CUPF_ENUM_VALUE_DEPTH_OR_STENCIL( name, value, 1, false, true )
#endif

#ifndef CUPF_ENUM_VALUE_COMPRESSED
#	define CUPF_ENUM_VALUE_COMPRESSED( name, value, components, alpha ) CUPF_ENUM_VALUE( name, value, components, alpha, true, false, false, false )
#endif

CUPF_ENUM_BEGIN( PixelFormat )
CUPF_ENUM_VALUE_COLOR( UNDEFINED, 0, 0, false )

CUPF_ENUM_VALUE_COLOR( R4G4_UNORM, 1, 2, false )
CUPF_ENUM_VALUE_COLOR( R4G4B4A4_UNORM, 2, 4, true )
CUPF_ENUM_VALUE_COLOR( B4G4R4A4_UNORM, 3, 4, true )
CUPF_ENUM_VALUE_COLOR( R5G6B5_UNORM, 4, 3, false )
CUPF_ENUM_VALUE_COLOR( B5G6R5_UNORM, 5, 3, false )
CUPF_ENUM_VALUE_COLOR( R5G5B5A1_UNORM, 6, 4, true )
CUPF_ENUM_VALUE_COLOR( B5G5R5A1_UNORM, 7, 4, true )
CUPF_ENUM_VALUE_COLOR( A1R5G5B5_UNORM, 8, 4, true )

CUPF_ENUM_VALUE_COLOR( R8_UNORM, 9, 1, false )
CUPF_ENUM_VALUE_COLOR( R8_SNORM, 10, 1, false )
CUPF_ENUM_VALUE_COLOR( R8_USCALED, 11, 1, false )
CUPF_ENUM_VALUE_COLOR( R8_SSCALED, 12, 1, false )
CUPF_ENUM_VALUE_COLOR( R8_UINT, 13, 1, false )
CUPF_ENUM_VALUE_COLOR( R8_SINT, 14, 1, false )
CUPF_ENUM_VALUE_COLOR( R8_SRGB, 15, 1, false )

CUPF_ENUM_VALUE_COLOR( R8G8_UNORM, 16, 2, false )
CUPF_ENUM_VALUE_COLOR( R8G8_SNORM, 17, 2, false )
CUPF_ENUM_VALUE_COLOR( R8G8_USCALED, 18, 2, false )
CUPF_ENUM_VALUE_COLOR( R8G8_SSCALED, 19, 2, false )
CUPF_ENUM_VALUE_COLOR( R8G8_UINT, 20, 2, false )
CUPF_ENUM_VALUE_COLOR( R8G8_SINT, 21, 2, false )
CUPF_ENUM_VALUE_COLOR( R8G8_SRGB, 22, 2, false )

CUPF_ENUM_VALUE_COLOR( R8G8B8_UNORM, 23, 3, false )
CUPF_ENUM_VALUE_COLOR( R8G8B8_SNORM, 24, 3, false )
CUPF_ENUM_VALUE_COLOR( R8G8B8_USCALED, 25, 3, false )
CUPF_ENUM_VALUE_COLOR( R8G8B8_SSCALED, 26, 3, false )
CUPF_ENUM_VALUE_COLOR( R8G8B8_UINT, 27, 3, false )
CUPF_ENUM_VALUE_COLOR( R8G8B8_SINT, 28, 3, false )
CUPF_ENUM_VALUE_COLOR( R8G8B8_SRGB, 29, 3, false )

CUPF_ENUM_VALUE_COLOR( B8G8R8_UNORM, 30, 3, false )
CUPF_ENUM_VALUE_COLOR( B8G8R8_SNORM, 31, 3, false )
CUPF_ENUM_VALUE_COLOR( B8G8R8_USCALED, 32, 3, false )
CUPF_ENUM_VALUE_COLOR( B8G8R8_SSCALED, 33, 3, false )
CUPF_ENUM_VALUE_COLOR( B8G8R8_UINT, 34, 3, false )
CUPF_ENUM_VALUE_COLOR( B8G8R8_SINT, 35, 3, false )
CUPF_ENUM_VALUE_COLOR( B8G8R8_SRGB, 36, 3, false )

CUPF_ENUM_VALUE_COLOR( R8G8B8A8_UNORM, 37, 4, true )
CUPF_ENUM_VALUE_COLOR( R8G8B8A8_SNORM, 38, 4, true )
CUPF_ENUM_VALUE_COLOR( R8G8B8A8_USCALED, 39, 4, true )
CUPF_ENUM_VALUE_COLOR( R8G8B8A8_SSCALED, 40, 4, true )
CUPF_ENUM_VALUE_COLOR( R8G8B8A8_UINT, 41, 4, true )
CUPF_ENUM_VALUE_COLOR( R8G8B8A8_SINT, 42, 4, true )
CUPF_ENUM_VALUE_COLOR( R8G8B8A8_SRGB, 43, 4, true )

CUPF_ENUM_VALUE_COLOR( B8G8R8A8_UNORM, 44, 4, true )
CUPF_ENUM_VALUE_COLOR( B8G8R8A8_SNORM, 45, 4, true )
CUPF_ENUM_VALUE_COLOR( B8G8R8A8_USCALED, 46, 4, true )
CUPF_ENUM_VALUE_COLOR( B8G8R8A8_SSCALED, 47, 4, true )
CUPF_ENUM_VALUE_COLOR( B8G8R8A8_UINT, 48, 4, true )
CUPF_ENUM_VALUE_COLOR( B8G8R8A8_SINT, 49, 4, true )
CUPF_ENUM_VALUE_COLOR( B8G8R8A8_SRGB, 50, 4, true )

CUPF_ENUM_VALUE_COLOR( A8B8G8R8_UNORM, 51, 4, true )
CUPF_ENUM_VALUE_COLOR( A8B8G8R8_SNORM, 52, 4, true )
CUPF_ENUM_VALUE_COLOR( A8B8G8R8_USCALED, 53, 4, true )
CUPF_ENUM_VALUE_COLOR( A8B8G8R8_SSCALED, 54, 4, true )
CUPF_ENUM_VALUE_COLOR( A8B8G8R8_UINT, 55, 4, true )
CUPF_ENUM_VALUE_COLOR( A8B8G8R8_SINT, 56, 4, true )
CUPF_ENUM_VALUE_COLOR( A8B8G8R8_SRGB, 57, 4, true )

CUPF_ENUM_VALUE_COLOR( A2R10G10B10_UNORM, 58, 4, true )
CUPF_ENUM_VALUE_COLOR( A2R10G10B10_SNORM, 59, 4, true )
CUPF_ENUM_VALUE_COLOR( A2R10G10B10_USCALED, 60, 4, true )
CUPF_ENUM_VALUE_COLOR( A2R10G10B10_SSCALED, 61, 4, true )
CUPF_ENUM_VALUE_COLOR( A2R10G10B10_UINT, 62, 4, true )
CUPF_ENUM_VALUE_COLOR( A2R10G10B10_SINT, 63, 4, true )

CUPF_ENUM_VALUE_COLOR( A2B10G10R10_UNORM, 64, 4, true )
CUPF_ENUM_VALUE_COLOR( A2B10G10R10_SNORM, 65, 4, true )
CUPF_ENUM_VALUE_COLOR( A2B10G10R10_USCALED, 66, 4, true )
CUPF_ENUM_VALUE_COLOR( A2B10G10R10_SSCALED, 67, 4, true )
CUPF_ENUM_VALUE_COLOR( A2B10G10R10_UINT, 68, 4, true )
CUPF_ENUM_VALUE_COLOR( A2B10G10R10_SINT, 69, 4, true )

CUPF_ENUM_VALUE_COLOR( R16_UNORM, 70, 1, false )
CUPF_ENUM_VALUE_COLOR( R16_SNORM, 71, 1, false )
CUPF_ENUM_VALUE_COLOR( R16_USCALED, 72, 1, false )
CUPF_ENUM_VALUE_COLOR( R16_SSCALED, 73, 1, false )
CUPF_ENUM_VALUE_COLOR( R16_UINT, 74, 1, false )
CUPF_ENUM_VALUE_COLOR( R16_SINT, 75, 1, false )
CUPF_ENUM_VALUE_COLOR( R16_SFLOAT, 76, 1, false )

CUPF_ENUM_VALUE_COLOR( R16G16_UNORM, 77, 2, false )
CUPF_ENUM_VALUE_COLOR( R16G16_SNORM, 78, 2, false )
CUPF_ENUM_VALUE_COLOR( R16G16_USCALED, 79, 2, false )
CUPF_ENUM_VALUE_COLOR( R16G16_SSCALED, 80, 2, false )
CUPF_ENUM_VALUE_COLOR( R16G16_UINT, 81, 2, false )
CUPF_ENUM_VALUE_COLOR( R16G16_SINT, 82, 2, false )
CUPF_ENUM_VALUE_COLOR( R16G16_SFLOAT, 83, 2, false )

CUPF_ENUM_VALUE_COLOR( R16G16B16_UNORM, 84, 3, false )
CUPF_ENUM_VALUE_COLOR( R16G16B16_SNORM, 85, 3, false )
CUPF_ENUM_VALUE_COLOR( R16G16B16_USCALED, 86, 3, false )
CUPF_ENUM_VALUE_COLOR( R16G16B16_SSCALED, 87, 3, false )
CUPF_ENUM_VALUE_COLOR( R16G16B16_UINT, 88, 3, false )
CUPF_ENUM_VALUE_COLOR( R16G16B16_SINT, 89, 3, false )
CUPF_ENUM_VALUE_COLOR( R16G16B16_SFLOAT, 90, 3, false )

CUPF_ENUM_VALUE_COLOR( R16G16B16A16_UNORM, 91, 4, true )
CUPF_ENUM_VALUE_COLOR( R16G16B16A16_SNORM, 92, 4, true )
CUPF_ENUM_VALUE_COLOR( R16G16B16A16_USCALED, 93, 4, true )
CUPF_ENUM_VALUE_COLOR( R16G16B16A16_SSCALED, 94, 4, true )
CUPF_ENUM_VALUE_COLOR( R16G16B16A16_UINT, 95, 4, true )
CUPF_ENUM_VALUE_COLOR( R16G16B16A16_SINT, 96, 4, true )
CUPF_ENUM_VALUE_COLOR( R16G16B16A16_SFLOAT, 97, 4, true )

CUPF_ENUM_VALUE_COLOR( R32_UINT, 98, 1, false )
CUPF_ENUM_VALUE_COLOR( R32_SINT, 99, 1, false )
CUPF_ENUM_VALUE_COLOR( R32_SFLOAT, 100, 1, false )

CUPF_ENUM_VALUE_COLOR( R32G32_UINT, 101, 2, false )
CUPF_ENUM_VALUE_COLOR( R32G32_SINT, 102, 2, false )
CUPF_ENUM_VALUE_COLOR( R32G32_SFLOAT, 103, 2, false )

CUPF_ENUM_VALUE_COLOR( R32G32B32_UINT, 104, 3, false )
CUPF_ENUM_VALUE_COLOR( R32G32B32_SINT, 105, 3, false )
CUPF_ENUM_VALUE_COLOR( R32G32B32_SFLOAT, 106, 3, false )

CUPF_ENUM_VALUE_COLOR( R32G32B32A32_UINT, 107, 4, true )
CUPF_ENUM_VALUE_COLOR( R32G32B32A32_SINT, 108, 4, true )
CUPF_ENUM_VALUE_COLOR( R32G32B32A32_SFLOAT, 109, 4, true )

CUPF_ENUM_VALUE_COLOR( R64_UINT, 110, 1, false )
CUPF_ENUM_VALUE_COLOR( R64_SINT, 111, 1, false )
CUPF_ENUM_VALUE_COLOR( R64_SFLOAT, 112, 1, false )

CUPF_ENUM_VALUE_COLOR( R64G64_UINT, 113, 2, false )
CUPF_ENUM_VALUE_COLOR( R64G64_SINT, 114, 2, false )
CUPF_ENUM_VALUE_COLOR( R64G64_SFLOAT, 115, 2, false )

CUPF_ENUM_VALUE_COLOR( R64G64B64_UINT, 116, 3, false )
CUPF_ENUM_VALUE_COLOR( R64G64B64_SINT, 117, 3, false )
CUPF_ENUM_VALUE_COLOR( R64G64B64_SFLOAT, 118, 3, false )

CUPF_ENUM_VALUE_COLOR( R64G64B64A64_UINT, 119, 4, true )
CUPF_ENUM_VALUE_COLOR( R64G64B64A64_SINT, 120, 4, true )
CUPF_ENUM_VALUE_COLOR( R64G64B64A64_SFLOAT, 121, 4, true )

CUPF_ENUM_VALUE_COLOR( B10G11R11_UFLOAT, 122, 3, false )
CUPF_ENUM_VALUE_COLOR( E5B9G9R9_UFLOAT, 123, 3, false )

CUPF_ENUM_VALUE_DEPTH( D16_UNORM, 124 )
CUPF_ENUM_VALUE_DEPTH( X8_D24_UNORM, 125 )
CUPF_ENUM_VALUE_DEPTH( D32_SFLOAT, 126 )
CUPF_ENUM_VALUE_STENCIL( S8_UINT, 127 )
CUPF_ENUM_VALUE_DEPTH_STENCIL( D16_UNORM_S8_UINT, 128 )
CUPF_ENUM_VALUE_DEPTH_STENCIL( D24_UNORM_S8_UINT, 129 )
CUPF_ENUM_VALUE_DEPTH_STENCIL( D32_SFLOAT_S8_UINT, 130 )

CUPF_ENUM_VALUE_COMPRESSED( BC1_RGB_UNORM_BLOCK, 131, 3, false ) // RGB_DXT1
CUPF_ENUM_VALUE_COMPRESSED( BC1_RGB_SRGB_BLOCK, 132, 3, false ) // RGB_DXT1
CUPF_ENUM_VALUE_COMPRESSED( BC1_RGBA_UNORM_BLOCK, 133, 4, true ) // RGBA_DXT1
CUPF_ENUM_VALUE_COMPRESSED( BC1_RGBA_SRGB_BLOCK, 134, 4, true ) // RGBA_DXT1
CUPF_ENUM_VALUE_COMPRESSED( BC2_UNORM_BLOCK, 135, 4, true ) // RGBA_DXT3
CUPF_ENUM_VALUE_COMPRESSED( BC2_SRGB_BLOCK, 136, 4, true ) // RGBA_DXT3
CUPF_ENUM_VALUE_COMPRESSED( BC3_UNORM_BLOCK, 137, 4, true ) // RGBA_DXT5
CUPF_ENUM_VALUE_COMPRESSED( BC3_SRGB_BLOCK, 138, 4, true ) // RGBA_DXT5
CUPF_ENUM_VALUE_COMPRESSED( BC4_UNORM_BLOCK, 139, 1, false ) // R_ATI1N
CUPF_ENUM_VALUE_COMPRESSED( BC4_SNORM_BLOCK, 140, 1, false ) // R_ATI1N
CUPF_ENUM_VALUE_COMPRESSED( BC5_UNORM_BLOCK, 141, 2, false ) // RG_ATI2N
CUPF_ENUM_VALUE_COMPRESSED( BC5_SNORM_BLOCK, 142, 2, false ) // RG_ATI2N
CUPF_ENUM_VALUE_COMPRESSED( BC6H_UFLOAT_BLOCK, 143, 3, false ) // RGB_BP
CUPF_ENUM_VALUE_COMPRESSED( BC6H_SFLOAT_BLOCK, 144, 3, false ) // RGB_BP
CUPF_ENUM_VALUE_COMPRESSED( BC7_UNORM_BLOCK, 145, 4, true ) // RGBA_BP
CUPF_ENUM_VALUE_COMPRESSED( BC7_SRGB_BLOCK, 146, 4, true ) // RGBA_BP

CUPF_ENUM_VALUE_COMPRESSED( ETC2_R8G8B8_UNORM_BLOCK, 147, 3, false )
CUPF_ENUM_VALUE_COMPRESSED( ETC2_R8G8B8_SRGB_BLOCK, 148, 3, false )
CUPF_ENUM_VALUE_COMPRESSED( ETC2_R8G8B8A1_UNORM_BLOCK, 149, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ETC2_R8G8B8A1_SRGB_BLOCK, 150, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ETC2_R8G8B8A8_UNORM_BLOCK, 151, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ETC2_R8G8B8A8_SRGB_BLOCK, 152, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( EAC_R11_UNORM_BLOCK, 153, 1, false )
CUPF_ENUM_VALUE_COMPRESSED( EAC_R11_SNORM_BLOCK, 154, 1, false )
CUPF_ENUM_VALUE_COMPRESSED( EAC_R11G11_UNORM_BLOCK, 155, 2, false )
CUPF_ENUM_VALUE_COMPRESSED( EAC_R11G11_SNORM_BLOCK, 156, 2, false )

CUPF_ENUM_VALUE_COMPRESSED( ASTC_4x4_UNORM_BLOCK, 157, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_4x4_SRGB_BLOCK, 158, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_5x4_UNORM_BLOCK, 159, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_5x4_SRGB_BLOCK, 160, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_5x5_UNORM_BLOCK, 161, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_5x5_SRGB_BLOCK, 162, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_6x5_UNORM_BLOCK, 163, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_6x5_SRGB_BLOCK, 164, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_6x6_UNORM_BLOCK, 165, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_6x6_SRGB_BLOCK, 166, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_8x5_UNORM_BLOCK, 167, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_8x5_SRGB_BLOCK, 168, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_8x6_UNORM_BLOCK, 169, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_8x6_SRGB_BLOCK, 170, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_8x8_UNORM_BLOCK, 171, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_8x8_SRGB_BLOCK, 172, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_10x5_UNORM_BLOCK, 173, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_10x5_SRGB_BLOCK, 174, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_10x6_UNORM_BLOCK, 175, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_10x6_SRGB_BLOCK, 176, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_10x8_UNORM_BLOCK, 177, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_10x8_SRGB_BLOCK, 178, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_10x10_UNORM_BLOCK, 179, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_10x10_SRGB_BLOCK, 180, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_12x10_UNORM_BLOCK, 181, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_12x10_SRGB_BLOCK, 182, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_12x12_UNORM_BLOCK, 183, 4, true )
CUPF_ENUM_VALUE_COMPRESSED( ASTC_12x12_SRGB_BLOCK, 184, 4, true )

CUPF_ENUM_END( PixelFormat )

#undef CUPF_ENUM_BEGIN
#undef CUPF_ENUM_END
#undef CUPF_ENUM_VALUE
#undef CUPF_ENUM_VALUE_COLOR
#undef CUPF_ENUM_VALUE_DEPTH_OR_STENCIL
#undef CUPF_ENUM_VALUE_DEPTH_STENCIL
#undef CUPF_ENUM_VALUE_DEPTH
#undef CUPF_ENUM_VALUE_STENCIL
#undef CUPF_ENUM_VALUE_COMPRESSED
