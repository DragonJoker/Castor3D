<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="castor::DynamicBitsetT&lt;*&gt;">
    <DisplayString>dynbitset {m_blocks}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>_Mylast - _Myfirst</Size>
        <ValuePointer>_Myfirst, X[100]</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="castor::Point&lt;*, 2&gt;">
    <DisplayString>{{x={m_data.coords[0]} y={m_data.coords[1]}}}</DisplayString>
    <Expand>
      <Item Name="x">m_data.coords[0]</Item>
      <Item Name="y">m_data.coords[1]</Item>
    </Expand>
  </Type>

  <Type Name="castor::Point&lt;*, 3&gt;">
    <DisplayString>{{x={m_data.coords[0]} y={m_data.coords[1]} z={m_data.coords[2]}}}</DisplayString>
    <Expand>
      <Item Name="x">m_data.coords[0]</Item>
      <Item Name="y">m_data.coords[1]</Item>
      <Item Name="z">m_data.coords[2]</Item>
    </Expand>
  </Type>

  <Type Name="castor::Point&lt;*, 4&gt;">
    <DisplayString>{{x={m_data.coords[0]} y={m_data.coords[1]} z={m_data.coords[2]} w={m_data.coords[3]}}}</DisplayString>
    <Expand>
      <Item Name="x">m_data.coords[0]</Item>
      <Item Name="y">m_data.coords[1]</Item>
      <Item Name="z">m_data.coords[2]</Item>
      <Item Name="w">m_data.coords[3]</Item>
    </Expand>
  </Type>

  <Type Name="castor::ColourComponent">
    <DisplayString>{m_component}</DisplayString>
    <Expand>
      <Item Name="component">m_component</Item>
    </Expand>
  </Type>

  <Type Name="castor::HdrColourComponent">
    <DisplayString>{m_component}</DisplayString>
    <Expand>
      <Item Name="component">m_component</Item>
    </Expand>
  </Type>

  <Type Name="castor::RgbaColourT&lt;*&gt;">
    <DisplayString>{{r={m_components[0]} g={m_components[1]} b={m_components[2]} a={m_components[3]}}}</DisplayString>
    <Expand>
      <Item Name="r">m_components[0]</Item>
      <Item Name="g">m_components[1]</Item>
      <Item Name="b">m_components[2]</Item>
      <Item Name="a">m_components[3]</Item>
    </Expand>
  </Type>

  <Type Name="castor::RgbColourT&lt;*&gt;">
    <DisplayString>{{r={m_components[0]} g={m_components[1]} b={m_components[2]}}}</DisplayString>
    <Expand>
      <Item Name="r">m_components[0]</Item>
      <Item Name="g">m_components[1]</Item>
      <Item Name="b">m_components[2]</Item>
    </Expand>
  </Type>

  <Type Name="castor::Coords&lt;*, 2&gt;">
    <DisplayString>{{x={m_coords[0]} y={m_coords[1]}}}</DisplayString>
    <Expand>
      <Item Name="x">m_coords[0]</Item>
      <Item Name="y">m_coords[1]</Item>
    </Expand>
  </Type>

  <Type Name="castor::Coords&lt;*, 3&gt;">
    <DisplayString>{{x={m_coords[0]} y={m_coords[1]} z={m_coords[2]}}}</DisplayString>
    <Expand>
      <Item Name="x">m_coords[0]</Item>
      <Item Name="y">m_coords[1]</Item>
      <Item Name="z">m_coords[2]</Item>
    </Expand>
  </Type>

  <Type Name="castor::Coords&lt;*, 4&gt;">
    <DisplayString>{{x={m_coords[0]} y={m_coords[1]} z={m_coords[2]} w={m_coords[3]}}}</DisplayString>
    <Expand>
      <Item Name="x">m_coords[0]</Item>
      <Item Name="y">m_coords[1]</Item>
      <Item Name="z">m_coords[2]</Item>
      <Item Name="w">m_coords[3]</Item>
    </Expand>
  </Type>

  <Type Name="castor::FlagCombination&lt;*&gt;">
    <DisplayString>{m_value,X}</DisplayString>
    <Expand>
      <Item Name="value">m_value,X</Item>
      <CustomListItems MaxItemsPerView="32" ExcludeView="Test">
        <Variable Name="iter" InitialValue="0" />
        <Variable Name="value" InitialValue="0ull" />
        <Loop>
          <If Condition="iter == 64">
            <Break/>
          </If>
          <Exec>value = m_value &amp; (0x01ull &lt;&lt; iter)</Exec>
          <If Condition="0 != value">
            <Item>($T1)value,X</Item>
          </If>
          <Exec>++iter</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="castor::FlagIterator&lt;*&gt;">
    <DisplayString>{m_value}</DisplayString>
    <Expand>
      <Item Name="value">m_value</Item>
      <Item Name="full">m_initialValue</Item>
      <Item Name="index">m_index</Item>
    </Expand>
  </Type>

  <Type Name="castor::Glyph">
    <DisplayString>{m_character}</DisplayString>
    <Expand>
      <Item Name="character">m_character</Item>
      <Item Name="bearing">m_bearing</Item>
      <Item Name="size">m_size</Item>
      <Item Name="advance">m_advance</Item>
      <Item Name="bitmap">m_bitmap</Item>
    </Expand>
  </Type>

  <Type Name="castor::Font">
    <DisplayString>Font {m_name} ({m_faceName} {m_height})</DisplayString>
    <Expand>
      <Item Name="name">m_name</Item>
      <Item Name="pathFile">m_pathFile</Item>
      <Item Name="loadedGlyphs">m_loadedGlyphs</Item>
      <Item Name="maxSize">m_maxSize</Item>
      <Item Name="maxRange">m_maxRange</Item>
      <Item Name="faceName">m_faceName</Item>
      <Item Name="height">m_height</Item>
      <Item Name="glyphLoader">m_glyphLoader</Item>
    </Expand>
  </Type>

  <Type Name="castor::Matrix&lt;*, 2, *&gt;">
    <Expand>
      <Item Name="col 0">m_columns[0]</Item>
      <Item Name="col 1">m_columns[1]</Item>
    </Expand>
  </Type>

  <Type Name="castor::Matrix&lt;*, 3, *&gt;">
    <Expand>
      <Item Name="col 0">m_columns[0]</Item>
      <Item Name="col 1">m_columns[1]</Item>
      <Item Name="col 2">m_columns[2]</Item>
    </Expand>
  </Type>

  <Type Name="castor::Matrix&lt;*, 4, *&gt;">
    <Expand>
      <Item Name="col 0">m_columns[0]</Item>
      <Item Name="col 1">m_columns[1]</Item>
      <Item Name="col 2">m_columns[2]</Item>
      <Item Name="col 3">m_columns[3]</Item>
    </Expand>
  </Type>

  <Type Name="castor::OwnedBy&lt;*&gt;" Inheritable="false">
    <DisplayString>{{owner={m_owner}}}</DisplayString>
    <Expand>
      <Item Name="owner">m_owner</Item>
    </Expand>
  </Type>

  <Type Name="castor::NamedBase$&lt;*&gt;" Inheritable="false">
    <DisplayString>{{name={m_name}}}</DisplayString>
    <Expand>
      <Item Name="name">m_name</Item>
    </Expand>
  </Type>

  <Type Name="castor::Resource" Inheritable="false">
    <DisplayString>{{name={m_name}}}</DisplayString>
    <Expand>
      <Item Name="name">m_name</Item>
      <Item Name="initialised">m_initialised</Item>
    </Expand>
  </Type>

  <Type Name="castor::Image">
    <DisplayString Condition="m_buffer != nullptr">{{{m_name} {*m_buffer}}}</DisplayString>
    <DisplayString>{{{m_name}}}</DisplayString>
    <Expand>
      <Item Name="name">m_name</Item>
      <Item Name="buffer">m_buffer</Item>
      <Item Name="layout">m_layout</Item>
      <Item Name="file">m_pathFile</Item>
    </Expand>
  </Type>

  <Type Name="castor::PxBufferBase">
    <DisplayString>{{{m_format} {m_size}}}</DisplayString>
    <Expand>
      <Item Name="format">m_format</Item>
      <Item Name="size">m_size</Item>
      <Item Name="buffer">m_buffer</Item>
      <Item Name="flipped">m_flipped</Item>
      <Item Name="layers">m_layers</Item>
      <Item Name="levels">m_levels</Item>
      <Item Name="align">m_align</Item>
      <Item Name="tiles">m_tiles</Item>
    </Expand>
  </Type>

  <Type Name="castor::BoundingBox">
    <Expand>
      <Item Name="center">m_center</Item>
      <Item Name="dimensions">m_dimensions</Item>
    </Expand>
  </Type>

  <Type Name="castor::BoundingSphere">
    <Expand>
      <Item Name="center">m_center</Item>
      <Item Name="radius">m_radius</Item>
    </Expand>
  </Type>

  <Type Name="castor::PlaneEquation">
    <Expand>
      <Item Name="normal">m_normal</Item>
      <Item Name="d">m_d</Item>
    </Expand>
  </Type>

  <Type Name="castor::ChangeTracked&lt;*&gt;">
    <DisplayString>{{value={m_value}, dirty={m_dirty}}}</DisplayString>
    <Expand>
      <Item Name="value">m_value</Item>
      <Item Name="dirty">m_dirty</Item>
    </Expand>
  </Type>

  <Type Name="castor::GroupChangeTracked&lt;*&gt;">
    <DisplayString>{{value={m_value}, dirty={m_dirty}}}</DisplayString>
    <Expand>
      <Item Name="value">m_value</Item>
      <Item Name="dirty">m_dirty</Item>
    </Expand>
  </Type>
  <Type Name="castor::ArrayView&lt;*&gt;">
    <DisplayString>{{ size={m_end - m_begin} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_end - m_begin</Item>
      <ArrayItems>
        <Size>m_end - m_begin</Size>
        <ValuePointer>m_begin</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

</AutoVisualizer>
